{
  "version": 3,
  "sources": ["../node_modules/jszip/dist/jszip.min.js", "../node_modules/spessasynth_core/src/utils/loggin.js", "../node_modules/spessasynth_core/src/utils/other.js", "../node_modules/spessasynth_core/src/synthetizer/audio_engine/engine_methods/stopping_notes/voice_killing.js", "../node_modules/spessasynth_core/src/synthetizer/synth_constants.js", "../node_modules/spessasynth_core/src/externals/stbvorbis_sync/stbvorbis_sync.min.js", "../node_modules/spessasynth_core/src/synthetizer/audio_engine/engine_components/unit_converter.js", "../node_modules/spessasynth_core/src/soundfont/basic_soundfont/generator_types.js", "../node_modules/spessasynth_core/src/synthetizer/audio_engine/engine_components/volume_envelope.js", "../node_modules/spessasynth_core/src/utils/indexed_array.js", "../node_modules/spessasynth_core/src/midi/midi_message.js", "../node_modules/spessasynth_core/src/utils/xg_hacks.js", "../node_modules/spessasynth_core/src/synthetizer/audio_engine/engine_methods/controller_control/master_parameters.js", "../node_modules/spessasynth_core/src/utils/byte_functions/string.js", "../node_modules/spessasynth_core/src/synthetizer/audio_engine/engine_components/enums.js", "../node_modules/spessasynth_core/src/soundfont/basic_soundfont/modulator.js", "../node_modules/spessasynth_core/src/synthetizer/audio_engine/engine_components/controller_tables.js", "../node_modules/spessasynth_core/src/synthetizer/audio_engine/engine_methods/system_exclusive.js", "../node_modules/spessasynth_core/src/synthetizer/audio_engine/engine_methods/controller_control/reset_controllers.js", "../node_modules/spessasynth_core/src/synthetizer/audio_engine/engine_components/soundfont_manager.js", "../node_modules/spessasynth_core/src/synthetizer/audio_engine/engine_components/key_modifier_manager.js", "../node_modules/spessasynth_core/src/synthetizer/audio_engine/engine_components/lowpass_filter.js", "../node_modules/spessasynth_core/src/synthetizer/audio_engine/engine_components/modulator_curves.js", "../node_modules/spessasynth_core/src/synthetizer/audio_engine/engine_components/modulation_envelope.js", "../node_modules/spessasynth_core/src/soundfont/basic_soundfont/generator.js", "../node_modules/spessasynth_core/src/synthetizer/audio_engine/engine_components/voice.js", "../node_modules/spessasynth_core/src/synthetizer/audio_engine/engine_components/stereo_panner.js", "../node_modules/spessasynth_core/src/synthetizer/audio_engine/engine_methods/stopping_notes/stop_all_channels.js", "../node_modules/spessasynth_core/src/utils/byte_functions/little_endian.js", "../node_modules/spessasynth_core/src/soundfont/basic_soundfont/riff_chunk.js", "../node_modules/spessasynth_core/src/soundfont/basic_soundfont/write_sf2/igen.js", "../node_modules/spessasynth_core/src/soundfont/basic_soundfont/write_sf2/sdta.js", "../node_modules/spessasynth_core/src/soundfont/basic_soundfont/basic_sample.js", "../node_modules/spessasynth_core/src/soundfont/read_sf2/samples.js", "../node_modules/spessasynth_core/src/soundfont/basic_soundfont/write_sf2/shdr.js", "../node_modules/spessasynth_core/src/soundfont/basic_soundfont/write_sf2/imod.js", "../node_modules/spessasynth_core/src/soundfont/basic_soundfont/write_sf2/ibag.js", "../node_modules/spessasynth_core/src/soundfont/basic_soundfont/write_sf2/inst.js", "../node_modules/spessasynth_core/src/soundfont/basic_soundfont/write_sf2/pgen.js", "../node_modules/spessasynth_core/src/soundfont/basic_soundfont/write_sf2/pmod.js", "../node_modules/spessasynth_core/src/soundfont/basic_soundfont/write_sf2/pbag.js", "../node_modules/spessasynth_core/src/soundfont/basic_soundfont/write_sf2/phdr.js", "../node_modules/spessasynth_core/src/utils/fill_with_defaults.js", "../node_modules/spessasynth_core/src/soundfont/basic_soundfont/write_sf2/write.js", "../node_modules/spessasynth_core/src/soundfont/basic_soundfont/basic_zone.js", "../node_modules/spessasynth_core/src/soundfont/basic_soundfont/basic_global_zone.js", "../node_modules/spessasynth_core/src/soundfont/basic_soundfont/basic_instrument_zone.js", "../node_modules/spessasynth_core/src/soundfont/basic_soundfont/basic_instrument.js", "../node_modules/spessasynth_core/src/soundfont/basic_soundfont/write_dls/combine_zones.js", "../node_modules/spessasynth_core/src/soundfont/basic_soundfont/write_dls/wsmp.js", "../node_modules/spessasynth_core/src/soundfont/dls/dls_sources.js", "../node_modules/spessasynth_core/src/soundfont/dls/dls_destinations.js", "../node_modules/spessasynth_core/src/soundfont/basic_soundfont/write_dls/articulator.js", "../node_modules/spessasynth_core/src/soundfont/basic_soundfont/write_dls/modulator_converter.js", "../node_modules/spessasynth_core/src/soundfont/basic_soundfont/write_dls/art2.js", "../node_modules/spessasynth_core/src/soundfont/basic_soundfont/write_dls/rgn2.js", "../node_modules/spessasynth_core/src/soundfont/basic_soundfont/write_dls/ins.js", "../node_modules/spessasynth_core/src/soundfont/basic_soundfont/write_dls/lins.js", "../node_modules/spessasynth_core/src/soundfont/basic_soundfont/write_dls/wave.js", "../node_modules/spessasynth_core/src/soundfont/basic_soundfont/write_dls/wvpl.js", "../node_modules/spessasynth_core/src/soundfont/basic_soundfont/write_dls/write_dls.js", "../node_modules/spessasynth_core/src/soundfont/basic_soundfont/basic_preset_zone.js", "../node_modules/spessasynth_core/src/soundfont/basic_soundfont/basic_preset.js", "../node_modules/spessasynth_core/src/soundfont/basic_soundfont/basic_soundbank.js", "../node_modules/spessasynth_core/src/soundfont/dls/read_instrument_list.js", "../node_modules/spessasynth_core/src/soundfont/dls/dls_zone.js", "../node_modules/spessasynth_core/src/soundfont/dls/dls_instrument.js", "../node_modules/spessasynth_core/src/soundfont/dls/dls_preset.js", "../node_modules/spessasynth_core/src/soundfont/dls/read_region.js", "../node_modules/spessasynth_core/src/soundfont/dls/read_instrument.js", "../node_modules/spessasynth_core/src/soundfont/dls/articulator_converter.js", "../node_modules/spessasynth_core/src/soundfont/dls/read_articulation.js", "../node_modules/spessasynth_core/src/soundfont/dls/read_lart.js", "../node_modules/spessasynth_core/src/soundfont/dls/dls_sample.js", "../node_modules/spessasynth_core/src/soundfont/dls/read_samples.js", "../node_modules/spessasynth_core/src/soundfont/dls/dls_soundfont.js", "../node_modules/spessasynth_core/src/soundfont/read_sf2/generators.js", "../node_modules/spessasynth_core/src/soundfont/read_sf2/preset_zones.js", "../node_modules/spessasynth_core/src/soundfont/read_sf2/presets.js", "../node_modules/spessasynth_core/src/soundfont/read_sf2/instrument_zones.js", "../node_modules/spessasynth_core/src/soundfont/read_sf2/instruments.js", "../node_modules/spessasynth_core/src/soundfont/read_sf2/modulators.js", "../node_modules/spessasynth_core/src/soundfont/read_sf2/zones.js", "../node_modules/spessasynth_core/src/soundfont/read_sf2/soundfont.js", "../node_modules/spessasynth_core/src/soundfont/load_soundfont.js", "../node_modules/spessasynth_core/src/synthetizer/audio_engine/engine_methods/soundfont_management/embedded_sound_bank.js", "../node_modules/spessasynth_core/src/synthetizer/audio_engine/engine_methods/soundfont_management/update_preset_list.js", "../node_modules/spessasynth_core/src/synthetizer/audio_engine/engine_methods/tuning_control/transpose_all_channels.js", "../node_modules/spessasynth_core/src/synthetizer/audio_engine/engine_methods/tuning_control/set_master_tuning.js", "../node_modules/spessasynth_core/src/synthetizer/audio_engine/snapshot/channel_snapshot.js", "../node_modules/spessasynth_core/src/synthetizer/audio_engine/snapshot/synthesizer_snapshot.js", "../node_modules/spessasynth_core/src/synthetizer/audio_engine/snapshot/apply_synthesizer_snapshot.js", "../node_modules/spessasynth_core/src/synthetizer/audio_engine/engine_components/lfo.js", "../node_modules/spessasynth_core/src/synthetizer/audio_engine/engine_components/wavetable_oscillator.js", "../node_modules/spessasynth_core/src/synthetizer/audio_engine/engine_methods/render_voice.js", "../node_modules/spessasynth_core/src/synthetizer/audio_engine/engine_methods/stopping_notes/kill_note.js", "../node_modules/spessasynth_core/src/synthetizer/audio_engine/engine_methods/tuning_control/set_tuning.js", "../node_modules/spessasynth_core/src/synthetizer/audio_engine/engine_methods/tuning_control/set_modulation_depth.js", "../node_modules/spessasynth_core/src/synthetizer/audio_engine/engine_methods/data_entry/data_entry_coarse.js", "../node_modules/spessasynth_core/src/synthetizer/audio_engine/engine_methods/data_entry/awe32.js", "../node_modules/spessasynth_core/src/synthetizer/audio_engine/engine_methods/data_entry/data_entry_fine.js", "../node_modules/spessasynth_core/src/synthetizer/audio_engine/engine_methods/controller_control/controller_change.js", "../node_modules/spessasynth_core/src/synthetizer/audio_engine/engine_methods/stopping_notes/stop_all_notes.js", "../node_modules/spessasynth_core/src/synthetizer/audio_engine/engine_methods/mute_channel.js", "../node_modules/spessasynth_core/src/synthetizer/audio_engine/engine_methods/tuning_control/transpose_channel.js", "../node_modules/spessasynth_core/src/synthetizer/audio_engine/engine_methods/portamento_time.js", "../node_modules/spessasynth_core/src/synthetizer/audio_engine/engine_methods/note_on.js", "../node_modules/spessasynth_core/src/synthetizer/audio_engine/engine_methods/stopping_notes/note_off.js", "../node_modules/spessasynth_core/src/synthetizer/audio_engine/engine_methods/tuning_control/poly_pressure.js", "../node_modules/spessasynth_core/src/synthetizer/audio_engine/engine_methods/tuning_control/channel_pressure.js", "../node_modules/spessasynth_core/src/synthetizer/audio_engine/engine_methods/tuning_control/pitch_wheel.js", "../node_modules/spessasynth_core/src/synthetizer/audio_engine/engine_methods/tuning_control/set_octave_tuning.js", "../node_modules/spessasynth_core/src/synthetizer/audio_engine/engine_methods/program_change.js", "../node_modules/spessasynth_core/src/synthetizer/audio_engine/engine_components/dynamic_modulator_system.js", "../node_modules/spessasynth_core/src/synthetizer/audio_engine/engine_components/compute_modulator.js", "../node_modules/spessasynth_core/src/synthetizer/audio_engine/engine_components/midi_audio_channel.js", "../node_modules/spessasynth_core/src/synthetizer/audio_engine/engine_methods/create_midi_channel.js", "../node_modules/spessasynth_core/src/synthetizer/audio_engine/synth_processor_options.js", "../node_modules/spessasynth_core/src/synthetizer/audio_engine/main_processor.js", "../node_modules/spessasynth_core/src/utils/byte_functions/big_endian.js", "../node_modules/spessasynth_core/src/sequencer/process_event.js", "../node_modules/spessasynth_core/src/sequencer/process_tick.js", "../node_modules/spessasynth_core/src/midi/midi_sequence.js", "../node_modules/spessasynth_core/src/utils/byte_functions/variable_length_quantity.js", "../node_modules/spessasynth_core/src/midi/midi_tools/midi_writer.js", "../node_modules/spessasynth_core/src/utils/sysex_detector.js", "../node_modules/spessasynth_core/src/midi/midi_tools/midi_editor.js", "../node_modules/spessasynth_core/src/midi/midi_tools/rmidi_writer.js", "../node_modules/spessasynth_core/src/midi/midi_tools/used_keys_loaded.js", "../node_modules/spessasynth_core/src/midi/midi_tools/get_note_times.js", "../node_modules/spessasynth_core/src/midi/basic_midi.js", "../node_modules/spessasynth_core/src/sequencer/song_control.js", "../node_modules/spessasynth_core/src/sequencer/play.js", "../node_modules/spessasynth_core/src/sequencer/events.js", "../node_modules/spessasynth_core/src/sequencer/sequencer_engine.js", "../node_modules/spessasynth_core/src/externals/fflate/fflate.min.js", "../node_modules/spessasynth_core/src/utils/buffer_to_wav.js", "../node_modules/spessasynth_core/index.js", "../src/website/js/utils/is_mobile.js", "../src/website/js/midi_keyboard/pointer_handling.js", "../src/website/js/midi_keyboard/midi_keyboard.js", "../node_modules/spessasynth_lib/src/utils/other.js", "../node_modules/spessasynth_lib/src/synthetizer/audio_effects/fancy_chorus.js", "../node_modules/spessasynth_lib/src/synthetizer/audio_effects/rb_compressed.min.js", "../node_modules/spessasynth_lib/src/synthetizer/audio_effects/reverb_as_binary.js", "../node_modules/spessasynth_lib/src/synthetizer/audio_effects/reverb.js", "../node_modules/spessasynth_lib/src/synthetizer/audio_effects/effects_config.js", "../node_modules/spessasynth_lib/src/sequencer/midi_data.js", "../node_modules/spessasynth_lib/src/utils/buffer_to_wav.js", "../node_modules/spessasynth_lib/src/external_midi/midi_handler.js", "../node_modules/spessasynth_lib/src/external_midi/web_midi_link.js", "../src/website/js/utils/calculate_rgb.js", "../src/website/js/renderer/draw_notes.js", "../src/website/js/renderer/render.js", "../src/website/js/renderer/compute_note_positions.js", "../src/website/js/utils/console_colors.js", "../src/website/js/renderer/colors.js", "../src/website/js/renderer/render_waveforms.js", "../src/website/js/renderer/channel_analysers.js", "../src/website/js/renderer/connect_sequencer.js", "../src/website/js/renderer/renderer.js", "../src/website/js/utils/other.js", "../src/website/js/utils/encodings.js", "../src/website/js/utils/icons.js", "../src/website/js/sequencer_ui/sequi_button.js", "../src/website/js/utils/keybinds.js", "../src/website/js/sequencer_ui/title_and_media_status.js", "../src/website/js/utils/ass_manager/dialogue_event.js", "../src/website/js/utils/ass_manager/ass_manager.js", "../src/website/js/sequencer_ui/lyrics.js", "../src/website/js/settings_ui/sliders.js", "../src/website/js/sequencer_ui/sequencer_ui.js", "../src/website/js/synthesizer_ui/methods/hide_show_controllers.js", "../src/website/js/synthesizer_ui/methods/toggle_dark_mode.js", "../src/website/js/synthesizer_ui/methods/synthui_meter.js", "../src/website/js/utils/patch_names.js", "../src/website/js/synthesizer_ui/methods/synthui_selector.js", "../src/website/js/synthesizer_ui/methods/create_channel_controller.js", "../src/website/js/notification/get_content.js", "../src/website/js/notification/notification.js", "../src/website/js/synthesizer_ui/methods/effects_config.js", "../src/website/js/synthesizer_ui/methods/key_modifier_ui.js", "../src/website/js/synthesizer_ui/methods/advanced_configuration.js", "../src/website/js/synthesizer_ui/methods/create_main_controller.js", "../src/website/js/synthesizer_ui/methods/set_event_listeners.js", "../src/website/js/synthesizer_ui/synthetizer_ui.js", "../src/website/js/settings_ui/handlers/keyboard_handler.js", "../src/website/js/settings_ui/settings_html.js", "../src/website/js/settings_ui/saving/load_settings.js", "../src/website/js/settings_ui/saving/save_settings.js", "../src/website/js/settings_ui/saving/serialize_settings.js", "../src/website/js/settings_ui/handlers/interface_handler.js", "../src/website/js/settings_ui/handlers/toggle_dark_mode.js", "../src/website/js/settings_ui/handlers/renderer_handler.js", "../src/website/js/settings_ui/handlers/midi_handler.js", "../src/website/js/locale/locale_files/locale_en/settings/renderer_settings.js", "../src/website/js/locale/locale_files/locale_en/settings/keyboard_settings.js", "../src/website/js/locale/locale_files/locale_en/settings/midi_settings.js", "../src/website/js/locale/locale_files/locale_en/settings/interface_settings.js", "../src/website/js/locale/locale_files/locale_en/settings/settings.js", "../src/website/js/locale/locale_files/locale_en/music_player_mode.js", "../src/website/js/locale/locale_files/locale_en/synthesizer_controller/channel_controller.js", "../src/website/js/locale/locale_files/locale_en/synthesizer_controller/effects_config.js", "../src/website/js/locale/locale_files/locale_en/synthesizer_controller/key_modifiers.js", "../src/website/js/locale/locale_files/locale_en/synthesizer_controller/synthesizer_controller.js", "../src/website/js/locale/locale_files/locale_en/sequencer_controller.js", "../src/website/js/locale/locale_files/locale_en/export_audio.js", "../src/website/js/locale/locale_files/locale_en/locale.js", "../src/website/js/locale/locale_files/locale_pl/settings/renderer_settings.js", "../src/website/js/locale/locale_files/locale_pl/settings/keyboard_settings.js", "../src/website/js/locale/locale_files/locale_pl/settings/midi_settings.js", "../src/website/js/locale/locale_files/locale_pl/settings/interface_settings.js", "../src/website/js/locale/locale_files/locale_pl/settings/settings.js", "../src/website/js/locale/locale_files/locale_pl/music_player_mode.js", "../src/website/js/locale/locale_files/locale_pl/synthesizer_controller/channel_controller.js", "../src/website/js/locale/locale_files/locale_pl/synthesizer_controller/effects_config.js", "../src/website/js/locale/locale_files/locale_pl/synthesizer_controller/key_modifiers.js", "../src/website/js/locale/locale_files/locale_pl/synthesizer_controller/synthesizer_controller.js", "../src/website/js/locale/locale_files/locale_pl/sequencer_controller.js", "../src/website/js/locale/locale_files/locale_pl/export_audio.js", "../src/website/js/locale/locale_files/locale_pl/locale.js", "../src/website/js/locale/locale_files/locale_ja/settings/renderer_settings.js", "../src/website/js/locale/locale_files/locale_ja/settings/keyboard_settings.js", "../src/website/js/locale/locale_files/locale_ja/settings/midi_settings.js", "../src/website/js/locale/locale_files/locale_ja/settings/settings.js", "../src/website/js/locale/locale_files/locale_ja/music_player_mode.js", "../src/website/js/locale/locale_files/locale_ja/synthesizer_controller/channel_controller.js", "../src/website/js/locale/locale_files/locale_ja/synthesizer_controller/synthesizer_controller.js", "../src/website/js/locale/locale_files/locale_ja/sequencer_controller.js", "../src/website/js/locale/locale_files/locale_ja/export_audio.js", "../src/website/js/locale/locale_files/locale_ja/locale.js", "../src/website/js/locale/locale_files/locale_fr/settings/renderer_settings.js", "../src/website/js/locale/locale_files/locale_fr/settings/keyboard_settings.js", "../src/website/js/locale/locale_files/locale_fr/settings/midi_settings.js", "../src/website/js/locale/locale_files/locale_fr/settings/settings.js", "../src/website/js/locale/locale_files/locale_fr/music_player_mode.js", "../src/website/js/locale/locale_files/locale_fr/synthesizer_controller/channel_controller.js", "../src/website/js/locale/locale_files/locale_fr/synthesizer_controller/effects_config.js", "../src/website/js/locale/locale_files/locale_fr/synthesizer_controller/key_modifiers.js", "../src/website/js/locale/locale_files/locale_fr/synthesizer_controller/synthesizer_controller.js", "../src/website/js/locale/locale_files/locale_fr/sequencer_controller.js", "../src/website/js/locale/locale_files/locale_fr/export_audio.js", "../src/website/js/locale/locale_files/locale_fr/locale.js", "../src/website/js/locale/locale_files/locale_pt/settings/renderer_settings.js", "../src/website/js/locale/locale_files/locale_pt/settings/keyboard_settings.js", "../src/website/js/locale/locale_files/locale_pt/settings/midi_settings.js", "../src/website/js/locale/locale_files/locale_pt/settings/settings.js", "../src/website/js/locale/locale_files/locale_pt/music_player_mode.js", "../src/website/js/locale/locale_files/locale_pt/synthesizer_controller/channel_controller.js", "../src/website/js/locale/locale_files/locale_pt/synthesizer_controller/effects_config.js", "../src/website/js/locale/locale_files/locale_pt/synthesizer_controller/synthesizer_controller.js", "../src/website/js/locale/locale_files/locale_pt/sequencer_controller.js", "../src/website/js/locale/locale_files/locale_pt/export_audio.js", "../src/website/js/locale/locale_files/locale_pt/locale.js", "../src/website/js/locale/locale_files/locale_list.js", "../src/website/js/settings_ui/settings.js", "../src/website/js/music_mode_ui/music_mode_html.js", "../src/website/js/music_mode_ui/music_mode_ui.js", "../src/website/js/locale/locale_manager.js", "../src/website/js/manager/export_audio/export_audio.js", "../src/website/js/manager/export_audio/export_soundfont.js", "../src/website/js/manager/export_audio/export_song.js", "../src/website/js/manager/export_audio/export_rmidi.js", "../src/website/js/utils/drop_file_handler.js", "../src/website/js/manager/export_audio/export_dls.js", "../src/website/js/manager/extra_bank_id.js", "../src/website/js/manager/extra_bank_handling.js", "../src/website/js/manager/custom_synth/worker_thread/worker_message.js", "../src/website/js/manager/custom_synth/main_thread/synth_event_handler.js", "../src/website/js/manager/custom_synth/main_thread/synth_soundfont_manager.js", "../src/website/js/manager/custom_synth/main_thread/key_modifier_manager.js", "../src/website/js/manager/custom_synth/main_thread/src/website/js/manager/custom_synth/main_thread/custom_synth.js", "../src/website/js/manager/custom_synth/worker_thread/midi_data.js", "../src/website/js/manager/custom_synth/main_thread/custom_seq.js", "../src/website/js/manager/manager.js", "../src/website/js/main/local_main.js"],
  "sourcesContent": ["/*!\n\nJSZip v3.10.1 - A JavaScript class for generating and reading zip files\n<http://stuartk.com/jszip>\n\n(c) 2009-2016 Stuart Knightley <stuart [at] stuartk.com>\nDual licenced under the MIT license or GPLv3. See https://raw.github.com/Stuk/jszip/main/LICENSE.markdown.\n\nJSZip uses the library pako released under the MIT license :\nhttps://github.com/nodeca/pako/blob/main/LICENSE\n*/\n\n!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{(\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:this).JSZip=e()}}(function(){return function s(a,o,h){function u(r,e){if(!o[r]){if(!a[r]){var t=\"function\"==typeof require&&require;if(!e&&t)return t(r,!0);if(l)return l(r,!0);var n=new Error(\"Cannot find module '\"+r+\"'\");throw n.code=\"MODULE_NOT_FOUND\",n}var i=o[r]={exports:{}};a[r][0].call(i.exports,function(e){var t=a[r][1][e];return u(t||e)},i,i.exports,s,a,o,h)}return o[r].exports}for(var l=\"function\"==typeof require&&require,e=0;e<h.length;e++)u(h[e]);return u}({1:[function(e,t,r){\"use strict\";var d=e(\"./utils\"),c=e(\"./support\"),p=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";r.encode=function(e){for(var t,r,n,i,s,a,o,h=[],u=0,l=e.length,f=l,c=\"string\"!==d.getTypeOf(e);u<e.length;)f=l-u,n=c?(t=e[u++],r=u<l?e[u++]:0,u<l?e[u++]:0):(t=e.charCodeAt(u++),r=u<l?e.charCodeAt(u++):0,u<l?e.charCodeAt(u++):0),i=t>>2,s=(3&t)<<4|r>>4,a=1<f?(15&r)<<2|n>>6:64,o=2<f?63&n:64,h.push(p.charAt(i)+p.charAt(s)+p.charAt(a)+p.charAt(o));return h.join(\"\")},r.decode=function(e){var t,r,n,i,s,a,o=0,h=0,u=\"data:\";if(e.substr(0,u.length)===u)throw new Error(\"Invalid base64 input, it looks like a data url.\");var l,f=3*(e=e.replace(/[^A-Za-z0-9+/=]/g,\"\")).length/4;if(e.charAt(e.length-1)===p.charAt(64)&&f--,e.charAt(e.length-2)===p.charAt(64)&&f--,f%1!=0)throw new Error(\"Invalid base64 input, bad content length.\");for(l=c.uint8array?new Uint8Array(0|f):new Array(0|f);o<e.length;)t=p.indexOf(e.charAt(o++))<<2|(i=p.indexOf(e.charAt(o++)))>>4,r=(15&i)<<4|(s=p.indexOf(e.charAt(o++)))>>2,n=(3&s)<<6|(a=p.indexOf(e.charAt(o++))),l[h++]=t,64!==s&&(l[h++]=r),64!==a&&(l[h++]=n);return l}},{\"./support\":30,\"./utils\":32}],2:[function(e,t,r){\"use strict\";var n=e(\"./external\"),i=e(\"./stream/DataWorker\"),s=e(\"./stream/Crc32Probe\"),a=e(\"./stream/DataLengthProbe\");function o(e,t,r,n,i){this.compressedSize=e,this.uncompressedSize=t,this.crc32=r,this.compression=n,this.compressedContent=i}o.prototype={getContentWorker:function(){var e=new i(n.Promise.resolve(this.compressedContent)).pipe(this.compression.uncompressWorker()).pipe(new a(\"data_length\")),t=this;return e.on(\"end\",function(){if(this.streamInfo.data_length!==t.uncompressedSize)throw new Error(\"Bug : uncompressed data size mismatch\")}),e},getCompressedWorker:function(){return new i(n.Promise.resolve(this.compressedContent)).withStreamInfo(\"compressedSize\",this.compressedSize).withStreamInfo(\"uncompressedSize\",this.uncompressedSize).withStreamInfo(\"crc32\",this.crc32).withStreamInfo(\"compression\",this.compression)}},o.createWorkerFrom=function(e,t,r){return e.pipe(new s).pipe(new a(\"uncompressedSize\")).pipe(t.compressWorker(r)).pipe(new a(\"compressedSize\")).withStreamInfo(\"compression\",t)},t.exports=o},{\"./external\":6,\"./stream/Crc32Probe\":25,\"./stream/DataLengthProbe\":26,\"./stream/DataWorker\":27}],3:[function(e,t,r){\"use strict\";var n=e(\"./stream/GenericWorker\");r.STORE={magic:\"\\0\\0\",compressWorker:function(){return new n(\"STORE compression\")},uncompressWorker:function(){return new n(\"STORE decompression\")}},r.DEFLATE=e(\"./flate\")},{\"./flate\":7,\"./stream/GenericWorker\":28}],4:[function(e,t,r){\"use strict\";var n=e(\"./utils\");var o=function(){for(var e,t=[],r=0;r<256;r++){e=r;for(var n=0;n<8;n++)e=1&e?3988292384^e>>>1:e>>>1;t[r]=e}return t}();t.exports=function(e,t){return void 0!==e&&e.length?\"string\"!==n.getTypeOf(e)?function(e,t,r,n){var i=o,s=n+r;e^=-1;for(var a=n;a<s;a++)e=e>>>8^i[255&(e^t[a])];return-1^e}(0|t,e,e.length,0):function(e,t,r,n){var i=o,s=n+r;e^=-1;for(var a=n;a<s;a++)e=e>>>8^i[255&(e^t.charCodeAt(a))];return-1^e}(0|t,e,e.length,0):0}},{\"./utils\":32}],5:[function(e,t,r){\"use strict\";r.base64=!1,r.binary=!1,r.dir=!1,r.createFolders=!0,r.date=null,r.compression=null,r.compressionOptions=null,r.comment=null,r.unixPermissions=null,r.dosPermissions=null},{}],6:[function(e,t,r){\"use strict\";var n=null;n=\"undefined\"!=typeof Promise?Promise:e(\"lie\"),t.exports={Promise:n}},{lie:37}],7:[function(e,t,r){\"use strict\";var n=\"undefined\"!=typeof Uint8Array&&\"undefined\"!=typeof Uint16Array&&\"undefined\"!=typeof Uint32Array,i=e(\"pako\"),s=e(\"./utils\"),a=e(\"./stream/GenericWorker\"),o=n?\"uint8array\":\"array\";function h(e,t){a.call(this,\"FlateWorker/\"+e),this._pako=null,this._pakoAction=e,this._pakoOptions=t,this.meta={}}r.magic=\"\\b\\0\",s.inherits(h,a),h.prototype.processChunk=function(e){this.meta=e.meta,null===this._pako&&this._createPako(),this._pako.push(s.transformTo(o,e.data),!1)},h.prototype.flush=function(){a.prototype.flush.call(this),null===this._pako&&this._createPako(),this._pako.push([],!0)},h.prototype.cleanUp=function(){a.prototype.cleanUp.call(this),this._pako=null},h.prototype._createPako=function(){this._pako=new i[this._pakoAction]({raw:!0,level:this._pakoOptions.level||-1});var t=this;this._pako.onData=function(e){t.push({data:e,meta:t.meta})}},r.compressWorker=function(e){return new h(\"Deflate\",e)},r.uncompressWorker=function(){return new h(\"Inflate\",{})}},{\"./stream/GenericWorker\":28,\"./utils\":32,pako:38}],8:[function(e,t,r){\"use strict\";function A(e,t){var r,n=\"\";for(r=0;r<t;r++)n+=String.fromCharCode(255&e),e>>>=8;return n}function n(e,t,r,n,i,s){var a,o,h=e.file,u=e.compression,l=s!==O.utf8encode,f=I.transformTo(\"string\",s(h.name)),c=I.transformTo(\"string\",O.utf8encode(h.name)),d=h.comment,p=I.transformTo(\"string\",s(d)),m=I.transformTo(\"string\",O.utf8encode(d)),_=c.length!==h.name.length,g=m.length!==d.length,b=\"\",v=\"\",y=\"\",w=h.dir,k=h.date,x={crc32:0,compressedSize:0,uncompressedSize:0};t&&!r||(x.crc32=e.crc32,x.compressedSize=e.compressedSize,x.uncompressedSize=e.uncompressedSize);var S=0;t&&(S|=8),l||!_&&!g||(S|=2048);var z=0,C=0;w&&(z|=16),\"UNIX\"===i?(C=798,z|=function(e,t){var r=e;return e||(r=t?16893:33204),(65535&r)<<16}(h.unixPermissions,w)):(C=20,z|=function(e){return 63&(e||0)}(h.dosPermissions)),a=k.getUTCHours(),a<<=6,a|=k.getUTCMinutes(),a<<=5,a|=k.getUTCSeconds()/2,o=k.getUTCFullYear()-1980,o<<=4,o|=k.getUTCMonth()+1,o<<=5,o|=k.getUTCDate(),_&&(v=A(1,1)+A(B(f),4)+c,b+=\"up\"+A(v.length,2)+v),g&&(y=A(1,1)+A(B(p),4)+m,b+=\"uc\"+A(y.length,2)+y);var E=\"\";return E+=\"\\n\\0\",E+=A(S,2),E+=u.magic,E+=A(a,2),E+=A(o,2),E+=A(x.crc32,4),E+=A(x.compressedSize,4),E+=A(x.uncompressedSize,4),E+=A(f.length,2),E+=A(b.length,2),{fileRecord:R.LOCAL_FILE_HEADER+E+f+b,dirRecord:R.CENTRAL_FILE_HEADER+A(C,2)+E+A(p.length,2)+\"\\0\\0\\0\\0\"+A(z,4)+A(n,4)+f+b+p}}var I=e(\"../utils\"),i=e(\"../stream/GenericWorker\"),O=e(\"../utf8\"),B=e(\"../crc32\"),R=e(\"../signature\");function s(e,t,r,n){i.call(this,\"ZipFileWorker\"),this.bytesWritten=0,this.zipComment=t,this.zipPlatform=r,this.encodeFileName=n,this.streamFiles=e,this.accumulate=!1,this.contentBuffer=[],this.dirRecords=[],this.currentSourceOffset=0,this.entriesCount=0,this.currentFile=null,this._sources=[]}I.inherits(s,i),s.prototype.push=function(e){var t=e.meta.percent||0,r=this.entriesCount,n=this._sources.length;this.accumulate?this.contentBuffer.push(e):(this.bytesWritten+=e.data.length,i.prototype.push.call(this,{data:e.data,meta:{currentFile:this.currentFile,percent:r?(t+100*(r-n-1))/r:100}}))},s.prototype.openedSource=function(e){this.currentSourceOffset=this.bytesWritten,this.currentFile=e.file.name;var t=this.streamFiles&&!e.file.dir;if(t){var r=n(e,t,!1,this.currentSourceOffset,this.zipPlatform,this.encodeFileName);this.push({data:r.fileRecord,meta:{percent:0}})}else this.accumulate=!0},s.prototype.closedSource=function(e){this.accumulate=!1;var t=this.streamFiles&&!e.file.dir,r=n(e,t,!0,this.currentSourceOffset,this.zipPlatform,this.encodeFileName);if(this.dirRecords.push(r.dirRecord),t)this.push({data:function(e){return R.DATA_DESCRIPTOR+A(e.crc32,4)+A(e.compressedSize,4)+A(e.uncompressedSize,4)}(e),meta:{percent:100}});else for(this.push({data:r.fileRecord,meta:{percent:0}});this.contentBuffer.length;)this.push(this.contentBuffer.shift());this.currentFile=null},s.prototype.flush=function(){for(var e=this.bytesWritten,t=0;t<this.dirRecords.length;t++)this.push({data:this.dirRecords[t],meta:{percent:100}});var r=this.bytesWritten-e,n=function(e,t,r,n,i){var s=I.transformTo(\"string\",i(n));return R.CENTRAL_DIRECTORY_END+\"\\0\\0\\0\\0\"+A(e,2)+A(e,2)+A(t,4)+A(r,4)+A(s.length,2)+s}(this.dirRecords.length,r,e,this.zipComment,this.encodeFileName);this.push({data:n,meta:{percent:100}})},s.prototype.prepareNextSource=function(){this.previous=this._sources.shift(),this.openedSource(this.previous.streamInfo),this.isPaused?this.previous.pause():this.previous.resume()},s.prototype.registerPrevious=function(e){this._sources.push(e);var t=this;return e.on(\"data\",function(e){t.processChunk(e)}),e.on(\"end\",function(){t.closedSource(t.previous.streamInfo),t._sources.length?t.prepareNextSource():t.end()}),e.on(\"error\",function(e){t.error(e)}),this},s.prototype.resume=function(){return!!i.prototype.resume.call(this)&&(!this.previous&&this._sources.length?(this.prepareNextSource(),!0):this.previous||this._sources.length||this.generatedError?void 0:(this.end(),!0))},s.prototype.error=function(e){var t=this._sources;if(!i.prototype.error.call(this,e))return!1;for(var r=0;r<t.length;r++)try{t[r].error(e)}catch(e){}return!0},s.prototype.lock=function(){i.prototype.lock.call(this);for(var e=this._sources,t=0;t<e.length;t++)e[t].lock()},t.exports=s},{\"../crc32\":4,\"../signature\":23,\"../stream/GenericWorker\":28,\"../utf8\":31,\"../utils\":32}],9:[function(e,t,r){\"use strict\";var u=e(\"../compressions\"),n=e(\"./ZipFileWorker\");r.generateWorker=function(e,a,t){var o=new n(a.streamFiles,t,a.platform,a.encodeFileName),h=0;try{e.forEach(function(e,t){h++;var r=function(e,t){var r=e||t,n=u[r];if(!n)throw new Error(r+\" is not a valid compression method !\");return n}(t.options.compression,a.compression),n=t.options.compressionOptions||a.compressionOptions||{},i=t.dir,s=t.date;t._compressWorker(r,n).withStreamInfo(\"file\",{name:e,dir:i,date:s,comment:t.comment||\"\",unixPermissions:t.unixPermissions,dosPermissions:t.dosPermissions}).pipe(o)}),o.entriesCount=h}catch(e){o.error(e)}return o}},{\"../compressions\":3,\"./ZipFileWorker\":8}],10:[function(e,t,r){\"use strict\";function n(){if(!(this instanceof n))return new n;if(arguments.length)throw new Error(\"The constructor with parameters has been removed in JSZip 3.0, please check the upgrade guide.\");this.files=Object.create(null),this.comment=null,this.root=\"\",this.clone=function(){var e=new n;for(var t in this)\"function\"!=typeof this[t]&&(e[t]=this[t]);return e}}(n.prototype=e(\"./object\")).loadAsync=e(\"./load\"),n.support=e(\"./support\"),n.defaults=e(\"./defaults\"),n.version=\"3.10.1\",n.loadAsync=function(e,t){return(new n).loadAsync(e,t)},n.external=e(\"./external\"),t.exports=n},{\"./defaults\":5,\"./external\":6,\"./load\":11,\"./object\":15,\"./support\":30}],11:[function(e,t,r){\"use strict\";var u=e(\"./utils\"),i=e(\"./external\"),n=e(\"./utf8\"),s=e(\"./zipEntries\"),a=e(\"./stream/Crc32Probe\"),l=e(\"./nodejsUtils\");function f(n){return new i.Promise(function(e,t){var r=n.decompressed.getContentWorker().pipe(new a);r.on(\"error\",function(e){t(e)}).on(\"end\",function(){r.streamInfo.crc32!==n.decompressed.crc32?t(new Error(\"Corrupted zip : CRC32 mismatch\")):e()}).resume()})}t.exports=function(e,o){var h=this;return o=u.extend(o||{},{base64:!1,checkCRC32:!1,optimizedBinaryString:!1,createFolders:!1,decodeFileName:n.utf8decode}),l.isNode&&l.isStream(e)?i.Promise.reject(new Error(\"JSZip can't accept a stream when loading a zip file.\")):u.prepareContent(\"the loaded zip file\",e,!0,o.optimizedBinaryString,o.base64).then(function(e){var t=new s(o);return t.load(e),t}).then(function(e){var t=[i.Promise.resolve(e)],r=e.files;if(o.checkCRC32)for(var n=0;n<r.length;n++)t.push(f(r[n]));return i.Promise.all(t)}).then(function(e){for(var t=e.shift(),r=t.files,n=0;n<r.length;n++){var i=r[n],s=i.fileNameStr,a=u.resolve(i.fileNameStr);h.file(a,i.decompressed,{binary:!0,optimizedBinaryString:!0,date:i.date,dir:i.dir,comment:i.fileCommentStr.length?i.fileCommentStr:null,unixPermissions:i.unixPermissions,dosPermissions:i.dosPermissions,createFolders:o.createFolders}),i.dir||(h.file(a).unsafeOriginalName=s)}return t.zipComment.length&&(h.comment=t.zipComment),h})}},{\"./external\":6,\"./nodejsUtils\":14,\"./stream/Crc32Probe\":25,\"./utf8\":31,\"./utils\":32,\"./zipEntries\":33}],12:[function(e,t,r){\"use strict\";var n=e(\"../utils\"),i=e(\"../stream/GenericWorker\");function s(e,t){i.call(this,\"Nodejs stream input adapter for \"+e),this._upstreamEnded=!1,this._bindStream(t)}n.inherits(s,i),s.prototype._bindStream=function(e){var t=this;(this._stream=e).pause(),e.on(\"data\",function(e){t.push({data:e,meta:{percent:0}})}).on(\"error\",function(e){t.isPaused?this.generatedError=e:t.error(e)}).on(\"end\",function(){t.isPaused?t._upstreamEnded=!0:t.end()})},s.prototype.pause=function(){return!!i.prototype.pause.call(this)&&(this._stream.pause(),!0)},s.prototype.resume=function(){return!!i.prototype.resume.call(this)&&(this._upstreamEnded?this.end():this._stream.resume(),!0)},t.exports=s},{\"../stream/GenericWorker\":28,\"../utils\":32}],13:[function(e,t,r){\"use strict\";var i=e(\"readable-stream\").Readable;function n(e,t,r){i.call(this,t),this._helper=e;var n=this;e.on(\"data\",function(e,t){n.push(e)||n._helper.pause(),r&&r(t)}).on(\"error\",function(e){n.emit(\"error\",e)}).on(\"end\",function(){n.push(null)})}e(\"../utils\").inherits(n,i),n.prototype._read=function(){this._helper.resume()},t.exports=n},{\"../utils\":32,\"readable-stream\":16}],14:[function(e,t,r){\"use strict\";t.exports={isNode:\"undefined\"!=typeof Buffer,newBufferFrom:function(e,t){if(Buffer.from&&Buffer.from!==Uint8Array.from)return Buffer.from(e,t);if(\"number\"==typeof e)throw new Error('The \"data\" argument must not be a number');return new Buffer(e,t)},allocBuffer:function(e){if(Buffer.alloc)return Buffer.alloc(e);var t=new Buffer(e);return t.fill(0),t},isBuffer:function(e){return Buffer.isBuffer(e)},isStream:function(e){return e&&\"function\"==typeof e.on&&\"function\"==typeof e.pause&&\"function\"==typeof e.resume}}},{}],15:[function(e,t,r){\"use strict\";function s(e,t,r){var n,i=u.getTypeOf(t),s=u.extend(r||{},f);s.date=s.date||new Date,null!==s.compression&&(s.compression=s.compression.toUpperCase()),\"string\"==typeof s.unixPermissions&&(s.unixPermissions=parseInt(s.unixPermissions,8)),s.unixPermissions&&16384&s.unixPermissions&&(s.dir=!0),s.dosPermissions&&16&s.dosPermissions&&(s.dir=!0),s.dir&&(e=g(e)),s.createFolders&&(n=_(e))&&b.call(this,n,!0);var a=\"string\"===i&&!1===s.binary&&!1===s.base64;r&&void 0!==r.binary||(s.binary=!a),(t instanceof c&&0===t.uncompressedSize||s.dir||!t||0===t.length)&&(s.base64=!1,s.binary=!0,t=\"\",s.compression=\"STORE\",i=\"string\");var o=null;o=t instanceof c||t instanceof l?t:p.isNode&&p.isStream(t)?new m(e,t):u.prepareContent(e,t,s.binary,s.optimizedBinaryString,s.base64);var h=new d(e,o,s);this.files[e]=h}var i=e(\"./utf8\"),u=e(\"./utils\"),l=e(\"./stream/GenericWorker\"),a=e(\"./stream/StreamHelper\"),f=e(\"./defaults\"),c=e(\"./compressedObject\"),d=e(\"./zipObject\"),o=e(\"./generate\"),p=e(\"./nodejsUtils\"),m=e(\"./nodejs/NodejsStreamInputAdapter\"),_=function(e){\"/\"===e.slice(-1)&&(e=e.substring(0,e.length-1));var t=e.lastIndexOf(\"/\");return 0<t?e.substring(0,t):\"\"},g=function(e){return\"/\"!==e.slice(-1)&&(e+=\"/\"),e},b=function(e,t){return t=void 0!==t?t:f.createFolders,e=g(e),this.files[e]||s.call(this,e,null,{dir:!0,createFolders:t}),this.files[e]};function h(e){return\"[object RegExp]\"===Object.prototype.toString.call(e)}var n={load:function(){throw new Error(\"This method has been removed in JSZip 3.0, please check the upgrade guide.\")},forEach:function(e){var t,r,n;for(t in this.files)n=this.files[t],(r=t.slice(this.root.length,t.length))&&t.slice(0,this.root.length)===this.root&&e(r,n)},filter:function(r){var n=[];return this.forEach(function(e,t){r(e,t)&&n.push(t)}),n},file:function(e,t,r){if(1!==arguments.length)return e=this.root+e,s.call(this,e,t,r),this;if(h(e)){var n=e;return this.filter(function(e,t){return!t.dir&&n.test(e)})}var i=this.files[this.root+e];return i&&!i.dir?i:null},folder:function(r){if(!r)return this;if(h(r))return this.filter(function(e,t){return t.dir&&r.test(e)});var e=this.root+r,t=b.call(this,e),n=this.clone();return n.root=t.name,n},remove:function(r){r=this.root+r;var e=this.files[r];if(e||(\"/\"!==r.slice(-1)&&(r+=\"/\"),e=this.files[r]),e&&!e.dir)delete this.files[r];else for(var t=this.filter(function(e,t){return t.name.slice(0,r.length)===r}),n=0;n<t.length;n++)delete this.files[t[n].name];return this},generate:function(){throw new Error(\"This method has been removed in JSZip 3.0, please check the upgrade guide.\")},generateInternalStream:function(e){var t,r={};try{if((r=u.extend(e||{},{streamFiles:!1,compression:\"STORE\",compressionOptions:null,type:\"\",platform:\"DOS\",comment:null,mimeType:\"application/zip\",encodeFileName:i.utf8encode})).type=r.type.toLowerCase(),r.compression=r.compression.toUpperCase(),\"binarystring\"===r.type&&(r.type=\"string\"),!r.type)throw new Error(\"No output type specified.\");u.checkSupport(r.type),\"darwin\"!==r.platform&&\"freebsd\"!==r.platform&&\"linux\"!==r.platform&&\"sunos\"!==r.platform||(r.platform=\"UNIX\"),\"win32\"===r.platform&&(r.platform=\"DOS\");var n=r.comment||this.comment||\"\";t=o.generateWorker(this,r,n)}catch(e){(t=new l(\"error\")).error(e)}return new a(t,r.type||\"string\",r.mimeType)},generateAsync:function(e,t){return this.generateInternalStream(e).accumulate(t)},generateNodeStream:function(e,t){return(e=e||{}).type||(e.type=\"nodebuffer\"),this.generateInternalStream(e).toNodejsStream(t)}};t.exports=n},{\"./compressedObject\":2,\"./defaults\":5,\"./generate\":9,\"./nodejs/NodejsStreamInputAdapter\":12,\"./nodejsUtils\":14,\"./stream/GenericWorker\":28,\"./stream/StreamHelper\":29,\"./utf8\":31,\"./utils\":32,\"./zipObject\":35}],16:[function(e,t,r){\"use strict\";t.exports=e(\"stream\")},{stream:void 0}],17:[function(e,t,r){\"use strict\";var n=e(\"./DataReader\");function i(e){n.call(this,e);for(var t=0;t<this.data.length;t++)e[t]=255&e[t]}e(\"../utils\").inherits(i,n),i.prototype.byteAt=function(e){return this.data[this.zero+e]},i.prototype.lastIndexOfSignature=function(e){for(var t=e.charCodeAt(0),r=e.charCodeAt(1),n=e.charCodeAt(2),i=e.charCodeAt(3),s=this.length-4;0<=s;--s)if(this.data[s]===t&&this.data[s+1]===r&&this.data[s+2]===n&&this.data[s+3]===i)return s-this.zero;return-1},i.prototype.readAndCheckSignature=function(e){var t=e.charCodeAt(0),r=e.charCodeAt(1),n=e.charCodeAt(2),i=e.charCodeAt(3),s=this.readData(4);return t===s[0]&&r===s[1]&&n===s[2]&&i===s[3]},i.prototype.readData=function(e){if(this.checkOffset(e),0===e)return[];var t=this.data.slice(this.zero+this.index,this.zero+this.index+e);return this.index+=e,t},t.exports=i},{\"../utils\":32,\"./DataReader\":18}],18:[function(e,t,r){\"use strict\";var n=e(\"../utils\");function i(e){this.data=e,this.length=e.length,this.index=0,this.zero=0}i.prototype={checkOffset:function(e){this.checkIndex(this.index+e)},checkIndex:function(e){if(this.length<this.zero+e||e<0)throw new Error(\"End of data reached (data length = \"+this.length+\", asked index = \"+e+\"). Corrupted zip ?\")},setIndex:function(e){this.checkIndex(e),this.index=e},skip:function(e){this.setIndex(this.index+e)},byteAt:function(){},readInt:function(e){var t,r=0;for(this.checkOffset(e),t=this.index+e-1;t>=this.index;t--)r=(r<<8)+this.byteAt(t);return this.index+=e,r},readString:function(e){return n.transformTo(\"string\",this.readData(e))},readData:function(){},lastIndexOfSignature:function(){},readAndCheckSignature:function(){},readDate:function(){var e=this.readInt(4);return new Date(Date.UTC(1980+(e>>25&127),(e>>21&15)-1,e>>16&31,e>>11&31,e>>5&63,(31&e)<<1))}},t.exports=i},{\"../utils\":32}],19:[function(e,t,r){\"use strict\";var n=e(\"./Uint8ArrayReader\");function i(e){n.call(this,e)}e(\"../utils\").inherits(i,n),i.prototype.readData=function(e){this.checkOffset(e);var t=this.data.slice(this.zero+this.index,this.zero+this.index+e);return this.index+=e,t},t.exports=i},{\"../utils\":32,\"./Uint8ArrayReader\":21}],20:[function(e,t,r){\"use strict\";var n=e(\"./DataReader\");function i(e){n.call(this,e)}e(\"../utils\").inherits(i,n),i.prototype.byteAt=function(e){return this.data.charCodeAt(this.zero+e)},i.prototype.lastIndexOfSignature=function(e){return this.data.lastIndexOf(e)-this.zero},i.prototype.readAndCheckSignature=function(e){return e===this.readData(4)},i.prototype.readData=function(e){this.checkOffset(e);var t=this.data.slice(this.zero+this.index,this.zero+this.index+e);return this.index+=e,t},t.exports=i},{\"../utils\":32,\"./DataReader\":18}],21:[function(e,t,r){\"use strict\";var n=e(\"./ArrayReader\");function i(e){n.call(this,e)}e(\"../utils\").inherits(i,n),i.prototype.readData=function(e){if(this.checkOffset(e),0===e)return new Uint8Array(0);var t=this.data.subarray(this.zero+this.index,this.zero+this.index+e);return this.index+=e,t},t.exports=i},{\"../utils\":32,\"./ArrayReader\":17}],22:[function(e,t,r){\"use strict\";var n=e(\"../utils\"),i=e(\"../support\"),s=e(\"./ArrayReader\"),a=e(\"./StringReader\"),o=e(\"./NodeBufferReader\"),h=e(\"./Uint8ArrayReader\");t.exports=function(e){var t=n.getTypeOf(e);return n.checkSupport(t),\"string\"!==t||i.uint8array?\"nodebuffer\"===t?new o(e):i.uint8array?new h(n.transformTo(\"uint8array\",e)):new s(n.transformTo(\"array\",e)):new a(e)}},{\"../support\":30,\"../utils\":32,\"./ArrayReader\":17,\"./NodeBufferReader\":19,\"./StringReader\":20,\"./Uint8ArrayReader\":21}],23:[function(e,t,r){\"use strict\";r.LOCAL_FILE_HEADER=\"PK\u0003\u0004\",r.CENTRAL_FILE_HEADER=\"PK\u0001\u0002\",r.CENTRAL_DIRECTORY_END=\"PK\u0005\u0006\",r.ZIP64_CENTRAL_DIRECTORY_LOCATOR=\"PK\u0006\u0007\",r.ZIP64_CENTRAL_DIRECTORY_END=\"PK\u0006\u0006\",r.DATA_DESCRIPTOR=\"PK\u0007\\b\"},{}],24:[function(e,t,r){\"use strict\";var n=e(\"./GenericWorker\"),i=e(\"../utils\");function s(e){n.call(this,\"ConvertWorker to \"+e),this.destType=e}i.inherits(s,n),s.prototype.processChunk=function(e){this.push({data:i.transformTo(this.destType,e.data),meta:e.meta})},t.exports=s},{\"../utils\":32,\"./GenericWorker\":28}],25:[function(e,t,r){\"use strict\";var n=e(\"./GenericWorker\"),i=e(\"../crc32\");function s(){n.call(this,\"Crc32Probe\"),this.withStreamInfo(\"crc32\",0)}e(\"../utils\").inherits(s,n),s.prototype.processChunk=function(e){this.streamInfo.crc32=i(e.data,this.streamInfo.crc32||0),this.push(e)},t.exports=s},{\"../crc32\":4,\"../utils\":32,\"./GenericWorker\":28}],26:[function(e,t,r){\"use strict\";var n=e(\"../utils\"),i=e(\"./GenericWorker\");function s(e){i.call(this,\"DataLengthProbe for \"+e),this.propName=e,this.withStreamInfo(e,0)}n.inherits(s,i),s.prototype.processChunk=function(e){if(e){var t=this.streamInfo[this.propName]||0;this.streamInfo[this.propName]=t+e.data.length}i.prototype.processChunk.call(this,e)},t.exports=s},{\"../utils\":32,\"./GenericWorker\":28}],27:[function(e,t,r){\"use strict\";var n=e(\"../utils\"),i=e(\"./GenericWorker\");function s(e){i.call(this,\"DataWorker\");var t=this;this.dataIsReady=!1,this.index=0,this.max=0,this.data=null,this.type=\"\",this._tickScheduled=!1,e.then(function(e){t.dataIsReady=!0,t.data=e,t.max=e&&e.length||0,t.type=n.getTypeOf(e),t.isPaused||t._tickAndRepeat()},function(e){t.error(e)})}n.inherits(s,i),s.prototype.cleanUp=function(){i.prototype.cleanUp.call(this),this.data=null},s.prototype.resume=function(){return!!i.prototype.resume.call(this)&&(!this._tickScheduled&&this.dataIsReady&&(this._tickScheduled=!0,n.delay(this._tickAndRepeat,[],this)),!0)},s.prototype._tickAndRepeat=function(){this._tickScheduled=!1,this.isPaused||this.isFinished||(this._tick(),this.isFinished||(n.delay(this._tickAndRepeat,[],this),this._tickScheduled=!0))},s.prototype._tick=function(){if(this.isPaused||this.isFinished)return!1;var e=null,t=Math.min(this.max,this.index+16384);if(this.index>=this.max)return this.end();switch(this.type){case\"string\":e=this.data.substring(this.index,t);break;case\"uint8array\":e=this.data.subarray(this.index,t);break;case\"array\":case\"nodebuffer\":e=this.data.slice(this.index,t)}return this.index=t,this.push({data:e,meta:{percent:this.max?this.index/this.max*100:0}})},t.exports=s},{\"../utils\":32,\"./GenericWorker\":28}],28:[function(e,t,r){\"use strict\";function n(e){this.name=e||\"default\",this.streamInfo={},this.generatedError=null,this.extraStreamInfo={},this.isPaused=!0,this.isFinished=!1,this.isLocked=!1,this._listeners={data:[],end:[],error:[]},this.previous=null}n.prototype={push:function(e){this.emit(\"data\",e)},end:function(){if(this.isFinished)return!1;this.flush();try{this.emit(\"end\"),this.cleanUp(),this.isFinished=!0}catch(e){this.emit(\"error\",e)}return!0},error:function(e){return!this.isFinished&&(this.isPaused?this.generatedError=e:(this.isFinished=!0,this.emit(\"error\",e),this.previous&&this.previous.error(e),this.cleanUp()),!0)},on:function(e,t){return this._listeners[e].push(t),this},cleanUp:function(){this.streamInfo=this.generatedError=this.extraStreamInfo=null,this._listeners=[]},emit:function(e,t){if(this._listeners[e])for(var r=0;r<this._listeners[e].length;r++)this._listeners[e][r].call(this,t)},pipe:function(e){return e.registerPrevious(this)},registerPrevious:function(e){if(this.isLocked)throw new Error(\"The stream '\"+this+\"' has already been used.\");this.streamInfo=e.streamInfo,this.mergeStreamInfo(),this.previous=e;var t=this;return e.on(\"data\",function(e){t.processChunk(e)}),e.on(\"end\",function(){t.end()}),e.on(\"error\",function(e){t.error(e)}),this},pause:function(){return!this.isPaused&&!this.isFinished&&(this.isPaused=!0,this.previous&&this.previous.pause(),!0)},resume:function(){if(!this.isPaused||this.isFinished)return!1;var e=this.isPaused=!1;return this.generatedError&&(this.error(this.generatedError),e=!0),this.previous&&this.previous.resume(),!e},flush:function(){},processChunk:function(e){this.push(e)},withStreamInfo:function(e,t){return this.extraStreamInfo[e]=t,this.mergeStreamInfo(),this},mergeStreamInfo:function(){for(var e in this.extraStreamInfo)Object.prototype.hasOwnProperty.call(this.extraStreamInfo,e)&&(this.streamInfo[e]=this.extraStreamInfo[e])},lock:function(){if(this.isLocked)throw new Error(\"The stream '\"+this+\"' has already been used.\");this.isLocked=!0,this.previous&&this.previous.lock()},toString:function(){var e=\"Worker \"+this.name;return this.previous?this.previous+\" -> \"+e:e}},t.exports=n},{}],29:[function(e,t,r){\"use strict\";var h=e(\"../utils\"),i=e(\"./ConvertWorker\"),s=e(\"./GenericWorker\"),u=e(\"../base64\"),n=e(\"../support\"),a=e(\"../external\"),o=null;if(n.nodestream)try{o=e(\"../nodejs/NodejsStreamOutputAdapter\")}catch(e){}function l(e,o){return new a.Promise(function(t,r){var n=[],i=e._internalType,s=e._outputType,a=e._mimeType;e.on(\"data\",function(e,t){n.push(e),o&&o(t)}).on(\"error\",function(e){n=[],r(e)}).on(\"end\",function(){try{var e=function(e,t,r){switch(e){case\"blob\":return h.newBlob(h.transformTo(\"arraybuffer\",t),r);case\"base64\":return u.encode(t);default:return h.transformTo(e,t)}}(s,function(e,t){var r,n=0,i=null,s=0;for(r=0;r<t.length;r++)s+=t[r].length;switch(e){case\"string\":return t.join(\"\");case\"array\":return Array.prototype.concat.apply([],t);case\"uint8array\":for(i=new Uint8Array(s),r=0;r<t.length;r++)i.set(t[r],n),n+=t[r].length;return i;case\"nodebuffer\":return Buffer.concat(t);default:throw new Error(\"concat : unsupported type '\"+e+\"'\")}}(i,n),a);t(e)}catch(e){r(e)}n=[]}).resume()})}function f(e,t,r){var n=t;switch(t){case\"blob\":case\"arraybuffer\":n=\"uint8array\";break;case\"base64\":n=\"string\"}try{this._internalType=n,this._outputType=t,this._mimeType=r,h.checkSupport(n),this._worker=e.pipe(new i(n)),e.lock()}catch(e){this._worker=new s(\"error\"),this._worker.error(e)}}f.prototype={accumulate:function(e){return l(this,e)},on:function(e,t){var r=this;return\"data\"===e?this._worker.on(e,function(e){t.call(r,e.data,e.meta)}):this._worker.on(e,function(){h.delay(t,arguments,r)}),this},resume:function(){return h.delay(this._worker.resume,[],this._worker),this},pause:function(){return this._worker.pause(),this},toNodejsStream:function(e){if(h.checkSupport(\"nodestream\"),\"nodebuffer\"!==this._outputType)throw new Error(this._outputType+\" is not supported by this method\");return new o(this,{objectMode:\"nodebuffer\"!==this._outputType},e)}},t.exports=f},{\"../base64\":1,\"../external\":6,\"../nodejs/NodejsStreamOutputAdapter\":13,\"../support\":30,\"../utils\":32,\"./ConvertWorker\":24,\"./GenericWorker\":28}],30:[function(e,t,r){\"use strict\";if(r.base64=!0,r.array=!0,r.string=!0,r.arraybuffer=\"undefined\"!=typeof ArrayBuffer&&\"undefined\"!=typeof Uint8Array,r.nodebuffer=\"undefined\"!=typeof Buffer,r.uint8array=\"undefined\"!=typeof Uint8Array,\"undefined\"==typeof ArrayBuffer)r.blob=!1;else{var n=new ArrayBuffer(0);try{r.blob=0===new Blob([n],{type:\"application/zip\"}).size}catch(e){try{var i=new(self.BlobBuilder||self.WebKitBlobBuilder||self.MozBlobBuilder||self.MSBlobBuilder);i.append(n),r.blob=0===i.getBlob(\"application/zip\").size}catch(e){r.blob=!1}}}try{r.nodestream=!!e(\"readable-stream\").Readable}catch(e){r.nodestream=!1}},{\"readable-stream\":16}],31:[function(e,t,s){\"use strict\";for(var o=e(\"./utils\"),h=e(\"./support\"),r=e(\"./nodejsUtils\"),n=e(\"./stream/GenericWorker\"),u=new Array(256),i=0;i<256;i++)u[i]=252<=i?6:248<=i?5:240<=i?4:224<=i?3:192<=i?2:1;u[254]=u[254]=1;function a(){n.call(this,\"utf-8 decode\"),this.leftOver=null}function l(){n.call(this,\"utf-8 encode\")}s.utf8encode=function(e){return h.nodebuffer?r.newBufferFrom(e,\"utf-8\"):function(e){var t,r,n,i,s,a=e.length,o=0;for(i=0;i<a;i++)55296==(64512&(r=e.charCodeAt(i)))&&i+1<a&&56320==(64512&(n=e.charCodeAt(i+1)))&&(r=65536+(r-55296<<10)+(n-56320),i++),o+=r<128?1:r<2048?2:r<65536?3:4;for(t=h.uint8array?new Uint8Array(o):new Array(o),i=s=0;s<o;i++)55296==(64512&(r=e.charCodeAt(i)))&&i+1<a&&56320==(64512&(n=e.charCodeAt(i+1)))&&(r=65536+(r-55296<<10)+(n-56320),i++),r<128?t[s++]=r:(r<2048?t[s++]=192|r>>>6:(r<65536?t[s++]=224|r>>>12:(t[s++]=240|r>>>18,t[s++]=128|r>>>12&63),t[s++]=128|r>>>6&63),t[s++]=128|63&r);return t}(e)},s.utf8decode=function(e){return h.nodebuffer?o.transformTo(\"nodebuffer\",e).toString(\"utf-8\"):function(e){var t,r,n,i,s=e.length,a=new Array(2*s);for(t=r=0;t<s;)if((n=e[t++])<128)a[r++]=n;else if(4<(i=u[n]))a[r++]=65533,t+=i-1;else{for(n&=2===i?31:3===i?15:7;1<i&&t<s;)n=n<<6|63&e[t++],i--;1<i?a[r++]=65533:n<65536?a[r++]=n:(n-=65536,a[r++]=55296|n>>10&1023,a[r++]=56320|1023&n)}return a.length!==r&&(a.subarray?a=a.subarray(0,r):a.length=r),o.applyFromCharCode(a)}(e=o.transformTo(h.uint8array?\"uint8array\":\"array\",e))},o.inherits(a,n),a.prototype.processChunk=function(e){var t=o.transformTo(h.uint8array?\"uint8array\":\"array\",e.data);if(this.leftOver&&this.leftOver.length){if(h.uint8array){var r=t;(t=new Uint8Array(r.length+this.leftOver.length)).set(this.leftOver,0),t.set(r,this.leftOver.length)}else t=this.leftOver.concat(t);this.leftOver=null}var n=function(e,t){var r;for((t=t||e.length)>e.length&&(t=e.length),r=t-1;0<=r&&128==(192&e[r]);)r--;return r<0?t:0===r?t:r+u[e[r]]>t?r:t}(t),i=t;n!==t.length&&(h.uint8array?(i=t.subarray(0,n),this.leftOver=t.subarray(n,t.length)):(i=t.slice(0,n),this.leftOver=t.slice(n,t.length))),this.push({data:s.utf8decode(i),meta:e.meta})},a.prototype.flush=function(){this.leftOver&&this.leftOver.length&&(this.push({data:s.utf8decode(this.leftOver),meta:{}}),this.leftOver=null)},s.Utf8DecodeWorker=a,o.inherits(l,n),l.prototype.processChunk=function(e){this.push({data:s.utf8encode(e.data),meta:e.meta})},s.Utf8EncodeWorker=l},{\"./nodejsUtils\":14,\"./stream/GenericWorker\":28,\"./support\":30,\"./utils\":32}],32:[function(e,t,a){\"use strict\";var o=e(\"./support\"),h=e(\"./base64\"),r=e(\"./nodejsUtils\"),u=e(\"./external\");function n(e){return e}function l(e,t){for(var r=0;r<e.length;++r)t[r]=255&e.charCodeAt(r);return t}e(\"setimmediate\"),a.newBlob=function(t,r){a.checkSupport(\"blob\");try{return new Blob([t],{type:r})}catch(e){try{var n=new(self.BlobBuilder||self.WebKitBlobBuilder||self.MozBlobBuilder||self.MSBlobBuilder);return n.append(t),n.getBlob(r)}catch(e){throw new Error(\"Bug : can't construct the Blob.\")}}};var i={stringifyByChunk:function(e,t,r){var n=[],i=0,s=e.length;if(s<=r)return String.fromCharCode.apply(null,e);for(;i<s;)\"array\"===t||\"nodebuffer\"===t?n.push(String.fromCharCode.apply(null,e.slice(i,Math.min(i+r,s)))):n.push(String.fromCharCode.apply(null,e.subarray(i,Math.min(i+r,s)))),i+=r;return n.join(\"\")},stringifyByChar:function(e){for(var t=\"\",r=0;r<e.length;r++)t+=String.fromCharCode(e[r]);return t},applyCanBeUsed:{uint8array:function(){try{return o.uint8array&&1===String.fromCharCode.apply(null,new Uint8Array(1)).length}catch(e){return!1}}(),nodebuffer:function(){try{return o.nodebuffer&&1===String.fromCharCode.apply(null,r.allocBuffer(1)).length}catch(e){return!1}}()}};function s(e){var t=65536,r=a.getTypeOf(e),n=!0;if(\"uint8array\"===r?n=i.applyCanBeUsed.uint8array:\"nodebuffer\"===r&&(n=i.applyCanBeUsed.nodebuffer),n)for(;1<t;)try{return i.stringifyByChunk(e,r,t)}catch(e){t=Math.floor(t/2)}return i.stringifyByChar(e)}function f(e,t){for(var r=0;r<e.length;r++)t[r]=e[r];return t}a.applyFromCharCode=s;var c={};c.string={string:n,array:function(e){return l(e,new Array(e.length))},arraybuffer:function(e){return c.string.uint8array(e).buffer},uint8array:function(e){return l(e,new Uint8Array(e.length))},nodebuffer:function(e){return l(e,r.allocBuffer(e.length))}},c.array={string:s,array:n,arraybuffer:function(e){return new Uint8Array(e).buffer},uint8array:function(e){return new Uint8Array(e)},nodebuffer:function(e){return r.newBufferFrom(e)}},c.arraybuffer={string:function(e){return s(new Uint8Array(e))},array:function(e){return f(new Uint8Array(e),new Array(e.byteLength))},arraybuffer:n,uint8array:function(e){return new Uint8Array(e)},nodebuffer:function(e){return r.newBufferFrom(new Uint8Array(e))}},c.uint8array={string:s,array:function(e){return f(e,new Array(e.length))},arraybuffer:function(e){return e.buffer},uint8array:n,nodebuffer:function(e){return r.newBufferFrom(e)}},c.nodebuffer={string:s,array:function(e){return f(e,new Array(e.length))},arraybuffer:function(e){return c.nodebuffer.uint8array(e).buffer},uint8array:function(e){return f(e,new Uint8Array(e.length))},nodebuffer:n},a.transformTo=function(e,t){if(t=t||\"\",!e)return t;a.checkSupport(e);var r=a.getTypeOf(t);return c[r][e](t)},a.resolve=function(e){for(var t=e.split(\"/\"),r=[],n=0;n<t.length;n++){var i=t[n];\".\"===i||\"\"===i&&0!==n&&n!==t.length-1||(\"..\"===i?r.pop():r.push(i))}return r.join(\"/\")},a.getTypeOf=function(e){return\"string\"==typeof e?\"string\":\"[object Array]\"===Object.prototype.toString.call(e)?\"array\":o.nodebuffer&&r.isBuffer(e)?\"nodebuffer\":o.uint8array&&e instanceof Uint8Array?\"uint8array\":o.arraybuffer&&e instanceof ArrayBuffer?\"arraybuffer\":void 0},a.checkSupport=function(e){if(!o[e.toLowerCase()])throw new Error(e+\" is not supported by this platform\")},a.MAX_VALUE_16BITS=65535,a.MAX_VALUE_32BITS=-1,a.pretty=function(e){var t,r,n=\"\";for(r=0;r<(e||\"\").length;r++)n+=\"\\\\x\"+((t=e.charCodeAt(r))<16?\"0\":\"\")+t.toString(16).toUpperCase();return n},a.delay=function(e,t,r){setImmediate(function(){e.apply(r||null,t||[])})},a.inherits=function(e,t){function r(){}r.prototype=t.prototype,e.prototype=new r},a.extend=function(){var e,t,r={};for(e=0;e<arguments.length;e++)for(t in arguments[e])Object.prototype.hasOwnProperty.call(arguments[e],t)&&void 0===r[t]&&(r[t]=arguments[e][t]);return r},a.prepareContent=function(r,e,n,i,s){return u.Promise.resolve(e).then(function(n){return o.blob&&(n instanceof Blob||-1!==[\"[object File]\",\"[object Blob]\"].indexOf(Object.prototype.toString.call(n)))&&\"undefined\"!=typeof FileReader?new u.Promise(function(t,r){var e=new FileReader;e.onload=function(e){t(e.target.result)},e.onerror=function(e){r(e.target.error)},e.readAsArrayBuffer(n)}):n}).then(function(e){var t=a.getTypeOf(e);return t?(\"arraybuffer\"===t?e=a.transformTo(\"uint8array\",e):\"string\"===t&&(s?e=h.decode(e):n&&!0!==i&&(e=function(e){return l(e,o.uint8array?new Uint8Array(e.length):new Array(e.length))}(e))),e):u.Promise.reject(new Error(\"Can't read the data of '\"+r+\"'. Is it in a supported JavaScript type (String, Blob, ArrayBuffer, etc) ?\"))})}},{\"./base64\":1,\"./external\":6,\"./nodejsUtils\":14,\"./support\":30,setimmediate:54}],33:[function(e,t,r){\"use strict\";var n=e(\"./reader/readerFor\"),i=e(\"./utils\"),s=e(\"./signature\"),a=e(\"./zipEntry\"),o=e(\"./support\");function h(e){this.files=[],this.loadOptions=e}h.prototype={checkSignature:function(e){if(!this.reader.readAndCheckSignature(e)){this.reader.index-=4;var t=this.reader.readString(4);throw new Error(\"Corrupted zip or bug: unexpected signature (\"+i.pretty(t)+\", expected \"+i.pretty(e)+\")\")}},isSignature:function(e,t){var r=this.reader.index;this.reader.setIndex(e);var n=this.reader.readString(4)===t;return this.reader.setIndex(r),n},readBlockEndOfCentral:function(){this.diskNumber=this.reader.readInt(2),this.diskWithCentralDirStart=this.reader.readInt(2),this.centralDirRecordsOnThisDisk=this.reader.readInt(2),this.centralDirRecords=this.reader.readInt(2),this.centralDirSize=this.reader.readInt(4),this.centralDirOffset=this.reader.readInt(4),this.zipCommentLength=this.reader.readInt(2);var e=this.reader.readData(this.zipCommentLength),t=o.uint8array?\"uint8array\":\"array\",r=i.transformTo(t,e);this.zipComment=this.loadOptions.decodeFileName(r)},readBlockZip64EndOfCentral:function(){this.zip64EndOfCentralSize=this.reader.readInt(8),this.reader.skip(4),this.diskNumber=this.reader.readInt(4),this.diskWithCentralDirStart=this.reader.readInt(4),this.centralDirRecordsOnThisDisk=this.reader.readInt(8),this.centralDirRecords=this.reader.readInt(8),this.centralDirSize=this.reader.readInt(8),this.centralDirOffset=this.reader.readInt(8),this.zip64ExtensibleData={};for(var e,t,r,n=this.zip64EndOfCentralSize-44;0<n;)e=this.reader.readInt(2),t=this.reader.readInt(4),r=this.reader.readData(t),this.zip64ExtensibleData[e]={id:e,length:t,value:r}},readBlockZip64EndOfCentralLocator:function(){if(this.diskWithZip64CentralDirStart=this.reader.readInt(4),this.relativeOffsetEndOfZip64CentralDir=this.reader.readInt(8),this.disksCount=this.reader.readInt(4),1<this.disksCount)throw new Error(\"Multi-volumes zip are not supported\")},readLocalFiles:function(){var e,t;for(e=0;e<this.files.length;e++)t=this.files[e],this.reader.setIndex(t.localHeaderOffset),this.checkSignature(s.LOCAL_FILE_HEADER),t.readLocalPart(this.reader),t.handleUTF8(),t.processAttributes()},readCentralDir:function(){var e;for(this.reader.setIndex(this.centralDirOffset);this.reader.readAndCheckSignature(s.CENTRAL_FILE_HEADER);)(e=new a({zip64:this.zip64},this.loadOptions)).readCentralPart(this.reader),this.files.push(e);if(this.centralDirRecords!==this.files.length&&0!==this.centralDirRecords&&0===this.files.length)throw new Error(\"Corrupted zip or bug: expected \"+this.centralDirRecords+\" records in central dir, got \"+this.files.length)},readEndOfCentral:function(){var e=this.reader.lastIndexOfSignature(s.CENTRAL_DIRECTORY_END);if(e<0)throw!this.isSignature(0,s.LOCAL_FILE_HEADER)?new Error(\"Can't find end of central directory : is this a zip file ? If it is, see https://stuk.github.io/jszip/documentation/howto/read_zip.html\"):new Error(\"Corrupted zip: can't find end of central directory\");this.reader.setIndex(e);var t=e;if(this.checkSignature(s.CENTRAL_DIRECTORY_END),this.readBlockEndOfCentral(),this.diskNumber===i.MAX_VALUE_16BITS||this.diskWithCentralDirStart===i.MAX_VALUE_16BITS||this.centralDirRecordsOnThisDisk===i.MAX_VALUE_16BITS||this.centralDirRecords===i.MAX_VALUE_16BITS||this.centralDirSize===i.MAX_VALUE_32BITS||this.centralDirOffset===i.MAX_VALUE_32BITS){if(this.zip64=!0,(e=this.reader.lastIndexOfSignature(s.ZIP64_CENTRAL_DIRECTORY_LOCATOR))<0)throw new Error(\"Corrupted zip: can't find the ZIP64 end of central directory locator\");if(this.reader.setIndex(e),this.checkSignature(s.ZIP64_CENTRAL_DIRECTORY_LOCATOR),this.readBlockZip64EndOfCentralLocator(),!this.isSignature(this.relativeOffsetEndOfZip64CentralDir,s.ZIP64_CENTRAL_DIRECTORY_END)&&(this.relativeOffsetEndOfZip64CentralDir=this.reader.lastIndexOfSignature(s.ZIP64_CENTRAL_DIRECTORY_END),this.relativeOffsetEndOfZip64CentralDir<0))throw new Error(\"Corrupted zip: can't find the ZIP64 end of central directory\");this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir),this.checkSignature(s.ZIP64_CENTRAL_DIRECTORY_END),this.readBlockZip64EndOfCentral()}var r=this.centralDirOffset+this.centralDirSize;this.zip64&&(r+=20,r+=12+this.zip64EndOfCentralSize);var n=t-r;if(0<n)this.isSignature(t,s.CENTRAL_FILE_HEADER)||(this.reader.zero=n);else if(n<0)throw new Error(\"Corrupted zip: missing \"+Math.abs(n)+\" bytes.\")},prepareReader:function(e){this.reader=n(e)},load:function(e){this.prepareReader(e),this.readEndOfCentral(),this.readCentralDir(),this.readLocalFiles()}},t.exports=h},{\"./reader/readerFor\":22,\"./signature\":23,\"./support\":30,\"./utils\":32,\"./zipEntry\":34}],34:[function(e,t,r){\"use strict\";var n=e(\"./reader/readerFor\"),s=e(\"./utils\"),i=e(\"./compressedObject\"),a=e(\"./crc32\"),o=e(\"./utf8\"),h=e(\"./compressions\"),u=e(\"./support\");function l(e,t){this.options=e,this.loadOptions=t}l.prototype={isEncrypted:function(){return 1==(1&this.bitFlag)},useUTF8:function(){return 2048==(2048&this.bitFlag)},readLocalPart:function(e){var t,r;if(e.skip(22),this.fileNameLength=e.readInt(2),r=e.readInt(2),this.fileName=e.readData(this.fileNameLength),e.skip(r),-1===this.compressedSize||-1===this.uncompressedSize)throw new Error(\"Bug or corrupted zip : didn't get enough information from the central directory (compressedSize === -1 || uncompressedSize === -1)\");if(null===(t=function(e){for(var t in h)if(Object.prototype.hasOwnProperty.call(h,t)&&h[t].magic===e)return h[t];return null}(this.compressionMethod)))throw new Error(\"Corrupted zip : compression \"+s.pretty(this.compressionMethod)+\" unknown (inner file : \"+s.transformTo(\"string\",this.fileName)+\")\");this.decompressed=new i(this.compressedSize,this.uncompressedSize,this.crc32,t,e.readData(this.compressedSize))},readCentralPart:function(e){this.versionMadeBy=e.readInt(2),e.skip(2),this.bitFlag=e.readInt(2),this.compressionMethod=e.readString(2),this.date=e.readDate(),this.crc32=e.readInt(4),this.compressedSize=e.readInt(4),this.uncompressedSize=e.readInt(4);var t=e.readInt(2);if(this.extraFieldsLength=e.readInt(2),this.fileCommentLength=e.readInt(2),this.diskNumberStart=e.readInt(2),this.internalFileAttributes=e.readInt(2),this.externalFileAttributes=e.readInt(4),this.localHeaderOffset=e.readInt(4),this.isEncrypted())throw new Error(\"Encrypted zip are not supported\");e.skip(t),this.readExtraFields(e),this.parseZIP64ExtraField(e),this.fileComment=e.readData(this.fileCommentLength)},processAttributes:function(){this.unixPermissions=null,this.dosPermissions=null;var e=this.versionMadeBy>>8;this.dir=!!(16&this.externalFileAttributes),0==e&&(this.dosPermissions=63&this.externalFileAttributes),3==e&&(this.unixPermissions=this.externalFileAttributes>>16&65535),this.dir||\"/\"!==this.fileNameStr.slice(-1)||(this.dir=!0)},parseZIP64ExtraField:function(){if(this.extraFields[1]){var e=n(this.extraFields[1].value);this.uncompressedSize===s.MAX_VALUE_32BITS&&(this.uncompressedSize=e.readInt(8)),this.compressedSize===s.MAX_VALUE_32BITS&&(this.compressedSize=e.readInt(8)),this.localHeaderOffset===s.MAX_VALUE_32BITS&&(this.localHeaderOffset=e.readInt(8)),this.diskNumberStart===s.MAX_VALUE_32BITS&&(this.diskNumberStart=e.readInt(4))}},readExtraFields:function(e){var t,r,n,i=e.index+this.extraFieldsLength;for(this.extraFields||(this.extraFields={});e.index+4<i;)t=e.readInt(2),r=e.readInt(2),n=e.readData(r),this.extraFields[t]={id:t,length:r,value:n};e.setIndex(i)},handleUTF8:function(){var e=u.uint8array?\"uint8array\":\"array\";if(this.useUTF8())this.fileNameStr=o.utf8decode(this.fileName),this.fileCommentStr=o.utf8decode(this.fileComment);else{var t=this.findExtraFieldUnicodePath();if(null!==t)this.fileNameStr=t;else{var r=s.transformTo(e,this.fileName);this.fileNameStr=this.loadOptions.decodeFileName(r)}var n=this.findExtraFieldUnicodeComment();if(null!==n)this.fileCommentStr=n;else{var i=s.transformTo(e,this.fileComment);this.fileCommentStr=this.loadOptions.decodeFileName(i)}}},findExtraFieldUnicodePath:function(){var e=this.extraFields[28789];if(e){var t=n(e.value);return 1!==t.readInt(1)?null:a(this.fileName)!==t.readInt(4)?null:o.utf8decode(t.readData(e.length-5))}return null},findExtraFieldUnicodeComment:function(){var e=this.extraFields[25461];if(e){var t=n(e.value);return 1!==t.readInt(1)?null:a(this.fileComment)!==t.readInt(4)?null:o.utf8decode(t.readData(e.length-5))}return null}},t.exports=l},{\"./compressedObject\":2,\"./compressions\":3,\"./crc32\":4,\"./reader/readerFor\":22,\"./support\":30,\"./utf8\":31,\"./utils\":32}],35:[function(e,t,r){\"use strict\";function n(e,t,r){this.name=e,this.dir=r.dir,this.date=r.date,this.comment=r.comment,this.unixPermissions=r.unixPermissions,this.dosPermissions=r.dosPermissions,this._data=t,this._dataBinary=r.binary,this.options={compression:r.compression,compressionOptions:r.compressionOptions}}var s=e(\"./stream/StreamHelper\"),i=e(\"./stream/DataWorker\"),a=e(\"./utf8\"),o=e(\"./compressedObject\"),h=e(\"./stream/GenericWorker\");n.prototype={internalStream:function(e){var t=null,r=\"string\";try{if(!e)throw new Error(\"No output type specified.\");var n=\"string\"===(r=e.toLowerCase())||\"text\"===r;\"binarystring\"!==r&&\"text\"!==r||(r=\"string\"),t=this._decompressWorker();var i=!this._dataBinary;i&&!n&&(t=t.pipe(new a.Utf8EncodeWorker)),!i&&n&&(t=t.pipe(new a.Utf8DecodeWorker))}catch(e){(t=new h(\"error\")).error(e)}return new s(t,r,\"\")},async:function(e,t){return this.internalStream(e).accumulate(t)},nodeStream:function(e,t){return this.internalStream(e||\"nodebuffer\").toNodejsStream(t)},_compressWorker:function(e,t){if(this._data instanceof o&&this._data.compression.magic===e.magic)return this._data.getCompressedWorker();var r=this._decompressWorker();return this._dataBinary||(r=r.pipe(new a.Utf8EncodeWorker)),o.createWorkerFrom(r,e,t)},_decompressWorker:function(){return this._data instanceof o?this._data.getContentWorker():this._data instanceof h?this._data:new i(this._data)}};for(var u=[\"asText\",\"asBinary\",\"asNodeBuffer\",\"asUint8Array\",\"asArrayBuffer\"],l=function(){throw new Error(\"This method has been removed in JSZip 3.0, please check the upgrade guide.\")},f=0;f<u.length;f++)n.prototype[u[f]]=l;t.exports=n},{\"./compressedObject\":2,\"./stream/DataWorker\":27,\"./stream/GenericWorker\":28,\"./stream/StreamHelper\":29,\"./utf8\":31}],36:[function(e,l,t){(function(t){\"use strict\";var r,n,e=t.MutationObserver||t.WebKitMutationObserver;if(e){var i=0,s=new e(u),a=t.document.createTextNode(\"\");s.observe(a,{characterData:!0}),r=function(){a.data=i=++i%2}}else if(t.setImmediate||void 0===t.MessageChannel)r=\"document\"in t&&\"onreadystatechange\"in t.document.createElement(\"script\")?function(){var e=t.document.createElement(\"script\");e.onreadystatechange=function(){u(),e.onreadystatechange=null,e.parentNode.removeChild(e),e=null},t.document.documentElement.appendChild(e)}:function(){setTimeout(u,0)};else{var o=new t.MessageChannel;o.port1.onmessage=u,r=function(){o.port2.postMessage(0)}}var h=[];function u(){var e,t;n=!0;for(var r=h.length;r;){for(t=h,h=[],e=-1;++e<r;)t[e]();r=h.length}n=!1}l.exports=function(e){1!==h.push(e)||n||r()}}).call(this,\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{})},{}],37:[function(e,t,r){\"use strict\";var i=e(\"immediate\");function u(){}var l={},s=[\"REJECTED\"],a=[\"FULFILLED\"],n=[\"PENDING\"];function o(e){if(\"function\"!=typeof e)throw new TypeError(\"resolver must be a function\");this.state=n,this.queue=[],this.outcome=void 0,e!==u&&d(this,e)}function h(e,t,r){this.promise=e,\"function\"==typeof t&&(this.onFulfilled=t,this.callFulfilled=this.otherCallFulfilled),\"function\"==typeof r&&(this.onRejected=r,this.callRejected=this.otherCallRejected)}function f(t,r,n){i(function(){var e;try{e=r(n)}catch(e){return l.reject(t,e)}e===t?l.reject(t,new TypeError(\"Cannot resolve promise with itself\")):l.resolve(t,e)})}function c(e){var t=e&&e.then;if(e&&(\"object\"==typeof e||\"function\"==typeof e)&&\"function\"==typeof t)return function(){t.apply(e,arguments)}}function d(t,e){var r=!1;function n(e){r||(r=!0,l.reject(t,e))}function i(e){r||(r=!0,l.resolve(t,e))}var s=p(function(){e(i,n)});\"error\"===s.status&&n(s.value)}function p(e,t){var r={};try{r.value=e(t),r.status=\"success\"}catch(e){r.status=\"error\",r.value=e}return r}(t.exports=o).prototype.finally=function(t){if(\"function\"!=typeof t)return this;var r=this.constructor;return this.then(function(e){return r.resolve(t()).then(function(){return e})},function(e){return r.resolve(t()).then(function(){throw e})})},o.prototype.catch=function(e){return this.then(null,e)},o.prototype.then=function(e,t){if(\"function\"!=typeof e&&this.state===a||\"function\"!=typeof t&&this.state===s)return this;var r=new this.constructor(u);this.state!==n?f(r,this.state===a?e:t,this.outcome):this.queue.push(new h(r,e,t));return r},h.prototype.callFulfilled=function(e){l.resolve(this.promise,e)},h.prototype.otherCallFulfilled=function(e){f(this.promise,this.onFulfilled,e)},h.prototype.callRejected=function(e){l.reject(this.promise,e)},h.prototype.otherCallRejected=function(e){f(this.promise,this.onRejected,e)},l.resolve=function(e,t){var r=p(c,t);if(\"error\"===r.status)return l.reject(e,r.value);var n=r.value;if(n)d(e,n);else{e.state=a,e.outcome=t;for(var i=-1,s=e.queue.length;++i<s;)e.queue[i].callFulfilled(t)}return e},l.reject=function(e,t){e.state=s,e.outcome=t;for(var r=-1,n=e.queue.length;++r<n;)e.queue[r].callRejected(t);return e},o.resolve=function(e){if(e instanceof this)return e;return l.resolve(new this(u),e)},o.reject=function(e){var t=new this(u);return l.reject(t,e)},o.all=function(e){var r=this;if(\"[object Array]\"!==Object.prototype.toString.call(e))return this.reject(new TypeError(\"must be an array\"));var n=e.length,i=!1;if(!n)return this.resolve([]);var s=new Array(n),a=0,t=-1,o=new this(u);for(;++t<n;)h(e[t],t);return o;function h(e,t){r.resolve(e).then(function(e){s[t]=e,++a!==n||i||(i=!0,l.resolve(o,s))},function(e){i||(i=!0,l.reject(o,e))})}},o.race=function(e){var t=this;if(\"[object Array]\"!==Object.prototype.toString.call(e))return this.reject(new TypeError(\"must be an array\"));var r=e.length,n=!1;if(!r)return this.resolve([]);var i=-1,s=new this(u);for(;++i<r;)a=e[i],t.resolve(a).then(function(e){n||(n=!0,l.resolve(s,e))},function(e){n||(n=!0,l.reject(s,e))});var a;return s}},{immediate:36}],38:[function(e,t,r){\"use strict\";var n={};(0,e(\"./lib/utils/common\").assign)(n,e(\"./lib/deflate\"),e(\"./lib/inflate\"),e(\"./lib/zlib/constants\")),t.exports=n},{\"./lib/deflate\":39,\"./lib/inflate\":40,\"./lib/utils/common\":41,\"./lib/zlib/constants\":44}],39:[function(e,t,r){\"use strict\";var a=e(\"./zlib/deflate\"),o=e(\"./utils/common\"),h=e(\"./utils/strings\"),i=e(\"./zlib/messages\"),s=e(\"./zlib/zstream\"),u=Object.prototype.toString,l=0,f=-1,c=0,d=8;function p(e){if(!(this instanceof p))return new p(e);this.options=o.assign({level:f,method:d,chunkSize:16384,windowBits:15,memLevel:8,strategy:c,to:\"\"},e||{});var t=this.options;t.raw&&0<t.windowBits?t.windowBits=-t.windowBits:t.gzip&&0<t.windowBits&&t.windowBits<16&&(t.windowBits+=16),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new s,this.strm.avail_out=0;var r=a.deflateInit2(this.strm,t.level,t.method,t.windowBits,t.memLevel,t.strategy);if(r!==l)throw new Error(i[r]);if(t.header&&a.deflateSetHeader(this.strm,t.header),t.dictionary){var n;if(n=\"string\"==typeof t.dictionary?h.string2buf(t.dictionary):\"[object ArrayBuffer]\"===u.call(t.dictionary)?new Uint8Array(t.dictionary):t.dictionary,(r=a.deflateSetDictionary(this.strm,n))!==l)throw new Error(i[r]);this._dict_set=!0}}function n(e,t){var r=new p(t);if(r.push(e,!0),r.err)throw r.msg||i[r.err];return r.result}p.prototype.push=function(e,t){var r,n,i=this.strm,s=this.options.chunkSize;if(this.ended)return!1;n=t===~~t?t:!0===t?4:0,\"string\"==typeof e?i.input=h.string2buf(e):\"[object ArrayBuffer]\"===u.call(e)?i.input=new Uint8Array(e):i.input=e,i.next_in=0,i.avail_in=i.input.length;do{if(0===i.avail_out&&(i.output=new o.Buf8(s),i.next_out=0,i.avail_out=s),1!==(r=a.deflate(i,n))&&r!==l)return this.onEnd(r),!(this.ended=!0);0!==i.avail_out&&(0!==i.avail_in||4!==n&&2!==n)||(\"string\"===this.options.to?this.onData(h.buf2binstring(o.shrinkBuf(i.output,i.next_out))):this.onData(o.shrinkBuf(i.output,i.next_out)))}while((0<i.avail_in||0===i.avail_out)&&1!==r);return 4===n?(r=a.deflateEnd(this.strm),this.onEnd(r),this.ended=!0,r===l):2!==n||(this.onEnd(l),!(i.avail_out=0))},p.prototype.onData=function(e){this.chunks.push(e)},p.prototype.onEnd=function(e){e===l&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=o.flattenChunks(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg},r.Deflate=p,r.deflate=n,r.deflateRaw=function(e,t){return(t=t||{}).raw=!0,n(e,t)},r.gzip=function(e,t){return(t=t||{}).gzip=!0,n(e,t)}},{\"./utils/common\":41,\"./utils/strings\":42,\"./zlib/deflate\":46,\"./zlib/messages\":51,\"./zlib/zstream\":53}],40:[function(e,t,r){\"use strict\";var c=e(\"./zlib/inflate\"),d=e(\"./utils/common\"),p=e(\"./utils/strings\"),m=e(\"./zlib/constants\"),n=e(\"./zlib/messages\"),i=e(\"./zlib/zstream\"),s=e(\"./zlib/gzheader\"),_=Object.prototype.toString;function a(e){if(!(this instanceof a))return new a(e);this.options=d.assign({chunkSize:16384,windowBits:0,to:\"\"},e||{});var t=this.options;t.raw&&0<=t.windowBits&&t.windowBits<16&&(t.windowBits=-t.windowBits,0===t.windowBits&&(t.windowBits=-15)),!(0<=t.windowBits&&t.windowBits<16)||e&&e.windowBits||(t.windowBits+=32),15<t.windowBits&&t.windowBits<48&&0==(15&t.windowBits)&&(t.windowBits|=15),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new i,this.strm.avail_out=0;var r=c.inflateInit2(this.strm,t.windowBits);if(r!==m.Z_OK)throw new Error(n[r]);this.header=new s,c.inflateGetHeader(this.strm,this.header)}function o(e,t){var r=new a(t);if(r.push(e,!0),r.err)throw r.msg||n[r.err];return r.result}a.prototype.push=function(e,t){var r,n,i,s,a,o,h=this.strm,u=this.options.chunkSize,l=this.options.dictionary,f=!1;if(this.ended)return!1;n=t===~~t?t:!0===t?m.Z_FINISH:m.Z_NO_FLUSH,\"string\"==typeof e?h.input=p.binstring2buf(e):\"[object ArrayBuffer]\"===_.call(e)?h.input=new Uint8Array(e):h.input=e,h.next_in=0,h.avail_in=h.input.length;do{if(0===h.avail_out&&(h.output=new d.Buf8(u),h.next_out=0,h.avail_out=u),(r=c.inflate(h,m.Z_NO_FLUSH))===m.Z_NEED_DICT&&l&&(o=\"string\"==typeof l?p.string2buf(l):\"[object ArrayBuffer]\"===_.call(l)?new Uint8Array(l):l,r=c.inflateSetDictionary(this.strm,o)),r===m.Z_BUF_ERROR&&!0===f&&(r=m.Z_OK,f=!1),r!==m.Z_STREAM_END&&r!==m.Z_OK)return this.onEnd(r),!(this.ended=!0);h.next_out&&(0!==h.avail_out&&r!==m.Z_STREAM_END&&(0!==h.avail_in||n!==m.Z_FINISH&&n!==m.Z_SYNC_FLUSH)||(\"string\"===this.options.to?(i=p.utf8border(h.output,h.next_out),s=h.next_out-i,a=p.buf2string(h.output,i),h.next_out=s,h.avail_out=u-s,s&&d.arraySet(h.output,h.output,i,s,0),this.onData(a)):this.onData(d.shrinkBuf(h.output,h.next_out)))),0===h.avail_in&&0===h.avail_out&&(f=!0)}while((0<h.avail_in||0===h.avail_out)&&r!==m.Z_STREAM_END);return r===m.Z_STREAM_END&&(n=m.Z_FINISH),n===m.Z_FINISH?(r=c.inflateEnd(this.strm),this.onEnd(r),this.ended=!0,r===m.Z_OK):n!==m.Z_SYNC_FLUSH||(this.onEnd(m.Z_OK),!(h.avail_out=0))},a.prototype.onData=function(e){this.chunks.push(e)},a.prototype.onEnd=function(e){e===m.Z_OK&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=d.flattenChunks(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg},r.Inflate=a,r.inflate=o,r.inflateRaw=function(e,t){return(t=t||{}).raw=!0,o(e,t)},r.ungzip=o},{\"./utils/common\":41,\"./utils/strings\":42,\"./zlib/constants\":44,\"./zlib/gzheader\":47,\"./zlib/inflate\":49,\"./zlib/messages\":51,\"./zlib/zstream\":53}],41:[function(e,t,r){\"use strict\";var n=\"undefined\"!=typeof Uint8Array&&\"undefined\"!=typeof Uint16Array&&\"undefined\"!=typeof Int32Array;r.assign=function(e){for(var t=Array.prototype.slice.call(arguments,1);t.length;){var r=t.shift();if(r){if(\"object\"!=typeof r)throw new TypeError(r+\"must be non-object\");for(var n in r)r.hasOwnProperty(n)&&(e[n]=r[n])}}return e},r.shrinkBuf=function(e,t){return e.length===t?e:e.subarray?e.subarray(0,t):(e.length=t,e)};var i={arraySet:function(e,t,r,n,i){if(t.subarray&&e.subarray)e.set(t.subarray(r,r+n),i);else for(var s=0;s<n;s++)e[i+s]=t[r+s]},flattenChunks:function(e){var t,r,n,i,s,a;for(t=n=0,r=e.length;t<r;t++)n+=e[t].length;for(a=new Uint8Array(n),t=i=0,r=e.length;t<r;t++)s=e[t],a.set(s,i),i+=s.length;return a}},s={arraySet:function(e,t,r,n,i){for(var s=0;s<n;s++)e[i+s]=t[r+s]},flattenChunks:function(e){return[].concat.apply([],e)}};r.setTyped=function(e){e?(r.Buf8=Uint8Array,r.Buf16=Uint16Array,r.Buf32=Int32Array,r.assign(r,i)):(r.Buf8=Array,r.Buf16=Array,r.Buf32=Array,r.assign(r,s))},r.setTyped(n)},{}],42:[function(e,t,r){\"use strict\";var h=e(\"./common\"),i=!0,s=!0;try{String.fromCharCode.apply(null,[0])}catch(e){i=!1}try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(e){s=!1}for(var u=new h.Buf8(256),n=0;n<256;n++)u[n]=252<=n?6:248<=n?5:240<=n?4:224<=n?3:192<=n?2:1;function l(e,t){if(t<65537&&(e.subarray&&s||!e.subarray&&i))return String.fromCharCode.apply(null,h.shrinkBuf(e,t));for(var r=\"\",n=0;n<t;n++)r+=String.fromCharCode(e[n]);return r}u[254]=u[254]=1,r.string2buf=function(e){var t,r,n,i,s,a=e.length,o=0;for(i=0;i<a;i++)55296==(64512&(r=e.charCodeAt(i)))&&i+1<a&&56320==(64512&(n=e.charCodeAt(i+1)))&&(r=65536+(r-55296<<10)+(n-56320),i++),o+=r<128?1:r<2048?2:r<65536?3:4;for(t=new h.Buf8(o),i=s=0;s<o;i++)55296==(64512&(r=e.charCodeAt(i)))&&i+1<a&&56320==(64512&(n=e.charCodeAt(i+1)))&&(r=65536+(r-55296<<10)+(n-56320),i++),r<128?t[s++]=r:(r<2048?t[s++]=192|r>>>6:(r<65536?t[s++]=224|r>>>12:(t[s++]=240|r>>>18,t[s++]=128|r>>>12&63),t[s++]=128|r>>>6&63),t[s++]=128|63&r);return t},r.buf2binstring=function(e){return l(e,e.length)},r.binstring2buf=function(e){for(var t=new h.Buf8(e.length),r=0,n=t.length;r<n;r++)t[r]=e.charCodeAt(r);return t},r.buf2string=function(e,t){var r,n,i,s,a=t||e.length,o=new Array(2*a);for(r=n=0;r<a;)if((i=e[r++])<128)o[n++]=i;else if(4<(s=u[i]))o[n++]=65533,r+=s-1;else{for(i&=2===s?31:3===s?15:7;1<s&&r<a;)i=i<<6|63&e[r++],s--;1<s?o[n++]=65533:i<65536?o[n++]=i:(i-=65536,o[n++]=55296|i>>10&1023,o[n++]=56320|1023&i)}return l(o,n)},r.utf8border=function(e,t){var r;for((t=t||e.length)>e.length&&(t=e.length),r=t-1;0<=r&&128==(192&e[r]);)r--;return r<0?t:0===r?t:r+u[e[r]]>t?r:t}},{\"./common\":41}],43:[function(e,t,r){\"use strict\";t.exports=function(e,t,r,n){for(var i=65535&e|0,s=e>>>16&65535|0,a=0;0!==r;){for(r-=a=2e3<r?2e3:r;s=s+(i=i+t[n++]|0)|0,--a;);i%=65521,s%=65521}return i|s<<16|0}},{}],44:[function(e,t,r){\"use strict\";t.exports={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8}},{}],45:[function(e,t,r){\"use strict\";var o=function(){for(var e,t=[],r=0;r<256;r++){e=r;for(var n=0;n<8;n++)e=1&e?3988292384^e>>>1:e>>>1;t[r]=e}return t}();t.exports=function(e,t,r,n){var i=o,s=n+r;e^=-1;for(var a=n;a<s;a++)e=e>>>8^i[255&(e^t[a])];return-1^e}},{}],46:[function(e,t,r){\"use strict\";var h,c=e(\"../utils/common\"),u=e(\"./trees\"),d=e(\"./adler32\"),p=e(\"./crc32\"),n=e(\"./messages\"),l=0,f=4,m=0,_=-2,g=-1,b=4,i=2,v=8,y=9,s=286,a=30,o=19,w=2*s+1,k=15,x=3,S=258,z=S+x+1,C=42,E=113,A=1,I=2,O=3,B=4;function R(e,t){return e.msg=n[t],t}function T(e){return(e<<1)-(4<e?9:0)}function D(e){for(var t=e.length;0<=--t;)e[t]=0}function F(e){var t=e.state,r=t.pending;r>e.avail_out&&(r=e.avail_out),0!==r&&(c.arraySet(e.output,t.pending_buf,t.pending_out,r,e.next_out),e.next_out+=r,t.pending_out+=r,e.total_out+=r,e.avail_out-=r,t.pending-=r,0===t.pending&&(t.pending_out=0))}function N(e,t){u._tr_flush_block(e,0<=e.block_start?e.block_start:-1,e.strstart-e.block_start,t),e.block_start=e.strstart,F(e.strm)}function U(e,t){e.pending_buf[e.pending++]=t}function P(e,t){e.pending_buf[e.pending++]=t>>>8&255,e.pending_buf[e.pending++]=255&t}function L(e,t){var r,n,i=e.max_chain_length,s=e.strstart,a=e.prev_length,o=e.nice_match,h=e.strstart>e.w_size-z?e.strstart-(e.w_size-z):0,u=e.window,l=e.w_mask,f=e.prev,c=e.strstart+S,d=u[s+a-1],p=u[s+a];e.prev_length>=e.good_match&&(i>>=2),o>e.lookahead&&(o=e.lookahead);do{if(u[(r=t)+a]===p&&u[r+a-1]===d&&u[r]===u[s]&&u[++r]===u[s+1]){s+=2,r++;do{}while(u[++s]===u[++r]&&u[++s]===u[++r]&&u[++s]===u[++r]&&u[++s]===u[++r]&&u[++s]===u[++r]&&u[++s]===u[++r]&&u[++s]===u[++r]&&u[++s]===u[++r]&&s<c);if(n=S-(c-s),s=c-S,a<n){if(e.match_start=t,o<=(a=n))break;d=u[s+a-1],p=u[s+a]}}}while((t=f[t&l])>h&&0!=--i);return a<=e.lookahead?a:e.lookahead}function j(e){var t,r,n,i,s,a,o,h,u,l,f=e.w_size;do{if(i=e.window_size-e.lookahead-e.strstart,e.strstart>=f+(f-z)){for(c.arraySet(e.window,e.window,f,f,0),e.match_start-=f,e.strstart-=f,e.block_start-=f,t=r=e.hash_size;n=e.head[--t],e.head[t]=f<=n?n-f:0,--r;);for(t=r=f;n=e.prev[--t],e.prev[t]=f<=n?n-f:0,--r;);i+=f}if(0===e.strm.avail_in)break;if(a=e.strm,o=e.window,h=e.strstart+e.lookahead,u=i,l=void 0,l=a.avail_in,u<l&&(l=u),r=0===l?0:(a.avail_in-=l,c.arraySet(o,a.input,a.next_in,l,h),1===a.state.wrap?a.adler=d(a.adler,o,l,h):2===a.state.wrap&&(a.adler=p(a.adler,o,l,h)),a.next_in+=l,a.total_in+=l,l),e.lookahead+=r,e.lookahead+e.insert>=x)for(s=e.strstart-e.insert,e.ins_h=e.window[s],e.ins_h=(e.ins_h<<e.hash_shift^e.window[s+1])&e.hash_mask;e.insert&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[s+x-1])&e.hash_mask,e.prev[s&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=s,s++,e.insert--,!(e.lookahead+e.insert<x)););}while(e.lookahead<z&&0!==e.strm.avail_in)}function Z(e,t){for(var r,n;;){if(e.lookahead<z){if(j(e),e.lookahead<z&&t===l)return A;if(0===e.lookahead)break}if(r=0,e.lookahead>=x&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+x-1])&e.hash_mask,r=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),0!==r&&e.strstart-r<=e.w_size-z&&(e.match_length=L(e,r)),e.match_length>=x)if(n=u._tr_tally(e,e.strstart-e.match_start,e.match_length-x),e.lookahead-=e.match_length,e.match_length<=e.max_lazy_match&&e.lookahead>=x){for(e.match_length--;e.strstart++,e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+x-1])&e.hash_mask,r=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart,0!=--e.match_length;);e.strstart++}else e.strstart+=e.match_length,e.match_length=0,e.ins_h=e.window[e.strstart],e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+1])&e.hash_mask;else n=u._tr_tally(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++;if(n&&(N(e,!1),0===e.strm.avail_out))return A}return e.insert=e.strstart<x-1?e.strstart:x-1,t===f?(N(e,!0),0===e.strm.avail_out?O:B):e.last_lit&&(N(e,!1),0===e.strm.avail_out)?A:I}function W(e,t){for(var r,n,i;;){if(e.lookahead<z){if(j(e),e.lookahead<z&&t===l)return A;if(0===e.lookahead)break}if(r=0,e.lookahead>=x&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+x-1])&e.hash_mask,r=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),e.prev_length=e.match_length,e.prev_match=e.match_start,e.match_length=x-1,0!==r&&e.prev_length<e.max_lazy_match&&e.strstart-r<=e.w_size-z&&(e.match_length=L(e,r),e.match_length<=5&&(1===e.strategy||e.match_length===x&&4096<e.strstart-e.match_start)&&(e.match_length=x-1)),e.prev_length>=x&&e.match_length<=e.prev_length){for(i=e.strstart+e.lookahead-x,n=u._tr_tally(e,e.strstart-1-e.prev_match,e.prev_length-x),e.lookahead-=e.prev_length-1,e.prev_length-=2;++e.strstart<=i&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+x-1])&e.hash_mask,r=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),0!=--e.prev_length;);if(e.match_available=0,e.match_length=x-1,e.strstart++,n&&(N(e,!1),0===e.strm.avail_out))return A}else if(e.match_available){if((n=u._tr_tally(e,0,e.window[e.strstart-1]))&&N(e,!1),e.strstart++,e.lookahead--,0===e.strm.avail_out)return A}else e.match_available=1,e.strstart++,e.lookahead--}return e.match_available&&(n=u._tr_tally(e,0,e.window[e.strstart-1]),e.match_available=0),e.insert=e.strstart<x-1?e.strstart:x-1,t===f?(N(e,!0),0===e.strm.avail_out?O:B):e.last_lit&&(N(e,!1),0===e.strm.avail_out)?A:I}function M(e,t,r,n,i){this.good_length=e,this.max_lazy=t,this.nice_length=r,this.max_chain=n,this.func=i}function H(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=v,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new c.Buf16(2*w),this.dyn_dtree=new c.Buf16(2*(2*a+1)),this.bl_tree=new c.Buf16(2*(2*o+1)),D(this.dyn_ltree),D(this.dyn_dtree),D(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new c.Buf16(k+1),this.heap=new c.Buf16(2*s+1),D(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new c.Buf16(2*s+1),D(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}function G(e){var t;return e&&e.state?(e.total_in=e.total_out=0,e.data_type=i,(t=e.state).pending=0,t.pending_out=0,t.wrap<0&&(t.wrap=-t.wrap),t.status=t.wrap?C:E,e.adler=2===t.wrap?0:1,t.last_flush=l,u._tr_init(t),m):R(e,_)}function K(e){var t=G(e);return t===m&&function(e){e.window_size=2*e.w_size,D(e.head),e.max_lazy_match=h[e.level].max_lazy,e.good_match=h[e.level].good_length,e.nice_match=h[e.level].nice_length,e.max_chain_length=h[e.level].max_chain,e.strstart=0,e.block_start=0,e.lookahead=0,e.insert=0,e.match_length=e.prev_length=x-1,e.match_available=0,e.ins_h=0}(e.state),t}function Y(e,t,r,n,i,s){if(!e)return _;var a=1;if(t===g&&(t=6),n<0?(a=0,n=-n):15<n&&(a=2,n-=16),i<1||y<i||r!==v||n<8||15<n||t<0||9<t||s<0||b<s)return R(e,_);8===n&&(n=9);var o=new H;return(e.state=o).strm=e,o.wrap=a,o.gzhead=null,o.w_bits=n,o.w_size=1<<o.w_bits,o.w_mask=o.w_size-1,o.hash_bits=i+7,o.hash_size=1<<o.hash_bits,o.hash_mask=o.hash_size-1,o.hash_shift=~~((o.hash_bits+x-1)/x),o.window=new c.Buf8(2*o.w_size),o.head=new c.Buf16(o.hash_size),o.prev=new c.Buf16(o.w_size),o.lit_bufsize=1<<i+6,o.pending_buf_size=4*o.lit_bufsize,o.pending_buf=new c.Buf8(o.pending_buf_size),o.d_buf=1*o.lit_bufsize,o.l_buf=3*o.lit_bufsize,o.level=t,o.strategy=s,o.method=r,K(e)}h=[new M(0,0,0,0,function(e,t){var r=65535;for(r>e.pending_buf_size-5&&(r=e.pending_buf_size-5);;){if(e.lookahead<=1){if(j(e),0===e.lookahead&&t===l)return A;if(0===e.lookahead)break}e.strstart+=e.lookahead,e.lookahead=0;var n=e.block_start+r;if((0===e.strstart||e.strstart>=n)&&(e.lookahead=e.strstart-n,e.strstart=n,N(e,!1),0===e.strm.avail_out))return A;if(e.strstart-e.block_start>=e.w_size-z&&(N(e,!1),0===e.strm.avail_out))return A}return e.insert=0,t===f?(N(e,!0),0===e.strm.avail_out?O:B):(e.strstart>e.block_start&&(N(e,!1),e.strm.avail_out),A)}),new M(4,4,8,4,Z),new M(4,5,16,8,Z),new M(4,6,32,32,Z),new M(4,4,16,16,W),new M(8,16,32,32,W),new M(8,16,128,128,W),new M(8,32,128,256,W),new M(32,128,258,1024,W),new M(32,258,258,4096,W)],r.deflateInit=function(e,t){return Y(e,t,v,15,8,0)},r.deflateInit2=Y,r.deflateReset=K,r.deflateResetKeep=G,r.deflateSetHeader=function(e,t){return e&&e.state?2!==e.state.wrap?_:(e.state.gzhead=t,m):_},r.deflate=function(e,t){var r,n,i,s;if(!e||!e.state||5<t||t<0)return e?R(e,_):_;if(n=e.state,!e.output||!e.input&&0!==e.avail_in||666===n.status&&t!==f)return R(e,0===e.avail_out?-5:_);if(n.strm=e,r=n.last_flush,n.last_flush=t,n.status===C)if(2===n.wrap)e.adler=0,U(n,31),U(n,139),U(n,8),n.gzhead?(U(n,(n.gzhead.text?1:0)+(n.gzhead.hcrc?2:0)+(n.gzhead.extra?4:0)+(n.gzhead.name?8:0)+(n.gzhead.comment?16:0)),U(n,255&n.gzhead.time),U(n,n.gzhead.time>>8&255),U(n,n.gzhead.time>>16&255),U(n,n.gzhead.time>>24&255),U(n,9===n.level?2:2<=n.strategy||n.level<2?4:0),U(n,255&n.gzhead.os),n.gzhead.extra&&n.gzhead.extra.length&&(U(n,255&n.gzhead.extra.length),U(n,n.gzhead.extra.length>>8&255)),n.gzhead.hcrc&&(e.adler=p(e.adler,n.pending_buf,n.pending,0)),n.gzindex=0,n.status=69):(U(n,0),U(n,0),U(n,0),U(n,0),U(n,0),U(n,9===n.level?2:2<=n.strategy||n.level<2?4:0),U(n,3),n.status=E);else{var a=v+(n.w_bits-8<<4)<<8;a|=(2<=n.strategy||n.level<2?0:n.level<6?1:6===n.level?2:3)<<6,0!==n.strstart&&(a|=32),a+=31-a%31,n.status=E,P(n,a),0!==n.strstart&&(P(n,e.adler>>>16),P(n,65535&e.adler)),e.adler=1}if(69===n.status)if(n.gzhead.extra){for(i=n.pending;n.gzindex<(65535&n.gzhead.extra.length)&&(n.pending!==n.pending_buf_size||(n.gzhead.hcrc&&n.pending>i&&(e.adler=p(e.adler,n.pending_buf,n.pending-i,i)),F(e),i=n.pending,n.pending!==n.pending_buf_size));)U(n,255&n.gzhead.extra[n.gzindex]),n.gzindex++;n.gzhead.hcrc&&n.pending>i&&(e.adler=p(e.adler,n.pending_buf,n.pending-i,i)),n.gzindex===n.gzhead.extra.length&&(n.gzindex=0,n.status=73)}else n.status=73;if(73===n.status)if(n.gzhead.name){i=n.pending;do{if(n.pending===n.pending_buf_size&&(n.gzhead.hcrc&&n.pending>i&&(e.adler=p(e.adler,n.pending_buf,n.pending-i,i)),F(e),i=n.pending,n.pending===n.pending_buf_size)){s=1;break}s=n.gzindex<n.gzhead.name.length?255&n.gzhead.name.charCodeAt(n.gzindex++):0,U(n,s)}while(0!==s);n.gzhead.hcrc&&n.pending>i&&(e.adler=p(e.adler,n.pending_buf,n.pending-i,i)),0===s&&(n.gzindex=0,n.status=91)}else n.status=91;if(91===n.status)if(n.gzhead.comment){i=n.pending;do{if(n.pending===n.pending_buf_size&&(n.gzhead.hcrc&&n.pending>i&&(e.adler=p(e.adler,n.pending_buf,n.pending-i,i)),F(e),i=n.pending,n.pending===n.pending_buf_size)){s=1;break}s=n.gzindex<n.gzhead.comment.length?255&n.gzhead.comment.charCodeAt(n.gzindex++):0,U(n,s)}while(0!==s);n.gzhead.hcrc&&n.pending>i&&(e.adler=p(e.adler,n.pending_buf,n.pending-i,i)),0===s&&(n.status=103)}else n.status=103;if(103===n.status&&(n.gzhead.hcrc?(n.pending+2>n.pending_buf_size&&F(e),n.pending+2<=n.pending_buf_size&&(U(n,255&e.adler),U(n,e.adler>>8&255),e.adler=0,n.status=E)):n.status=E),0!==n.pending){if(F(e),0===e.avail_out)return n.last_flush=-1,m}else if(0===e.avail_in&&T(t)<=T(r)&&t!==f)return R(e,-5);if(666===n.status&&0!==e.avail_in)return R(e,-5);if(0!==e.avail_in||0!==n.lookahead||t!==l&&666!==n.status){var o=2===n.strategy?function(e,t){for(var r;;){if(0===e.lookahead&&(j(e),0===e.lookahead)){if(t===l)return A;break}if(e.match_length=0,r=u._tr_tally(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++,r&&(N(e,!1),0===e.strm.avail_out))return A}return e.insert=0,t===f?(N(e,!0),0===e.strm.avail_out?O:B):e.last_lit&&(N(e,!1),0===e.strm.avail_out)?A:I}(n,t):3===n.strategy?function(e,t){for(var r,n,i,s,a=e.window;;){if(e.lookahead<=S){if(j(e),e.lookahead<=S&&t===l)return A;if(0===e.lookahead)break}if(e.match_length=0,e.lookahead>=x&&0<e.strstart&&(n=a[i=e.strstart-1])===a[++i]&&n===a[++i]&&n===a[++i]){s=e.strstart+S;do{}while(n===a[++i]&&n===a[++i]&&n===a[++i]&&n===a[++i]&&n===a[++i]&&n===a[++i]&&n===a[++i]&&n===a[++i]&&i<s);e.match_length=S-(s-i),e.match_length>e.lookahead&&(e.match_length=e.lookahead)}if(e.match_length>=x?(r=u._tr_tally(e,1,e.match_length-x),e.lookahead-=e.match_length,e.strstart+=e.match_length,e.match_length=0):(r=u._tr_tally(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++),r&&(N(e,!1),0===e.strm.avail_out))return A}return e.insert=0,t===f?(N(e,!0),0===e.strm.avail_out?O:B):e.last_lit&&(N(e,!1),0===e.strm.avail_out)?A:I}(n,t):h[n.level].func(n,t);if(o!==O&&o!==B||(n.status=666),o===A||o===O)return 0===e.avail_out&&(n.last_flush=-1),m;if(o===I&&(1===t?u._tr_align(n):5!==t&&(u._tr_stored_block(n,0,0,!1),3===t&&(D(n.head),0===n.lookahead&&(n.strstart=0,n.block_start=0,n.insert=0))),F(e),0===e.avail_out))return n.last_flush=-1,m}return t!==f?m:n.wrap<=0?1:(2===n.wrap?(U(n,255&e.adler),U(n,e.adler>>8&255),U(n,e.adler>>16&255),U(n,e.adler>>24&255),U(n,255&e.total_in),U(n,e.total_in>>8&255),U(n,e.total_in>>16&255),U(n,e.total_in>>24&255)):(P(n,e.adler>>>16),P(n,65535&e.adler)),F(e),0<n.wrap&&(n.wrap=-n.wrap),0!==n.pending?m:1)},r.deflateEnd=function(e){var t;return e&&e.state?(t=e.state.status)!==C&&69!==t&&73!==t&&91!==t&&103!==t&&t!==E&&666!==t?R(e,_):(e.state=null,t===E?R(e,-3):m):_},r.deflateSetDictionary=function(e,t){var r,n,i,s,a,o,h,u,l=t.length;if(!e||!e.state)return _;if(2===(s=(r=e.state).wrap)||1===s&&r.status!==C||r.lookahead)return _;for(1===s&&(e.adler=d(e.adler,t,l,0)),r.wrap=0,l>=r.w_size&&(0===s&&(D(r.head),r.strstart=0,r.block_start=0,r.insert=0),u=new c.Buf8(r.w_size),c.arraySet(u,t,l-r.w_size,r.w_size,0),t=u,l=r.w_size),a=e.avail_in,o=e.next_in,h=e.input,e.avail_in=l,e.next_in=0,e.input=t,j(r);r.lookahead>=x;){for(n=r.strstart,i=r.lookahead-(x-1);r.ins_h=(r.ins_h<<r.hash_shift^r.window[n+x-1])&r.hash_mask,r.prev[n&r.w_mask]=r.head[r.ins_h],r.head[r.ins_h]=n,n++,--i;);r.strstart=n,r.lookahead=x-1,j(r)}return r.strstart+=r.lookahead,r.block_start=r.strstart,r.insert=r.lookahead,r.lookahead=0,r.match_length=r.prev_length=x-1,r.match_available=0,e.next_in=o,e.input=h,e.avail_in=a,r.wrap=s,m},r.deflateInfo=\"pako deflate (from Nodeca project)\"},{\"../utils/common\":41,\"./adler32\":43,\"./crc32\":45,\"./messages\":51,\"./trees\":52}],47:[function(e,t,r){\"use strict\";t.exports=function(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name=\"\",this.comment=\"\",this.hcrc=0,this.done=!1}},{}],48:[function(e,t,r){\"use strict\";t.exports=function(e,t){var r,n,i,s,a,o,h,u,l,f,c,d,p,m,_,g,b,v,y,w,k,x,S,z,C;r=e.state,n=e.next_in,z=e.input,i=n+(e.avail_in-5),s=e.next_out,C=e.output,a=s-(t-e.avail_out),o=s+(e.avail_out-257),h=r.dmax,u=r.wsize,l=r.whave,f=r.wnext,c=r.window,d=r.hold,p=r.bits,m=r.lencode,_=r.distcode,g=(1<<r.lenbits)-1,b=(1<<r.distbits)-1;e:do{p<15&&(d+=z[n++]<<p,p+=8,d+=z[n++]<<p,p+=8),v=m[d&g];t:for(;;){if(d>>>=y=v>>>24,p-=y,0===(y=v>>>16&255))C[s++]=65535&v;else{if(!(16&y)){if(0==(64&y)){v=m[(65535&v)+(d&(1<<y)-1)];continue t}if(32&y){r.mode=12;break e}e.msg=\"invalid literal/length code\",r.mode=30;break e}w=65535&v,(y&=15)&&(p<y&&(d+=z[n++]<<p,p+=8),w+=d&(1<<y)-1,d>>>=y,p-=y),p<15&&(d+=z[n++]<<p,p+=8,d+=z[n++]<<p,p+=8),v=_[d&b];r:for(;;){if(d>>>=y=v>>>24,p-=y,!(16&(y=v>>>16&255))){if(0==(64&y)){v=_[(65535&v)+(d&(1<<y)-1)];continue r}e.msg=\"invalid distance code\",r.mode=30;break e}if(k=65535&v,p<(y&=15)&&(d+=z[n++]<<p,(p+=8)<y&&(d+=z[n++]<<p,p+=8)),h<(k+=d&(1<<y)-1)){e.msg=\"invalid distance too far back\",r.mode=30;break e}if(d>>>=y,p-=y,(y=s-a)<k){if(l<(y=k-y)&&r.sane){e.msg=\"invalid distance too far back\",r.mode=30;break e}if(S=c,(x=0)===f){if(x+=u-y,y<w){for(w-=y;C[s++]=c[x++],--y;);x=s-k,S=C}}else if(f<y){if(x+=u+f-y,(y-=f)<w){for(w-=y;C[s++]=c[x++],--y;);if(x=0,f<w){for(w-=y=f;C[s++]=c[x++],--y;);x=s-k,S=C}}}else if(x+=f-y,y<w){for(w-=y;C[s++]=c[x++],--y;);x=s-k,S=C}for(;2<w;)C[s++]=S[x++],C[s++]=S[x++],C[s++]=S[x++],w-=3;w&&(C[s++]=S[x++],1<w&&(C[s++]=S[x++]))}else{for(x=s-k;C[s++]=C[x++],C[s++]=C[x++],C[s++]=C[x++],2<(w-=3););w&&(C[s++]=C[x++],1<w&&(C[s++]=C[x++]))}break}}break}}while(n<i&&s<o);n-=w=p>>3,d&=(1<<(p-=w<<3))-1,e.next_in=n,e.next_out=s,e.avail_in=n<i?i-n+5:5-(n-i),e.avail_out=s<o?o-s+257:257-(s-o),r.hold=d,r.bits=p}},{}],49:[function(e,t,r){\"use strict\";var I=e(\"../utils/common\"),O=e(\"./adler32\"),B=e(\"./crc32\"),R=e(\"./inffast\"),T=e(\"./inftrees\"),D=1,F=2,N=0,U=-2,P=1,n=852,i=592;function L(e){return(e>>>24&255)+(e>>>8&65280)+((65280&e)<<8)+((255&e)<<24)}function s(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new I.Buf16(320),this.work=new I.Buf16(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}function a(e){var t;return e&&e.state?(t=e.state,e.total_in=e.total_out=t.total=0,e.msg=\"\",t.wrap&&(e.adler=1&t.wrap),t.mode=P,t.last=0,t.havedict=0,t.dmax=32768,t.head=null,t.hold=0,t.bits=0,t.lencode=t.lendyn=new I.Buf32(n),t.distcode=t.distdyn=new I.Buf32(i),t.sane=1,t.back=-1,N):U}function o(e){var t;return e&&e.state?((t=e.state).wsize=0,t.whave=0,t.wnext=0,a(e)):U}function h(e,t){var r,n;return e&&e.state?(n=e.state,t<0?(r=0,t=-t):(r=1+(t>>4),t<48&&(t&=15)),t&&(t<8||15<t)?U:(null!==n.window&&n.wbits!==t&&(n.window=null),n.wrap=r,n.wbits=t,o(e))):U}function u(e,t){var r,n;return e?(n=new s,(e.state=n).window=null,(r=h(e,t))!==N&&(e.state=null),r):U}var l,f,c=!0;function j(e){if(c){var t;for(l=new I.Buf32(512),f=new I.Buf32(32),t=0;t<144;)e.lens[t++]=8;for(;t<256;)e.lens[t++]=9;for(;t<280;)e.lens[t++]=7;for(;t<288;)e.lens[t++]=8;for(T(D,e.lens,0,288,l,0,e.work,{bits:9}),t=0;t<32;)e.lens[t++]=5;T(F,e.lens,0,32,f,0,e.work,{bits:5}),c=!1}e.lencode=l,e.lenbits=9,e.distcode=f,e.distbits=5}function Z(e,t,r,n){var i,s=e.state;return null===s.window&&(s.wsize=1<<s.wbits,s.wnext=0,s.whave=0,s.window=new I.Buf8(s.wsize)),n>=s.wsize?(I.arraySet(s.window,t,r-s.wsize,s.wsize,0),s.wnext=0,s.whave=s.wsize):(n<(i=s.wsize-s.wnext)&&(i=n),I.arraySet(s.window,t,r-n,i,s.wnext),(n-=i)?(I.arraySet(s.window,t,r-n,n,0),s.wnext=n,s.whave=s.wsize):(s.wnext+=i,s.wnext===s.wsize&&(s.wnext=0),s.whave<s.wsize&&(s.whave+=i))),0}r.inflateReset=o,r.inflateReset2=h,r.inflateResetKeep=a,r.inflateInit=function(e){return u(e,15)},r.inflateInit2=u,r.inflate=function(e,t){var r,n,i,s,a,o,h,u,l,f,c,d,p,m,_,g,b,v,y,w,k,x,S,z,C=0,E=new I.Buf8(4),A=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!e||!e.state||!e.output||!e.input&&0!==e.avail_in)return U;12===(r=e.state).mode&&(r.mode=13),a=e.next_out,i=e.output,h=e.avail_out,s=e.next_in,n=e.input,o=e.avail_in,u=r.hold,l=r.bits,f=o,c=h,x=N;e:for(;;)switch(r.mode){case P:if(0===r.wrap){r.mode=13;break}for(;l<16;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}if(2&r.wrap&&35615===u){E[r.check=0]=255&u,E[1]=u>>>8&255,r.check=B(r.check,E,2,0),l=u=0,r.mode=2;break}if(r.flags=0,r.head&&(r.head.done=!1),!(1&r.wrap)||(((255&u)<<8)+(u>>8))%31){e.msg=\"incorrect header check\",r.mode=30;break}if(8!=(15&u)){e.msg=\"unknown compression method\",r.mode=30;break}if(l-=4,k=8+(15&(u>>>=4)),0===r.wbits)r.wbits=k;else if(k>r.wbits){e.msg=\"invalid window size\",r.mode=30;break}r.dmax=1<<k,e.adler=r.check=1,r.mode=512&u?10:12,l=u=0;break;case 2:for(;l<16;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}if(r.flags=u,8!=(255&r.flags)){e.msg=\"unknown compression method\",r.mode=30;break}if(57344&r.flags){e.msg=\"unknown header flags set\",r.mode=30;break}r.head&&(r.head.text=u>>8&1),512&r.flags&&(E[0]=255&u,E[1]=u>>>8&255,r.check=B(r.check,E,2,0)),l=u=0,r.mode=3;case 3:for(;l<32;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}r.head&&(r.head.time=u),512&r.flags&&(E[0]=255&u,E[1]=u>>>8&255,E[2]=u>>>16&255,E[3]=u>>>24&255,r.check=B(r.check,E,4,0)),l=u=0,r.mode=4;case 4:for(;l<16;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}r.head&&(r.head.xflags=255&u,r.head.os=u>>8),512&r.flags&&(E[0]=255&u,E[1]=u>>>8&255,r.check=B(r.check,E,2,0)),l=u=0,r.mode=5;case 5:if(1024&r.flags){for(;l<16;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}r.length=u,r.head&&(r.head.extra_len=u),512&r.flags&&(E[0]=255&u,E[1]=u>>>8&255,r.check=B(r.check,E,2,0)),l=u=0}else r.head&&(r.head.extra=null);r.mode=6;case 6:if(1024&r.flags&&(o<(d=r.length)&&(d=o),d&&(r.head&&(k=r.head.extra_len-r.length,r.head.extra||(r.head.extra=new Array(r.head.extra_len)),I.arraySet(r.head.extra,n,s,d,k)),512&r.flags&&(r.check=B(r.check,n,d,s)),o-=d,s+=d,r.length-=d),r.length))break e;r.length=0,r.mode=7;case 7:if(2048&r.flags){if(0===o)break e;for(d=0;k=n[s+d++],r.head&&k&&r.length<65536&&(r.head.name+=String.fromCharCode(k)),k&&d<o;);if(512&r.flags&&(r.check=B(r.check,n,d,s)),o-=d,s+=d,k)break e}else r.head&&(r.head.name=null);r.length=0,r.mode=8;case 8:if(4096&r.flags){if(0===o)break e;for(d=0;k=n[s+d++],r.head&&k&&r.length<65536&&(r.head.comment+=String.fromCharCode(k)),k&&d<o;);if(512&r.flags&&(r.check=B(r.check,n,d,s)),o-=d,s+=d,k)break e}else r.head&&(r.head.comment=null);r.mode=9;case 9:if(512&r.flags){for(;l<16;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}if(u!==(65535&r.check)){e.msg=\"header crc mismatch\",r.mode=30;break}l=u=0}r.head&&(r.head.hcrc=r.flags>>9&1,r.head.done=!0),e.adler=r.check=0,r.mode=12;break;case 10:for(;l<32;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}e.adler=r.check=L(u),l=u=0,r.mode=11;case 11:if(0===r.havedict)return e.next_out=a,e.avail_out=h,e.next_in=s,e.avail_in=o,r.hold=u,r.bits=l,2;e.adler=r.check=1,r.mode=12;case 12:if(5===t||6===t)break e;case 13:if(r.last){u>>>=7&l,l-=7&l,r.mode=27;break}for(;l<3;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}switch(r.last=1&u,l-=1,3&(u>>>=1)){case 0:r.mode=14;break;case 1:if(j(r),r.mode=20,6!==t)break;u>>>=2,l-=2;break e;case 2:r.mode=17;break;case 3:e.msg=\"invalid block type\",r.mode=30}u>>>=2,l-=2;break;case 14:for(u>>>=7&l,l-=7&l;l<32;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}if((65535&u)!=(u>>>16^65535)){e.msg=\"invalid stored block lengths\",r.mode=30;break}if(r.length=65535&u,l=u=0,r.mode=15,6===t)break e;case 15:r.mode=16;case 16:if(d=r.length){if(o<d&&(d=o),h<d&&(d=h),0===d)break e;I.arraySet(i,n,s,d,a),o-=d,s+=d,h-=d,a+=d,r.length-=d;break}r.mode=12;break;case 17:for(;l<14;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}if(r.nlen=257+(31&u),u>>>=5,l-=5,r.ndist=1+(31&u),u>>>=5,l-=5,r.ncode=4+(15&u),u>>>=4,l-=4,286<r.nlen||30<r.ndist){e.msg=\"too many length or distance symbols\",r.mode=30;break}r.have=0,r.mode=18;case 18:for(;r.have<r.ncode;){for(;l<3;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}r.lens[A[r.have++]]=7&u,u>>>=3,l-=3}for(;r.have<19;)r.lens[A[r.have++]]=0;if(r.lencode=r.lendyn,r.lenbits=7,S={bits:r.lenbits},x=T(0,r.lens,0,19,r.lencode,0,r.work,S),r.lenbits=S.bits,x){e.msg=\"invalid code lengths set\",r.mode=30;break}r.have=0,r.mode=19;case 19:for(;r.have<r.nlen+r.ndist;){for(;g=(C=r.lencode[u&(1<<r.lenbits)-1])>>>16&255,b=65535&C,!((_=C>>>24)<=l);){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}if(b<16)u>>>=_,l-=_,r.lens[r.have++]=b;else{if(16===b){for(z=_+2;l<z;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}if(u>>>=_,l-=_,0===r.have){e.msg=\"invalid bit length repeat\",r.mode=30;break}k=r.lens[r.have-1],d=3+(3&u),u>>>=2,l-=2}else if(17===b){for(z=_+3;l<z;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}l-=_,k=0,d=3+(7&(u>>>=_)),u>>>=3,l-=3}else{for(z=_+7;l<z;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}l-=_,k=0,d=11+(127&(u>>>=_)),u>>>=7,l-=7}if(r.have+d>r.nlen+r.ndist){e.msg=\"invalid bit length repeat\",r.mode=30;break}for(;d--;)r.lens[r.have++]=k}}if(30===r.mode)break;if(0===r.lens[256]){e.msg=\"invalid code -- missing end-of-block\",r.mode=30;break}if(r.lenbits=9,S={bits:r.lenbits},x=T(D,r.lens,0,r.nlen,r.lencode,0,r.work,S),r.lenbits=S.bits,x){e.msg=\"invalid literal/lengths set\",r.mode=30;break}if(r.distbits=6,r.distcode=r.distdyn,S={bits:r.distbits},x=T(F,r.lens,r.nlen,r.ndist,r.distcode,0,r.work,S),r.distbits=S.bits,x){e.msg=\"invalid distances set\",r.mode=30;break}if(r.mode=20,6===t)break e;case 20:r.mode=21;case 21:if(6<=o&&258<=h){e.next_out=a,e.avail_out=h,e.next_in=s,e.avail_in=o,r.hold=u,r.bits=l,R(e,c),a=e.next_out,i=e.output,h=e.avail_out,s=e.next_in,n=e.input,o=e.avail_in,u=r.hold,l=r.bits,12===r.mode&&(r.back=-1);break}for(r.back=0;g=(C=r.lencode[u&(1<<r.lenbits)-1])>>>16&255,b=65535&C,!((_=C>>>24)<=l);){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}if(g&&0==(240&g)){for(v=_,y=g,w=b;g=(C=r.lencode[w+((u&(1<<v+y)-1)>>v)])>>>16&255,b=65535&C,!(v+(_=C>>>24)<=l);){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}u>>>=v,l-=v,r.back+=v}if(u>>>=_,l-=_,r.back+=_,r.length=b,0===g){r.mode=26;break}if(32&g){r.back=-1,r.mode=12;break}if(64&g){e.msg=\"invalid literal/length code\",r.mode=30;break}r.extra=15&g,r.mode=22;case 22:if(r.extra){for(z=r.extra;l<z;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}r.length+=u&(1<<r.extra)-1,u>>>=r.extra,l-=r.extra,r.back+=r.extra}r.was=r.length,r.mode=23;case 23:for(;g=(C=r.distcode[u&(1<<r.distbits)-1])>>>16&255,b=65535&C,!((_=C>>>24)<=l);){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}if(0==(240&g)){for(v=_,y=g,w=b;g=(C=r.distcode[w+((u&(1<<v+y)-1)>>v)])>>>16&255,b=65535&C,!(v+(_=C>>>24)<=l);){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}u>>>=v,l-=v,r.back+=v}if(u>>>=_,l-=_,r.back+=_,64&g){e.msg=\"invalid distance code\",r.mode=30;break}r.offset=b,r.extra=15&g,r.mode=24;case 24:if(r.extra){for(z=r.extra;l<z;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}r.offset+=u&(1<<r.extra)-1,u>>>=r.extra,l-=r.extra,r.back+=r.extra}if(r.offset>r.dmax){e.msg=\"invalid distance too far back\",r.mode=30;break}r.mode=25;case 25:if(0===h)break e;if(d=c-h,r.offset>d){if((d=r.offset-d)>r.whave&&r.sane){e.msg=\"invalid distance too far back\",r.mode=30;break}p=d>r.wnext?(d-=r.wnext,r.wsize-d):r.wnext-d,d>r.length&&(d=r.length),m=r.window}else m=i,p=a-r.offset,d=r.length;for(h<d&&(d=h),h-=d,r.length-=d;i[a++]=m[p++],--d;);0===r.length&&(r.mode=21);break;case 26:if(0===h)break e;i[a++]=r.length,h--,r.mode=21;break;case 27:if(r.wrap){for(;l<32;){if(0===o)break e;o--,u|=n[s++]<<l,l+=8}if(c-=h,e.total_out+=c,r.total+=c,c&&(e.adler=r.check=r.flags?B(r.check,i,c,a-c):O(r.check,i,c,a-c)),c=h,(r.flags?u:L(u))!==r.check){e.msg=\"incorrect data check\",r.mode=30;break}l=u=0}r.mode=28;case 28:if(r.wrap&&r.flags){for(;l<32;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}if(u!==(4294967295&r.total)){e.msg=\"incorrect length check\",r.mode=30;break}l=u=0}r.mode=29;case 29:x=1;break e;case 30:x=-3;break e;case 31:return-4;case 32:default:return U}return e.next_out=a,e.avail_out=h,e.next_in=s,e.avail_in=o,r.hold=u,r.bits=l,(r.wsize||c!==e.avail_out&&r.mode<30&&(r.mode<27||4!==t))&&Z(e,e.output,e.next_out,c-e.avail_out)?(r.mode=31,-4):(f-=e.avail_in,c-=e.avail_out,e.total_in+=f,e.total_out+=c,r.total+=c,r.wrap&&c&&(e.adler=r.check=r.flags?B(r.check,i,c,e.next_out-c):O(r.check,i,c,e.next_out-c)),e.data_type=r.bits+(r.last?64:0)+(12===r.mode?128:0)+(20===r.mode||15===r.mode?256:0),(0==f&&0===c||4===t)&&x===N&&(x=-5),x)},r.inflateEnd=function(e){if(!e||!e.state)return U;var t=e.state;return t.window&&(t.window=null),e.state=null,N},r.inflateGetHeader=function(e,t){var r;return e&&e.state?0==(2&(r=e.state).wrap)?U:((r.head=t).done=!1,N):U},r.inflateSetDictionary=function(e,t){var r,n=t.length;return e&&e.state?0!==(r=e.state).wrap&&11!==r.mode?U:11===r.mode&&O(1,t,n,0)!==r.check?-3:Z(e,t,n,n)?(r.mode=31,-4):(r.havedict=1,N):U},r.inflateInfo=\"pako inflate (from Nodeca project)\"},{\"../utils/common\":41,\"./adler32\":43,\"./crc32\":45,\"./inffast\":48,\"./inftrees\":50}],50:[function(e,t,r){\"use strict\";var D=e(\"../utils/common\"),F=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],N=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78],U=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],P=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64];t.exports=function(e,t,r,n,i,s,a,o){var h,u,l,f,c,d,p,m,_,g=o.bits,b=0,v=0,y=0,w=0,k=0,x=0,S=0,z=0,C=0,E=0,A=null,I=0,O=new D.Buf16(16),B=new D.Buf16(16),R=null,T=0;for(b=0;b<=15;b++)O[b]=0;for(v=0;v<n;v++)O[t[r+v]]++;for(k=g,w=15;1<=w&&0===O[w];w--);if(w<k&&(k=w),0===w)return i[s++]=20971520,i[s++]=20971520,o.bits=1,0;for(y=1;y<w&&0===O[y];y++);for(k<y&&(k=y),b=z=1;b<=15;b++)if(z<<=1,(z-=O[b])<0)return-1;if(0<z&&(0===e||1!==w))return-1;for(B[1]=0,b=1;b<15;b++)B[b+1]=B[b]+O[b];for(v=0;v<n;v++)0!==t[r+v]&&(a[B[t[r+v]]++]=v);if(d=0===e?(A=R=a,19):1===e?(A=F,I-=257,R=N,T-=257,256):(A=U,R=P,-1),b=y,c=s,S=v=E=0,l=-1,f=(C=1<<(x=k))-1,1===e&&852<C||2===e&&592<C)return 1;for(;;){for(p=b-S,_=a[v]<d?(m=0,a[v]):a[v]>d?(m=R[T+a[v]],A[I+a[v]]):(m=96,0),h=1<<b-S,y=u=1<<x;i[c+(E>>S)+(u-=h)]=p<<24|m<<16|_|0,0!==u;);for(h=1<<b-1;E&h;)h>>=1;if(0!==h?(E&=h-1,E+=h):E=0,v++,0==--O[b]){if(b===w)break;b=t[r+a[v]]}if(k<b&&(E&f)!==l){for(0===S&&(S=k),c+=y,z=1<<(x=b-S);x+S<w&&!((z-=O[x+S])<=0);)x++,z<<=1;if(C+=1<<x,1===e&&852<C||2===e&&592<C)return 1;i[l=E&f]=k<<24|x<<16|c-s|0}}return 0!==E&&(i[c+E]=b-S<<24|64<<16|0),o.bits=k,0}},{\"../utils/common\":41}],51:[function(e,t,r){\"use strict\";t.exports={2:\"need dictionary\",1:\"stream end\",0:\"\",\"-1\":\"file error\",\"-2\":\"stream error\",\"-3\":\"data error\",\"-4\":\"insufficient memory\",\"-5\":\"buffer error\",\"-6\":\"incompatible version\"}},{}],52:[function(e,t,r){\"use strict\";var i=e(\"../utils/common\"),o=0,h=1;function n(e){for(var t=e.length;0<=--t;)e[t]=0}var s=0,a=29,u=256,l=u+1+a,f=30,c=19,_=2*l+1,g=15,d=16,p=7,m=256,b=16,v=17,y=18,w=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],k=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],x=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],S=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],z=new Array(2*(l+2));n(z);var C=new Array(2*f);n(C);var E=new Array(512);n(E);var A=new Array(256);n(A);var I=new Array(a);n(I);var O,B,R,T=new Array(f);function D(e,t,r,n,i){this.static_tree=e,this.extra_bits=t,this.extra_base=r,this.elems=n,this.max_length=i,this.has_stree=e&&e.length}function F(e,t){this.dyn_tree=e,this.max_code=0,this.stat_desc=t}function N(e){return e<256?E[e]:E[256+(e>>>7)]}function U(e,t){e.pending_buf[e.pending++]=255&t,e.pending_buf[e.pending++]=t>>>8&255}function P(e,t,r){e.bi_valid>d-r?(e.bi_buf|=t<<e.bi_valid&65535,U(e,e.bi_buf),e.bi_buf=t>>d-e.bi_valid,e.bi_valid+=r-d):(e.bi_buf|=t<<e.bi_valid&65535,e.bi_valid+=r)}function L(e,t,r){P(e,r[2*t],r[2*t+1])}function j(e,t){for(var r=0;r|=1&e,e>>>=1,r<<=1,0<--t;);return r>>>1}function Z(e,t,r){var n,i,s=new Array(g+1),a=0;for(n=1;n<=g;n++)s[n]=a=a+r[n-1]<<1;for(i=0;i<=t;i++){var o=e[2*i+1];0!==o&&(e[2*i]=j(s[o]++,o))}}function W(e){var t;for(t=0;t<l;t++)e.dyn_ltree[2*t]=0;for(t=0;t<f;t++)e.dyn_dtree[2*t]=0;for(t=0;t<c;t++)e.bl_tree[2*t]=0;e.dyn_ltree[2*m]=1,e.opt_len=e.static_len=0,e.last_lit=e.matches=0}function M(e){8<e.bi_valid?U(e,e.bi_buf):0<e.bi_valid&&(e.pending_buf[e.pending++]=e.bi_buf),e.bi_buf=0,e.bi_valid=0}function H(e,t,r,n){var i=2*t,s=2*r;return e[i]<e[s]||e[i]===e[s]&&n[t]<=n[r]}function G(e,t,r){for(var n=e.heap[r],i=r<<1;i<=e.heap_len&&(i<e.heap_len&&H(t,e.heap[i+1],e.heap[i],e.depth)&&i++,!H(t,n,e.heap[i],e.depth));)e.heap[r]=e.heap[i],r=i,i<<=1;e.heap[r]=n}function K(e,t,r){var n,i,s,a,o=0;if(0!==e.last_lit)for(;n=e.pending_buf[e.d_buf+2*o]<<8|e.pending_buf[e.d_buf+2*o+1],i=e.pending_buf[e.l_buf+o],o++,0===n?L(e,i,t):(L(e,(s=A[i])+u+1,t),0!==(a=w[s])&&P(e,i-=I[s],a),L(e,s=N(--n),r),0!==(a=k[s])&&P(e,n-=T[s],a)),o<e.last_lit;);L(e,m,t)}function Y(e,t){var r,n,i,s=t.dyn_tree,a=t.stat_desc.static_tree,o=t.stat_desc.has_stree,h=t.stat_desc.elems,u=-1;for(e.heap_len=0,e.heap_max=_,r=0;r<h;r++)0!==s[2*r]?(e.heap[++e.heap_len]=u=r,e.depth[r]=0):s[2*r+1]=0;for(;e.heap_len<2;)s[2*(i=e.heap[++e.heap_len]=u<2?++u:0)]=1,e.depth[i]=0,e.opt_len--,o&&(e.static_len-=a[2*i+1]);for(t.max_code=u,r=e.heap_len>>1;1<=r;r--)G(e,s,r);for(i=h;r=e.heap[1],e.heap[1]=e.heap[e.heap_len--],G(e,s,1),n=e.heap[1],e.heap[--e.heap_max]=r,e.heap[--e.heap_max]=n,s[2*i]=s[2*r]+s[2*n],e.depth[i]=(e.depth[r]>=e.depth[n]?e.depth[r]:e.depth[n])+1,s[2*r+1]=s[2*n+1]=i,e.heap[1]=i++,G(e,s,1),2<=e.heap_len;);e.heap[--e.heap_max]=e.heap[1],function(e,t){var r,n,i,s,a,o,h=t.dyn_tree,u=t.max_code,l=t.stat_desc.static_tree,f=t.stat_desc.has_stree,c=t.stat_desc.extra_bits,d=t.stat_desc.extra_base,p=t.stat_desc.max_length,m=0;for(s=0;s<=g;s++)e.bl_count[s]=0;for(h[2*e.heap[e.heap_max]+1]=0,r=e.heap_max+1;r<_;r++)p<(s=h[2*h[2*(n=e.heap[r])+1]+1]+1)&&(s=p,m++),h[2*n+1]=s,u<n||(e.bl_count[s]++,a=0,d<=n&&(a=c[n-d]),o=h[2*n],e.opt_len+=o*(s+a),f&&(e.static_len+=o*(l[2*n+1]+a)));if(0!==m){do{for(s=p-1;0===e.bl_count[s];)s--;e.bl_count[s]--,e.bl_count[s+1]+=2,e.bl_count[p]--,m-=2}while(0<m);for(s=p;0!==s;s--)for(n=e.bl_count[s];0!==n;)u<(i=e.heap[--r])||(h[2*i+1]!==s&&(e.opt_len+=(s-h[2*i+1])*h[2*i],h[2*i+1]=s),n--)}}(e,t),Z(s,u,e.bl_count)}function X(e,t,r){var n,i,s=-1,a=t[1],o=0,h=7,u=4;for(0===a&&(h=138,u=3),t[2*(r+1)+1]=65535,n=0;n<=r;n++)i=a,a=t[2*(n+1)+1],++o<h&&i===a||(o<u?e.bl_tree[2*i]+=o:0!==i?(i!==s&&e.bl_tree[2*i]++,e.bl_tree[2*b]++):o<=10?e.bl_tree[2*v]++:e.bl_tree[2*y]++,s=i,u=(o=0)===a?(h=138,3):i===a?(h=6,3):(h=7,4))}function V(e,t,r){var n,i,s=-1,a=t[1],o=0,h=7,u=4;for(0===a&&(h=138,u=3),n=0;n<=r;n++)if(i=a,a=t[2*(n+1)+1],!(++o<h&&i===a)){if(o<u)for(;L(e,i,e.bl_tree),0!=--o;);else 0!==i?(i!==s&&(L(e,i,e.bl_tree),o--),L(e,b,e.bl_tree),P(e,o-3,2)):o<=10?(L(e,v,e.bl_tree),P(e,o-3,3)):(L(e,y,e.bl_tree),P(e,o-11,7));s=i,u=(o=0)===a?(h=138,3):i===a?(h=6,3):(h=7,4)}}n(T);var q=!1;function J(e,t,r,n){P(e,(s<<1)+(n?1:0),3),function(e,t,r,n){M(e),n&&(U(e,r),U(e,~r)),i.arraySet(e.pending_buf,e.window,t,r,e.pending),e.pending+=r}(e,t,r,!0)}r._tr_init=function(e){q||(function(){var e,t,r,n,i,s=new Array(g+1);for(n=r=0;n<a-1;n++)for(I[n]=r,e=0;e<1<<w[n];e++)A[r++]=n;for(A[r-1]=n,n=i=0;n<16;n++)for(T[n]=i,e=0;e<1<<k[n];e++)E[i++]=n;for(i>>=7;n<f;n++)for(T[n]=i<<7,e=0;e<1<<k[n]-7;e++)E[256+i++]=n;for(t=0;t<=g;t++)s[t]=0;for(e=0;e<=143;)z[2*e+1]=8,e++,s[8]++;for(;e<=255;)z[2*e+1]=9,e++,s[9]++;for(;e<=279;)z[2*e+1]=7,e++,s[7]++;for(;e<=287;)z[2*e+1]=8,e++,s[8]++;for(Z(z,l+1,s),e=0;e<f;e++)C[2*e+1]=5,C[2*e]=j(e,5);O=new D(z,w,u+1,l,g),B=new D(C,k,0,f,g),R=new D(new Array(0),x,0,c,p)}(),q=!0),e.l_desc=new F(e.dyn_ltree,O),e.d_desc=new F(e.dyn_dtree,B),e.bl_desc=new F(e.bl_tree,R),e.bi_buf=0,e.bi_valid=0,W(e)},r._tr_stored_block=J,r._tr_flush_block=function(e,t,r,n){var i,s,a=0;0<e.level?(2===e.strm.data_type&&(e.strm.data_type=function(e){var t,r=4093624447;for(t=0;t<=31;t++,r>>>=1)if(1&r&&0!==e.dyn_ltree[2*t])return o;if(0!==e.dyn_ltree[18]||0!==e.dyn_ltree[20]||0!==e.dyn_ltree[26])return h;for(t=32;t<u;t++)if(0!==e.dyn_ltree[2*t])return h;return o}(e)),Y(e,e.l_desc),Y(e,e.d_desc),a=function(e){var t;for(X(e,e.dyn_ltree,e.l_desc.max_code),X(e,e.dyn_dtree,e.d_desc.max_code),Y(e,e.bl_desc),t=c-1;3<=t&&0===e.bl_tree[2*S[t]+1];t--);return e.opt_len+=3*(t+1)+5+5+4,t}(e),i=e.opt_len+3+7>>>3,(s=e.static_len+3+7>>>3)<=i&&(i=s)):i=s=r+5,r+4<=i&&-1!==t?J(e,t,r,n):4===e.strategy||s===i?(P(e,2+(n?1:0),3),K(e,z,C)):(P(e,4+(n?1:0),3),function(e,t,r,n){var i;for(P(e,t-257,5),P(e,r-1,5),P(e,n-4,4),i=0;i<n;i++)P(e,e.bl_tree[2*S[i]+1],3);V(e,e.dyn_ltree,t-1),V(e,e.dyn_dtree,r-1)}(e,e.l_desc.max_code+1,e.d_desc.max_code+1,a+1),K(e,e.dyn_ltree,e.dyn_dtree)),W(e),n&&M(e)},r._tr_tally=function(e,t,r){return e.pending_buf[e.d_buf+2*e.last_lit]=t>>>8&255,e.pending_buf[e.d_buf+2*e.last_lit+1]=255&t,e.pending_buf[e.l_buf+e.last_lit]=255&r,e.last_lit++,0===t?e.dyn_ltree[2*r]++:(e.matches++,t--,e.dyn_ltree[2*(A[r]+u+1)]++,e.dyn_dtree[2*N(t)]++),e.last_lit===e.lit_bufsize-1},r._tr_align=function(e){P(e,2,3),L(e,m,z),function(e){16===e.bi_valid?(U(e,e.bi_buf),e.bi_buf=0,e.bi_valid=0):8<=e.bi_valid&&(e.pending_buf[e.pending++]=255&e.bi_buf,e.bi_buf>>=8,e.bi_valid-=8)}(e)}},{\"../utils/common\":41}],53:[function(e,t,r){\"use strict\";t.exports=function(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg=\"\",this.state=null,this.data_type=2,this.adler=0}},{}],54:[function(e,t,r){(function(e){!function(r,n){\"use strict\";if(!r.setImmediate){var i,s,t,a,o=1,h={},u=!1,l=r.document,e=Object.getPrototypeOf&&Object.getPrototypeOf(r);e=e&&e.setTimeout?e:r,i=\"[object process]\"==={}.toString.call(r.process)?function(e){process.nextTick(function(){c(e)})}:function(){if(r.postMessage&&!r.importScripts){var e=!0,t=r.onmessage;return r.onmessage=function(){e=!1},r.postMessage(\"\",\"*\"),r.onmessage=t,e}}()?(a=\"setImmediate$\"+Math.random()+\"$\",r.addEventListener?r.addEventListener(\"message\",d,!1):r.attachEvent(\"onmessage\",d),function(e){r.postMessage(a+e,\"*\")}):r.MessageChannel?((t=new MessageChannel).port1.onmessage=function(e){c(e.data)},function(e){t.port2.postMessage(e)}):l&&\"onreadystatechange\"in l.createElement(\"script\")?(s=l.documentElement,function(e){var t=l.createElement(\"script\");t.onreadystatechange=function(){c(e),t.onreadystatechange=null,s.removeChild(t),t=null},s.appendChild(t)}):function(e){setTimeout(c,0,e)},e.setImmediate=function(e){\"function\"!=typeof e&&(e=new Function(\"\"+e));for(var t=new Array(arguments.length-1),r=0;r<t.length;r++)t[r]=arguments[r+1];var n={callback:e,args:t};return h[o]=n,i(o),o++},e.clearImmediate=f}function f(e){delete h[e]}function c(e){if(u)setTimeout(c,0,e);else{var t=h[e];if(t){u=!0;try{!function(e){var t=e.callback,r=e.args;switch(r.length){case 0:t();break;case 1:t(r[0]);break;case 2:t(r[0],r[1]);break;case 3:t(r[0],r[1],r[2]);break;default:t.apply(n,r)}}(t)}finally{f(e),u=!1}}}}function d(e){e.source===r&&\"string\"==typeof e.data&&0===e.data.indexOf(a)&&c(+e.data.slice(a.length))}}(\"undefined\"==typeof self?void 0===e?this:e:self)}).call(this,\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{})},{}]},{},[10])(10)});", "let ENABLE_INFO = false;\nlet ENABLE_WARN = true;\nlet ENABLE_GROUP = false;\nlet ENABLE_TABLE = true;\n\n/**\n * Enables or disables looging\n * @param enableInfo {boolean} - enables info\n * @param enableWarn {boolean} - enables warning\n * @param enableGroup {boolean} - enables groups\n * @param enableTable {boolean} - enables tables\n */\nexport function SpessaSynthLogging(enableInfo, enableWarn, enableGroup, enableTable)\n{\n    ENABLE_INFO = enableInfo;\n    ENABLE_WARN = enableWarn;\n    ENABLE_GROUP = enableGroup;\n    ENABLE_TABLE = enableTable;\n}\n\n/**\n * @param message {...any}\n */\nexport function SpessaSynthInfo(...message)\n{\n    if (ENABLE_INFO)\n    {\n        console.info(...message);\n    }\n}\n\n/**\n * @param message {...any}\n */\nexport function SpessaSynthWarn(...message)\n{\n    if (ENABLE_WARN)\n    {\n        console.warn(...message);\n    }\n}\n\n/**\n * @param message {...any} the message\n */\nexport function SpessaSynthGroup(...message)\n{\n    if (ENABLE_GROUP)\n    {\n        console.group(...message);\n    }\n}\n\n/**\n * @param message {...any} the message\n */\nexport function SpessaSynthGroupCollapsed(...message)\n{\n    if (ENABLE_GROUP)\n    {\n        console.groupCollapsed(...message);\n    }\n}\n\nexport function SpessaSynthGroupEnd()\n{\n    if (ENABLE_GROUP)\n    {\n        console.groupEnd();\n    }\n}", "/**\n * other.js\n * purpose: contains some useful functions that don't belong in any specific category\n */\n\n/**\n * Formats the given seconds to nice readable time\n * @param totalSeconds {number} time in seconds\n * @return {{seconds: number, minutes: number, time: string}}\n */\nexport function formatTime(totalSeconds)\n{\n    totalSeconds = Math.floor(totalSeconds);\n    let minutes = Math.floor(totalSeconds / 60);\n    let seconds = Math.round(totalSeconds - (minutes * 60));\n    return {\n        \"minutes\": minutes,\n        \"seconds\": seconds,\n        \"time\": `${minutes.toString().padStart(2, \"0\")}:${seconds.toString().padStart(2, \"0\")}`\n    };\n}\n\n/**\n * @param fileName {string}\n * @returns {string}\n */\nexport function formatTitle(fileName)\n{\n    return fileName\n        .trim()\n        .replaceAll(\".mid\", \"\")\n        .replaceAll(\".kar\", \"\")\n        .replaceAll(\".rmi\", \"\")\n        .replaceAll(\".xmf\", \"\")\n        .replaceAll(\".mxmf\", \"\")\n        .replaceAll(\"_\", \" \")\n        .trim();\n}\n\n/**\n * Does what it says\n * @param arr {number[]|Uint8Array}\n * @returns {string}\n */\nexport function arrayToHexString(arr)\n{\n    let hexString = \"\";\n    \n    for (let i = 0; i < arr.length; i++)\n    {\n        const hex = arr[i].toString(16).padStart(2, \"0\").toUpperCase();\n        hexString += hex;\n        hexString += \" \";\n    }\n    \n    return hexString;\n}\n\n/**\n * @param eventData {Uint8Array}\n * @returns {Uint8Array}\n */\nexport function sanitizeKarLyrics(eventData)\n{\n    // for KAR files:\n    // https://www.mixagesoftware.com/en/midikit/help/HTML/karaoke_formats.html\n    // \"/\" is the newline character\n    // \"\\\" is also the newline character\n    // \"\\\" ASCII code is 92\n    // \"/\" ASCII code is 47\n    // newline ASCII code is 10\n    const sanitized = [];\n    for (let byte of eventData)\n    {\n        if (byte === 47 || byte === 92)\n        {\n            byte = 10;\n        }\n        sanitized.push(byte);\n    }\n    return new Uint8Array(sanitized);\n}\n\nexport const consoleColors = {\n    warn: \"color: orange;\",\n    unrecognized: \"color: red;\",\n    info: \"color: aqua;\",\n    recognized: \"color: lime\",\n    value: \"color: yellow; background-color: black;\"\n};\n\n\n", "/**\n * @param channel {MidiAudioChannel}\n * @param voice {Voice}\n * @return {number}\n */\nfunction getPriority(channel, voice)\n{\n    let priority = 0;\n    if (channel.drumChannel)\n    {\n        // important\n        priority += 5;\n    }\n    if (voice.isInRelease)\n    {\n        // not important\n        priority -= 5;\n    }\n    // less velocity = less important\n    priority += voice.velocity / 25; // map to 0-5\n    // the newer, more important\n    priority -= voice.volumeEnvelope.state;\n    if (voice.isInRelease)\n    {\n        priority -= 5;\n    }\n    priority -= voice.volumeEnvelope.currentAttenuationDb / 50;\n    return priority;\n}\n\n/**\n * @this {SpessaSynthProcessor}\n * @param amount {number}\n */\nexport function voiceKilling(amount)\n{\n    let allVoices = [];\n    for (const channel of this.midiAudioChannels)\n    {\n        for (const voice of channel.voices)\n        {\n            if (!voice.finished)\n            {\n                const priority = getPriority(channel, voice);\n                allVoices.push({ channel, voice, priority });\n            }\n        }\n    }\n    \n    // Step 2: Sort voices by priority (ascending order)\n    allVoices.sort((a, b) => a.priority - b.priority);\n    const voicesToRemove = allVoices.slice(0, amount);\n    \n    for (const { channel, voice } of voicesToRemove)\n    {\n        const index = channel.voices.indexOf(voice);\n        if (index > -1)\n        {\n            channel.voices.splice(index, 1);\n        }\n    }\n}\n\n", "/**\n * Synthesizer's default voice cap\n * @type {number}\n */\nexport const VOICE_CAP = 350;\n/**\n * Default MIDI drum channel\n * @type {number}\n */\nexport const DEFAULT_PERCUSSION = 9;\n/**\n * MIDI channel count\n * @type {number}\n */\nexport const MIDI_CHANNEL_COUNT = 16;\n/**\n * Default bank select and SysEx mode\n * @type {string}\n */\nexport const DEFAULT_SYNTH_MODE = \"gs\";\n\nexport const ALL_CHANNELS_OR_DIFFERENT_ACTION = -1;\n\nexport const EMBEDDED_SOUND_BANK_ID = `SPESSASYNTH_EMBEDDED_BANK_${Math.random()}`;\n\nexport const GENERATOR_OVERRIDE_NO_CHANGE_VALUE = 32767;", "export var stbvorbis=void 0!==stbvorbis?stbvorbis:{};let isReady=!1,readySolver;stbvorbis.isInitialized=new Promise(A=>readySolver=A);var atob=function(A){var I,g,B,E,Q,C,i,h=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\",o=\"\",G=0;A=A.replace(/[^A-Za-z0-9\\+\\/\\=]/g,\"\");do E=h.indexOf(A.charAt(G++)),Q=h.indexOf(A.charAt(G++)),C=h.indexOf(A.charAt(G++)),i=h.indexOf(A.charAt(G++)),I=E<<2|Q>>4,g=(15&Q)<<4|C>>2,B=(3&C)<<6|i,o+=String.fromCharCode(I),64!==C&&(o+=String.fromCharCode(g)),64!==i&&(o+=String.fromCharCode(B));while(G<A.length);return o};!function(){var A,I,g,B,E,Q,C,i,h,o,G,D,a,S,F,R,s,w,y,c,n,U,$=void 0!==$?$:{};$.wasmBinary=Uint8Array.from(atob(\"\"),function(A){return A.charCodeAt(0)});var $=void 0!==$?$:{},e={};for(A in $)$.hasOwnProperty(A)&&(e[A]=$[A]);$.arguments=[],$.thisProgram=\"./this.program\",$.quit=function(A,I){throw I},$.preRun=[],$.postRun=[];var t=!1,k=!1,N=!1,r=!1;t=\"object\"==typeof window,k=\"function\"==typeof importScripts,N=\"object\"==typeof process&&\"function\"==typeof require&&!t&&!k,r=!t&&!N&&!k;var Y=\"\";function J(A){return $.locateFile?$.locateFile(A,Y):Y+A}N?(Y=__dirname+\"/\",$.read=function A(B,E){var Q;return I||(I=undefined),g||(g=undefined),B=g.normalize(B),Q=I.readFileSync(B),E?Q:Q.toString()},$.readBinary=function A(I){var g=$.read(I,!0);return g.buffer||(g=new Uint8Array(g)),_(g.buffer),g},process.argv.length>1&&($.thisProgram=process.argv[1].replace(/\\\\/g,\"/\")),$.arguments=process.argv.slice(2),\"undefined\"!=typeof module&&(/undefined!=$/),process.on(\"uncaughtException\",function(A){if(!(A instanceof II))throw A}),process.on(\"unhandledRejection\",function(A,I){process.exit(1)}),$.quit=function(A){process.exit(A)},$.inspect=function(){return\"[Emscripten Module object]\"}):r?(\"undefined\"!=typeof read&&($.read=function A(I){return read(I)}),$.readBinary=function A(I){var g;return\"function\"==typeof readbuffer?new Uint8Array(readbuffer(I)):(_(\"object\"==typeof(g=read(I,\"binary\"))),g)},\"undefined\"!=typeof scriptArgs?$.arguments=scriptArgs:\"undefined\"!=typeof arguments&&($.arguments=arguments),\"function\"==typeof quit&&($.quit=function(A){quit(A)})):(t||k)&&(t?document.currentScript&&(Y=document.currentScript.src):Y=self.location.href,Y=0!==Y.indexOf(\"blob:\")?Y.split(\"/\").slice(0,-1).join(\"/\")+\"/\":\"\",$.read=function A(I){var g=new XMLHttpRequest;return g.open(\"GET\",I,!1),g.send(null),g.responseText},k&&($.readBinary=function A(I){var g=new XMLHttpRequest;return g.open(\"GET\",I,!1),g.responseType=\"arraybuffer\",g.send(null),new Uint8Array(g.response)}),$.readAsync=function A(I,g,B){var E=new XMLHttpRequest;E.open(\"GET\",I,!0),E.responseType=\"arraybuffer\",E.onload=function A(){if(200==E.status||0==E.status&&E.response){g(E.response);return}B()},E.onerror=B,E.send(null)},$.setWindowTitle=function(A){document.title=A});var f=$.print||(\"undefined\"!=typeof console?console.log.bind(console):\"undefined\"!=typeof print?print:null),H=$.printErr||(\"undefined\"!=typeof printErr?printErr:\"undefined\"!=typeof console&&console.warn.bind(console)||f);for(A in e)e.hasOwnProperty(A)&&($[A]=e[A]);function L(A){var I=S;return S=S+A+15&-16,I}function M(A){var I=h[c>>2],g=I+A+15&-16;return(h[c>>2]=g,g>=AN&&!Ae())?(h[c>>2]=I,0):I}function d(A,I){return I||(I=16),A=Math.ceil(A/I)*I}function q(A){switch(A){case\"i1\":case\"i8\":return 1;case\"i16\":return 2;case\"i32\":case\"float\":return 4;case\"i64\":case\"double\":return 8;default:if(\"*\"===A[A.length-1])return 4;if(\"i\"!==A[0])return 0;var I=parseInt(A.substr(1));return _(I%8==0),I/8}}function K(A){K.shown||(K.shown={}),K.shown[A]||(K.shown[A]=1,H(A))}e=void 0;var l={\"f64-rem\":function(A,I){return A%I},debugger:function(){}},u=[];function b(A,I){for(var g=0,B=g;B<g+0;B++)if(!u[B])return u[B]=A,1+B;throw\"Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.\"}function X(A){u[A-1]=null}var m={};function Z(A,I){if(A){_(I),m[I]||(m[I]={});var g=m[I];return g[A]||(1===I.length?g[A]=function g(){return V(I,A)}:2===I.length?g[A]=function g(B){return V(I,A,[B])}:g[A]=function g(){return V(I,A,Array.prototype.slice.call(arguments))}),g[A]}}function x(A,I,g){return g?+(A>>>0)+4294967296*+(I>>>0):+(A>>>0)+4294967296*+(0|I)}function V(A,I,g){return g&&g.length?$[\"dynCall_\"+A].apply(null,[I].concat(g)):$[\"dynCall_\"+A].call(null,I)}var p=0,W=0;function _(A,I){A||IE(\"Assertion failed: \"+I)}function T(A){var I=$[\"_\"+A];return _(I,\"Cannot call unknown function \"+A+\", make sure it is exported\"),I}var v={stackSave:function(){IA()},stackRestore:function(){A9()},arrayToC:function(A){var I,g,B=A5(A.length);return I=A,g=B,E.set(I,g),B},stringToC:function(A){var I=0;if(null!=A&&0!==A){var g=(A.length<<2)+1;I=A5(g),Ai(A,I,g)}return I}},O={string:v.stringToC,array:v.arrayToC};function j(A,I,g,B,E){var Q=T(A),C=[],i=0;if(B)for(var h=0;h<B.length;h++){var o=O[g[h]];o?(0===i&&(i=IA()),C[h]=o(B[h])):C[h]=B[h]}var G,D=Q.apply(null,C);return D=(G=D,\"string\"===I?Ag(G):\"boolean\"===I?Boolean(G):G),0!==i&&A9(i),D}function P(A,I,g,B){switch(\"*\"===(g=g||\"i8\").charAt(g.length-1)&&(g=\"i32\"),g){case\"i1\":case\"i8\":E[A>>0]=I;break;case\"i16\":C[A>>1]=I;break;case\"i32\":h[A>>2]=I;break;case\"i64\":tempI64=[I>>>0,+Ax(tempDouble=I)>=1?tempDouble>0?(0|Ap(+A6(tempDouble/4294967296),4294967295))>>>0:~~+AV((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0,],h[A>>2]=tempI64[0],h[A+4>>2]=tempI64[1];break;case\"float\":G[A>>2]=I;break;case\"double\":D[A>>3]=I;break;default:IE(\"invalid type for setValue: \"+g)}}function z(A,I,g){switch(\"*\"===(I=I||\"i8\").charAt(I.length-1)&&(I=\"i32\"),I){case\"i1\":case\"i8\":return E[A>>0];case\"i16\":return C[A>>1];case\"i32\":case\"i64\":return h[A>>2];case\"float\":return G[A>>2];case\"double\":return D[A>>3];default:IE(\"invalid type for getValue: \"+I)}return null}function AA(A,I,g,B){\"number\"==typeof A?(i=!0,o=A):(i=!1,o=A.length);var C=\"string\"==typeof I?I:null;if(G=4==g?B:[\"function\"==typeof A8?A8:L,A5,L,M,][void 0===g?2:g](Math.max(o,C?1:I.length)),i){for(B=G,_((3&G)==0),D=G+(-4&o);B<D;B+=4)h[B>>2]=0;for(D=G+o;B<D;)E[B++>>0]=0;return G}if(\"i8\"===C)return A.subarray||A.slice?Q.set(A,G):Q.set(new Uint8Array(A),G),G;for(var i,o,G,D,a,S,F,R=0;R<o;){var s=A[R];if(0===(a=C||I[R])){R++;continue}\"i64\"==a&&(a=\"i32\"),P(G+R,s,a),F!==a&&(S=q(a),F=a),R+=S}return G}function AI(A){return F?A0?A8(A):M(A):L(A)}function Ag(A,I){if(0===I||!A)return\"\";for(var g,B,E,C=0,i=0;C|=B=Q[A+i>>0],(0!=B||I)&&(i++,!I||i!=I););I||(I=i);var h=\"\";if(C<128){for(;I>0;)E=String.fromCharCode.apply(String,Q.subarray(A,A+Math.min(I,1024))),h=h?h+E:E,A+=1024,I-=1024;return h}return g=A,function A(I,g){for(var B=g;I[B];)++B;if(B-g>16&&I.subarray&&AQ)return AQ.decode(I.subarray(g,B));for(var E,Q,C,i,h,o,G=\"\";;){if(!(E=I[g++]))return G;if(!(128&E)){G+=String.fromCharCode(E);continue}if(Q=63&I[g++],(224&E)==192){G+=String.fromCharCode((31&E)<<6|Q);continue}if(C=63&I[g++],(240&E)==224?E=(15&E)<<12|Q<<6|C:(i=63&I[g++],(248&E)==240?E=(7&E)<<18|Q<<12|C<<6|i:(h=63&I[g++],E=(252&E)==248?(3&E)<<24|Q<<18|C<<12|i<<6|h:(1&E)<<30|Q<<24|C<<18|i<<12|h<<6|(o=63&I[g++]))),E<65536)G+=String.fromCharCode(E);else{var D=E-65536;G+=String.fromCharCode(55296|D>>10,56320|1023&D)}}}(Q,g)}function AB(A){for(var I=\"\";;){var g=E[A++>>0];if(!g)return I;I+=String.fromCharCode(g)}}function AE(A,I){return function A(I,g,B){for(var Q=0;Q<I.length;++Q)E[g++>>0]=I.charCodeAt(Q);B||(E[g>>0]=0)}(A,I,!1)}var AQ=\"undefined\"!=typeof TextDecoder?new TextDecoder(\"utf8\"):void 0;function AC(A,I,g,B){if(!(B>0))return 0;for(var E=g,Q=g+B-1,C=0;C<A.length;++C){var i=A.charCodeAt(C);if(i>=55296&&i<=57343&&(i=65536+((1023&i)<<10)|1023&A.charCodeAt(++C)),i<=127){if(g>=Q)break;I[g++]=i}else if(i<=2047){if(g+1>=Q)break;I[g++]=192|i>>6,I[g++]=128|63&i}else if(i<=65535){if(g+2>=Q)break;I[g++]=224|i>>12,I[g++]=128|i>>6&63,I[g++]=128|63&i}else if(i<=2097151){if(g+3>=Q)break;I[g++]=240|i>>18,I[g++]=128|i>>12&63,I[g++]=128|i>>6&63,I[g++]=128|63&i}else if(i<=67108863){if(g+4>=Q)break;I[g++]=248|i>>24,I[g++]=128|i>>18&63,I[g++]=128|i>>12&63,I[g++]=128|i>>6&63,I[g++]=128|63&i}else{if(g+5>=Q)break;I[g++]=252|i>>30,I[g++]=128|i>>24&63,I[g++]=128|i>>18&63,I[g++]=128|i>>12&63,I[g++]=128|i>>6&63,I[g++]=128|63&i}}return I[g]=0,g-E}function Ai(A,I,g){return AC(A,Q,I,g)}function Ah(A){for(var I=0,g=0;g<A.length;++g){var B=A.charCodeAt(g);B>=55296&&B<=57343&&(B=65536+((1023&B)<<10)|1023&A.charCodeAt(++g)),B<=127?++I:B<=2047?I+=2:B<=65535?I+=3:B<=2097151?I+=4:B<=67108863?I+=5:I+=6}return I}var Ao=\"undefined\"!=typeof TextDecoder?new TextDecoder(\"utf-16le\"):void 0;function AG(A){for(var I=A,g=I>>1;C[g];)++g;if((I=g<<1)-A>32&&Ao)return Ao.decode(Q.subarray(A,I));for(var B=0,E=\"\";;){var i=C[A+2*B>>1];if(0==i)return E;++B,E+=String.fromCharCode(i)}}function AD(A,I,g){if(void 0===g&&(g=2147483647),g<2)return 0;for(var B=I,E=(g-=2)<2*A.length?g/2:A.length,Q=0;Q<E;++Q){var i=A.charCodeAt(Q);C[I>>1]=i,I+=2}return C[I>>1]=0,I-B}function Aa(A){return 2*A.length}function AS(A){for(var I=0,g=\"\";;){var B=h[A+4*I>>2];if(0==B)return g;if(++I,B>=65536){var E=B-65536;g+=String.fromCharCode(55296|E>>10,56320|1023&E)}else g+=String.fromCharCode(B)}}function AF(A,I,g){if(void 0===g&&(g=2147483647),g<4)return 0;for(var B=I,E=B+g-4,Q=0;Q<A.length;++Q){var C=A.charCodeAt(Q);if(C>=55296&&C<=57343&&(C=65536+((1023&C)<<10)|1023&A.charCodeAt(++Q)),h[I>>2]=C,(I+=4)+4>E)break}return h[I>>2]=0,I-B}function AR(A){for(var I=0,g=0;g<A.length;++g){var B=A.charCodeAt(g);B>=55296&&B<=57343&&++g,I+=4}return I}function As(A){var I=Ah(A)+1,g=A8(I);return g&&AC(A,E,g,I),g}function Aw(A){var I=Ah(A)+1,g=A5(I);return AC(A,E,g,I),g}function Ay(A){return A}function Ac(){var A,I=function A(){var I=Error();if(!I.stack){try{throw Error(0)}catch(g){I=g}if(!I.stack)return\"(no stack trace available)\"}return I.stack.toString()}();return $.extraStackTrace&&(I+=\"\\n\"+$.extraStackTrace()),(A=I).replace(/__Z[\\w\\d_]+/g,function(A){var I,g=I=A;return A===g?A:A+\" [\"+g+\"]\"})}function An(A,I){return A%I>0&&(A+=I-A%I),A}function AU(A){$.buffer=B=A}function A$(){$.HEAP8=E=new Int8Array(B),$.HEAP16=C=new Int16Array(B),$.HEAP32=h=new Int32Array(B),$.HEAPU8=Q=new Uint8Array(B),$.HEAPU16=i=new Uint16Array(B),$.HEAPU32=o=new Uint32Array(B),$.HEAPF32=G=new Float32Array(B),$.HEAPF64=D=new Float64Array(B)}function Ae(){var A=$.usingWasm?65536:16777216,I=2147483648-A;if(h[c>>2]>I)return!1;var g=AN;for(AN=Math.max(AN,16777216);AN<h[c>>2];)AN=AN<=536870912?An(2*AN,A):Math.min(An((3*AN+2147483648)/4,A),I);var B=$.reallocBuffer(AN);return B&&B.byteLength==AN?(AU(B),A$(),!0):(AN=g,!1)}a=S=R=s=w=y=c=0,F=!1,$.reallocBuffer||($.reallocBuffer=function(A){try{if(ArrayBuffer.transfer)I=ArrayBuffer.transfer(B,A);else{var I,g=E;I=new ArrayBuffer(A),new Int8Array(I).set(g)}}catch(Q){return!1}return!!Az(I)&&I});try{(n=Function.prototype.call.bind(Object.getOwnPropertyDescriptor(ArrayBuffer.prototype,\"byteLength\").get))(new ArrayBuffer(4))}catch(At){n=function(A){return A.byteLength}}var Ak=$.TOTAL_STACK||5242880,AN=$.TOTAL_MEMORY||16777216;function Ar(){return AN}function AY(A){for(;A.length>0;){var I=A.shift();if(\"function\"==typeof I){I();continue}var g=I.func;\"number\"==typeof g?void 0===I.arg?$.dynCall_v(g):$.dynCall_vi(g,I.arg):g(void 0===I.arg?null:I.arg)}}AN<Ak&&H(\"TOTAL_MEMORY should be larger than TOTAL_STACK, was \"+AN+\"! (TOTAL_STACK=\"+Ak+\")\"),$.buffer?B=$.buffer:(\"object\"==typeof WebAssembly&&\"function\"==typeof WebAssembly.Memory?($.wasmMemory=new WebAssembly.Memory({initial:AN/65536}),B=$.wasmMemory.buffer):B=new ArrayBuffer(AN),$.buffer=B),A$();var AJ=[],Af=[],AH=[],AL=[],AM=[],A0=!1,Ad=!1;function Aq(A){AJ.unshift(A)}function AK(A){Af.unshift(A)}function Al(A){AH.unshift(A)}function Au(A){AL.unshift(A)}function Ab(A){AM.unshift(A)}function AX(A,I,g){var B,Q;K(\"writeStringToMemory is deprecated and should not be called! Use stringToUTF8() instead!\"),g&&(B=E[Q=I+Ah(A)]),Ai(A,I,1/0),g&&(E[Q]=B)}function Am(A,I,g){return A>=0?A:I<=32?2*Math.abs(1<<I-1)+A:Math.pow(2,I)+A}function AZ(A,I,g){if(A<=0)return A;var B=I<=32?Math.abs(1<<I-1):Math.pow(2,I-1);return A>=B&&(I<=32||A>B)&&(A=-2*B+A),A}var Ax=Math.abs,AV=Math.ceil,A6=Math.floor,Ap=Math.min,A7=0,A1=null,AW=null;function A_(A){return A}$.preloadedImages={},$.preloadedAudios={};var AT=\"data:application/octet-stream;base64,\";function A2(A){return String.prototype.startsWith?A.startsWith(AT):0===A.indexOf(AT)}!function A(){var I=\"main.wast\",g=\"main.wasm\",B=\"main.temp.asm.js\";A2(I)||(I=J(I)),A2(g)||(g=J(g)),A2(B)||(B=J(B));var E={global:null,env:null,asm2wasm:l,parent:$},Q=null;function C(A){return A}function i(){try{if($.wasmBinary)return new Uint8Array($.wasmBinary);if($.readBinary)return $.readBinary(g);throw\"both async and sync fetching of the wasm failed\"}catch(A){IE(A)}}$.asmPreload=$.asm;var h=$.reallocBuffer,o=function(A){A=An(A,$.usingWasm?65536:16777216);var I=$.buffer.byteLength;if($.usingWasm)try{var g=$.wasmMemory.grow((A-I)/65536);if(-1!==g)return $.buffer=$.wasmMemory.buffer;return null}catch(B){return null}};$.reallocBuffer=function(A){return\"asmjs\"===G?h(A):o(A)};var G=\"\";$.asm=function(A,I,B){var C;if(!(I=C=I).table){var h,o=$.wasmTableSize;void 0===o&&(o=1024);var G=$.wasmMaxTableSize;\"object\"==typeof WebAssembly&&\"function\"==typeof WebAssembly.Table?void 0!==G?I.table=new WebAssembly.Table({initial:o,maximum:G,element:\"anyfunc\"}):I.table=new WebAssembly.Table({initial:o,element:\"anyfunc\"}):I.table=Array(o),$.wasmTable=I.table}return I.memoryBase||(I.memoryBase=$.STATIC_BASE),I.tableBase||(I.tableBase=0),h=function A(I,B,C){if(\"object\"!=typeof WebAssembly)return H(\"no native wasm support detected\"),!1;if(!($.wasmMemory instanceof WebAssembly.Memory))return H(\"no native wasm Memory in use\"),!1;function h(A,I){if((Q=A.exports).memory){var g,B,E;g=Q.memory,B=$.buffer,g.byteLength<B.byteLength&&H(\"the new buffer in mergeMemory is smaller than the previous one. in native wasm, we should grow memory here\"),E=new Int8Array(B),new Int8Array(g).set(E),AU(g),A$()}$.asm=Q,$.usingWasm=!0,function A(I){if(A7--,$.monitorRunDependencies&&$.monitorRunDependencies(A7),0==A7&&(null!==A1&&(clearInterval(A1),A1=null),AW)){var g=AW;AW=null,g()}}(\"wasm-instantiate\")}B.memory=$.wasmMemory,E.global={NaN:NaN,Infinity:1/0},E[\"global.Math\"]=Math,E.env=B;if((A7++,$.monitorRunDependencies&&$.monitorRunDependencies(A7)),$.instantiateWasm)try{return $.instantiateWasm(E,h)}catch(o){return H(\"Module.instantiateWasm callback failed with error: \"+o),!1}function G(A){h(A.instance,A.module)}function D(A){(!$.wasmBinary&&(t||k)&&\"function\"==typeof fetch?fetch(g,{credentials:\"same-origin\"}).then(function(A){if(!A.ok)throw\"failed to load wasm binary file at '\"+g+\"'\";return A.arrayBuffer()}).catch(function(){return i()}):new Promise(function(A,I){A(i())})).then(function(A){return WebAssembly.instantiate(A,E)}).then(A).catch(function(A){H(\"failed to asynchronously prepare wasm: \"+A),IE(A)})}return $.wasmBinary||\"function\"!=typeof WebAssembly.instantiateStreaming||A2(g)||\"function\"!=typeof fetch?D(G):WebAssembly.instantiateStreaming(fetch(g,{credentials:\"same-origin\"}),E).then(G).catch(function(A){H(\"wasm streaming compile failed: \"+A),H(\"falling back to ArrayBuffer instantiation\"),D(G)}),{}}(A,I,B),_(h,\"no binaryen method succeeded.\"),h},$.asm}(),S=(a=1024)+4816,Af.push(),$.STATIC_BASE=a,$.STATIC_BUMP=4816;var Av=S;function AO(A){E[Av]=E[A],E[Av+1]=E[A+1],E[Av+2]=E[A+2],E[Av+3]=E[A+3]}function Aj(A){E[Av]=E[A],E[Av+1]=E[A+1],E[Av+2]=E[A+2],E[Av+3]=E[A+3],E[Av+4]=E[A+4],E[Av+5]=E[A+5],E[Av+6]=E[A+6],E[Av+7]=E[A+7]}function AP(A,I,g){var B=g>0?g:Ah(A)+1,E=Array(B),Q=AC(A,E,0,E.length);return I&&(E.length=Q),E}function A4(A){for(var I=[],g=0;g<A.length;g++){var B=A[g];B>255&&(B&=255),I.push(String.fromCharCode(B))}return I.join(\"\")}S+=16,c=L(4),w=(R=s=d(S))+Ak,y=d(w),h[c>>2]=y,F=!0,$.wasmTableSize=4,$.wasmMaxTableSize=4,$.asmGlobalArg={},$.asmLibraryArg={abort:IE,assert:_,enlargeMemory:Ae,getTotalMemory:Ar,abortOnCannotGrowMemory:function A(){IE(\"Cannot enlarge memory arrays. Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value \"+AN+\", (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which allows increasing the size at runtime, or (3) if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 \")},invoke_iii:function A(I,g,B){var E=IA();try{return $.dynCall_iii(I,g,B)}catch(Q){if(A9(E),\"number\"!=typeof Q&&\"longjmp\"!==Q)throw Q;$.setThrew(1,0)}},___assert_fail:function A(I,g,B,E){IE(\"Assertion failed: \"+Ag(I)+\", at: \"+[g?Ag(g):\"unknown filename\",B,E?Ag(E):\"unknown function\",])},___setErrNo:function A(I){return $.___errno_location&&(h[$.___errno_location()>>2]=I),I},_abort:function A(){$.abort()},_emscripten_memcpy_big:function A(I,g,B){return Q.set(Q.subarray(g,g+B),I),I},_llvm_floor_f64:A6,DYNAMICTOP_PTR:c,tempDoublePtr:Av,ABORT:p,STACKTOP:s,STACK_MAX:w};var A3=$.asm($.asmGlobalArg,$.asmLibraryArg,B);$.asm=A3,$.___errno_location=function(){return $.asm.___errno_location.apply(null,arguments)};var Az=$._emscripten_replace_memory=function(){return $.asm._emscripten_replace_memory.apply(null,arguments)};$._free=function(){return $.asm._free.apply(null,arguments)};var A8=$._malloc=function(){return $.asm._malloc.apply(null,arguments)};$._memcpy=function(){return $.asm._memcpy.apply(null,arguments)},$._memset=function(){return $.asm._memset.apply(null,arguments)},$._sbrk=function(){return $.asm._sbrk.apply(null,arguments)},$._stb_vorbis_js_channels=function(){return $.asm._stb_vorbis_js_channels.apply(null,arguments)},$._stb_vorbis_js_close=function(){return $.asm._stb_vorbis_js_close.apply(null,arguments)},$._stb_vorbis_js_decode=function(){return $.asm._stb_vorbis_js_decode.apply(null,arguments)},$._stb_vorbis_js_open=function(){return $.asm._stb_vorbis_js_open.apply(null,arguments)},$._stb_vorbis_js_sample_rate=function(){return $.asm._stb_vorbis_js_sample_rate.apply(null,arguments)},$.establishStackSpace=function(){return $.asm.establishStackSpace.apply(null,arguments)},$.getTempRet0=function(){return $.asm.getTempRet0.apply(null,arguments)},$.runPostSets=function(){return $.asm.runPostSets.apply(null,arguments)},$.setTempRet0=function(){return $.asm.setTempRet0.apply(null,arguments)},$.setThrew=function(){return $.asm.setThrew.apply(null,arguments)};var A5=$.stackAlloc=function(){return $.asm.stackAlloc.apply(null,arguments)},A9=$.stackRestore=function(){return $.asm.stackRestore.apply(null,arguments)},IA=$.stackSave=function(){return $.asm.stackSave.apply(null,arguments)};function II(A){this.name=\"ExitStatus\",this.message=\"Program terminated with exit(\"+A+\")\",this.status=A}function Ig(A){if(A=A||$.arguments,!(A7>0))!function A(){if($.preRun)for(\"function\"==typeof $.preRun&&($.preRun=[$.preRun]);$.preRun.length;)Aq($.preRun.shift());AY(AJ)}(),!(A7>0)&&($.calledRun||($.setStatus?($.setStatus(\"Running...\"),setTimeout(function(){setTimeout(function(){$.setStatus(\"\")},1),I()},1)):I()));function I(){!$.calledRun&&($.calledRun=!0,p||(A0||(A0=!0,AY(Af)),AY(AH),$.onRuntimeInitialized&&$.onRuntimeInitialized(),function A(){if($.postRun)for(\"function\"==typeof $.postRun&&($.postRun=[$.postRun]);$.postRun.length;)Ab($.postRun.shift());AY(AM)}()))}}function IB(A,I){(!I||!$.noExitRuntime||0!==A)&&($.noExitRuntime||(p=!0,W=A,s=U,AY(AL),Ad=!0,$.onExit&&$.onExit(A)),$.quit(A,new II(A)))}function IE(A){throw $.onAbort&&$.onAbort(A),void 0!==A?(f(A),H(A),A=JSON.stringify(A)):A=\"\",p=!0,W=1,\"abort(\"+A+\"). Build with -s ASSERTIONS=1 for more info.\"}if($.dynCall_iii=function(){return $.asm.dynCall_iii.apply(null,arguments)},$.asm=A3,$.ccall=j,$.cwrap=function A(I,g,B,E){var Q=(B=B||[]).every(function(A){return\"number\"===A});return\"string\"!==g&&Q&&!E?T(I):function(){return j(I,g,B,arguments,E)}},II.prototype=Error(),II.prototype.constructor=II,AW=function A(){$.calledRun||Ig(),$.calledRun||(AW=A)},$.run=Ig,$.abort=IE,$.preInit)for(\"function\"==typeof $.preInit&&($.preInit=[$.preInit]);$.preInit.length>0;)$.preInit.pop()();$.noExitRuntime=!0,Ig(),$.onRuntimeInitialized=()=>{isReady=!0,readySolver()},stbvorbis.decode=function(A){return function A(I){if(!isReady)throw Error(\"SF3 decoder has not been initialized yet. Did you await synth.isReady?\");var g={};function B(A){return new Int32Array($.HEAPU8.buffer,A,1)[0]}function E(A,I){var g=new ArrayBuffer(I*Float32Array.BYTES_PER_ELEMENT),B=new Float32Array(g);return B.set(new Float32Array($.HEAPU8.buffer,A,I)),B}g.open=$.cwrap(\"stb_vorbis_js_open\",\"number\",[]),g.close=$.cwrap(\"stb_vorbis_js_close\",\"void\",[\"number\"]),g.channels=$.cwrap(\"stb_vorbis_js_channels\",\"number\",[\"number\"]),g.sampleRate=$.cwrap(\"stb_vorbis_js_sample_rate\",\"number\",[\"number\"]),g.decode=$.cwrap(\"stb_vorbis_js_decode\",\"number\",[\"number\",\"number\",\"number\",\"number\",\"number\"]);var Q,C,i,h,o=g.open(),G=(Q=I,C=I.byteLength,i=$._malloc(C),(h=new Uint8Array($.HEAPU8.buffer,i,C)).set(new Uint8Array(Q,0,C)),h),D=$._malloc(4),a=$._malloc(4),S=g.decode(o,G.byteOffset,G.byteLength,D,a);if($._free(G.byteOffset),S<0)throw g.close(o),$._free(D),Error(\"stbvorbis decode failed: \"+S);for(var F=g.channels(o),R=Array(F),s=new Int32Array($.HEAPU32.buffer,B(D),F),w=0;w<F;w++)R[w]=E(s[w],S),$._free(s[w]);var y=g.sampleRate(o);return g.close(o),$._free(B(D)),$._free(D),{data:R,sampleRate:y,eof:!0,error:null}}(A)}}();", "/**\n * unit_converter.js\n * purpose: converts soundfont units into more useable values with the use of lookup tables to improve performance\n */\n\n\n// timecent lookup table\nconst MIN_TIMECENT = -15000;\nconst MAX_TIMECENT = 15000;\nconst timecentLookupTable = new Float32Array(MAX_TIMECENT - MIN_TIMECENT + 1);\nfor (let i = 0; i < timecentLookupTable.length; i++)\n{\n    const timecents = MIN_TIMECENT + i;\n    timecentLookupTable[i] = Math.pow(2, timecents / 1200);\n}\n\n/**\n * Converts timecents to seconds\n * @param timecents {number} timecents\n * @returns {number} seconds\n */\nexport function timecentsToSeconds(timecents)\n{\n    if (timecents <= -32767)\n    {\n        return 0;\n    }\n    return timecentLookupTable[timecents - MIN_TIMECENT];\n}\n\n// abs cent lookup table\nconst MIN_ABS_CENT = -20000; // freqVibLfo\nconst MAX_ABS_CENT = 16500; // filterFc\nconst absoluteCentLookupTable = new Float32Array(MAX_ABS_CENT - MIN_ABS_CENT + 1);\nfor (let i = 0; i < absoluteCentLookupTable.length; i++)\n{\n    const absoluteCents = MIN_ABS_CENT + i;\n    absoluteCentLookupTable[i] = 440 * Math.pow(2, (absoluteCents - 6900) / 1200);\n}\n\n/**\n * Converts absolute cents to hertz\n * @param cents {number} absolute cents\n * @returns {number} hertz\n */\nexport function absCentsToHz(cents)\n{\n    if (cents < MIN_ABS_CENT || cents > MAX_ABS_CENT)\n    {\n        return 440 * Math.pow(2, (cents - 6900) / 1200);\n    }\n    return absoluteCentLookupTable[~~(cents) - MIN_ABS_CENT];\n}\n\n// decibel lookup table (2 points of precision)\nconst MIN_DECIBELS = -1660;\nconst MAX_DECIBELS = 1600;\nconst decibelLookUpTable = new Float32Array((MAX_DECIBELS - MIN_DECIBELS) * 100 + 1);\nfor (let i = 0; i < decibelLookUpTable.length; i++)\n{\n    const decibels = (MIN_DECIBELS * 100 + i) / 100;\n    decibelLookUpTable[i] = Math.pow(10, -decibels / 20);\n}\n\n/**\n * convers decibel attenuation to gain\n * @param decibels {number} the decibel attenuation\n * @returns {number} gain\n */\nexport function decibelAttenuationToGain(decibels)\n{\n    return decibelLookUpTable[Math.floor((decibels - MIN_DECIBELS) * 100)];\n}", "/**\n * @enum {number}\n */\nexport const generatorTypes = {\n    INVALID: -1,                        // invalid generator\n    startAddrsOffset: 0,                // sample control - moves sample start point\n    endAddrOffset: 1,                   // sample control - moves sample end point\n    startloopAddrsOffset: 2,            // loop control - moves loop start point\n    endloopAddrsOffset: 3,              // loop control - moves loop end point\n    startAddrsCoarseOffset: 4,          // sample control - moves sample start point in 32,768 increments\n    modLfoToPitch: 5,                   // pitch modulation - modulation lfo pitch modulation in cents\n    vibLfoToPitch: 6,                   // pitch modulation - vibrato lfo pitch modulation in cents\n    modEnvToPitch: 7,                   // pitch modulation - modulation envelope pitch modulation in cents\n    initialFilterFc: 8,                 // filter - lowpass filter cutoff in cents\n    initialFilterQ: 9,                  // filter - lowpass filter resonance\n    modLfoToFilterFc: 10,               // filter modulation - modulation lfo lowpass filter cutoff in cents\n    modEnvToFilterFc: 11,               // filter modulation - modulation envelope lowpass filter cutoff in cents\n    endAddrsCoarseOffset: 12,           // ample control - move sample end point in 32,768 increments\n    modLfoToVolume: 13,                 // modulation lfo - volume (tremolo), where 100 = 10dB\n    unused1: 14,                        // unused\n    chorusEffectsSend: 15,              // effect send - how much is sent to chorus 0 - 1000\n    reverbEffectsSend: 16,              // effect send - how much is sent to reverb 0 - 1000\n    pan: 17,                            // panning - where -500 = left, 0 = center, 500 = right\n    unused2: 18,                        // unused\n    unused3: 19,                        // unused\n    unused4: 20,                        // unused\n    delayModLFO: 21,                    // mod lfo - delay for mod lfo to start from zero\n    freqModLFO: 22,                     // mod lfo - frequency of mod lfo, 0 = 8.176 Hz, units: f => 1200log2(f/8.176)\n    delayVibLFO: 23,                    // vib lfo - delay for vibrato lfo to start from zero\n    freqVibLFO: 24,                     // vib lfo - frequency of vibrato lfo, 0 = 8.176Hz, unit: f => 1200log2(f/8.176)\n    delayModEnv: 25,                    // mod env - 0 = 1 s decay till mod env starts\n    attackModEnv: 26,                   // mod env - attack of mod env\n    holdModEnv: 27,                     // mod env - hold of mod env\n    decayModEnv: 28,                    // mod env - decay of mod env\n    sustainModEnv: 29,                  // mod env - sustain of mod env\n    releaseModEnv: 30,                  // mod env - release of mod env\n    keyNumToModEnvHold: 31,             // mod env - also modulating mod envelope hold with key number\n    keyNumToModEnvDecay: 32,            // mod env - also modulating mod envelope decay with key number\n    delayVolEnv: 33,                    // vol env - delay of envelope from zero (weird scale)\n    attackVolEnv: 34,                   // vol env - attack of envelope\n    holdVolEnv: 35,                     // vol env - hold of envelope\n    decayVolEnv: 36,                    // vol env - decay of envelope\n    sustainVolEnv: 37,                  // vol env - sustain of envelope\n    releaseVolEnv: 38,                  // vol env - release of envelope\n    keyNumToVolEnvHold: 39,             // vol env - key number to volume envelope hold\n    keyNumToVolEnvDecay: 40,            // vol env - key number to volume envelope decay\n    instrument: 41,                     // zone - instrument index to use for preset zone\n    reserved1: 42,                      // reserved\n    keyRange: 43,                       // zone - key range for which preset / instrument zone is active\n    velRange: 44,                       // zone - velocity range for which preset / instrument zone is active\n    startloopAddrsCoarseOffset: 45,     // sample control - moves sample loop start point in 32,768 increments\n    keyNum: 46,                         // zone - instrument only: always use this midi number (ignore what's pressed)\n    velocity: 47,                       // zone - instrument only: always use this velocity (ignore what's pressed)\n    initialAttenuation: 48,             // zone - allows turning down the volume, 10 = -1dB\n    reserved2: 49,                      // reserved\n    endloopAddrsCoarseOffset: 50,       // sample control - moves sample loop end point in 32,768 increments\n    coarseTune: 51,                     // tune - pitch offset in semitones\n    fineTune: 52,                       // tune - pitch offset in cents\n    sampleID: 53,                       // sample - instrument zone only: which sample to use\n    sampleModes: 54,                    // sample - 0 = no loop, 1 = loop, 2 = reserved, 3 = loop and play till the end in release phase\n    reserved3: 55,                      // reserved\n    scaleTuning: 56,                    // sample - the degree to which MIDI key number influences pitch, 100 = default\n    exclusiveClass: 57,                 // sample - = cut = choke group\n    overridingRootKey: 58,              // sample - can override the sample's original pitch\n    unused5: 59,                        // unused\n    endOper: 60,                        // end marker\n    \n    // additional generators that are used in system exclusives and will not be saved\n    vibLfoToVolume: 61,\n    vibLfoToFilterFc: 62\n};\nexport const GENERATORS_AMOUNT = Object.keys(generatorTypes).length;\nexport const MAX_GENERATOR = Math.max(...Object.values(generatorTypes));\n/**\n * @type {{min: number, max: number, def: number, nrpn: number}[]}\n * min: minimum value, max: maximum value, def: default value, nrpn: nprn scale...\n */\nconst generatorLimits = [];\n// offsets\ngeneratorLimits[generatorTypes.startAddrsOffset] = { min: 0, max: 32768, def: 0, nrpn: 1 };\ngeneratorLimits[generatorTypes.endAddrOffset] = { min: -32768, max: 32768, def: 0, nrpn: 1 };\ngeneratorLimits[generatorTypes.startloopAddrsOffset] = { min: -32768, max: 32768, def: 0, nrpn: 1 };\ngeneratorLimits[generatorTypes.endloopAddrsOffset] = { min: -32768, max: 32768, def: 0, nrpn: 1 };\ngeneratorLimits[generatorTypes.startAddrsCoarseOffset] = { min: 0, max: 32768, def: 0, nrpn: 1 };\n\n// pitch influence\ngeneratorLimits[generatorTypes.modLfoToPitch] = { min: -12000, max: 12000, def: 0, nrpn: 2 };\ngeneratorLimits[generatorTypes.vibLfoToPitch] = { min: -12000, max: 12000, def: 0, nrpn: 2 };\ngeneratorLimits[generatorTypes.modEnvToPitch] = { min: -12000, max: 12000, def: 0, nrpn: 2 };\n\n// lowpass\ngeneratorLimits[generatorTypes.initialFilterFc] = { min: 1500, max: 13500, def: 13500, nrpn: 2 };\ngeneratorLimits[generatorTypes.initialFilterQ] = { min: 0, max: 960, def: 0, nrpn: 1 };\ngeneratorLimits[generatorTypes.modLfoToFilterFc] = { min: -12000, max: 12000, def: 0, nrpn: 2 };\ngeneratorLimits[generatorTypes.vibLfoToFilterFc] = { min: -12000, max: 12000, def: 0, nrpn: 2 }; // NON-STANDARD\ngeneratorLimits[generatorTypes.modEnvToFilterFc] = { min: -12000, max: 12000, def: 0, nrpn: 2 };\n\ngeneratorLimits[generatorTypes.endAddrsCoarseOffset] = { min: -32768, max: 32768, def: 0, nrpn: 1 };\n\ngeneratorLimits[generatorTypes.modLfoToVolume] = { min: -960, max: 960, def: 0, nrpn: 1 };\ngeneratorLimits[generatorTypes.vibLfoToVolume] = { min: -960, max: 960, def: 0, nrpn: 1 }; // NON-STANDARD\n\n// effects, pan\ngeneratorLimits[generatorTypes.chorusEffectsSend] = { min: 0, max: 1000, def: 0, nrpn: 1 };\ngeneratorLimits[generatorTypes.reverbEffectsSend] = { min: 0, max: 1000, def: 0, nrpn: 1 };\ngeneratorLimits[generatorTypes.pan] = { min: -500, max: 500, def: 0, nrpn: 1 };\n\n// lfo\ngeneratorLimits[generatorTypes.delayModLFO] = { min: -12000, max: 5000, def: -12000, nrpn: 2 };\ngeneratorLimits[generatorTypes.freqModLFO] = { min: -16000, max: 4500, def: 0, nrpn: 4 };\ngeneratorLimits[generatorTypes.delayVibLFO] = { min: -12000, max: 5000, def: -12000, nrpn: 2 };\ngeneratorLimits[generatorTypes.freqVibLFO] = { min: -16000, max: 4500, def: 0, nrpn: 4 };\n\n// mod env\ngeneratorLimits[generatorTypes.delayModEnv] = { min: -32768, max: 5000, def: -32768, nrpn: 2 }; // -32,768 indicates instant phase,\n// this is done to prevent click at the start of filter modenv\ngeneratorLimits[generatorTypes.attackModEnv] = { min: -32768, max: 8000, def: -32768, nrpn: 2 };\ngeneratorLimits[generatorTypes.holdModEnv] = { min: -12000, max: 5000, def: -12000, nrpn: 2 };\ngeneratorLimits[generatorTypes.decayModEnv] = { min: -12000, max: 8000, def: -12000, nrpn: 2 };\ngeneratorLimits[generatorTypes.sustainModEnv] = { min: 0, max: 1000, def: 0, nrpn: 1 };\ngeneratorLimits[generatorTypes.releaseModEnv] = { min: -7200, max: 8000, def: -12000, nrpn: 2 }; // min is set to -7200 to prevent lowpass clicks\n// key num to mod env\ngeneratorLimits[generatorTypes.keyNumToModEnvHold] = { min: -1200, max: 1200, def: 0, nrpn: 1 };\ngeneratorLimits[generatorTypes.keyNumToModEnvDecay] = { min: -1200, max: 1200, def: 0, nrpn: 1 };\n\n// vol env\ngeneratorLimits[generatorTypes.delayVolEnv] = { min: -12000, max: 5000, def: -12000, nrpn: 2 };\ngeneratorLimits[generatorTypes.attackVolEnv] = { min: -12000, max: 8000, def: -12000, nrpn: 2 };\ngeneratorLimits[generatorTypes.holdVolEnv] = { min: -12000, max: 5000, def: -12000, nrpn: 2 };\ngeneratorLimits[generatorTypes.decayVolEnv] = { min: -12000, max: 8000, def: -12000, nrpn: 2 };\ngeneratorLimits[generatorTypes.sustainVolEnv] = { min: 0, max: 1440, def: 0, nrpn: 1 };\ngeneratorLimits[generatorTypes.releaseVolEnv] = { min: -7200, max: 8000, def: -12000, nrpn: 2 }; // min is set to -7200 prevent clicks\n// key num to vol env\ngeneratorLimits[generatorTypes.keyNumToVolEnvHold] = { min: -1200, max: 1200, def: 0, nrpn: 1 };\ngeneratorLimits[generatorTypes.keyNumToVolEnvDecay] = { min: -1200, max: 1200, def: 0, nrpn: 1 };\n\ngeneratorLimits[generatorTypes.startloopAddrsCoarseOffset] = { min: -32768, max: 32768, def: 0, nrpn: 1 };\ngeneratorLimits[generatorTypes.keyNum] = { min: -1, max: 127, def: -1, nrpn: 1 };\ngeneratorLimits[generatorTypes.velocity] = { min: -1, max: 127, def: -1, nrpn: 1 };\n\ngeneratorLimits[generatorTypes.initialAttenuation] = { min: 0, max: 1440, def: 0, nrpn: 1 };\n\ngeneratorLimits[generatorTypes.endloopAddrsCoarseOffset] = { min: -32768, max: 32768, def: 0, nrpn: 1 };\n\ngeneratorLimits[generatorTypes.coarseTune] = { min: -120, max: 120, def: 0, nrpn: 1 };\ngeneratorLimits[generatorTypes.fineTune] = { min: -12700, max: 12700, def: 0, nrpn: 1 }; // this generator is used as initial pitch, hence this range\ngeneratorLimits[generatorTypes.scaleTuning] = { min: 0, max: 1200, def: 100, nrpn: 1 };\ngeneratorLimits[generatorTypes.exclusiveClass] = { min: 0, max: 99999, def: 0, nrpn: 0 };\ngeneratorLimits[generatorTypes.overridingRootKey] = { min: 0 - 1, max: 127, def: -1, nrpn: 0 };\ngeneratorLimits[generatorTypes.sampleModes] = { min: 0, max: 3, def: 0, nrpn: 0 };\nexport { generatorLimits };", "import { decibelAttenuationToGain, timecentsToSeconds } from \"./unit_converter.js\";\n\n\nimport { generatorTypes } from \"../../../soundfont/basic_soundfont/generator_types.js\";\n\n/**\n * volume_envelope.js\n * purpose: applies a volume envelope for a given voice\n */\n\nexport const VOLUME_ENVELOPE_SMOOTHING_FACTOR = 0.01;\n\nconst DB_SILENCE = 100;\nconst PERCEIVED_DB_SILENCE = 90;\n// around 96 dB of attenuation\nconst PERCEIVED_GAIN_SILENCE = 0.000015; // can't go lower than that (see #50)\n\n/**\n * VOL ENV STATES:\n * 0 - delay\n * 1 - attack\n * 2 - hold/peak\n * 3 - decay\n * 4 - sustain\n * release indicates by isInRelease property\n */\n\nexport class VolumeEnvelope\n{\n    /**\n     * The envelope's current time in samples\n     * @type {number}\n     */\n    currentSampleTime = 0;\n    /**\n     * The sample rate in Hz\n     * @type {number}\n     */\n    sampleRate;\n    /**\n     * The current attenuation of the envelope in dB\n     * @type {number}\n     */\n    currentAttenuationDb = DB_SILENCE;\n    /**\n     * The current stage of the volume envelope\n     * @type {0|1|2|3|4}\n     */\n    state = 0;\n    /**\n     * The dB attenuation of the envelope when it entered the release stage\n     * @type {number}\n     */\n    releaseStartDb = DB_SILENCE;\n    /**\n     * The time in samples relative to the start of the envelope\n     * @type {number}\n     */\n    releaseStartTimeSamples = 0;\n    /**\n     * The current gain applied to the voice in the release stage\n     * @type {number}\n     */\n    currentReleaseGain = 1;\n    /**\n     * The attack duration in samples\n     * @type {number}\n     */\n    attackDuration = 0;\n    /**\n     * The decay duration in samples\n     * @type {number}\n     */\n    decayDuration = 0;\n    /**\n     * The release duration in samples\n     * @type {number}\n     */\n    releaseDuration = 0;\n    /**\n     * The voice's absolute attenuation as linear gain\n     * @type {number}\n     */\n    attenuation = 0;\n    /**\n     * The attenuation target, which the \"attenuation\" property is linearly interpolated towards (gain)\n     * @type {number}\n     */\n    attenuationTargetGain = 0;\n    /**\n     * The attenuation target, which the \"attenuation\" property is linearly interpolated towards (dB)\n     * @type {number}\n     */\n    attenuationTarget = 0;\n    /**\n     * The voice's sustain amount in dB, relative to attenuation\n     * @type {number}\n     */\n    sustainDbRelative = 0;\n    /**\n     * The time in samples to the end of delay stage, relative to the start of the envelope\n     * @type {number}\n     */\n    delayEnd = 0;\n    /**\n     * The time in samples to the end of attack stage, relative to the start of the envelope\n     * @type {number}\n     */\n    attackEnd = 0;\n    /**\n     * The time in samples to the end of hold stage, relative to the start of the envelope\n     * @type {number}\n     */\n    holdEnd = 0;\n    /**\n     * The time in samples to the end of decay stage, relative to the start of the envelope\n     * @type {number}\n     */\n    decayEnd = 0;\n    \n    /**\n     * @param sampleRate {number} Hz\n     * @param initialDecay {number} cb\n     */\n    constructor(sampleRate, initialDecay)\n    {\n        this.sampleRate = sampleRate;\n        /**\n         * if sustain stge is silent,\n         * then we can turn off the voice when it is silent.\n         * We can't do that with modulated as it can silence the volume and then raise it again, and the voice must keep playing\n         * @type {boolean}\n         */\n        this.canEndOnSilentSustain = initialDecay / 10 >= PERCEIVED_DB_SILENCE;\n    }\n    \n    /**\n     * Starts the release phase in the envelope\n     * @param voice {Voice} the voice this envelope belongs to\n     */\n    static startRelease(voice)\n    {\n        voice.volumeEnvelope.releaseStartTimeSamples = voice.volumeEnvelope.currentSampleTime;\n        voice.volumeEnvelope.currentReleaseGain = decibelAttenuationToGain(voice.volumeEnvelope.currentAttenuationDb);\n        VolumeEnvelope.recalculate(voice);\n    }\n    \n    /**\n     * Recalculates the envelope\n     * @param voice {Voice} the voice this envelope belongs to\n     */\n    static recalculate(voice)\n    {\n        const env = voice.volumeEnvelope;\n        const timecentsToSamples = tc =>\n        {\n            return Math.max(0, Math.floor(timecentsToSeconds(tc) * env.sampleRate));\n        };\n        // calculate absolute times (they can change so we have to recalculate every time\n        env.attenuationTarget = Math.max(\n            0,\n            Math.min(voice.modulatedGenerators[generatorTypes.initialAttenuation], 1440)\n        ) / 10; // divide by ten to get decibels\n        env.attenuationTargetGain = decibelAttenuationToGain(env.attenuationTarget);\n        env.sustainDbRelative = Math.min(DB_SILENCE, voice.modulatedGenerators[generatorTypes.sustainVolEnv] / 10);\n        const sustainDb = Math.min(DB_SILENCE, env.sustainDbRelative);\n        \n        // calculate durations\n        env.attackDuration = timecentsToSamples(voice.modulatedGenerators[generatorTypes.attackVolEnv]);\n        \n        // decay: sfspec page 35: the time is for change from attenuation to -100dB,\n        // therefore, we need to calculate the real time\n        // (changing from attenuation to sustain instead of -100dB)\n        const fullChange = voice.modulatedGenerators[generatorTypes.decayVolEnv];\n        const keyNumAddition = (60 - voice.targetKey) * voice.modulatedGenerators[generatorTypes.keyNumToVolEnvDecay];\n        const fraction = sustainDb / DB_SILENCE;\n        env.decayDuration = timecentsToSamples(fullChange + keyNumAddition) * fraction;\n        \n        env.releaseDuration = timecentsToSamples(voice.modulatedGenerators[generatorTypes.releaseVolEnv]);\n        \n        // calculate absolute end times for the values\n        env.delayEnd = timecentsToSamples(voice.modulatedGenerators[generatorTypes.delayVolEnv]);\n        env.attackEnd = env.attackDuration + env.delayEnd;\n        \n        // make sure to take keyNumToVolEnvHold into account!\n        const holdExcursion = (60 - voice.targetKey) * voice.modulatedGenerators[generatorTypes.keyNumToVolEnvHold];\n        env.holdEnd = timecentsToSamples(voice.modulatedGenerators[generatorTypes.holdVolEnv]\n                + holdExcursion)\n            + env.attackEnd;\n        \n        env.decayEnd = env.decayDuration + env.holdEnd;\n        \n        // if this is the first recalculation and the voice has no attack or delay time, set current db to peak\n        if (env.state === 0 && env.attackEnd === 0)\n        {\n            // env.currentAttenuationDb = env.attenuationTarget;\n            env.state = 2;\n        }\n        \n        // check if voice is in release\n        if (voice.isInRelease)\n        {\n            // no interpolation this time: force update to actual attenuation and calculate release start from there\n            //env.attenuation = Math.min(DB_SILENCE, env.attenuationTarget);\n            const sustainDb = Math.max(0, Math.min(DB_SILENCE, env.sustainDbRelative));\n            const fraction = sustainDb / DB_SILENCE;\n            env.decayDuration = timecentsToSamples(fullChange + keyNumAddition) * fraction;\n            \n            switch (env.state)\n            {\n                case 0:\n                    env.releaseStartDb = DB_SILENCE;\n                    break;\n                \n                case 1:\n                    // attack phase: get linear gain of the attack phase when release started\n                    // and turn it into db as we're ramping the db up linearly\n                    // (to make volume go down exponentially)\n                    // attack is linear (in gain) so we need to do get db from that\n                    let elapsed = 1 - ((env.attackEnd - env.releaseStartTimeSamples) / env.attackDuration);\n                    // calculate the gain that the attack would have, so\n                    // turn that into db\n                    env.releaseStartDb = 20 * Math.log10(elapsed) * -1;\n                    break;\n                \n                case 2:\n                    env.releaseStartDb = 0;\n                    break;\n                \n                case 3:\n                    env.releaseStartDb = (1 - (env.decayEnd - env.releaseStartTimeSamples) / env.decayDuration) * sustainDb;\n                    break;\n                \n                case 4:\n                    env.releaseStartDb = sustainDb;\n                    break;\n            }\n            env.releaseStartDb = Math.max(0, Math.min(env.releaseStartDb, DB_SILENCE));\n            if (env.releaseStartDb >= PERCEIVED_DB_SILENCE)\n            {\n                voice.finished = true;\n            }\n            env.currentReleaseGain = decibelAttenuationToGain(env.releaseStartDb);\n            \n            // release: sfspec page 35: the time is for change from attenuation to -100dB,\n            // therefore, we need to calculate the real time\n            // (changing from release start to -100dB instead of from peak to -100dB)\n            const releaseFraction = (DB_SILENCE - env.releaseStartDb) / DB_SILENCE;\n            env.releaseDuration *= releaseFraction;\n            \n        }\n    }\n    \n    /**\n     * Applies volume envelope gain to the given output buffer\n     * @param voice {Voice} the voice we're working on\n     * @param audioBuffer {Float32Array} the audio buffer to modify\n     * @param centibelOffset {number} the centibel offset of volume, for modLFOtoVolume\n     * @param smoothingFactor {number} the adjusted smoothing factor for the envelope\n     * @description essentially we use approach of 100dB is silence, 0dB is peak, and always add attenuation to that (which is interpolated)\n     */\n    static apply(voice, audioBuffer, centibelOffset, smoothingFactor)\n    {\n        const env = voice.volumeEnvelope;\n        let decibelOffset = centibelOffset / 10;\n        \n        const attenuationSmoothing = smoothingFactor;\n        \n        // RELEASE PHASE\n        if (voice.isInRelease)\n        {\n            let elapsedRelease = env.currentSampleTime - env.releaseStartTimeSamples;\n            if (elapsedRelease >= env.releaseDuration)\n            {\n                for (let i = 0; i < audioBuffer.length; i++)\n                {\n                    audioBuffer[i] = 0;\n                }\n                voice.finished = true;\n                return;\n            }\n            let dbDifference = DB_SILENCE - env.releaseStartDb;\n            for (let i = 0; i < audioBuffer.length; i++)\n            {\n                // attenuation interpolation\n                env.attenuation += (env.attenuationTargetGain - env.attenuation) * attenuationSmoothing;\n                let db = (elapsedRelease / env.releaseDuration) * dbDifference + env.releaseStartDb;\n                env.currentReleaseGain = env.attenuation * decibelAttenuationToGain(db + decibelOffset);\n                audioBuffer[i] *= env.currentReleaseGain;\n                env.currentSampleTime++;\n                elapsedRelease++;\n            }\n            \n            if (env.currentReleaseGain <= PERCEIVED_GAIN_SILENCE)\n            {\n                voice.finished = true;\n            }\n            return;\n        }\n        \n        let filledBuffer = 0;\n        switch (env.state)\n        {\n            case 0:\n                // delay phase, no sound is produced\n                while (env.currentSampleTime < env.delayEnd)\n                {\n                    env.currentAttenuationDb = DB_SILENCE;\n                    audioBuffer[filledBuffer] = 0;\n                    \n                    env.currentSampleTime++;\n                    if (++filledBuffer >= audioBuffer.length)\n                    {\n                        return;\n                    }\n                }\n                env.state++;\n            // fallthrough\n            \n            case 1:\n                // attack phase: ramp from 0 to attenuation\n                while (env.currentSampleTime < env.attackEnd)\n                {\n                    // attenuation interpolation\n                    env.attenuation += (env.attenuationTargetGain - env.attenuation) * attenuationSmoothing;\n                    \n                    // Special case: linear gain ramp instead of linear db ramp\n                    let linearAttenuation = 1 - (env.attackEnd - env.currentSampleTime) / env.attackDuration; // 0 to 1\n                    audioBuffer[filledBuffer] *= linearAttenuation * env.attenuation * decibelAttenuationToGain(\n                        decibelOffset);\n                    // set current attenuation to peak as its invalid during this phase\n                    env.currentAttenuationDb = 0;\n                    \n                    env.currentSampleTime++;\n                    if (++filledBuffer >= audioBuffer.length)\n                    {\n                        return;\n                    }\n                }\n                env.state++;\n            // fallthrough\n            \n            case 2:\n                // hold/peak phase: stay at attenuation\n                while (env.currentSampleTime < env.holdEnd)\n                {\n                    // attenuation interpolation\n                    env.attenuation += (env.attenuationTargetGain - env.attenuation) * attenuationSmoothing;\n                    \n                    audioBuffer[filledBuffer] *= env.attenuation * decibelAttenuationToGain(decibelOffset);\n                    env.currentAttenuationDb = 0;\n                    \n                    env.currentSampleTime++;\n                    if (++filledBuffer >= audioBuffer.length)\n                    {\n                        return;\n                    }\n                }\n                env.state++;\n            // fallthrough\n            \n            case 3:\n                // decay phase: linear ramp from attenuation to sustain\n                while (env.currentSampleTime < env.decayEnd)\n                {\n                    // attenuation interpolation\n                    env.attenuation += (env.attenuationTargetGain - env.attenuation) * attenuationSmoothing;\n                    \n                    env.currentAttenuationDb = (1 - (env.decayEnd - env.currentSampleTime) / env.decayDuration) * env.sustainDbRelative;\n                    audioBuffer[filledBuffer] *= env.attenuation * decibelAttenuationToGain(env.currentAttenuationDb + decibelOffset);\n                    \n                    env.currentSampleTime++;\n                    if (++filledBuffer >= audioBuffer.length)\n                    {\n                        return;\n                    }\n                }\n                env.state++;\n            // fallthrough\n            \n            case 4:\n                if (env.canEndOnSilentSustain && env.sustainDbRelative >= PERCEIVED_DB_SILENCE)\n                {\n                    voice.finished = true;\n                }\n                // sustain phase: stay at sustain\n                while (true)\n                {\n                    // attenuation interpolation\n                    env.attenuation += (env.attenuationTargetGain - env.attenuation) * attenuationSmoothing;\n                    \n                    audioBuffer[filledBuffer] *= env.attenuation * decibelAttenuationToGain(env.sustainDbRelative + decibelOffset);\n                    env.currentAttenuationDb = env.sustainDbRelative;\n                    env.currentSampleTime++;\n                    if (++filledBuffer >= audioBuffer.length)\n                    {\n                        return;\n                    }\n                }\n        }\n    }\n}", "/**\n * indexed_array.js\n * purpose: exteds Uint8Array with a currentIndex property\n */\n\nexport class IndexedByteArray extends Uint8Array\n{\n    /**\n     * The current index of the array\n     * @type {number}\n     */\n    currentIndex = 0;\n    \n    /**\n     * Creates a new instance of an Uint8Array with a currentIndex property\n     * @param args {any} same as for Uint8Array\n     */\n    constructor(args)\n    {\n        super(args);\n    }\n    \n    /**\n     * @param start {number?}\n     * @param end {number?}\n     * @returns {IndexedByteArray}\n     */\n    slice(start, end)\n    {\n        const a = /** @type {IndexedByteArray} */ super.slice(start, end);\n        a.currentIndex = 0;\n        return a;\n    }\n}", "import { IndexedByteArray } from \"../utils/indexed_array.js\";\n\n/**\n * midi_message.js\n * purpose: contains enums for midi events and controllers and functions to parse them\n */\n\nexport class MIDIMessage\n{\n    /**\n     * Absolute number of MIDI ticks from the start of the track.\n     * @type {number}\n     */\n    ticks;\n    \n    /**\n     * The MIDI message status byte. Note that for meta events, it is the second byte. (not 0xFF)\n     * @type {number}\n     */\n    messageStatusByte;\n    \n    /**\n     * Message's binary data\n     * @type {IndexedByteArray}\n     */\n    messageData;\n    \n    /**\n     * @param ticks {number}\n     * @param byte {number} the message status byte\n     * @param data {IndexedByteArray}\n     */\n    constructor(ticks, byte, data)\n    {\n        this.ticks = ticks;\n        this.messageStatusByte = byte;\n        this.messageData = data;\n    }\n}\n\n/**\n * Gets the status byte's channel\n * @param statusByte\n * @returns {number} channel is -1 for system messages -2 for meta and -3 for sysex\n */\nexport function getChannel(statusByte)\n{\n    const eventType = statusByte & 0xF0;\n    const channel = statusByte & 0x0F;\n    \n    let resultChannel = channel;\n    \n    switch (eventType)\n    {\n        // midi (and meta and sysex headers)\n        case 0x80:\n        case 0x90:\n        case 0xA0:\n        case 0xB0:\n        case 0xC0:\n        case 0xD0:\n        case 0xE0:\n            break;\n        \n        case 0xF0:\n            switch (channel)\n            {\n                case 0x0:\n                    resultChannel = -3;\n                    break;\n                \n                case 0x1:\n                case 0x2:\n                case 0x3:\n                case 0x4:\n                case 0x5:\n                case 0x6:\n                case 0x7:\n                case 0x8:\n                case 0x9:\n                case 0xA:\n                case 0xB:\n                case 0xC:\n                case 0xD:\n                case 0xE:\n                    resultChannel = -1;\n                    break;\n                \n                case 0xF:\n                    resultChannel = -2;\n                    break;\n            }\n            break;\n        \n        default:\n            resultChannel = -1;\n    }\n    \n    return resultChannel;\n}\n\n// all the midi statuses dictionary\nexport const messageTypes = {\n    noteOff: 0x80,\n    noteOn: 0x90,\n    polyPressure: 0xA0,\n    controllerChange: 0xB0,\n    programChange: 0xC0,\n    channelPressure: 0xD0,\n    pitchBend: 0xE0,\n    systemExclusive: 0xF0,\n    timecode: 0xF1,\n    songPosition: 0xF2,\n    songSelect: 0xF3,\n    tuneRequest: 0xF6,\n    clock: 0xF8,\n    start: 0xFA,\n    continue: 0xFB,\n    stop: 0xFC,\n    activeSensing: 0xFE,\n    reset: 0xFF,\n    sequenceNumber: 0x00,\n    text: 0x01,\n    copyright: 0x02,\n    trackName: 0x03,\n    instrumentName: 0x04,\n    lyric: 0x05,\n    marker: 0x06,\n    cuePoint: 0x07,\n    programName: 0x08,\n    midiChannelPrefix: 0x20,\n    midiPort: 0x21,\n    endOfTrack: 0x2F,\n    setTempo: 0x51,\n    smpteOffset: 0x54,\n    timeSignature: 0x58,\n    keySignature: 0x59,\n    sequenceSpecific: 0x7F\n};\n\n\n/**\n * Gets the event's status and channel from the status byte\n * @param statusByte {number} the status byte\n * @returns {{channel: number, status: number}} channel will be -1 for sysex and meta\n */\nexport function getEvent(statusByte)\n{\n    const status = statusByte & 0xF0;\n    const channel = statusByte & 0x0F;\n    \n    let eventChannel = -1;\n    let eventStatus = statusByte;\n    \n    if (status >= 0x80 && status <= 0xE0)\n    {\n        eventChannel = channel;\n        eventStatus = status;\n    }\n    \n    return {\n        status: eventStatus,\n        channel: eventChannel\n    };\n}\n\n\n/**\n * @enum {number}\n */\nexport const midiControllers = {\n    bankSelect: 0,\n    modulationWheel: 1,\n    breathController: 2,\n    footController: 4,\n    portamentoTime: 5,\n    dataEntryMsb: 6,\n    mainVolume: 7,\n    balance: 8,\n    pan: 10,\n    expressionController: 11,\n    effectControl1: 12,\n    effectControl2: 13,\n    generalPurposeController1: 16,\n    generalPurposeController2: 17,\n    generalPurposeController3: 18,\n    generalPurposeController4: 19,\n    lsbForControl0BankSelect: 32,\n    lsbForControl1ModulationWheel: 33,\n    lsbForControl2BreathController: 34,\n    lsbForControl4FootController: 36,\n    lsbForControl5PortamentoTime: 37,\n    lsbForControl6DataEntry: 38,\n    lsbForControl7MainVolume: 39,\n    lsbForControl8Balance: 40,\n    lsbForControl10Pan: 42,\n    lsbForControl11ExpressionController: 43,\n    lsbForControl12EffectControl1: 44,\n    lsbForControl13EffectControl2: 45,\n    sustainPedal: 64,\n    portamentoOnOff: 65,\n    sostenutoPedal: 66,\n    softPedal: 67,\n    legatoFootswitch: 68,\n    hold2Pedal: 69,\n    soundVariation: 70,\n    filterResonance: 71,\n    releaseTime: 72,\n    attackTime: 73,\n    brightness: 74,\n    decayTime: 75,\n    vibratoRate: 76,\n    vibratoDepth: 77,\n    vibratoDelay: 78,\n    soundController10: 79,\n    generalPurposeController5: 80,\n    generalPurposeController6: 81,\n    generalPurposeController7: 82,\n    generalPurposeController8: 83,\n    portamentoControl: 84,\n    reverbDepth: 91,\n    tremoloDepth: 92,\n    chorusDepth: 93,\n    detuneDepth: 94,\n    phaserDepth: 95,\n    dataIncrement: 96,\n    dataDecrement: 97,\n    NRPNLsb: 98,\n    NRPNMsb: 99,\n    RPNLsb: 100,\n    RPNMsb: 101,\n    allSoundOff: 120,\n    resetAllControllers: 121,\n    localControlOnOff: 122,\n    allNotesOff: 123,\n    omniModeOff: 124,\n    omniModeOn: 125,\n    monoModeOn: 126,\n    polyModeOn: 127\n};\n\n\n/**\n * @type {{\"11\": number, \"12\": number, \"13\": number, \"14\": number, \"8\": number, \"9\": number, \"10\": number}}\n */\nexport const dataBytesAmount = {\n    0x8: 2, // note off\n    0x9: 2, // note on\n    0xA: 2, // note at\n    0xB: 2, // cc change\n    0xC: 1, // pg change\n    0xD: 1, // channel after touch\n    0xE: 2  // pitch wheel\n};", "import { SpessaSynthInfo } from \"./loggin.js\";\nimport { consoleColors } from \"./other.js\";\nimport { DEFAULT_PERCUSSION } from \"../synthetizer/synth_constants.js\";\n\nexport const XG_SFX_VOICE = 64;\n\nconst GM2_DEFAULT_BANK = 121;\n\n/**\n * @param sys {SynthSystem}\n * @returns {number}\n */\nexport function getDefaultBank(sys)\n{\n    return sys === \"gm2\" ? GM2_DEFAULT_BANK : 0;\n}\n\n/**\n * @param bankNr {number}\n * @returns {boolean}\n */\nexport function isXGDrums(bankNr)\n{\n    return bankNr === 120 || bankNr === 126 || bankNr === 127;\n}\n\n/**\n * @param bank {number}\n * @returns {boolean}\n */\nexport function isValidXGMSB(bank)\n{\n    return isXGDrums(bank) || bank === XG_SFX_VOICE || bank === GM2_DEFAULT_BANK;\n}\n\n/**\n * Bank select hacks abstracted here\n * @param bankBefore {number} the current bank number\n * @param bank {number} the cc change bank number\n * @param system {SynthSystem} MIDI system\n * @param isLSB {boolean} is bank LSB?\n * @param isDrums {boolean} is drum channel?\n * @param channelNumber {number} channel number\n * @returns {{\n *     newBank: number,\n *     drumsStatus: 0|1|2\n * }} 0 - unchanged, 1 - OFF, 2 - ON\n */\nexport function parseBankSelect(bankBefore, bank, system, isLSB, isDrums, channelNumber)\n{\n    // 64 means SFX in MSB, so it is allowed\n    let out = bankBefore;\n    let drumsStatus = 0;\n    if (isLSB)\n    {\n        if (isSystemXG(system))\n        {\n            if (!isValidXGMSB(bank))\n            {\n                out = bank;\n            }\n        }\n        else if (system === \"gm2\")\n        {\n            out = bank;\n        }\n    }\n    else\n    {\n        let canSetBankSelect = true;\n        switch (system)\n        {\n            case \"gm\":\n                // gm ignores bank select\n                SpessaSynthInfo(\n                    `%cIgnoring the Bank Select (${bank}), as the synth is in GM mode.`,\n                    consoleColors.info\n                );\n                canSetBankSelect = false;\n                break;\n            \n            case \"xg\":\n                canSetBankSelect = isValidXGMSB(bank);\n                // for xg, if msb is 120, 126 or 127, then it's drums\n                if (isXGDrums(bank))\n                {\n                    drumsStatus = 2;\n                }\n                else\n                {\n                    // drums shall not be disabled on channel 9\n                    if (channelNumber % 16 !== DEFAULT_PERCUSSION)\n                    {\n                        drumsStatus = 1;\n                    }\n                }\n                break;\n            \n            case \"gm2\":\n                if (bank === 120)\n                {\n                    drumsStatus = 2;\n                }\n                else\n                {\n                    if (channelNumber % 16 !== DEFAULT_PERCUSSION)\n                    {\n                        drumsStatus = 1;\n                    }\n                }\n        }\n        \n        if (isDrums)\n        {\n            // 128 for percussion channel\n            bank = 128;\n        }\n        if (bank === 128 && !isDrums)\n        {\n            // if a channel is not for percussion, default to bank current\n            bank = bankBefore;\n        }\n        if (canSetBankSelect)\n        {\n            out = bank;\n        }\n    }\n    return {\n        newBank: out,\n        drumsStatus: drumsStatus\n    };\n}\n\n\n/**\n * Chooses a bank number according to spessasynth logic\n * That is:\n * for GS, bank MSB if not drum, otherwise 128\n * for XG: bank MSB if drum and MSB is valid, 128 othewise, bank MSB if it is SFX voice, LSB otherwise\n * @param msb {number}\n * @param lsb {number}\n * @param isDrums {boolean}\n * @param isXG {boolean}\n * @returns {number}\n */\nexport function chooseBank(msb, lsb, isDrums, isXG)\n{\n    if (isXG)\n    {\n        if (isDrums)\n        {\n            if (isXGDrums(msb))\n            {\n                return msb;\n            }\n            else\n            {\n                return 128;\n            }\n        }\n        else\n        {\n            // check for SFX\n            if (isValidXGMSB(msb))\n            {\n                return msb;\n            }\n            // if lsb is 0 and msb is not, use that\n            if (lsb === 0 && msb !== 0)\n            {\n                return msb;\n            }\n            if (!isValidXGMSB(lsb))\n            {\n                return lsb;\n            }\n            return 0;\n        }\n    }\n    else\n    {\n        return isDrums ? 128 : msb;\n    }\n}\n\n/**\n * @param system {SynthSystem}\n * @returns boolean\n */\nexport function isSystemXG(system)\n{\n    return system === \"gm2\" || system === \"xg\";\n}", "import { SYNTHESIZER_GAIN } from \"../../main_processor.js\";\n\n/**\n * @enum {number}\n */\nexport const masterParameterType = {\n    mainVolume: 0,\n    masterPan: 1,\n    voicesCap: 2,\n    interpolationType: 3,\n    midiSystem: 4\n};\n\n/**\n * @this {SpessaSynthProcessor}\n * @param type {masterParameterType}\n * @param value {number|string|interpolationTypes}\n */\nexport function setMasterParameter(type, value)\n{\n    switch (type)\n    {\n        case masterParameterType.masterPan:\n            let pan = value;\n            this.pan = pan;\n            // clamp to 0-1 (0 is left)\n            pan = (pan / 2) + 0.5;\n            this.panLeft = (1 - pan);\n            this.panRight = (pan);\n            break;\n        \n        case masterParameterType.mainVolume:\n            this.masterGain = value * SYNTHESIZER_GAIN;\n            this.setMasterParameter(masterParameterType.masterPan, this.pan);\n            break;\n        \n        case masterParameterType.voicesCap:\n            this.voiceCap = value;\n            break;\n        \n        case masterParameterType.interpolationType:\n            this.interpolationType = value;\n            break;\n        \n        case masterParameterType.midiSystem:\n            this.setSystem(value);\n    }\n}", "import { IndexedByteArray } from \"../indexed_array.js\";\n\n/**\n * @param dataArray {IndexedByteArray}\n * @param bytes {number}\n * @param trimEnd {boolean} if we should trim once we reach an invalid byte\n * @returns {string}\n */\nexport function readBytesAsString(dataArray, bytes, trimEnd = true)\n{\n    let finished = false;\n    let string = \"\";\n    for (let i = 0; i < bytes; i++)\n    {\n        let byte = dataArray[dataArray.currentIndex++];\n        if (finished)\n        {\n            continue;\n        }\n        if ((byte < 32 || byte > 127) && byte !== 10) // 10 is \"\\n\"\n        {\n            if (trimEnd)\n            {\n                finished = true;\n                continue;\n            }\n            else\n            {\n                if (byte === 0)\n                {\n                    finished = true;\n                    continue;\n                }\n            }\n        }\n        string += String.fromCharCode(byte);\n    }\n    return string;\n}\n\n/**\n * @param string {string}\n * @param addZero {boolean} adds a zero terminator at the end\n * @param ensureEven {boolean} ensures even byte count\n * @returns {IndexedByteArray}\n */\nexport function getStringBytes(string, addZero = false, ensureEven = false)\n{\n    let len = string.length;\n    if (addZero)\n    {\n        len++;\n    }\n    if (ensureEven && len % 2 !== 0)\n    {\n        len++;\n    }\n    const arr = new IndexedByteArray(len);\n    writeStringAsBytes(arr, string);\n    return arr;\n}\n\n/**\n * @param string {string}\n * @param outArray {IndexedByteArray}\n * @param padLength {number}\n * @returns {IndexedByteArray} modified IN PLACE\n */\nexport function writeStringAsBytes(outArray, string, padLength = 0)\n{\n    if (padLength > 0)\n    {\n        if (string.length > padLength)\n        {\n            string = string.slice(0, padLength);\n        }\n    }\n    for (let i = 0; i < string.length; i++)\n    {\n        outArray[outArray.currentIndex++] = string.charCodeAt(i);\n    }\n    \n    // pad with zeros if needed\n    if (padLength > string.length)\n    {\n        for (let i = 0; i < padLength - string.length; i++)\n        {\n            outArray[outArray.currentIndex++] = 0;\n        }\n    }\n    return outArray;\n}", "/**\n *\n * @enum {number}\n */\nexport const interpolationTypes = {\n    linear: 0,\n    nearestNeighbor: 1,\n    fourthOrder: 2\n};\n/**\n * The text types for the synth display\n * @enum {number}\n */\nexport const synthDisplayTypes = {\n    SoundCanvasText: 0,\n    XGText: 1,\n    SoundCanvasDotDisplay: 2\n};", "import { midiControllers } from \"../../midi/midi_message.js\";\nimport { generatorTypes, MAX_GENERATOR } from \"./generator_types.js\";\n\n/**\n * modulators.js\n * purpose: parses soundfont modulators and the source enums, also includes the default modulators list\n **/\n\nexport const MOD_BYTE_SIZE = 10;\n\n/**\n * @enum {number}\n */\nexport const modulatorSources = {\n    noController: 0,\n    noteOnVelocity: 2,\n    noteOnKeyNum: 3,\n    polyPressure: 10,\n    channelPressure: 13,\n    pitchWheel: 14,\n    pitchWheelRange: 16,\n    link: 127\n    \n};\n\n/**\n *\n * @enum {number}\n */\nexport const modulatorCurveTypes = {\n    linear: 0,\n    concave: 1,\n    convex: 2,\n    switch: 3\n};\n\n\nexport function getModSourceEnum(curveType, polarity, direction, isCC, index)\n{\n    return (curveType << 10) | (polarity << 9) | (direction << 8) | (isCC << 7) | index;\n}\n\nconst defaultResonantModSource = getModSourceEnum(\n    modulatorCurveTypes.linear,\n    1,\n    0,\n    1,\n    midiControllers.filterResonance\n); // linear forwards bipolar cc 74\n\nexport class Modulator\n{\n    /**\n     * The current computed value of this modulator. Only used in the synthesis engine for local voices\n     * @type {number}\n     */\n    currentValue = 0;\n    \n    /**\n     * The generator destination of this modulator\n     * @type {generatorTypes}\n     */\n    modulatorDestination;\n    \n    /**\n     * The transform amount for this modulator\n     * @type {number}\n     */\n    transformAmount;\n    \n    /**\n     * The transform type for this modulator\n     * @type {0|2}\n     */\n    transformType;\n    \n    /**\n     * Indicates if the given modulator is chorus or reverb effects modulator.\n     * This is done to simulate BASSMIDI effects behavior:\n     * - defaults to 1000 transform amount rather than 200\n     * - values can be changed, but anything above 200 is 1000\n     * (except for values above 1000, they are copied directly)\n     * - all values below are multiplied by 5 (200 * 5 = 1000)\n     * - still can be disabled if the soundfont has its own modulator curve\n     * - this fixes the very low amount of reverb by default and doesn't break soundfonts\n     * @type {boolean}\n     * @readonly\n     */\n    isEffectModulator = false;\n    \n    /**\n     * The default resonant modulator does not affect the filter gain.\n     * Neither XG nor GS responded to cc #74 in that way.\n     * @type {boolean}\n     * @readonly\n     */\n    isDefaultResonantModulator = false;\n    \n    /**\n     * 1 if the source is bipolar (min is -1, max is 1)\n     * otherwise min is 0 and max is 1\n     * @type {0|1}\n     */\n    sourcePolarity;\n    \n    /**\n     * 1 if the source is negative (from 1 to 0)\n     * @type {0|1}\n     */\n    sourceDirection;\n    \n    /**\n     * 1 if the source uses a MIDI CC\n     * @type {0|1}\n     */\n    sourceUsesCC;\n    \n    /**\n     * source index/CC number\n     * @type {modulatorSources|midiControllers}\n     */\n    sourceIndex;\n    \n    /**\n     * source curve type\n     * @type {modulatorCurveTypes}\n     */\n    sourceCurveType;\n    \n    /**\n     * 1 if the source is bipolar (min is -1, max is 1)\n     * otherwise min is 0 and max is 1\n     * @type {0|1}\n     */\n    secSrcPolarity;\n    \n    /**\n     * 1 if the source is negative (from 1 to 0)\n     * @type {0|1}\n     */\n    secSrcDirection;\n    \n    /**\n     * 1 if the source uses a MIDI CC\n     * @type {0|1}\n     */\n    secSrcUsesCC;\n    \n    /**\n     * source index/CC number\n     * @type {modulatorSources|midiControllers}\n     */\n    secSrcIndex;\n    \n    /**\n     * source curve type\n     * @type {modulatorCurveTypes}\n     */\n    secSrcCurveType;\n    \n    /**\n     * Creates a new SF2 Modulator\n     * @param sourceIndex {modulatorSources|midiControllers}\n     * @param sourceCurveType {modulatorCurveTypes}\n     * @param sourceUsesCC {0|1}\n     * @param sourcePolarity {0|1}\n     * @param sourceDirection {0|1}\n     * @param secSrcIndex {modulatorSources|midiControllers}\n     * @param secSrcCurveType {modulatorCurveTypes}\n     * @param secSrcUsesCC {0|1}\n     * @param secSrcPolarity {0|1}\n     * @param secSrcDirection {0|1}\n     * @param destination {generatorTypes}\n     * @param amount {number}\n     * @param transformType {0|2}\n     * @param isEffectModulator {boolean}\n     * @param isDefaultResonantModulator {boolean}\n     */\n    constructor(sourceIndex,\n                sourceCurveType,\n                sourceUsesCC,\n                sourcePolarity,\n                sourceDirection,\n                secSrcIndex,\n                secSrcCurveType,\n                secSrcUsesCC,\n                secSrcPolarity,\n                secSrcDirection,\n                destination,\n                amount,\n                transformType,\n                isEffectModulator = false,\n                isDefaultResonantModulator = false)\n    {\n        this.sourcePolarity = sourcePolarity;\n        this.sourceDirection = sourceDirection;\n        this.sourceUsesCC = sourceUsesCC;\n        this.sourceIndex = sourceIndex;\n        this.sourceCurveType = sourceCurveType;\n        \n        this.secSrcPolarity = secSrcPolarity;\n        this.secSrcDirection = secSrcDirection;\n        this.secSrcUsesCC = secSrcUsesCC;\n        this.secSrcIndex = secSrcIndex;\n        this.secSrcCurveType = secSrcCurveType;\n        \n        this.modulatorDestination = destination;\n        this.transformAmount = amount;\n        this.transformType = transformType;\n        this.isEffectModulator = isEffectModulator;\n        this.isDefaultResonantModulator = isDefaultResonantModulator;\n        \n        \n        if (this.modulatorDestination > MAX_GENERATOR)\n        {\n            this.modulatorDestination = generatorTypes.INVALID; // flag as invalid (for linked ones)\n        }\n        \n    }\n    \n    /**\n     * @param modulator {Modulator}\n     * @returns {Modulator}\n     */\n    static copy(modulator)\n    {\n        return new Modulator(\n            modulator.sourceIndex,\n            modulator.sourceCurveType,\n            modulator.sourceUsesCC,\n            modulator.sourcePolarity,\n            modulator.sourceDirection,\n            modulator.secSrcIndex,\n            modulator.secSrcCurveType,\n            modulator.secSrcUsesCC,\n            modulator.secSrcPolarity,\n            modulator.secSrcDirection,\n            modulator.modulatorDestination,\n            modulator.transformAmount,\n            modulator.transformType,\n            modulator.isEffectModulator,\n            modulator.isDefaultResonantModulator\n        );\n    }\n    \n    /**\n     * @param mod1 {Modulator}\n     * @param mod2 {Modulator}\n     * @param checkAmount {boolean}\n     * @returns {boolean}\n     */\n    static isIdentical(mod1, mod2, checkAmount = false)\n    {\n        return (mod1.sourceIndex === mod2.sourceIndex)\n            && (mod1.sourceUsesCC === mod2.sourceUsesCC)\n            && (mod1.sourcePolarity === mod2.sourcePolarity)\n            && (mod1.sourceDirection === mod2.sourceDirection)\n            && (mod1.sourceCurveType === mod2.sourceCurveType)\n            \n            && (mod1.secSrcIndex === mod2.secSrcIndex)\n            && (mod1.secSrcUsesCC === mod2.secSrcUsesCC)\n            && (mod1.secSrcPolarity === mod2.secSrcPolarity)\n            && (mod1.secSrcDirection === mod2.secSrcDirection)\n            && (mod1.secSrcCurveType === mod2.secSrcCurveType)\n            \n            && (mod1.modulatorDestination === mod2.modulatorDestination)\n            && (mod1.transformType === mod2.transformType)\n            && (!checkAmount || (mod1.transformAmount === mod2.transformAmount));\n    }\n    \n    /**\n     * @param mod {Modulator}\n     * @returns {string}\n     */\n    static debugString(mod)\n    {\n        function getKeyByValue(object, value)\n        {\n            return Object.keys(object).find(key => object[key] === value);\n        }\n        \n        let sourceString = getKeyByValue(modulatorCurveTypes, mod.sourceCurveType);\n        sourceString += mod.sourcePolarity === 0 ? \" unipolar \" : \" bipolar \";\n        sourceString += mod.sourceDirection === 0 ? \"forwards \" : \"backwards \";\n        if (mod.sourceUsesCC)\n        {\n            sourceString += getKeyByValue(midiControllers, mod.sourceIndex);\n        }\n        else\n        {\n            sourceString += getKeyByValue(modulatorSources, mod.sourceIndex);\n        }\n        \n        let secSrcString = getKeyByValue(modulatorCurveTypes, mod.secSrcCurveType);\n        secSrcString += mod.secSrcPolarity === 0 ? \" unipolar \" : \" bipolar \";\n        secSrcString += mod.secSrcDirection === 0 ? \"forwards \" : \"backwards \";\n        if (mod.secSrcUsesCC)\n        {\n            secSrcString += getKeyByValue(midiControllers, mod.secSrcIndex);\n        }\n        else\n        {\n            secSrcString += getKeyByValue(modulatorSources, mod.secSrcIndex);\n        }\n        return `Modulator:\n        Source: ${sourceString}\n        Secondary source: ${secSrcString}\n        Destination: ${getKeyByValue(generatorTypes, mod.modulatorDestination)}\n        Trasform amount: ${mod.transformAmount}\n        Transform type: ${mod.transformType}\n        \\n\\n`;\n    }\n    \n    getSourceEnum()\n    {\n        return getModSourceEnum(\n            this.sourceCurveType,\n            this.sourcePolarity,\n            this.sourceDirection,\n            this.sourceUsesCC,\n            this.sourceIndex\n        );\n    }\n    \n    getSecSrcEnum()\n    {\n        return getModSourceEnum(\n            this.secSrcCurveType,\n            this.secSrcPolarity,\n            this.secSrcDirection,\n            this.secSrcUsesCC,\n            this.secSrcIndex\n        );\n    }\n    \n    /**\n     * Sum transform and create a NEW modulator\n     * @param modulator {Modulator}\n     * @returns {Modulator}\n     */\n    sumTransform(modulator)\n    {\n        return new Modulator(\n            this.sourceIndex,\n            this.sourceCurveType,\n            this.sourceUsesCC,\n            this.sourcePolarity,\n            this.sourceDirection,\n            this.secSrcIndex,\n            this.secSrcCurveType,\n            this.secSrcUsesCC,\n            this.secSrcPolarity,\n            this.secSrcDirection,\n            this.modulatorDestination,\n            this.transformAmount + modulator.transformAmount,\n            this.transformType,\n            this.isEffectModulator,\n            this.isDefaultResonantModulator\n        );\n    }\n}\n\nexport class DecodedModulator extends Modulator\n{\n    /**\n     * reads an SF2 modulator\n     * @param sourceEnum {number} SF2 source enum\n     * @param secondarySourceEnum {number} SF2 secondary source enum\n     * @param destination {generatorTypes|number} destination\n     * @param amount {number} amount\n     * @param transformType {number} transform type\n     */\n    constructor(sourceEnum, secondarySourceEnum, destination, amount, transformType)\n    {\n        // decode the source\n        const sourcePolarity = sourceEnum >> 9 & 1;\n        const sourceDirection = sourceEnum >> 8 & 1;\n        const sourceUsesCC = sourceEnum >> 7 & 1;\n        const sourceIndex = /** @type {modulatorSources} **/ sourceEnum & 127;\n        const sourceCurveType = /** @type {modulatorCurveTypes} **/ sourceEnum >> 10 & 3;\n        \n        // decode the secondary source\n        const secSrcPolarity = secondarySourceEnum >> 9 & 1;\n        const secSrcDirection = secondarySourceEnum >> 8 & 1;\n        const secSrcUsesCC = secondarySourceEnum >> 7 & 1;\n        const secSrcIndex = /** @type {modulatorSources} **/ secondarySourceEnum & 127;\n        const secSrcCurveType = /** @type {modulatorCurveTypes} **/ secondarySourceEnum >> 10 & 3;\n        \n        super(\n            sourceIndex,\n            sourceCurveType,\n            sourceUsesCC,\n            sourcePolarity,\n            sourceDirection,\n            secSrcIndex,\n            secSrcCurveType,\n            secSrcUsesCC,\n            secSrcPolarity,\n            secSrcDirection,\n            destination,\n            amount,\n            transformType\n        );\n        \n        \n        this.isEffectModulator =\n            (\n                sourceEnum === 0x00DB\n                || sourceEnum === 0x00DD\n            )\n            && secondarySourceEnum === 0x0\n            && (\n                this.modulatorDestination === generatorTypes.reverbEffectsSend\n                || this.modulatorDestination === generatorTypes.chorusEffectsSend\n            );\n        \n        \n        this.isDefaultResonantModulator = (\n            sourceEnum === defaultResonantModSource\n            && secondarySourceEnum === 0x0\n            && this.modulatorDestination === generatorTypes.initialFilterQ\n        );\n    }\n}\n\nexport const DEFAULT_ATTENUATION_MOD_AMOUNT = 960;\nexport const DEFAULT_ATTENUATION_MOD_CURVE_TYPE = modulatorCurveTypes.concave;\n\n\nconst soundFontModulators = [\n    // vel to attenuation\n    new DecodedModulator(\n        getModSourceEnum(\n            DEFAULT_ATTENUATION_MOD_CURVE_TYPE,\n            0,\n            1,\n            0,\n            modulatorSources.noteOnVelocity\n        ),\n        0x0,\n        generatorTypes.initialAttenuation,\n        DEFAULT_ATTENUATION_MOD_AMOUNT,\n        0\n    ),\n    \n    // mod wheel to vibrato\n    new DecodedModulator(0x0081, 0x0, generatorTypes.vibLfoToPitch, 50, 0),\n    \n    // vol to attenuation\n    new DecodedModulator(\n        getModSourceEnum(\n            DEFAULT_ATTENUATION_MOD_CURVE_TYPE,\n            0,\n            1,\n            1,\n            midiControllers.mainVolume\n        ),\n        0x0,\n        generatorTypes.initialAttenuation,\n        DEFAULT_ATTENUATION_MOD_AMOUNT,\n        0\n    ),\n    \n    // channel pressure to vibrato\n    new DecodedModulator(0x000D, 0x0, generatorTypes.vibLfoToPitch, 50, 0),\n    \n    // pitch wheel to tuning\n    new DecodedModulator(0x020E, 0x0010, generatorTypes.fineTune, 12700, 0),\n    \n    // pan to uhh, pan\n    // amount is 500 instead of 1000, see #59\n    new DecodedModulator(0x028A, 0x0, generatorTypes.pan, 500, 0),\n    \n    // expression to attenuation\n    new DecodedModulator(\n        getModSourceEnum(\n            DEFAULT_ATTENUATION_MOD_CURVE_TYPE,\n            0,\n            1,\n            1,\n            midiControllers.expressionController\n        ),\n        0x0,\n        generatorTypes.initialAttenuation,\n        DEFAULT_ATTENUATION_MOD_AMOUNT,\n        0\n    ),\n    \n    // reverb effects to send\n    new DecodedModulator(0x00DB, 0x0, generatorTypes.reverbEffectsSend, 200, 0),\n    \n    // chorus effects to send\n    new DecodedModulator(0x00DD, 0x0, generatorTypes.chorusEffectsSend, 200, 0)\n];\n\nconst customModulators = [\n    // custom modulators heck yeah\n    // poly pressure to vibrato\n    new DecodedModulator(\n        getModSourceEnum(modulatorCurveTypes.linear, 0, 0, 0, modulatorSources.polyPressure),\n        0x0,\n        generatorTypes.vibLfoToPitch,\n        50,\n        0\n    ),\n    \n    // cc 92 (tremolo) to modLFO volume\n    new DecodedModulator(\n        getModSourceEnum(\n            modulatorCurveTypes.linear,\n            0,\n            0,\n            1,\n            midiControllers.tremoloDepth\n        ), /*linear forward unipolar cc 92 */\n        0x0, // no controller\n        generatorTypes.modLfoToVolume,\n        24,\n        0\n    ),\n    \n    // cc 73 (attack time) to volEnv attack\n    new DecodedModulator(\n        getModSourceEnum(\n            modulatorCurveTypes.convex,\n            1,\n            0,\n            1,\n            midiControllers.attackTime\n        ), // linear forward bipolar cc 72\n        0x0, // no controller\n        generatorTypes.attackVolEnv,\n        6000,\n        0\n    ),\n    \n    // cc 72 (release time) to volEnv release\n    new DecodedModulator(\n        getModSourceEnum(\n            modulatorCurveTypes.linear,\n            1,\n            0,\n            1,\n            midiControllers.releaseTime\n        ), // linear forward bipolar cc 72\n        0x0, // no controller\n        generatorTypes.releaseVolEnv,\n        3600,\n        0\n    ),\n    \n    // cc 74 (brightness) to filterFc\n    new DecodedModulator(\n        getModSourceEnum(\n            modulatorCurveTypes.linear,\n            1,\n            0,\n            1,\n            midiControllers.brightness\n        ), // linear forwards bipolar cc 74\n        0x0, // no controller\n        generatorTypes.initialFilterFc,\n        6000,\n        0\n    ),\n    \n    // cc 71 (filter Q) to filter Q (default resonant modulator)\n    new DecodedModulator(\n        defaultResonantModSource,\n        0x0, // no controller\n        generatorTypes.initialFilterQ,\n        250,\n        0\n    )\n\n];\n\n/**\n * @type {Modulator[]}\n */\nexport const defaultModulators = soundFontModulators.concat(customModulators);", "import { midiControllers } from \"../../../midi/midi_message.js\";\nimport { modulatorSources } from \"../../../soundfont/basic_soundfont/modulator.js\";\n\n/*\n * A bit of explanation:\n * The controller table is stored as an int16 array, it stores 14-bit values.\n * This controller table is then extended with the modulatorSources section,\n * for example, pitch range and pitch range depth.\n * This allows us for precise control range and supports full pitch-wheel resolution.\n */\nexport const NON_CC_INDEX_OFFSET = 128;\nexport const CONTROLLER_TABLE_SIZE = 147;\n\n\n// an array with preset default values, so we can quickly use set() to reset the controllers\nexport const resetArray = new Int16Array(CONTROLLER_TABLE_SIZE).fill(0);\nexport const setResetValue = (i, v) => resetArray[i] = v << 7;\n\n// values come from Falcosoft MidiPlayer 6\nsetResetValue(midiControllers.mainVolume, 100);\nsetResetValue(midiControllers.balance, 64);\nsetResetValue(midiControllers.expressionController, 127);\nsetResetValue(midiControllers.pan, 64);\n\nsetResetValue(midiControllers.portamentoOnOff, 127);\n\nsetResetValue(midiControllers.filterResonance, 64);\nsetResetValue(midiControllers.releaseTime, 64);\nsetResetValue(midiControllers.attackTime, 64);\nsetResetValue(midiControllers.brightness, 64);\n\nsetResetValue(midiControllers.decayTime, 64);\nsetResetValue(midiControllers.vibratoRate, 64);\nsetResetValue(midiControllers.vibratoDepth, 64);\nsetResetValue(midiControllers.vibratoDelay, 64);\nsetResetValue(midiControllers.generalPurposeController6, 64);\nsetResetValue(midiControllers.generalPurposeController8, 64);\n\nsetResetValue(midiControllers.RPNLsb, 127);\nsetResetValue(midiControllers.RPNMsb, 127);\nsetResetValue(midiControllers.NRPNLsb, 127);\nsetResetValue(midiControllers.NRPNMsb, 127);\n\n\nexport const PORTAMENTO_CONTROL_UNSET = 1;\n// special case: portamento control\n// since it is only 7-bit, only the values at multiple of 128 are allowed.\n// a value of just 1 indicates no key set, hence no portamento.\n// this is the \"initial unset portamento key\" flag.\nresetArray[midiControllers.portamentoControl] = PORTAMENTO_CONTROL_UNSET;\n\n// pitch wheel\nsetResetValue(NON_CC_INDEX_OFFSET + modulatorSources.pitchWheel, 64);\nsetResetValue(NON_CC_INDEX_OFFSET + modulatorSources.pitchWheelRange, 2);\n\n/**\n * @enum {number}\n */\nexport const customControllers = {\n    channelTuning: 0,              // cents, RPN for fine tuning\n    channelTransposeFine: 1,       // cents, only the decimal tuning, (e.g., transpose is 4.5,\n    // then shift by 4 keys + tune by 50 cents)\n    modulationMultiplier: 2,       // cents, set by modulation depth RPN\n    masterTuning: 3,               // cents, set by system exclusive\n    channelTuningSemitones: 4,     // semitones, for RPN coarse tuning\n    channelKeyShift: 5,            // key shift: for system exclusive\n    sf2NPRNGeneratorLSB: 6         // sf2 NPRN LSB for selecting a generator value\n};\nexport const CUSTOM_CONTROLLER_TABLE_SIZE = Object.keys(customControllers).length;\nexport const customResetArray = new Float32Array(CUSTOM_CONTROLLER_TABLE_SIZE);\ncustomResetArray[customControllers.modulationMultiplier] = 1;\n/**\n * @enum {number}\n */\nexport const dataEntryStates = {\n    Idle: 0,\n    RPCoarse: 1,\n    RPFine: 2,\n    NRPCoarse: 3,\n    NRPFine: 4,\n    DataCoarse: 5,\n    DataFine: 6\n};\n/**\n * This is a channel configuration enum, it is internally sent from Synthetizer via controller change\n * @enum {number}\n */\nexport const channelConfiguration = {\n    velocityOverride: 128 // overrides velocity for the given channel\n};", "import { arrayToHexString, consoleColors } from \"../../../utils/other.js\";\nimport { SpessaSynthInfo, SpessaSynthWarn } from \"../../../utils/loggin.js\";\nimport { midiControllers } from \"../../../midi/midi_message.js\";\nimport { ALL_CHANNELS_OR_DIFFERENT_ACTION } from \"../../synth_constants.js\";\nimport { isSystemXG } from \"../../../utils/xg_hacks.js\";\nimport { masterParameterType } from \"./controller_control/master_parameters.js\";\nimport { readBytesAsString } from \"../../../utils/byte_functions/string.js\";\nimport { synthDisplayTypes } from \"../engine_components/enums.js\";\nimport { customControllers, NON_CC_INDEX_OFFSET } from \"../engine_components/controller_tables.js\";\nimport { modulatorSources } from \"../../../soundfont/basic_soundfont/modulator.js\";\n\nimport { generatorTypes } from \"../../../soundfont/basic_soundfont/generator_types.js\";\n\n/**\n * KeyNum: tuning\n * @typedef {MTSNoteTuning[]} MTSProgramTuning\n */\n\n/**\n * @typedef {Object} MTSNoteTuning\n * @property {number} midiNote - the base midi note to use, -1 means no change\n * @property {number} centTuning - additional tuning\n */\n\n/**\n * Calculates freqency for MIDI Tuning Standard\n * @param byte1 {number}\n * @param byte2 {number}\n * @param byte3 {number}\n * @return {{midiNote: number, centTuning: number|null}}\n */\nfunction getTuning(byte1, byte2, byte3)\n{\n    const midiNote = byte1;\n    const fraction = (byte2 << 7) | byte3; // Combine byte2 and byte3 into a 14-bit number\n    \n    // no change\n    if (byte1 === 0x7F && byte2 === 0x7F && byte3 === 0x7F)\n    {\n        return { midiNote: -1, centTuning: null };\n    }\n    \n    // calculate cent tuning\n    return { midiNote: midiNote, centTuning: fraction * 0.0061 };\n}\n\n/**\n * Executes a system exclusive\n * @param syx {number[]|IndexedByteArray} - the message data without f0\n * @param channelOffset {number}\n * @this {SpessaSynthProcessor}\n */\nexport function systemExclusive(syx, channelOffset = 0)\n{\n    const type = syx[0];\n    if (this.deviceID !== ALL_CHANNELS_OR_DIFFERENT_ACTION && syx[1] !== 0x7F)\n    {\n        if (this.deviceID !== syx[1])\n        {\n            // not our device ID\n            return;\n        }\n    }\n    \n    function niceLogging(channel, value, what, units)\n    {\n        SpessaSynthInfo(\n            `%cChannel %c${channel}%c ${what}. %c${value} ${units}%c, with %c${arrayToHexString(syx)}`,\n            consoleColors.info,\n            consoleColors.recognized,\n            consoleColors.info,\n            consoleColors.value,\n            consoleColors.info,\n            consoleColors.value\n        );\n    }\n    \n    function notRecognized()\n    {\n        // this is some other GS sysex...\n        SpessaSynthWarn(\n            `%cUnrecognized Roland %cGS %cSysEx: %c${arrayToHexString(syx)}`,\n            consoleColors.warn,\n            consoleColors.recognized,\n            consoleColors.warn,\n            consoleColors.unrecognized\n        );\n    }\n    \n    switch (type)\n    {\n        default:\n            SpessaSynthWarn(\n                `%cUnrecognized SysEx: %c${arrayToHexString(syx)}`,\n                consoleColors.warn,\n                consoleColors.unrecognized\n            );\n            break;\n        \n        // non realtime\n        case 0x7E:\n        case 0x7F:\n            switch (syx[2])\n            {\n                case 0x04:\n                    let cents;\n                    // device control\n                    switch (syx[3])\n                    {\n                        case 0x01:\n                            // main volume\n                            const vol = syx[5] << 7 | syx[4];\n                            this.setMIDIVolume(vol / 16384);\n                            SpessaSynthInfo(\n                                `%cMaster Volume. Volume: %c${vol}`,\n                                consoleColors.info,\n                                consoleColors.value\n                            );\n                            break;\n                        \n                        case 0x02:\n                            // main balance\n                            // midi spec page 62\n                            const balance = syx[5] << 7 | syx[4];\n                            const pan = (balance - 8192) / 8192;\n                            this.setMasterParameter(masterParameterType.masterPan, pan);\n                            SpessaSynthInfo(\n                                `%cMaster Pan. Pan: %c${pan}`,\n                                consoleColors.info,\n                                consoleColors.value\n                            );\n                            break;\n                        \n                        \n                        case 0x03:\n                            // fine-tuning\n                            const tuningValue = ((syx[5] << 7) | syx[6]) - 8192;\n                            cents = Math.floor(tuningValue / 81.92); // [-100;+99] cents range\n                            this.setMasterTuning(cents);\n                            SpessaSynthInfo(\n                                `%cMaster Fine Tuning. Cents: %c${cents}`,\n                                consoleColors.info,\n                                consoleColors.value\n                            );\n                            break;\n                        \n                        case 0x04:\n                            // coarse tuning\n                            // lsb is ignored\n                            const semitones = syx[5] - 64;\n                            cents = semitones * 100;\n                            this.setMasterTuning(cents);\n                            SpessaSynthInfo(\n                                `%cMaster Coarse Tuning. Cents: %c${cents}`,\n                                consoleColors.info,\n                                consoleColors.value\n                            );\n                            break;\n                        \n                        default:\n                            SpessaSynthWarn(\n                                `%cUnrecognized MIDI Device Control Real-time message: %c${arrayToHexString(syx)}`,\n                                consoleColors.warn,\n                                consoleColors.unrecognized\n                            );\n                    }\n                    break;\n                \n                case 0x09:\n                    // gm system related\n                    if (syx[3] === 0x01)\n                    {\n                        SpessaSynthInfo(\"%cGM1 system on\", consoleColors.info);\n                        this.setSystem(\"gm\");\n                    }\n                    else if (syx[3] === 0x03)\n                    {\n                        SpessaSynthInfo(\"%cGM2 system on\", consoleColors.info);\n                        this.setSystem(\"gm2\");\n                    }\n                    else\n                    {\n                        SpessaSynthInfo(\"%cGM system off, defaulting to GS\", consoleColors.info);\n                        this.setSystem(\"gs\");\n                    }\n                    break;\n                \n                // MIDI Tuning standard\n                // https://midi.org/midi-tuning-updated-specification\n                case 0x08:\n                    let currentMessageIndex = 4;\n                    switch (syx[3])\n                    {\n                        // bulk tuning dump: all 128 notes\n                        case 0x01:\n                            const program = syx[currentMessageIndex++];\n                            // read the name\n                            syx.currentIndex = currentMessageIndex;\n                            const tuningName = readBytesAsString(syx, 16);\n                            currentMessageIndex += 16;\n                            if (syx.length < 384)\n                            {\n                                SpessaSynthWarn(`The Bulk Tuning Dump is too short! (${syx.length} bytes, at least 384 are expected)`);\n                                return;\n                            }\n                            // 128 frequencies follow\n                            for (let i = 0; i < 128; i++)\n                            {\n                                // set the given tuning to the program\n                                this.tunings[program][i] = getTuning(\n                                    syx[currentMessageIndex++],\n                                    syx[currentMessageIndex++],\n                                    syx[currentMessageIndex++]\n                                );\n                            }\n                            SpessaSynthInfo(\n                                `%cBulk Tuning Dump %c${tuningName}%c Program: %c${program}`,\n                                consoleColors.info,\n                                consoleColors.value,\n                                consoleColors.info,\n                                consoleColors.recognized\n                            );\n                            break;\n                        \n                        // single note change\n                        // single note change bank\n                        case 0x02:\n                        case 0x07:\n                            if (syx[3] === 0x07)\n                            {\n                                // skip the bank\n                                currentMessageIndex++;\n                            }\n                            // get program and number of changes\n                            const tuningProgram = syx[currentMessageIndex++];\n                            const numberOfChanges = syx[currentMessageIndex++];\n                            for (let i = 0; i < numberOfChanges; i++)\n                            {\n                                // set the given tuning to the program\n                                this.tunings[tuningProgram][syx[currentMessageIndex++]] = getTuning(\n                                    syx[currentMessageIndex++],\n                                    syx[currentMessageIndex++],\n                                    syx[currentMessageIndex++]\n                                );\n                            }\n                            SpessaSynthInfo(\n                                `%cSingle Note Tuning. Program: %c${tuningProgram}%c Keys affected: %c${numberOfChanges}`,\n                                consoleColors.info,\n                                consoleColors.recognized,\n                                consoleColors.info,\n                                consoleColors.recognized\n                            );\n                            break;\n                        \n                        // octave tuning (1 byte)\n                        // and octave tuning (2 bytes)\n                        case 0x09:\n                        case 0x08:\n                            // get tuning:\n                            const newOctaveTuning = new Int8Array(12);\n                            // start from bit 7\n                            if (syx[3] === 0x08)\n                            {\n                                // 1 byte tuning: 0 is -64 cents, 64 is 0, 127 is +63\n                                for (let i = 0; i < 12; i++)\n                                {\n                                    newOctaveTuning[i] = syx[7 + i] - 64;\n                                }\n                            }\n                            else\n                            {\n                                // 2 byte tuning. Like fine tune: 0 is -100 cents, 8192 is 0 cents, 16,383 is +100 cents\n                                for (let i = 0; i < 24; i += 2)\n                                {\n                                    const tuning = ((syx[7 + i] << 7) | syx[8 + i]) - 8192;\n                                    newOctaveTuning[i / 2] = Math.floor(tuning / 81.92); // map to [-100;+99] cents\n                                }\n                            }\n                            // apply to channels (ordered from 0)\n                            // bit 1: 14 and 15\n                            if ((syx[4] & 1) === 1)\n                            {\n                                this.midiAudioChannels[14 + channelOffset].setOctaveTuning(newOctaveTuning);\n                            }\n                            if (((syx[4] >> 1) & 1) === 1)\n                            {\n                                this.midiAudioChannels[15 + channelOffset].setOctaveTuning(newOctaveTuning);\n                            }\n                            \n                            // bit 2: channels 7 to 13\n                            for (let i = 0; i < 7; i++)\n                            {\n                                const bit = (syx[5] >> i) & 1;\n                                if (bit === 1)\n                                {\n                                    this.midiAudioChannels[7 + i + channelOffset].setOctaveTuning(newOctaveTuning);\n                                }\n                            }\n                            \n                            // bit 3: channels 0 to 16\n                            for (let i = 0; i < 7; i++)\n                            {\n                                const bit = (syx[6] >> i) & 1;\n                                if (bit === 1)\n                                {\n                                    this.midiAudioChannels[i + channelOffset].setOctaveTuning(newOctaveTuning);\n                                }\n                            }\n                            \n                            SpessaSynthInfo(\n                                `%cMIDI Octave Scale ${\n                                    syx[3] === 0x08 ? \"(1 byte)\" : \"(2 bytes)\"\n                                } tuning via Tuning: %c${newOctaveTuning.join(\" \")}`,\n                                consoleColors.info,\n                                consoleColors.value\n                            );\n                            break;\n                        \n                        default:\n                            SpessaSynthWarn(\n                                `%cUnrecognized MIDI Tuning standard message: %c${arrayToHexString(syx)}`,\n                                consoleColors.warn,\n                                consoleColors.unrecognized\n                            );\n                            break;\n                    }\n                    break;\n                \n                default:\n                    SpessaSynthWarn(\n                        `%cUnrecognized MIDI Realtime/non realtime message: %c${arrayToHexString(syx)}`,\n                        consoleColors.warn,\n                        consoleColors.unrecognized\n                    );\n                \n            }\n            break;\n        \n        // this is a roland sysex\n        // http://www.bandtrax.com.au/sysex.htm\n        // https://cdn.roland.com/assets/media/pdf/AT-20R_30R_MI.pdf\n        case 0x41:\n            if (syx[2] === 0x42 && syx[3] === 0x12)\n            {\n                // this is a GS sysex\n                const messageValue = syx[7];\n                // syx[5] and [6] is the system parameter, syx[7] is the value\n                // either patch common or SC-88 mode set\n                if (syx[4] === 0x40 || (syx[4] === 0x00 && syx[6] === 0x7F))\n                {\n                    // this is a channel parameter\n                    if ((syx[5] & 0x10) > 0)\n                    {\n                        // this is an individual part (channel) parameter\n                        // determine the channel 0 means channel 10 (default), 1 means 1 etc.\n                        // SC88 manual page 196\n                        const channel = [9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15][syx[5] & 0x0F] + channelOffset;\n                        // for example, 0x1A means A = 11, which corresponds to channel 12 (counting from 1)\n                        const channelObject = this.midiAudioChannels[channel];\n                        switch (syx[6])\n                        {\n                            default:\n                                // this is some other GS sysex...\n                                notRecognized();\n                                break;\n                            \n                            case 0x15:\n                                // this is the Use for Drum Part sysex (multiple drums)\n                                const isDrums = messageValue > 0 && syx[5] >> 4; // if set to other than 0, is a drum channel\n                                channelObject.setDrums(isDrums);\n                                SpessaSynthInfo(\n                                    `%cChannel %c${channel}%c ${isDrums ?\n                                        \"is now a drum channel\"\n                                        :\n                                        \"now isn't a drum channel\"\n                                    }%c via: %c${arrayToHexString(syx)}`,\n                                    consoleColors.info,\n                                    consoleColors.value,\n                                    consoleColors.recognized,\n                                    consoleColors.info,\n                                    consoleColors.value\n                                );\n                                return;\n                            \n                            case 0x16:\n                                // this is the pitch key shift sysex\n                                const keyShift = messageValue - 64;\n                                channelObject.setCustomController(customControllers.channelKeyShift, keyShift);\n                                niceLogging(channel, keyShift, \"key shift\", \"keys\");\n                                return;\n                            \n                            // pan position\n                            case 0x1C:\n                                // 0 is random\n                                let panpot = messageValue;\n                                if (panpot === 0)\n                                {\n                                    channelObject.randomPan = true;\n                                    SpessaSynthInfo(\n                                        `%cRandom pan is set to %cON%c for %c${channel}`,\n                                        consoleColors.info,\n                                        consoleColors.recognized,\n                                        consoleColors.info,\n                                        consoleColors.value\n                                    );\n                                }\n                                else\n                                {\n                                    channelObject.randomPan = false;\n                                    channelObject.controllerChange(midiControllers.pan, panpot);\n                                }\n                                break;\n                            \n                            // chorus send\n                            case 0x21:\n                                channelObject.controllerChange(midiControllers.chorusDepth, messageValue);\n                                break;\n                            \n                            // reverb send\n                            case 0x22:\n                                channelObject.controllerChange(midiControllers.reverbDepth, messageValue);\n                                break;\n                            \n                            case 0x40:\n                            case 0x41:\n                            case 0x42:\n                            case 0x43:\n                            case 0x44:\n                            case 0x45:\n                            case 0x46:\n                            case 0x47:\n                            case 0x48:\n                            case 0x49:\n                            case 0x4A:\n                            case 0x4B:\n                                // scale tuning: up to 12 bytes\n                                const tuningBytes = syx.length - 9; // data starts at 7, minus checksum and f7\n                                // read em bytes\n                                const newTuning = new Int8Array(12);\n                                for (let i = 0; i < tuningBytes; i++)\n                                {\n                                    newTuning[i] = syx[i + 7] - 64;\n                                }\n                                channelObject.setOctaveTuning(newTuning);\n                                const cents = messageValue - 64;\n                                niceLogging(channel, newTuning.join(\" \"), \"octave scale tuning\", \"cents\");\n                                channelObject.setTuning(cents);\n                                break;\n                        }\n                        return;\n                    }\n                    else\n                        // this is a channel parameter also\n                    if ((syx[5] & 0x20) > 0)\n                    {\n                        // this is an individual part (channel) parameter\n                        // determine the channel 0 means channel 10 (default), 1 means 1 etc.\n                        const channel = [9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15][syx[5] & 0x0F] + channelOffset;\n                        // for example, 0x1A means A = 11, which corresponds to channel 12 (counting from 1)\n                        const channelObject = this.midiAudioChannels[channel];\n                        const centeredValue = (messageValue - 64);\n                        const normalizedValue = centeredValue / 64;\n                        const normalizedNotCentered = messageValue / 128;\n                        \n                        // setup receivers for cc to parameter (sc-88 manual page 198)\n                        const setupReceivers = (source, sourceName, bipolar = false) =>\n                        {\n                            switch (syx[6] & 0x0F)\n                            {\n                                case 0x00:\n                                    // see https://github.com/spessasus/SpessaSynth/issues/154\n                                    // pitch control\n                                    // special case:\n                                    // if the source is a pitch wheel, it's a strange way of setting the bend range\n                                    // testcase: th07_03.mid\n                                    if (source === NON_CC_INDEX_OFFSET + modulatorSources.pitchWheel)\n                                    {\n                                        channelObject.controllerChange(midiControllers.RPNMsb, 0x0);\n                                        channelObject.controllerChange(midiControllers.RPNLsb, 0x0);\n                                        channelObject.controllerChange(\n                                            midiControllers.dataEntryMsb,\n                                            Math.floor(centeredValue)\n                                        );\n                                    }\n                                    else\n                                    {\n                                        channelObject.sysExModulators.setModulator(\n                                            source,\n                                            generatorTypes.fineTune,\n                                            centeredValue * 100,\n                                            bipolar\n                                        );\n                                        niceLogging(channel, centeredValue, `${sourceName} pitch control`, \"semitones\");\n                                    }\n                                    break;\n                                \n                                case 0x01:\n                                    // cutoff\n                                    channelObject.sysExModulators.setModulator(\n                                        source,\n                                        generatorTypes.initialFilterFc,\n                                        normalizedValue * 9600,\n                                        bipolar\n                                    );\n                                    niceLogging(\n                                        channel,\n                                        normalizedValue * 9600,\n                                        `${sourceName} pitch control`,\n                                        \"cents\"\n                                    );\n                                    break;\n                                \n                                case 0x02:\n                                    // amplitude\n                                    channelObject.sysExModulators.setModulator(\n                                        source,\n                                        generatorTypes.initialAttenuation,\n                                        normalizedValue * 960, // spec says \"100%\" so 960cB in sf2\n                                        bipolar\n                                    );\n                                    niceLogging(channel, normalizedValue * 960, `${sourceName} amplitude`, \"cB\");\n                                    break;\n                                \n                                // rate control is ignored as it is in hertz\n                                \n                                case 0x04:\n                                    // LFO1 pitch depth\n                                    channelObject.sysExModulators.setModulator(\n                                        source,\n                                        generatorTypes.vibLfoToPitch,\n                                        normalizedNotCentered * 600,\n                                        bipolar\n                                    );\n                                    niceLogging(\n                                        channel,\n                                        normalizedNotCentered * 600,\n                                        `${sourceName} LFO1 pitch depth`,\n                                        \"cents\"\n                                    );\n                                    break;\n                                \n                                case 0x05:\n                                    // LFO1 filter depth\n                                    channelObject.sysExModulators.setModulator(\n                                        source,\n                                        generatorTypes.vibLfoToFilterFc,\n                                        normalizedNotCentered * 2400,\n                                        bipolar\n                                    );\n                                    niceLogging(\n                                        channel,\n                                        normalizedNotCentered * 2400,\n                                        `${sourceName} LFO1 filter depth`,\n                                        \"cents\"\n                                    );\n                                    break;\n                                \n                                case 0x06:\n                                    // LFO1 amplitude depth\n                                    channelObject.sysExModulators.setModulator(\n                                        source,\n                                        generatorTypes.vibLfoToVolume,\n                                        normalizedValue * 960,\n                                        bipolar\n                                    );\n                                    niceLogging(\n                                        channel,\n                                        normalizedValue * 960,\n                                        `${sourceName} LFO1 amplitude depth`,\n                                        \"cB\"\n                                    );\n                                    break;\n                                \n                                // rate control is ignored as it is in hertz\n                                \n                                case 0x08:\n                                    // LFO2 pitch depth\n                                    channelObject.sysExModulators.setModulator(\n                                        source,\n                                        generatorTypes.modLfoToPitch,\n                                        normalizedNotCentered * 600,\n                                        bipolar\n                                    );\n                                    niceLogging(\n                                        channel,\n                                        normalizedNotCentered * 600,\n                                        `${sourceName} LFO2 pitch depth`,\n                                        \"cents\"\n                                    );\n                                    break;\n                                \n                                case 0x09:\n                                    // LFO2 filter depth\n                                    channelObject.sysExModulators.setModulator(\n                                        source,\n                                        generatorTypes.modLfoToFilterFc,\n                                        normalizedNotCentered * 2400,\n                                        bipolar\n                                    );\n                                    niceLogging(\n                                        channel,\n                                        normalizedNotCentered * 2400,\n                                        `${sourceName} LFO2 filter depth`,\n                                        \"cents\"\n                                    );\n                                    break;\n                                \n                                case 0x0A:\n                                    // LFO2 amplitude depth\n                                    channelObject.sysExModulators.setModulator(\n                                        source,\n                                        generatorTypes.modLfoToVolume,\n                                        normalizedValue * 960,\n                                        bipolar\n                                    );\n                                    niceLogging(\n                                        channel,\n                                        normalizedValue * 960,\n                                        `${sourceName} LFO2 amplitude depth`,\n                                        \"cB\"\n                                    );\n                                    break;\n                            }\n                        };\n                        \n                        // SC88 manual page 198\n                        switch (syx[6] & 0xF0)\n                        {\n                            default:\n                                // this is some other GS sysex...\n                                notRecognized();\n                                break;\n                            \n                            case 0x00:\n                                // modulation wheel\n                                setupReceivers(midiControllers.modulationWheel, \"mod wheel\");\n                                break;\n                            \n                            case 0x10:\n                                // pitch bend\n                                setupReceivers(NON_CC_INDEX_OFFSET + modulatorSources.pitchWheel, \"pitch bend\", true);\n                                break;\n                            \n                            case 0x20:\n                                // channel pressure\n                                setupReceivers(\n                                    NON_CC_INDEX_OFFSET + modulatorSources.channelPressure,\n                                    \"channel pressure\"\n                                );\n                                break;\n                            \n                            case 0x30:\n                                // poly pressure\n                                setupReceivers(\n                                    NON_CC_INDEX_OFFSET + modulatorSources.polyPressure,\n                                    \"poly pressure\"\n                                );\n                                break;\n                        }\n                        return;\n                    }\n                    else\n                        // this is a global system parameter\n                    if (syx[5] === 0x00)\n                    {\n                        switch (syx[6])\n                        {\n                            default:\n                                notRecognized();\n                                break;\n                            \n                            case 0x7F:\n                                // roland mode set\n                                // GS mode set\n                                if (messageValue === 0x00)\n                                {\n                                    // this is a GS reset\n                                    SpessaSynthInfo(\"%cGS Reset received!\", consoleColors.info);\n                                    this.resetAllControllers(false);\n                                    this.setSystem(\"gs\");\n                                }\n                                else if (messageValue === 0x7F)\n                                {\n                                    // GS mode off\n                                    SpessaSynthInfo(\"%cGS system off, switching to GM2\", consoleColors.info);\n                                    this.resetAllControllers(false);\n                                    this.setSystem(\"gm2\");\n                                }\n                                break;\n                            \n                            case 0x06:\n                                // roland master pan\n                                SpessaSynthInfo(\n                                    `%cRoland GS Master Pan set to: %c${messageValue}%c with: %c${arrayToHexString(\n                                        syx)}`,\n                                    consoleColors.info,\n                                    consoleColors.value,\n                                    consoleColors.info,\n                                    consoleColors.value\n                                );\n                                this.setMasterParameter(masterParameterType.masterPan, (messageValue - 64) / 64);\n                                break;\n                            \n                            \n                            case 0x04:\n                                // roland GS master volume\n                                SpessaSynthInfo(\n                                    `%cRoland GS Master Volume set to: %c${messageValue}%c with: %c${arrayToHexString(\n                                        syx)}`,\n                                    consoleColors.info,\n                                    consoleColors.value,\n                                    consoleColors.info,\n                                    consoleColors.value\n                                );\n                                this.setMIDIVolume(messageValue / 127);\n                                break;\n                            \n                            case 0x05:\n                                // roland master key shift (transpose)\n                                const transpose = messageValue - 64;\n                                SpessaSynthInfo(\n                                    `%cRoland GS Master Key-Shift set to: %c${transpose}%c with: %c${arrayToHexString(\n                                        syx)}`,\n                                    consoleColors.info,\n                                    consoleColors.value,\n                                    consoleColors.info,\n                                    consoleColors.value\n                                );\n                                this.setMasterTuning(transpose * 100);\n                                break;\n                        }\n                        return;\n                    }\n                    else\n                        // this is a global system parameter also\n                    if (syx[5] === 0x01)\n                    {\n                        switch (syx[6])\n                        {\n                            default:\n                                notRecognized();\n                                break;\n                            \n                            case 0x00:\n                                // patch name. cool!\n                                syx.currentIndex = 7;\n                                const patchName = readBytesAsString(syx, 16);\n                                SpessaSynthInfo(\n                                    `%cGS Patch name: %c${patchName}`,\n                                    consoleColors.info,\n                                    consoleColors.value\n                                );\n                                break;\n                            \n                            case 0x33:\n                                // reverb level\n                                SpessaSynthInfo(\n                                    `%cGS Reverb level: %c${messageValue}`,\n                                    consoleColors.info, consoleColors.value\n                                );\n                                // 64 is the default\n                                this.reverbSend = messageValue / 64;\n                                break;\n                            \n                            // unsupported reverb params\n                            case 0x30:\n                            case 0x31:\n                            case 0x32:\n                            case 0x34:\n                            case 0x35:\n                            case 0x37:\n                                SpessaSynthInfo(\n                                    `%cUnsupported GS Reverb Parameter: %c${syx[6].toString(16)}`,\n                                    consoleColors.warn, consoleColors.unrecognized\n                                );\n                                break;\n                            \n                            case 0x3A:\n                                // chorus level\n                                SpessaSynthInfo(\n                                    `%cGS Chorus level: %c${messageValue}`,\n                                    consoleColors.info, consoleColors.value\n                                );\n                                // 64 is the default\n                                this.chorusSend = messageValue / 64;\n                                break;\n                            \n                            // unsupported chorus params\n                            case 0x38:\n                            case 0x39:\n                            case 0x3B:\n                            case 0x3C:\n                            case 0x3D:\n                            case 0x3E:\n                            case 0x3F:\n                            case 0x40:\n                                SpessaSynthInfo(\n                                    `%cUnsupported GS Chorus Parameter: %c${syx[6].toString(16)}`,\n                                    consoleColors.warn, consoleColors.unrecognized\n                                );\n                                break;\n                        }\n                    }\n                }\n                else\n                {\n                    // this is some other GS sysex...\n                    notRecognized();\n                }\n                return;\n            }\n            else if (syx[2] === 0x45 && syx[3] === 0x12)\n            {\n                // 0x45: GS Display Data, 0x12: DT1 (Device Transmit)\n                // check for embedded copyright\n                // (roland SC display sysex) http://www.bandtrax.com.au/sysex.htm\n                \n                if (\n                    syx[4] === 0x10 && // Sound Canvas Display\n                    syx[6] === 0x00    // Data follows\n                )\n                {\n                    if (syx[5] === 0x00) // Display letters\n                    {\n                        // get the text\n                        // and header ends with (checksum) F7\n                        const text = new Uint8Array(syx.slice(7, syx.length - 2));\n                        this.callEvent(\n                            \"synthdisplay\",\n                            {\n                                displayData: text,\n                                displayType: synthDisplayTypes.SoundCanvasText\n                            }\n                        );\n                    }\n                    else if (syx[5] === 0x01) // Matrix display\n                    {\n                        // get the data\n                        // and header ends with (checksum) F7\n                        const dotMatrixData = new Uint8Array(syx.slice(7, syx.length - 3));\n                        this.callEvent(\n                            \"synthdisplay\",\n                            {\n                                displayData: dotMatrixData,\n                                displayType: synthDisplayTypes.SoundCanvasDotDisplay\n                            }\n                        );\n                        SpessaSynthInfo(\n                            `%cRoland SC Display Dot Matrix via: %c${arrayToHexString(\n                                syx)}`,\n                            consoleColors.info,\n                            consoleColors.value\n                        );\n                    }\n                    else\n                    {\n                        // this is some other GS sysex...\n                        notRecognized();\n                    }\n                }\n            }\n            else if (syx[2] === 0x16 && syx[3] === 0x12 && syx[4] === 0x10)\n            {\n                // this is a roland master volume message\n                this.setMIDIVolume(syx[7] / 100);\n                SpessaSynthInfo(\n                    `%cRoland Master Volume control set to: %c${syx[7]}%c via: %c${arrayToHexString(\n                        syx)}`,\n                    consoleColors.info,\n                    consoleColors.value,\n                    consoleColors.info,\n                    consoleColors.value\n                );\n                return;\n            }\n            else\n            {\n                // this is something else...\n                SpessaSynthWarn(\n                    `%cUnrecognized Roland SysEx: %c${arrayToHexString(syx)}`,\n                    consoleColors.warn,\n                    consoleColors.unrecognized\n                );\n                return;\n            }\n            break;\n        \n        // yamaha\n        // http://www.studio4all.de/htmle/main91.html\n        case 0x43:\n            // XG sysex\n            if (syx[2] === 0x4C)\n            {\n                // XG system parameter\n                if (syx[3] === 0x00 && syx[4] === 0x00)\n                {\n                    switch (syx[5])\n                    {\n                        // master volume\n                        case 0x04:\n                            const vol = syx[6];\n                            this.setMIDIVolume(vol / 127);\n                            SpessaSynthInfo(\n                                `%cXG master volume. Volume: %c${vol}`,\n                                consoleColors.info,\n                                consoleColors.recognized\n                            );\n                            break;\n                        \n                        // master transpose\n                        case 0x06:\n                            const transpose = syx[6] - 64;\n                            this.transposeAllChannels(transpose);\n                            SpessaSynthInfo(\n                                `%cXG master transpose. Volume: %c${transpose}`,\n                                consoleColors.info,\n                                consoleColors.recognized\n                            );\n                            break;\n                        \n                        // XG on\n                        case 0x7E:\n                            SpessaSynthInfo(\"%cXG system on\", consoleColors.info);\n                            this.resetAllControllers(false);\n                            this.setSystem(\"xg\");\n                            break;\n                    }\n                }\n                else\n                    // XG part parameter\n                if (syx[3] === 0x08)\n                {\n                    if (!isSystemXG(this.system))\n                    {\n                        return;\n                    }\n                    const channel = syx[4] + channelOffset;\n                    if (channel >= this.midiAudioChannels.length)\n                    {\n                        // invalid channel\n                        return;\n                    }\n                    const channelObject = this.midiAudioChannels[channel];\n                    const value = syx[6];\n                    switch (syx[5])\n                    {\n                        // bank-select MSB\n                        case 0x01:\n                            channelObject.controllerChange(midiControllers.bankSelect, value);\n                            break;\n                        \n                        // bank-select LSB\n                        case 0x02:\n                            channelObject.controllerChange(midiControllers.lsbForControl0BankSelect, value);\n                            break;\n                        \n                        // program change\n                        case 0x03:\n                            channelObject.programChange(value);\n                            break;\n                        \n                        // note shift\n                        case 0x08:\n                            if (channelObject.drumChannel)\n                            {\n                                return;\n                            }\n                            const semitones = value - 64;\n                            channelObject.channelTransposeKeyShift = semitones;\n                            break;\n                        \n                        // volume\n                        case 0x0B:\n                            channelObject.controllerChange(midiControllers.mainVolume, value);\n                            break;\n                        \n                        // pan position\n                        case 0x0E:\n                            let pan = value;\n                            if (pan === 0)\n                            {\n                                // 0 means random\n                                channelObject.randomPan = true;\n                                SpessaSynthInfo(\n                                    `%cRandom pan is set to %cON%c for %c${channel}`,\n                                    consoleColors.info,\n                                    consoleColors.recognized,\n                                    consoleColors.info,\n                                    consoleColors.value\n                                );\n                            }\n                            else\n                            {\n                                channelObject.controllerChange(midiControllers.pan, pan);\n                            }\n                            break;\n                        \n                        // reverb\n                        case 0x13:\n                            channelObject.controllerChange(midiControllers.reverbDepth, value);\n                            break;\n                        \n                        // chorus\n                        case 0x12:\n                            channelObject.controllerChange(midiControllers.chorusDepth, value);\n                            break;\n                        \n                        default:\n                            SpessaSynthWarn(\n                                `%cUnrecognized Yamaha XG Part Setup: %c${syx[5].toString(16)\n                                    .toUpperCase()}`,\n                                consoleColors.warn,\n                                consoleColors.unrecognized\n                            );\n                    }\n                }\n                else if (\n                    syx[3] === 0x06 && // XG System parameter\n                    syx[4] === 0x00    // System Byte\n                )\n                {\n                    // displayed letters (remove F7 at the end)\n                    // include byte 5 as it seems to be line information (useful)\n                    const textData = new Uint8Array(syx.slice(5, syx.length - 1));\n                    this.callEvent(\n                        \"synthdisplay\",\n                        {\n                            displayData: textData,\n                            displayType: synthDisplayTypes.XGText\n                        }\n                    );\n                }\n                else if (isSystemXG(this.system))\n                {\n                    SpessaSynthWarn(\n                        `%cUnrecognized Yamaha XG SysEx: %c${arrayToHexString(syx)}`,\n                        consoleColors.warn,\n                        consoleColors.unrecognized\n                    );\n                }\n                \n            }\n            else\n            {\n                if (isSystemXG(this.system))\n                {\n                    SpessaSynthWarn(\n                        `%cUnrecognized Yamaha SysEx: %c${arrayToHexString(syx)}`,\n                        consoleColors.warn,\n                        consoleColors.unrecognized\n                    );\n                }\n            }\n            break;\n        \n        \n    }\n}", "import { consoleColors } from \"../../../../utils/other.js\";\nimport { SpessaSynthInfo } from \"../../../../utils/loggin.js\";\nimport { modulatorSources } from \"../../../../soundfont/basic_soundfont/modulator.js\";\nimport {\n    customControllers,\n    customResetArray,\n    dataEntryStates,\n    NON_CC_INDEX_OFFSET,\n    PORTAMENTO_CONTROL_UNSET,\n    resetArray\n} from \"../../engine_components/controller_tables.js\";\nimport { midiControllers } from \"../../../../midi/midi_message.js\";\nimport { DEFAULT_PERCUSSION, DEFAULT_SYNTH_MODE } from \"../../../synth_constants.js\";\nimport { getDefaultBank } from \"../../../../utils/xg_hacks.js\";\n\n\n/**\n * Full system reset\n * @this {SpessaSynthProcessor}\n * @param log {boolean}\n */\nexport function resetAllControllers(log = true)\n{\n    if (log)\n    {\n        SpessaSynthInfo(\"%cResetting all controllers!\", consoleColors.info);\n    }\n    this.callEvent(\"allcontrollerreset\", undefined);\n    this.setSystem(DEFAULT_SYNTH_MODE);\n    for (let channelNumber = 0; channelNumber < this.midiAudioChannels.length; channelNumber++)\n    {\n        /**\n         * @type {MidiAudioChannel}\n         **/\n        const ch = this.midiAudioChannels[channelNumber];\n        \n        ch.resetControllers();\n        // if preset is unlocked, switch to non-drums and call event\n        if (!ch.lockPreset)\n        {\n            ch.setBankSelect(getDefaultBank(this.system));\n            if (channelNumber % 16 === DEFAULT_PERCUSSION)\n            {\n                ch.setPreset(this.drumPreset);\n                ch.drumChannel = true;\n                this.callEvent(\"drumchange\", {\n                    channel: channelNumber,\n                    isDrumChannel: true\n                });\n            }\n            else\n            {\n                ch.drumChannel = false;\n                ch.setPreset(this.defaultPreset);\n                this.callEvent(\"drumchange\", {\n                    channel: channelNumber,\n                    isDrumChannel: false\n                });\n            }\n        }\n        else\n        {\n            this.callEvent(\"drumchange\", {\n                channel: channelNumber,\n                isDrumChannel: ch.drumChannel\n            });\n        }\n        // safety net\n        if (!ch.preset)\n        {\n            continue;\n        }\n        const presetBank = ch.preset?.bank;\n        // call program change\n        this.callEvent(\"programchange\", {\n            channel: channelNumber,\n            program: ch.preset?.program,\n            bank: presetBank\n        });\n        \n        for (let ccNum = 0; ccNum < 128; ccNum++)\n        {\n            if (this.midiAudioChannels[channelNumber].lockedControllers[ccNum])\n            {\n                // was not reset so restore the value\n                this.callEvent(\"controllerchange\", {\n                    channel: channelNumber,\n                    controllerNumber: ccNum,\n                    controllerValue: this.midiAudioChannels[channelNumber].midiControllers[ccNum] >> 7\n                });\n            }\n            \n        }\n        \n        \n        // restore pitch wheel\n        if (this.midiAudioChannels[channelNumber].lockedControllers[NON_CC_INDEX_OFFSET + modulatorSources.pitchWheel] === false)\n        {\n            const val = this.midiAudioChannels[channelNumber].midiControllers[NON_CC_INDEX_OFFSET + modulatorSources.pitchWheel];\n            const msb = val >> 7;\n            const lsb = val & 0x7F;\n            this.callEvent(\"pitchwheel\", {\n                channel: channelNumber,\n                MSB: msb,\n                LSB: lsb\n            });\n        }\n        \n        // restore channel pressure\n        if (this.midiAudioChannels[channelNumber].lockedControllers[NON_CC_INDEX_OFFSET + modulatorSources.channelPressure] === false)\n        {\n            const val = this.midiAudioChannels[channelNumber].midiControllers[NON_CC_INDEX_OFFSET + modulatorSources.channelPressure] >> 7;\n            this.callEvent(\"channelpressure\", {\n                channel: channelNumber,\n                pressure: val\n            });\n        }\n    }\n    this.tunings = [];\n    this.tunings = [];\n    for (let i = 0; i < 128; i++)\n    {\n        this.tunings.push([]);\n    }\n    \n    this.setMIDIVolume(1);\n}\n\n/**\n * Resets all controllers for channel\n * @this {MidiAudioChannel}\n */\nexport function resetControllers()\n{\n    this.channelOctaveTuning.fill(0);\n    \n    // reset the array\n    for (let i = 0; i < resetArray.length; i++)\n    {\n        if (this.lockedControllers[i])\n        {\n            continue;\n        }\n        const resetValue = resetArray[i];\n        if (this.midiControllers[i] !== resetValue && i < 127)\n        {\n            if (i === midiControllers.portamentoControl)\n            {\n                this.midiControllers[i] = PORTAMENTO_CONTROL_UNSET;\n            }\n            else\n            {\n                this.controllerChange(i, resetValue >> 7);\n            }\n        }\n        else\n        {\n            // out of range, do a regular reset\n            this.midiControllers[i] = resetValue;\n        }\n    }\n    this.channelVibrato = { rate: 0, depth: 0, delay: 0 };\n    this.holdPedal = false;\n    this.randomPan = false;\n    \n    this.sysExModulators.resetModulators();\n    \n    // reset custom controllers\n    // special case: transpose does not get affected\n    const transpose = this.customControllers[customControllers.channelTransposeFine];\n    this.customControllers.set(customResetArray);\n    this.setCustomController(customControllers.channelTransposeFine, transpose);\n    this.resetParameters();\n    \n}\n\n\n/**\n * @type {Set<midiControllers|number>}\n */\nexport const nonResetableCCs = new Set([\n    midiControllers.bankSelect,\n    midiControllers.lsbForControl0BankSelect,\n    midiControllers.mainVolume,\n    midiControllers.lsbForControl7MainVolume,\n    midiControllers.pan,\n    midiControllers.lsbForControl10Pan,\n    midiControllers.reverbDepth,\n    midiControllers.tremoloDepth,\n    midiControllers.chorusDepth,\n    midiControllers.detuneDepth,\n    midiControllers.phaserDepth,\n    midiControllers.soundVariation,\n    midiControllers.filterResonance,\n    midiControllers.releaseTime,\n    midiControllers.attackTime,\n    midiControllers.brightness,\n    midiControllers.decayTime,\n    midiControllers.vibratoRate,\n    midiControllers.vibratoDepth,\n    midiControllers.vibratoDelay,\n    midiControllers.soundController10\n]);\n\n/**\n * Reset all controllers for channel, but RP-15 compliant\n *  https://amei.or.jp/midistandardcommittee/Recommended_Practice/e/rp15.pdf\n *  @this {MidiAudioChannel}\n */\nexport function resetControllersRP15Compliant()\n{\n    // reset tunings\n    this.channelOctaveTuning.fill(0);\n    \n    // reset pitch bend\n    this.pitchWheel(64, 0);\n    \n    this.channelVibrato = { rate: 0, depth: 0, delay: 0 };\n    \n    for (let i = 0; i < 128; i++)\n    {\n        const resetValue = resetArray[i];\n        if (!nonResetableCCs.has(i) && resetValue !== this.midiControllers[i])\n        {\n            if (i === midiControllers.portamentoControl)\n            {\n                this.midiControllers[i] = PORTAMENTO_CONTROL_UNSET;\n            }\n            else\n            {\n                this.controllerChange(i, resetValue >> 7);\n            }\n        }\n    }\n    this.resetGeneratorOverrides();\n    this.resetGeneratorOffsets();\n}\n\n/**\n * @this {MidiAudioChannel}\n */\nexport function resetParameters()\n{\n    /**\n     * reset the state machine to idle\n     */\n    this.dataEntryState = dataEntryStates.Idle;\n    this.midiControllers[midiControllers.NRPNLsb] = 127 << 7;\n    this.midiControllers[midiControllers.NRPNMsb] = 127 << 7;\n    this.midiControllers[midiControllers.RPNLsb] = 127 << 7;\n    this.midiControllers[midiControllers.RPNMsb] = 127 << 7;\n    this.resetGeneratorOverrides();\n    this.resetGeneratorOffsets();\n}", "import { SpessaSynthInfo, SpessaSynthWarn } from \"../../../utils/loggin.js\";\nimport { isXGDrums } from \"../../../utils/xg_hacks.js\";\nimport { EMBEDDED_SOUND_BANK_ID } from \"../../synth_constants.js\";\n\n/**\n * @typedef {Object} SoundFontType\n * @property {string} id - unique id for the soundfont\n * @property {BasicSoundBank} soundfont - the soundfont itself\n * @property {number} bankOffset - the soundfont's bank offset\n */\n\nexport class SoundFontManager\n{\n    /**\n     * All the soundfonts, ordered from the most important to the least.\n     * @type {SoundFontType[]}\n     */\n    soundfontList = [];\n    /**\n     * @type {{bank: number, presetName: string, program: number}[]}\n     */\n    presetList = [];\n    \n    /**\n     * @param presetListChangeCallback {function} to call when stuff changes\n     */\n    constructor(presetListChangeCallback)\n    {\n        this.presetListChangeCallback = presetListChangeCallback;\n    }\n    \n    generatePresetList()\n    {\n        /**\n         * <\"bank-program\", \"presetName\">\n         * @type {Record<string, string>}\n         */\n        const presetList = {};\n        // gather the presets in reverse and replace if necessary\n        for (let i = this.soundfontList.length - 1; i >= 0; i--)\n        {\n            const font = this.soundfontList[i];\n            /**\n             * prevent preset names from the same soudfont from being overriden\n             * if the soundfont has two presets with matching bank and program\n             * @type {Set<string>}\n             */\n            const presets = new Set();\n            for (const p of font.soundfont.presets)\n            {\n                const bank = Math.min(128, p.bank + font.bankOffset);\n                const presetString = `${bank}-${p.program}`;\n                if (presets.has(presetString))\n                {\n                    continue;\n                }\n                presets.add(presetString);\n                presetList[presetString] = p.presetName;\n            }\n        }\n        \n        this.presetList = [];\n        for (const [string, name] of Object.entries(presetList))\n        {\n            const pb = string.split(\"-\");\n            this.presetList.push({\n                presetName: name,\n                program: parseInt(pb[1]),\n                bank: parseInt(pb[0])\n            });\n        }\n        this.presetListChangeCallback();\n    }\n    \n    /**\n     * Get the final preset list\n     * @returns {{bank: number, presetName: string, program: number}[]}\n     */\n    getPresetList()\n    {\n        return this.presetList.slice();\n    }\n    \n    // noinspection JSUnusedGlobalSymbols\n    /**\n     * Clears all soundfonts and adds a new one with an ID \"main\"\n     * @param soundFont {BasicSoundBank}\n     */\n    reloadManager(soundFont)\n    {\n        // do not clear the embedded bank\n        this.soundfontList = this.soundfontList.filter(sf => sf.id === EMBEDDED_SOUND_BANK_ID);\n        this.soundfontList.push({\n            id: \"main\",\n            bankOffset: 0,\n            soundfont: soundFont\n        });\n        this.generatePresetList();\n    }\n    \n    // noinspection JSUnusedGlobalSymbols\n    /**\n     * Deletes a given soundfont.\n     * @param id {string}\n     */\n    deleteSoundFont(id)\n    {\n        if (this.soundfontList.length === 0)\n        {\n            SpessaSynthWarn(\"1 soundfont left. Aborting!\");\n            return;\n        }\n        const index = this.soundfontList.findIndex(s => s.id === id);\n        if (index === -1)\n        {\n            SpessaSynthInfo(`No soundfont with id of \"${id}\" found. Aborting!`);\n            return;\n        }\n        this.soundfontList.splice(index, 1);\n        this.generatePresetList();\n    }\n    \n    // noinspection JSUnusedGlobalSymbols\n    /**\n     * Adds a new soundfont with a given ID, or replaces an existing one.\n     * @param font {BasicSoundBank}\n     * @param id {string}\n     * @param bankOffset {number}\n     */\n    addNewSoundFont(font, id, bankOffset)\n    {\n        if (this.soundfontList.find(s => s.id === id) !== undefined)\n        {\n            // replace\n            const soundfont = this.soundfontList.find(s => s.id === id);\n            soundfont.soundfont = font;\n            soundfont.bankOffset = bankOffset;\n        }\n        else\n        {\n            this.soundfontList.push({\n                id: id,\n                soundfont: font,\n                bankOffset: bankOffset\n            });\n        }\n        this.generatePresetList();\n    }\n    \n    /**\n     * Gets the current soundfont order\n     * @returns {string[]}\n     */\n    getCurrentSoundFontOrder()\n    {\n        return this.soundfontList.map(s => s.id);\n    }\n    \n    // noinspection JSUnusedGlobalSymbols\n    /**\n     * Rearranges the soundfonts\n     * @param newList {string[]} the order of soundfonts, a list of strings, first overwrites second\n     */\n    rearrangeSoundFonts(newList)\n    {\n        this.soundfontList.sort((a, b) =>\n            newList.indexOf(a.id) - newList.indexOf(b.id)\n        );\n        this.generatePresetList();\n    }\n    \n    /**\n     * Gets a given preset from the soundfont stack\n     * @param bankNumber {number}\n     * @param programNumber {number}\n     * @param allowXGDrums {boolean} if true, allows XG drum banks (120, 126 and 127) as drum preset\n     * @returns {{preset: BasicPreset, bankOffset: number}} the preset and its bank offset\n     */\n    getPreset(bankNumber, programNumber, allowXGDrums = false)\n    {\n        if (this.soundfontList.length < 1)\n        {\n            throw new Error(\"No soundfonts! Did you forget to add one?\");\n        }\n        const isDrum = bankNumber === 128 || (allowXGDrums && isXGDrums(bankNumber));\n        for (const sf of this.soundfontList)\n        {\n            // check for the preset (with given offset)\n            const preset = sf.soundfont.getPresetNoFallback(\n                bankNumber === 128 ? 128 : bankNumber - sf.bankOffset,\n                programNumber,\n                allowXGDrums\n            );\n            if (preset !== undefined)\n            {\n                return {\n                    preset: preset,\n                    bankOffset: sf.bankOffset\n                };\n            }\n            // if not found, advance to the next soundfont\n        }\n        // if none found, return the first correct preset found\n        if (!isDrum)\n        {\n            for (const sf of this.soundfontList)\n            {\n                const preset = sf.soundfont.presets.find(p => p.program === programNumber && !p.isDrumPreset(\n                    allowXGDrums));\n                if (preset)\n                {\n                    return {\n                        preset: preset,\n                        bankOffset: sf.bankOffset\n                    };\n                }\n            }\n            // if nothing at all, use the first preset\n            const sf = this.soundfontList[0];\n            return {\n                preset: sf.soundfont.presets[0],\n                bankOffset: sf.bankOffset\n            };\n        }\n        else\n        {\n            for (const sf of this.soundfontList)\n            {\n                // check for any drum type (127/128) and matching program\n                const p = sf.soundfont.presets.find(p => p.isDrumPreset(allowXGDrums) && p.program === programNumber);\n                if (p)\n                {\n                    return {\n                        preset: p,\n                        bankOffset: sf.bankOffset\n                    };\n                }\n                // check for any drum preset\n                const preset = sf.soundfont.presets.find(p => p.isDrumPreset(allowXGDrums));\n                if (preset)\n                {\n                    return {\n                        preset: preset,\n                        bankOffset: sf.bankOffset\n                    };\n                }\n            }\n            // if nothing at all, use the first preset\n            const sf = this.soundfontList[0];\n            return {\n                preset: sf.soundfont.presets[0],\n                bankOffset: sf.bankOffset\n            };\n        }\n    }\n    \n    destroyManager()\n    {\n        this.soundfontList.forEach(s =>\n        {\n            s.soundfont.destroySoundBank();\n        });\n        delete this.soundfontList;\n    }\n}", "/**\n * A manager for custom key overrides for channels\n */\n\nexport class KeyModifier\n{\n    \n    /**\n     * The new override velocity. -1 means unchanged\n     * @type {number}\n     */\n    velocity = -1;\n    /**\n     * The patch this key uses. -1 on either means default\n     * @type {{bank: number, program: number}}\n     */\n    patch = { bank: -1, program: -1 };\n    \n    /**\n     * Linear gain override for the voice\n     */\n    gain = 1;\n    \n    /**\n     * @param velocity {number}\n     * @param bank {number}\n     * @param program {number}\n     * @param gain {number}\n     */\n    constructor(velocity = -1, bank = -1, program = -1, gain = 1)\n    {\n        this.velocity = velocity;\n        this.patch = {\n            bank: bank,\n            program: program\n        };\n        this.gain = gain;\n    }\n}\n\nexport class KeyModifierManager\n{\n    /**\n     * The velocity override mappings for MIDI keys\n     * stored as [channelNumber][midiNote]\n     * @type {KeyModifier[][]}\n     * @private\n     */\n    _keyMappings = [];\n    \n    // noinspection JSUnusedGlobalSymbols\n    /**\n     * @param channel {number}\n     * @param midiNote {number}\n     * @param mapping {KeyModifier}\n     */\n    addMapping(channel, midiNote, mapping)\n    {\n        if (this._keyMappings[channel] === undefined)\n        {\n            this._keyMappings[channel] = [];\n        }\n        this._keyMappings[channel][midiNote] = mapping;\n    }\n    \n    // noinspection JSUnusedGlobalSymbols\n    /**\n     * @param channel {number}\n     * @param midiNote {number}\n     */\n    deleteMapping(channel, midiNote)\n    {\n        if (this._keyMappings[channel]?.[midiNote] === undefined)\n        {\n            return;\n        }\n        this._keyMappings[channel][midiNote] = undefined;\n    }\n    \n    // noinspection JSUnusedGlobalSymbols\n    /**\n     * Clear all mappings\n     */\n    clearMappings()\n    {\n        this._keyMappings = [];\n    }\n    \n    /**\n     * @param mappings {KeyModifier[][]}\n     */\n    setMappings(mappings)\n    {\n        this._keyMappings = mappings;\n    }\n    \n    /**\n     * @returns {KeyModifier[][]}\n     */\n    getMappings()\n    {\n        return this._keyMappings;\n    }\n    \n    /**\n     * @param channel {number}\n     * @param midiNote {number}\n     * @returns {number} velocity, -1 if unchanged\n     */\n    getVelocity(channel, midiNote)\n    {\n        return this._keyMappings[channel]?.[midiNote]?.velocity ?? -1;\n    }\n    \n    /**\n     * @param channel {number}\n     * @param midiNote {number}\n     * @returns {number} linear gain\n     */\n    getGain(channel, midiNote)\n    {\n        return this._keyMappings[channel]?.[midiNote]?.gain ?? 1;\n    }\n    \n    /**\n     * @param channel {number}\n     * @param midiNote {number}\n     * @returns {boolean}\n     */\n    hasOverridePatch(channel, midiNote)\n    {\n        const bank = this._keyMappings[channel]?.[midiNote]?.patch?.bank;\n        return bank !== undefined && bank >= 0;\n    }\n    \n    /**\n     * @param channel {number}\n     * @param midiNote {number}\n     * @returns {{bank: number, program: number}} -1 if unchanged\n     */\n    getPatch(channel, midiNote)\n    {\n        const modifier = this._keyMappings[channel]?.[midiNote];\n        if (modifier)\n        {\n            return modifier.patch;\n        }\n        throw new Error(\"No modifier.\");\n    }\n    \n}", "import { absCentsToHz, decibelAttenuationToGain } from \"./unit_converter.js\";\nimport { generatorTypes } from \"../../../soundfont/basic_soundfont/generator_types.js\";\n\n/**\n * lowpass_filter.js\n * purpose: applies a low pass filter to a voice\n * note to self: a lot of tricks and come from fluidsynth.\n * They are the real smart guys.\n * Shoutout to them!\n * Give their repo a star over at:\n * https://github.com/FluidSynth/fluidsynth\n */\n\nexport const FILTER_SMOOTHING_FACTOR = 0.1;\n\n/**\n * @typedef {Object} CachedCoefficient\n * @property {number} a0 - Filter coefficient 1\n * @property {number} a1 - Filter coefficient 2\n * @property {number} a2 - Filter coefficient 3\n * @property {number} a3 - Filter coefficient 4\n * @property {number} a4 - Filter coefficient 5\n */\n\nexport class LowpassFilter\n{\n    /**\n     * Cached coefficient calculations\n     * stored as cachedCoefficients[resonanceCb][currentInitialFc]\n     * @type {CachedCoefficient[][]}\n     * @private\n     */\n    static cachedCoefficients = [];\n    /**\n     * Filter coefficient 1\n     * @type {number}\n     */\n    a0 = 0;\n    \n    /**\n     * Filter coefficient 2\n     * @type {number}\n     */\n    a1 = 0;\n    \n    /**\n     * Filter coefficient 3\n     * @type {number}\n     */\n    a2 = 0;\n    \n    /**\n     * Filter coefficient 4\n     * @type {number}\n     */\n    a3 = 0;\n    \n    /**\n     * Filter coefficient 5\n     * @type {number}\n     */\n    a4 = 0;\n    \n    /**\n     * Input history 1\n     * @type {number}\n     */\n    x1 = 0;\n    \n    /**\n     * Input history 2\n     * @type {number}\n     */\n    x2 = 0;\n    \n    /**\n     * Output history 1\n     * @type {number}\n     */\n    y1 = 0;\n    \n    /**\n     * Output history 2\n     * @type {number}\n     */\n    y2 = 0;\n    \n    /**\n     * Resonance in centibels\n     * @type {number}\n     */\n    resonanceCb = 0;\n    \n    /**\n     * Cutoff frequency in absolute cents\n     * @type {number}\n     */\n    currentInitialFc = 13500;\n    \n    /**\n     * For tracking the last cutoff frequency in the apply method, absolute cents\n     * Set to infinity to force recalculation\n     * @type {number}\n     */\n    lastTargetCutoff = Infinity;\n    \n    /**\n     * used for tracking if the filter has been initialized\n     * @type {boolean}\n     */\n    initialized = false;\n    /**\n     * Hertz\n     * @type {number}\n     */\n    sampleRate;\n    \n    /**\n     * @param sampleRate {number}\n     */\n    constructor(sampleRate)\n    {\n        this.sampleRate = sampleRate;\n        /**\n         * @type {number}\n         */\n        this.maxCutoff = sampleRate * 0.45;\n    }\n    \n    /**\n     * Applies a low-pass filter to the given buffer\n     * @param voice {Voice} the voice we are working on\n     * @param outputBuffer {Float32Array} the buffer to apply the filter to\n     * @param fcExcursion {number} the addition of modenv and mod lfo in cents to the filter\n     * @param smoothingFactor {number} filter's cutoff frequency smoothing factor\n     */\n    static apply(voice, outputBuffer, fcExcursion, smoothingFactor)\n    {\n        const initialFc = voice.modulatedGenerators[generatorTypes.initialFilterFc];\n        const filter = voice.filter;\n        \n        \n        if (!filter.initialized)\n        {\n            // filter initialization, set the current fc to target\n            filter.initialized = true;\n            filter.currentInitialFc = initialFc;\n        }\n        else\n        {\n            /* Note:\n             * We only smooth out the initialFc part,\n             * the modulation envelope and LFO excursions are not smoothed.\n             */\n            filter.currentInitialFc += (initialFc - filter.currentInitialFc) * smoothingFactor;\n        }\n        \n        // the final cutoff for this calculation\n        const targetCutoff = filter.currentInitialFc + fcExcursion;\n        const modulatedResonance = voice.modulatedGenerators[generatorTypes.initialFilterQ];\n        /* note:\n         * the check for initialFC is because of the filter optimization\n         * (if cents are the maximum then the filter is open)\n         * filter cannot use this optimization if it's dynamic (see #53), and\n         * the filter can only be dynamic if the initial filter is not open\n         */\n        if (filter.currentInitialFc > 13499 && targetCutoff > 13499 && modulatedResonance === 0)\n        {\n            filter.currentInitialFc = 13500;\n            return; // filter is open\n        }\n        \n        // check if the frequency has changed. if so, calculate new coefficients\n        if (Math.abs(filter.lastTargetCutoff - targetCutoff) > 1 || filter.resonanceCb !== modulatedResonance)\n        {\n            filter.lastTargetCutoff = targetCutoff;\n            filter.resonanceCb = modulatedResonance;\n            LowpassFilter.calculateCoefficients(filter, targetCutoff);\n        }\n        \n        // filter the input\n        // initial filtering code was ported from meltysynth created by sinshu.\n        for (let i = 0; i < outputBuffer.length; i++)\n        {\n            let input = outputBuffer[i];\n            let filtered = filter.a0 * input\n                + filter.a1 * filter.x1\n                + filter.a2 * filter.x2\n                - filter.a3 * filter.y1\n                - filter.a4 * filter.y2;\n            \n            // set buffer\n            filter.x2 = filter.x1;\n            filter.x1 = input;\n            filter.y2 = filter.y1;\n            filter.y1 = filtered;\n            \n            outputBuffer[i] = filtered;\n        }\n    }\n    \n    /**\n     * @param filter {LowpassFilter}\n     * @param cutoffCents {number}\n     */\n    static calculateCoefficients(filter, cutoffCents)\n    {\n        cutoffCents = ~~cutoffCents; // Math.floor\n        const qCb = filter.resonanceCb;\n        // check if these coefficients were already cached\n        const cached = LowpassFilter.cachedCoefficients?.[qCb]?.[cutoffCents];\n        if (cached !== undefined)\n        {\n            filter.a0 = cached.a0;\n            filter.a1 = cached.a1;\n            filter.a2 = cached.a2;\n            filter.a3 = cached.a3;\n            filter.a4 = cached.a4;\n            return;\n        }\n        let cutoffHz = absCentsToHz(cutoffCents);\n        \n        // fix cutoff on low sample rates\n        cutoffHz = Math.min(cutoffHz, filter.maxCutoff);\n        \n        // the coefficient calculation code was originally ported from meltysynth by sinshu.\n        // turn resonance to gain, -3.01 so it gives a non-resonant peak\n        const qDb = qCb / 10;\n        // -1 because it's attenuation, and we don't want attenuation\n        const resonanceGain = decibelAttenuationToGain(-(qDb - 3.01));\n        \n        // the sfspec asks for a reduction in gain based on the Q value.\n        // note that we calculate it again,\n        // without the 3.01-peak offset as it only applies to the coefficients, not the gain.\n        const qGain = 1 / Math.sqrt(decibelAttenuationToGain(-qDb));\n        \n        \n        // note: no sin or cos tables here as the coefficients are cached\n        let w = 2 * Math.PI * cutoffHz / filter.sampleRate;\n        let cosw = Math.cos(w);\n        let alpha = Math.sin(w) / (2 * resonanceGain);\n        \n        let b1 = (1 - cosw) * qGain;\n        let b0 = b1 / 2;\n        let b2 = b0;\n        let a0 = 1 + alpha;\n        let a1 = -2 * cosw;\n        let a2 = 1 - alpha;\n        \n        /**\n         * set coefficients\n         * @type {CachedCoefficient}\n         */\n        const toCache = {};\n        toCache.a0 = b0 / a0;\n        toCache.a1 = b1 / a0;\n        toCache.a2 = b2 / a0;\n        toCache.a3 = a1 / a0;\n        toCache.a4 = a2 / a0;\n        filter.a0 = toCache.a0;\n        filter.a1 = toCache.a1;\n        filter.a2 = toCache.a2;\n        filter.a3 = toCache.a3;\n        filter.a4 = toCache.a4;\n        \n        if (LowpassFilter.cachedCoefficients[qCb] === undefined)\n        {\n            LowpassFilter.cachedCoefficients[qCb] = [];\n        }\n        LowpassFilter.cachedCoefficients[qCb][cutoffCents] = toCache;\n    }\n}\n\n// precompute all the cutoffs for 0q (most common)\nconst dummy = new LowpassFilter(44100);\ndummy.resonanceCb = 0;\n// sfspec section 8.1.3: initialFilterFc ranges from 1500 to 13,500 cents\nfor (let i = 1500; i < 13500; i++)\n{\n    dummy.currentInitialFc = i;\n    LowpassFilter.calculateCoefficients(dummy, i);\n}\n", "import { modulatorCurveTypes } from \"../../../soundfont/basic_soundfont/modulator.js\";\n\n/**\n * modulator_curves.js\n * precomputes modulator concave and conves curves and calculates a curve value for a given polarity, direction and type\n */\n\n// the length of the precomputed curve tables\nexport const MOD_PRECOMPUTED_LENGTH = 16384;\n\n// Precalculate lookup tables for concave and convex curves\nconst concave = new Float32Array(MOD_PRECOMPUTED_LENGTH + 1);\nconst convex = new Float32Array(MOD_PRECOMPUTED_LENGTH + 1);\n// the equation is taken from FluidSynth as it's the standard for soundFonts\n// more precisely, the gen_conv.c file\nconcave[0] = 0;\nconcave[concave.length - 1] = 1;\n\nconvex[0] = 0;\nconvex[convex.length - 1] = 1;\nfor (let i = 1; i < MOD_PRECOMPUTED_LENGTH - 1; i++)\n{\n    let x = (-200 * 2 / 960) * Math.log(i / (concave.length - 1)) / Math.LN10;\n    convex[i] = 1 - x;\n    concave[concave.length - 1 - i] = x;\n}\n\n/**\n * Transforms a value with a given curve type\n * @param polarity {number} 0 or 1\n * @param direction {number} 0 or 1\n * @param curveType {number} see modulatorCurveTypes in modulators.js\n * @param value {number} the linear value, 0 to 1\n * @returns {number} the transformed value, 0 to 1, or -1 to 1\n */\nexport function getModulatorCurveValue(direction, curveType, value, polarity)\n{\n    // inverse the value if needed\n    if (direction)\n    {\n        value = 1 - value;\n    }\n    switch (curveType)\n    {\n        case modulatorCurveTypes.linear:\n            if (polarity)\n            {\n                // bipolar curve\n                return value * 2 - 1;\n            }\n            return value;\n        \n        case modulatorCurveTypes.switch:\n            // switch\n            value = value > 0.5 ? 1 : 0;\n            if (polarity)\n            {\n                // multiply\n                return value * 2 - 1;\n            }\n            return value;\n        \n        case modulatorCurveTypes.concave:\n            // look up the value\n            if (polarity)\n            {\n                value = value * 2 - 1;\n                if (value < 0)\n                {\n                    return -concave[~~(value * -MOD_PRECOMPUTED_LENGTH)];\n                }\n                return concave[~~(value * MOD_PRECOMPUTED_LENGTH)];\n            }\n            return concave[~~(value * MOD_PRECOMPUTED_LENGTH)];\n        \n        case modulatorCurveTypes.convex:\n            // look up the value\n            if (polarity)\n            {\n                value = value * 2 - 1;\n                if (value < 0)\n                {\n                    return -convex[~~(value * -MOD_PRECOMPUTED_LENGTH)];\n                }\n                return convex[~~(value * MOD_PRECOMPUTED_LENGTH)];\n            }\n            return convex[~~(value * MOD_PRECOMPUTED_LENGTH)];\n    }\n}\n", "import { timecentsToSeconds } from \"./unit_converter.js\";\nimport { getModulatorCurveValue } from \"./modulator_curves.js\";\nimport { modulatorCurveTypes } from \"../../../soundfont/basic_soundfont/modulator.js\";\nimport { generatorTypes } from \"../../../soundfont/basic_soundfont/generator_types.js\";\n\n/**\n * modulation_envelope.js\n * purpose: calculates the modulation envelope for the given voice\n */\nconst MODENV_PEAK = 1;\n\n// 1000 should be precise enough\nconst CONVEX_ATTACK = new Float32Array(1000);\nfor (let i = 0; i < CONVEX_ATTACK.length; i++)\n{\n    // this makes the db linear (I think)\n    CONVEX_ATTACK[i] = getModulatorCurveValue(0, modulatorCurveTypes.convex, i / 1000, 0);\n}\n\nexport class ModulationEnvelope\n{\n    /**\n     * The attack duration, in seconds\n     * @type {number}\n     */\n    attackDuration = 0;\n    /**\n     * The decay duration, in seconds\n     * @type {number}\n     */\n    decayDuration = 0;\n    \n    /**\n     * The hold duration, in seconds\n     * @type {number}\n     */\n    holdDuration = 0;\n    \n    /**\n     * Release duration, in seconds\n     * @type {number}\n     */\n    releaseDuration = 0;\n    \n    /**\n     * The sustain level 0-1\n     * @type {number}\n     */\n    sustainLevel = 0;\n    \n    /**\n     * Delay phase end time in seconds, absolute (audio context time)\n     * @type {number}\n     */\n    delayEnd = 0;\n    /**\n     * Attack phase end time in seconds, absolute (audio context time)\n     * @type {number}\n     */\n    attackEnd = 0;\n    /**\n     * Hold phase end time in seconds, absolute (audio context time)\n     * @type {number}\n     */\n    holdEnd = 0;\n    /**\n     * Decay phase end time in seconds, absolute (audio context time)\n     * @type {number}\n     */\n    decayEnd = 0;\n    \n    /**\n     * The level of the envelope when the release phase starts\n     * @type {number}\n     */\n    releaseStartLevel = 0;\n    \n    /**\n     * The current modulation envelope value\n     * @type {number}\n     */\n    currentValue = 0;\n    \n    /**\n     * Starts the release phase in the envelope\n     * @param voice {Voice} the voice this envelope belongs to\n     */\n    static startRelease(voice)\n    {\n        ModulationEnvelope.recalculate(voice);\n    }\n    \n    /**\n     * @param voice {Voice} the voice to recalculate\n     */\n    static recalculate(voice)\n    {\n        const env = voice.modulationEnvelope;\n        \n        // in release? Might need to recalculate the value as it can be modulated\n        if (voice.isInRelease)\n        {\n            env.releaseStartLevel = ModulationEnvelope.getValue(voice, voice.releaseStartTime, true);\n        }\n        \n        env.sustainLevel = 1 - (voice.modulatedGenerators[generatorTypes.sustainModEnv] / 1000);\n        \n        env.attackDuration = timecentsToSeconds(voice.modulatedGenerators[generatorTypes.attackModEnv]);\n        \n        const decayKeyExcursionCents = ((60 - voice.midiNote) * voice.modulatedGenerators[generatorTypes.keyNumToModEnvDecay]);\n        const decayTime = timecentsToSeconds(voice.modulatedGenerators[generatorTypes.decayModEnv] + decayKeyExcursionCents);\n        // according to the specification, the decay time is the time it takes to reach 0% from 100%.\n        // calculate the time to reach actual sustain level,\n        // for example, sustain 0.6 will be 0.4 of the decay time\n        env.decayDuration = decayTime * (1 - env.sustainLevel);\n        \n        const holdKeyExcursionCents = ((60 - voice.midiNote) * voice.modulatedGenerators[generatorTypes.keyNumToModEnvHold]);\n        env.holdDuration = timecentsToSeconds(holdKeyExcursionCents + voice.modulatedGenerators[generatorTypes.holdModEnv]);\n        \n        const releaseTime = timecentsToSeconds(voice.modulatedGenerators[generatorTypes.releaseModEnv]);\n        // release time is from the full level to 0%\n        // to get the actual time, multiply by the release start level\n        env.releaseDuration = releaseTime * env.releaseStartLevel;\n        \n        env.delayEnd = voice.startTime + timecentsToSeconds(voice.modulatedGenerators[generatorTypes.delayModEnv]);\n        env.attackEnd = env.delayEnd + env.attackDuration;\n        env.holdEnd = env.attackEnd + env.holdDuration;\n        env.decayEnd = env.holdEnd + env.decayDuration;\n    }\n    \n    /**\n     * Calculates the current modulation envelope value for the given time and voice\n     * @param voice {Voice} the voice we are working on\n     * @param currentTime {number} in seconds\n     * @param ignoreRelease {boolean} if true, it will compute the value as if the voice was not released\n     * @returns {number} modenv value, from 0 to 1\n     */\n    static getValue(voice, currentTime, ignoreRelease = false)\n    {\n        const env = voice.modulationEnvelope;\n        if (voice.isInRelease && !ignoreRelease)\n        {\n            // if the voice is still in the delay phase,\n            // start level will be 0 that will result in divide by zero\n            if (env.releaseStartLevel === 0)\n            {\n                return 0;\n            }\n            return Math.max(\n                0,\n                (1 - (currentTime - voice.releaseStartTime) / env.releaseDuration) * env.releaseStartLevel\n            );\n        }\n        \n        if (currentTime < env.delayEnd)\n        {\n            env.currentValue = 0; // delay\n        }\n        else if (currentTime < env.attackEnd)\n        {\n            // modulation envelope uses convex curve for attack\n            env.currentValue = CONVEX_ATTACK[~~((1 - (env.attackEnd - currentTime) / env.attackDuration) * 1000)];\n        }\n        else if (currentTime < env.holdEnd)\n        {\n            // hold: stay at 1\n            env.currentValue = MODENV_PEAK;\n        }\n        else if (currentTime < env.decayEnd)\n        {\n            // decay: linear ramp from 1 to sustain level\n            env.currentValue = (1 - (env.decayEnd - currentTime) / env.decayDuration) * (env.sustainLevel - MODENV_PEAK) + MODENV_PEAK;\n        }\n        else\n        {\n            // sustain: stay at sustain level\n            env.currentValue = env.sustainLevel;\n        }\n        return env.currentValue;\n    }\n}", "import { generatorLimits, generatorTypes } from \"./generator_types.js\";\n\nexport const GEN_BYTE_SIZE = 4;\n\nexport class Generator\n{\n    /**\n     * The generator's enum number\n     * @type {generatorTypes|number}\n     */\n    generatorType = generatorTypes.INVALID;\n    /**\n     * The generator's 16-bit value\n     * @type {number}\n     */\n    generatorValue = 0;\n    \n    /**\n     * Constructs a new generator\n     * @param type {generatorTypes|number}\n     * @param value {number}\n     * @param validate {boolean}\n     */\n    constructor(type = generatorTypes.INVALID, value = 0, validate = true)\n    {\n        this.generatorType = type;\n        if (value === undefined)\n        {\n            throw new Error(\"No value provided.\");\n        }\n        this.generatorValue = Math.round(value);\n        if (validate)\n        {\n            const lim = generatorLimits[type];\n            \n            if (lim !== undefined)\n            {\n                this.generatorValue = Math.max(lim.min, Math.min(lim.max, this.generatorValue));\n            }\n        }\n    }\n}\n\n/**\n * generator.js\n * purpose: contains enums for generators,\n * and their limis parses reads soundfont generators, sums them and applies limits\n */\n/**\n * @param generatorType {number}\n * @param presetGens {Generator[]}\n * @param instrumentGens {Generator[]}\n */\nexport function addAndClampGenerator(generatorType, presetGens, instrumentGens)\n{\n    const limits = generatorLimits[generatorType] || { min: 0, max: 32768, def: 0 };\n    let presetGen = presetGens.find(g => g.generatorType === generatorType);\n    let presetValue = 0;\n    if (presetGen)\n    {\n        presetValue = presetGen.generatorValue;\n    }\n    \n    let instruGen = instrumentGens.find(g => g.generatorType === generatorType);\n    let instruValue = limits.def;\n    if (instruGen)\n    {\n        instruValue = instruGen.generatorValue;\n    }\n    \n    // limits are applied in the compute_modulator function\n    return instruValue + presetValue;\n}", "/**\n * voice.js\n * purpose: prepares Voices from sample and generator data\n */\nimport { MIN_EXCLUSIVE_LENGTH, MIN_NOTE_LENGTH } from \"../main_processor.js\";\nimport { SpessaSynthWarn } from \"../../../utils/loggin.js\";\nimport { LowpassFilter } from \"./lowpass_filter.js\";\nimport { VolumeEnvelope } from \"./volume_envelope.js\";\nimport { ModulationEnvelope } from \"./modulation_envelope.js\";\nimport { addAndClampGenerator } from \"../../../soundfont/basic_soundfont/generator.js\";\nimport { Modulator } from \"../../../soundfont/basic_soundfont/modulator.js\";\nimport { GENERATORS_AMOUNT, generatorTypes } from \"../../../soundfont/basic_soundfont/generator_types.js\";\n\nconst EXCLUSIVE_CUTOFF_TIME = -2320;\nconst EXCLUSIVE_MOD_CUTOFF_TIME = -1130; // less because filter shenanigans\n\nclass AudioSample\n{\n    /**\n     * the sample's audio data\n     * @type {Float32Array}\n     */\n    sampleData;\n    /**\n     * Current playback step (rate)\n     * @type {number}\n     */\n    playbackStep = 0;\n    /**\n     * Current position in the sample\n     * @type {number}\n     */\n    cursor = 0;\n    /**\n     * MIDI root key of the sample\n     * @type {number}\n     */\n    rootKey = 0;\n    /**\n     * Start position of the loop\n     * @type {number}\n     */\n    loopStart = 0;\n    /**\n     * End position of the loop\n     * @type {number}\n     */\n    loopEnd = 0;\n    /**\n     * End position of the sample\n     * @type {number}\n     */\n    end = 0;\n    /**\n     * Looping mode of the sample:\n     * 0 - no loop\n     * 1 - loop\n     * 2 - UNOFFICIAL: polyphone 2.4 added start on release\n     * 3 - loop then play when released\n     * @type {0|1|2|3}\n     */\n    loopingMode = 0;\n    /**\n     * Indicates if the sample is currently looping\n     * @type {boolean}\n     */\n    isLooping = false;\n    \n    /**\n     * @param data {Float32Array}\n     * @param playbackStep {number} the playback step, a single increment\n     * @param cursorStart {number} the sample id which starts the playback\n     * @param rootKey {number} MIDI root key\n     * @param loopStart {number} loop start index\n     * @param loopEnd {number} loop end index\n     * @param endIndex {number} sample end index (for end offset)\n     * @param loopingMode {number} sample looping mode\n     */\n    constructor(\n        data,\n        playbackStep,\n        cursorStart,\n        rootKey,\n        loopStart,\n        loopEnd,\n        endIndex,\n        loopingMode\n    )\n    {\n        this.sampleData = data;\n        this.playbackStep = playbackStep;\n        this.cursor = cursorStart;\n        this.rootKey = rootKey;\n        this.loopStart = loopStart;\n        this.loopEnd = loopEnd;\n        this.end = endIndex;\n        this.loopingMode = loopingMode;\n        this.isLooping = this.loopingMode === 1 || this.loopingMode === 3;\n    }\n}\n\n\n/**\n * Voice represents a single instance of the\n * SoundFont2 synthesis model.\n * That is:\n * A wavetable oscillator (sample)\n * A volume envelope (volumeEnvelope)\n * A modulation envelope (modulationEnvelope)\n * Generators (generators and modulatedGenerators)\n * Modulators (modulators)\n * And MIDI params such as channel, MIDI note, velocity\n */\nclass Voice\n{\n    /**\n     * The sample of the voice.\n     * @type {AudioSample}\n     */\n    sample;\n    \n    /**\n     * Lowpass filter applied to the voice.\n     * @type {LowpassFilter}\n     */\n    filter;\n    \n    /**\n     * Linear gain of the voice. Used with Key Modifiers.\n     * @type {number}\n     */\n    gain = 1;\n    \n    /**\n     * The unmodulated (copied to) generators of the voice.\n     * @type {Int16Array}\n     */\n    generators;\n    \n    /**\n     * The voice's modulators.\n     * @type {Modulator[]}\n     */\n    modulators = [];\n    \n    /**\n     * Resonance offset, it is affected by the default resonant modulator\n     * @type {number}\n     */\n    resonanceOffset = 0;\n    \n    /**\n     * The generators in real-time, affected by modulators.\n     * This is used during rendering.\n     * @type {Int16Array}\n     */\n    modulatedGenerators;\n    \n    /**\n     * Indicates if the voice is finished.\n     * @type {boolean}\n     */\n    finished = false;\n    \n    /**\n     * Indicates if the voice is in the release phase.\n     * @type {boolean}\n     */\n    isInRelease = false;\n    \n    /**\n     * Velocity of the note.\n     * @type {number}\n     */\n    velocity = 0;\n    \n    /**\n     * MIDI note number.\n     * @type {number}\n     */\n    midiNote = 0;\n    \n    /**\n     * The pressure of the voice\n     * @type {number}\n     */\n    pressure = 0;\n    \n    /**\n     * Target key for the note.\n     * @type {number}\n     */\n    targetKey = 0;\n    \n    /**\n     * Modulation envelope.\n     * @type {ModulationEnvelope}\n     */\n    modulationEnvelope = new ModulationEnvelope();\n    \n    /**\n     * Volume envelope.\n     * @type {VolumeEnvelope}\n     */\n    volumeEnvelope;\n    \n    /**\n     * Start time of the voice, absolute.\n     * @type {number}\n     */\n    startTime = 0;\n    \n    /**\n     * Start time of the release phase, absolute.\n     * @type {number}\n     */\n    releaseStartTime = Infinity;\n    \n    /**\n     * Current tuning in cents.\n     * @type {number}\n     */\n    currentTuningCents = 0;\n    \n    /**\n     * Current calculated tuning. (as in ratio)\n     * @type {number}\n     */\n    currentTuningCalculated = 1;\n    \n    /**\n     * From -500 to 500.\n     * @param {number}\n     */\n    currentPan = 0;\n    \n    /**\n     * If MIDI Tuning Standard is already applied (at note-on time),\n     * this will be used to take the values at real-time tuning as \"midiNote\"\n     * property contains the tuned number.\n     * see #29 comment by @paulikaro\n     * @type {number}\n     */\n    realKey;\n    \n    /**\n     * @type {number} Initial key to glide from, MIDI Note number. If -1, the portamento is OFF.\n     */\n    portamentoFromKey = -1;\n    \n    /**\n     * Duration of the linear glide, in seconds.\n     * @type {number}\n     */\n    portamentoDuration = 0;\n    \n    /**\n     * From -500 to 500, where zero means disabled (use the channel pan). Used for random pan.\n     * @type {number}\n     */\n    overridePan = 0;\n    \n    /**\n     * Exclusive class number for hi-hats etc.\n     * @type {number}\n     */\n    exclusiveClass = 0;\n    \n    /**\n     * Creates a Voice\n     * @param sampleRate {number}\n     * @param audioSample {AudioSample}\n     * @param midiNote {number}\n     * @param velocity {number}\n     * @param currentTime {number}\n     * @param targetKey {number}\n     * @param realKey {number}\n     * @param generators {Int16Array}\n     * @param modulators {Modulator[]}\n     */\n    constructor(\n        sampleRate,\n        audioSample,\n        midiNote,\n        velocity,\n        currentTime,\n        targetKey,\n        realKey,\n        generators,\n        modulators\n    )\n    {\n        this.sample = audioSample;\n        this.generators = generators;\n        this.exclusiveClass = this.generators[generatorTypes.exclusiveClass];\n        this.modulatedGenerators = new Int16Array(generators);\n        this.modulators = modulators;\n        this.filter = new LowpassFilter(sampleRate);\n        this.velocity = velocity;\n        this.midiNote = midiNote;\n        this.startTime = currentTime;\n        this.targetKey = targetKey;\n        this.realKey = realKey;\n        this.volumeEnvelope = new VolumeEnvelope(sampleRate, generators[generatorTypes.sustainVolEnv]);\n    }\n    \n    /**\n     * copies the voice\n     * @param voice {Voice}\n     * @param currentTime {number}\n     * @param realKey {number}\n     * @returns Voice\n     */\n    static copy(voice, currentTime, realKey)\n    {\n        const sampleToCopy = voice.sample;\n        const sample = new AudioSample(\n            sampleToCopy.sampleData,\n            sampleToCopy.playbackStep,\n            sampleToCopy.cursor,\n            sampleToCopy.rootKey,\n            sampleToCopy.loopStart,\n            sampleToCopy.loopEnd,\n            sampleToCopy.end,\n            sampleToCopy.loopingMode\n        );\n        return new Voice(\n            voice.volumeEnvelope.sampleRate,\n            sample,\n            voice.midiNote,\n            voice.velocity,\n            currentTime,\n            voice.targetKey,\n            realKey,\n            new Int16Array(voice.generators),\n            voice.modulators.map(m => Modulator.copy(m))\n        );\n    }\n    \n    /**\n     * Releases the voice as exclusiveClass\n     * @param currentTime {number}\n     */\n    exclusiveRelease(currentTime)\n    {\n        this.release(currentTime, MIN_EXCLUSIVE_LENGTH);\n        this.modulatedGenerators[generatorTypes.releaseVolEnv] = EXCLUSIVE_CUTOFF_TIME; // make the release nearly instant\n        this.modulatedGenerators[generatorTypes.releaseModEnv] = EXCLUSIVE_MOD_CUTOFF_TIME;\n        VolumeEnvelope.recalculate(this);\n        ModulationEnvelope.recalculate(this);\n    }\n    \n    /**\n     * Stops the voice\n     * @param currentTime {number}\n     * @param minNoteLength {number} minimum note length in seconds\n     */\n    release(currentTime, minNoteLength = MIN_NOTE_LENGTH)\n    {\n        this.releaseStartTime = currentTime;\n        // check if the note is shorter than the min note time, if so, extend it\n        if (this.releaseStartTime - this.startTime < minNoteLength)\n        {\n            this.releaseStartTime = this.startTime + minNoteLength;\n        }\n    }\n}\n\n/**\n * @param preset {BasicPreset} the preset to get voices for\n * @param bank {number} the bank to cache the voices in\n * @param program {number} program to cache the voices in\n * @param midiNote {number} the MIDI note to use\n * @param velocity {number} the velocity to use\n * @param realKey {number} the real MIDI note if the \"midiNote\" was changed by MIDI Tuning Standard\n * @this {SpessaSynthProcessor}\n * @returns {Voice[]} output is an array of Voices\n */\nexport function getVoicesForPreset(preset, bank, program, midiNote, velocity, realKey)\n{\n    /**\n     * @type {Voice[]}\n     */\n    const voices = preset.getSamplesAndGenerators(midiNote, velocity)\n        .reduce((voices, sampleAndGenerators) =>\n        {\n            if (sampleAndGenerators.sample.getAudioData() === undefined)\n            {\n                SpessaSynthWarn(`Discarding invalid sample: ${sampleAndGenerators.sample.sampleName}`);\n                return voices;\n            }\n            \n            // create the generator list\n            const generators = new Int16Array(GENERATORS_AMOUNT);\n            // apply and sum the gens\n            for (let i = 0; i < 60; i++)\n            {\n                generators[i] = addAndClampGenerator(\n                    i,\n                    sampleAndGenerators.presetGenerators,\n                    sampleAndGenerators.instrumentGenerators\n                );\n            }\n            \n            // EMU initial attenuation correction, multiply initial attenuation by 0.4!\n            // all EMU sound cards have this quirk, and all sf2 editors and players emulate it too\n            generators[generatorTypes.initialAttenuation] = Math.floor(generators[generatorTypes.initialAttenuation] * 0.4);\n            \n            // key override\n            let rootKey = sampleAndGenerators.sample.samplePitch;\n            if (generators[generatorTypes.overridingRootKey] > -1)\n            {\n                rootKey = generators[generatorTypes.overridingRootKey];\n            }\n            \n            let targetKey = midiNote;\n            if (generators[generatorTypes.keyNum] > -1)\n            {\n                targetKey = generators[generatorTypes.keyNum];\n            }\n            \n            // determine looping mode now. if the loop is too small, disable\n            let loopStart = sampleAndGenerators.sample.sampleLoopStartIndex;\n            let loopEnd = sampleAndGenerators.sample.sampleLoopEndIndex;\n            let loopingMode = generators[generatorTypes.sampleModes];\n            /**\n             * create the sample\n             * offsets are calculated at note on time (to allow for modulation of them)\n             * @type {AudioSample}\n             */\n            const audioSample = new AudioSample(\n                sampleAndGenerators.sample.sampleData,\n                (sampleAndGenerators.sample.sampleRate / this.sampleRate) * Math.pow(\n                    2,\n                    sampleAndGenerators.sample.samplePitchCorrection / 1200\n                ), // cent tuning\n                0,\n                rootKey,\n                loopStart,\n                loopEnd,\n                Math.floor(sampleAndGenerators.sample.sampleData.length) - 1,\n                loopingMode\n            );\n            // velocity override\n            if (generators[generatorTypes.velocity] > -1)\n            {\n                velocity = generators[generatorTypes.velocity];\n            }\n            \n            // uncomment to print debug info\n            // SpessaSynthTable([{\n            //     Sample: sampleAndGenerators.sample.sampleName,\n            //     Generators: generators,\n            //     Modulators: sampleAndGenerators.modulators.map(m => Modulator.debugString(m)),\n            //     Velocity: velocity,\n            //     TargetKey: targetKey,\n            //     MidiNote: midiNote,\n            //     AudioSample: audioSample\n            // }]);\n            voices.push(\n                new Voice(\n                    this.sampleRate,\n                    audioSample,\n                    midiNote,\n                    velocity,\n                    this.currentSynthTime,\n                    targetKey,\n                    realKey,\n                    generators,\n                    sampleAndGenerators.modulators.map(m => Modulator.copy(m))\n                )\n            );\n            return voices;\n        }, []);\n    // cache the voice\n    this.setCachedVoice(bank, program, midiNote, velocity, voices);\n    return voices.map(v =>\n        Voice.copy(v, this.currentSynthTime, realKey));\n}\n\n/**\n * @param channel {number} a hint for the processor to recalculate sample cursors when sample dumping\n * @param midiNote {number} the MIDI note to use\n * @param velocity {number} the velocity to use\n * @param realKey {number} the real MIDI note if the \"midiNote\" was changed by MIDI Tuning Standard\n * @this {SpessaSynthProcessor}\n * @returns {Voice[]} output is an array of Voices\n */\nexport function getVoices(channel, midiNote, velocity, realKey)\n{\n    const channelObject = this.midiAudioChannels[channel];\n    \n    // override patch\n    const overridePatch = this.keyModifierManager.hasOverridePatch(channel, midiNote);\n    \n    let bank = channelObject.getBankSelect();\n    \n    let preset = channelObject.preset;\n    if (!preset)\n    {\n        SpessaSynthWarn(`No preset for channel ${channel}!`);\n        return [];\n    }\n    let program = preset.program;\n    if (overridePatch)\n    {\n        const override = this.keyModifierManager.getPatch(channel, midiNote);\n        bank = override.bank;\n        program = override.program;\n    }\n    \n    const cached = this.getCachedVoice(bank, program, midiNote, velocity);\n    // if cached, return it!\n    if (cached !== undefined)\n    {\n        return cached.map(v => Voice.copy(v, this.currentSynthTime, realKey));\n    }\n    \n    // not cached...\n    if (overridePatch)\n    {\n        preset = this.getPreset(bank, program);\n    }\n    return this.getVoicesForPreset(preset, bank, program, midiNote, velocity, realKey);\n}", "import { generatorTypes } from \"../../../soundfont/basic_soundfont/generator_types.js\";\n\n/**\n * stereo_panner.js\n * purpose: pans a given voice out to the stereo output and to the effects' outputs\n */\n\nexport const PAN_SMOOTHING_FACTOR = 0.05;\n\n// optimized for spessasynth_lib's effects\nexport const REVERB_DIVIDER = 3070;\nexport const CHORUS_DIVIDER = 2000;\nconst HALF_PI = Math.PI / 2;\n\nconst MIN_PAN = -500;\nconst MAX_PAN = 500;\nconst PAN_RESOLUTION = MAX_PAN - MIN_PAN;\n\n// initialize pan lookup tables\nconst panTableLeft = new Float32Array(PAN_RESOLUTION + 1);\nconst panTableRight = new Float32Array(PAN_RESOLUTION + 1);\nfor (let pan = MIN_PAN; pan <= MAX_PAN; pan++)\n{\n    // clamp to 0-1\n    const realPan = (pan - MIN_PAN) / PAN_RESOLUTION;\n    const tableIndex = pan - MIN_PAN;\n    panTableLeft[tableIndex] = Math.cos(HALF_PI * realPan);\n    panTableRight[tableIndex] = Math.sin(HALF_PI * realPan);\n}\n\n/**\n * Pans the voice to the given output buffers\n * @param voice {Voice} the voice to pan\n * @param inputBuffer {Float32Array} the input buffer in mono\n * @param outputLeft {Float32Array} left output buffer\n * @param outputRight {Float32Array} right output buffer\n * @param reverbLeft {Float32Array} left reverb input\n * @param reverbRight {Float32Array} right reverb input\n * @param chorusLeft {Float32Array} left chorus buffer\n * @param chorusRight {Float32Array} right chorus buffer\n * @param startIndex {number}\n * @this {MidiAudioChannel}\n */\nexport function panAndMixVoice(voice,\n                               inputBuffer,\n                               outputLeft, outputRight,\n                               reverbLeft, reverbRight,\n                               chorusLeft, chorusRight,\n                               startIndex)\n{\n    if (isNaN(inputBuffer[0]))\n    {\n        return;\n    }\n    /**\n     * clamp -500 to 500\n     * @type {number}\n     */\n    let pan;\n    if (voice.overridePan)\n    {\n        pan = voice.overridePan;\n    }\n    else\n    {\n        // smooth out pan to prevent clicking\n        voice.currentPan += (voice.modulatedGenerators[generatorTypes.pan] - voice.currentPan) * this.synth.panSmoothingFactor;\n        pan = voice.currentPan;\n    }\n    \n    const gain = this.synth.currentGain * voice.gain;\n    const index = ~~(pan + 500);\n    // get voice's gain levels for each channel\n    const gainLeft = panTableLeft[index] * gain * this.synth.panLeft;\n    const gainRight = panTableRight[index] * gain * this.synth.panRight;\n    \n    // disable reverb and chorus if necessary\n    if (this.synth.effectsEnabled)\n    {\n        const reverbSend = voice.modulatedGenerators[generatorTypes.reverbEffectsSend];\n        if (reverbSend > 0)\n        {\n            // reverb is mono so we need to multiply by gain\n            const reverbGain = this.synth.reverbGain * this.synth.reverbSend * gain * (reverbSend / REVERB_DIVIDER);\n            for (let i = 0; i < inputBuffer.length; i++)\n            {\n                const idx = i + startIndex;\n                reverbLeft[idx] += reverbGain * inputBuffer[i];\n                reverbRight[idx] += reverbGain * inputBuffer[i];\n            }\n        }\n        \n        const chorusSend = voice.modulatedGenerators[generatorTypes.chorusEffectsSend];\n        if (chorusSend > 0)\n        {\n            // chorus is stereo so we do not need to\n            const chorusGain = this.synth.chorusGain * this.synth.chorusSend * (chorusSend / CHORUS_DIVIDER);\n            const chorusLeftGain = gainLeft * chorusGain;\n            const chorusRightGain = gainRight * chorusGain;\n            for (let i = 0; i < inputBuffer.length; i++)\n            {\n                const idx = i + startIndex;\n                chorusLeft[idx] += chorusLeftGain * inputBuffer[i];\n                chorusRight[idx] += chorusRightGain * inputBuffer[i];\n            }\n        }\n    }\n    \n    // mix down the audio data\n    if (gainLeft > 0)\n    {\n        for (let i = 0; i < inputBuffer.length; i++)\n        {\n            outputLeft[i + startIndex] += gainLeft * inputBuffer[i];\n        }\n    }\n    if (gainRight > 0)\n    {\n        for (let i = 0; i < inputBuffer.length; i++)\n        {\n            outputRight[i + startIndex] += gainRight * inputBuffer[i];\n        }\n    }\n}", "import { SpessaSynthInfo } from \"../../../../utils/loggin.js\";\nimport { consoleColors } from \"../../../../utils/other.js\";\n\n/**\n * @this {SpessaSynthProcessor}\n * @param force {boolean}\n */\nexport function stopAllChannels(force = false)\n{\n    SpessaSynthInfo(\"%cStop all received!\", consoleColors.info);\n    for (let i = 0; i < this.midiAudioChannels.length; i++)\n    {\n        this.midiAudioChannels[i].stopAllNotes(force);\n    }\n    this.callEvent(\"stopall\", undefined);\n}", "/**\n * Reads as little endian\n * @param dataArray {IndexedByteArray}\n * @param bytesAmount {number}\n * @returns {number}\n */\nexport function readLittleEndian(dataArray, bytesAmount)\n{\n    let out = 0;\n    for (let i = 0; i < bytesAmount; i++)\n    {\n        out |= (dataArray[dataArray.currentIndex++] << i * 8);\n    }\n    // make sure it stays unsigned\n    return out >>> 0;\n}\n\n/**\n * Writes a number as little endian seems to also work for negative numbers so yay?\n * @param dataArray {IndexedByteArray}\n * @param number {number}\n * @param byteTarget {number}\n */\nexport function writeLittleEndian(dataArray, number, byteTarget)\n{\n    for (let i = 0; i < byteTarget; i++)\n    {\n        dataArray[dataArray.currentIndex++] = (number >> (i * 8)) & 0xFF;\n    }\n}\n\n/**\n * @param dataArray {IndexedByteArray}\n * @param word {number}\n */\nexport function writeWord(dataArray, word)\n{\n    dataArray[dataArray.currentIndex++] = word & 0xFF;\n    dataArray[dataArray.currentIndex++] = word >> 8;\n}\n\n/**\n * @param dataArray {IndexedByteArray}\n * @param dword {number}\n */\nexport function writeDword(dataArray, dword)\n{\n    writeLittleEndian(dataArray, dword, 4);\n}\n\n/**\n * @param byte1 {number}\n * @param byte2 {number}\n * @returns {number}\n */\nexport function signedInt16(byte1, byte2)\n{\n    let val = (byte2 << 8) | byte1;\n    if (val > 32767)\n    {\n        return val - 65536;\n    }\n    return val;\n}\n\n/**\n * @param byte {number}\n * @returns {number}\n */\nexport function signedInt8(byte)\n{\n    if (byte > 127)\n    {\n        return byte - 256;\n    }\n    return byte;\n}", "import { IndexedByteArray } from \"../../utils/indexed_array.js\";\nimport { readLittleEndian, writeDword } from \"../../utils/byte_functions/little_endian.js\";\nimport { readBytesAsString, writeStringAsBytes } from \"../../utils/byte_functions/string.js\";\n\n/**\n * riff_chunk.js\n * reads a riff chunk and stores it as a class\n */\n\nexport class RiffChunk\n{\n    /**\n     * The chunks FourCC code\n     * @type {string}\n     */\n    header;\n    \n    /**\n     * Chunk's size, in bytes\n     * @type {number}\n     */\n    size;\n    \n    /**\n     * Chunk's binary data\n     * @type {IndexedByteArray}\n     */\n    chunkData;\n    \n    /**\n     * Creates a new RIFF chunk\n     * @constructor\n     * @param header {string}\n     * @param size {number}\n     * @param data {IndexedByteArray}\n     */\n    constructor(header, size, data)\n    {\n        this.header = header;\n        this.size = size;\n        this.chunkData = data;\n    }\n    \n}\n\n/**\n * @param dataArray {IndexedByteArray}\n * @param readData {boolean}\n * @param forceShift {boolean}\n * @returns {RiffChunk}\n */\nexport function readRIFFChunk(dataArray, readData = true, forceShift = false)\n{\n    let header = readBytesAsString(dataArray, 4);\n    \n    let size = readLittleEndian(dataArray, 4);\n    if (header === \"\")\n    {\n        // safeguard against evil DLS files\n        // The test case: CrysDLS v1.23.dls\n        // https://github.com/spessasus/spessasynth_core/issues/5\n        size = 0;\n    }\n    /**\n     * @type {IndexedByteArray}\n     */\n    let chunkData = undefined;\n    if (readData)\n    {\n        chunkData = dataArray.slice(dataArray.currentIndex, dataArray.currentIndex + size);\n    }\n    if (readData || forceShift)\n    {\n        dataArray.currentIndex += size;\n    }\n    \n    if (size % 2 !== 0)\n    {\n        if (dataArray[dataArray.currentIndex] === 0)\n        {\n            dataArray.currentIndex++;\n        }\n    }\n    \n    return new RiffChunk(header, size, chunkData);\n}\n\n/**\n * Writes a RIFF chunk correctly\n * @param header {string} fourCC\n * @param data {Uint8Array} chunk data\n * @param addZeroByte {boolean} add a zero byte into the chunk size\n * @param isList {boolean} adds \"LIST\" as the chunk type and writes the actual type at the start of the data\n * @returns {IndexedByteArray}\n */\nexport function writeRIFFChunkRaw(header, data, addZeroByte = false, isList = false)\n{\n    let dataStartOffset = 8;\n    let headerWritten = header;\n    let dataLength = data.length;\n    if (addZeroByte)\n    {\n        dataLength++;\n    }\n    let writtenSize = dataLength;\n    if (isList)\n    {\n        // written header is LIST and the passed header is the first 4 bytes of chunk data\n        dataStartOffset += 4;\n        writtenSize += 4;\n        headerWritten = \"LIST\";\n    }\n    let finalSize = dataStartOffset + dataLength;\n    if (finalSize % 2 !== 0)\n    {\n        // pad byte does not get included in the size\n        finalSize++;\n    }\n    \n    const outArray = new IndexedByteArray(finalSize);\n    // FourCC (\"RIFF\", \"LIST\", \"pdta\" etc.)\n    writeStringAsBytes(outArray, headerWritten);\n    // chunk size\n    writeDword(outArray, writtenSize);\n    if (isList)\n    {\n        // list type (e.g. \"INFO\")\n        writeStringAsBytes(outArray, header);\n    }\n    outArray.set(data, dataStartOffset);\n    return outArray;\n}\n\n/**\n * Writes RIFF chunk given binary blobs\n * @param header {string} fourCC\n * @param chunks {Uint8Array[]} chunk data parts, it will be combined in order\n * @param isList {boolean} adds \"LIST\" as the chunk type and writes the actual type at the start of the data\n * @returns {IndexedByteArray}\n */\nexport function writeRIFFChunkParts(header, chunks, isList = false)\n{\n    let dataOffset = 8;\n    let headerWritten = header;\n    let dataLength = chunks.reduce((len, c) => c.length + len, 0);\n    let writtenSize = dataLength;\n    if (isList)\n    {\n        // written header is LIST and the passed header is the first 4 bytes of chunk data\n        dataOffset += 4;\n        writtenSize += 4;\n        headerWritten = \"LIST\";\n    }\n    let finalSize = dataOffset + dataLength;\n    if (finalSize % 2 !== 0)\n    {\n        // pad byte does not get included in the size\n        finalSize++;\n    }\n    \n    const outArray = new IndexedByteArray(finalSize);\n    // fourCC (\"RIFF\", \"LIST\", \"pdta\" etc.)\n    writeStringAsBytes(outArray, headerWritten);\n    // chunk size\n    writeDword(outArray, writtenSize);\n    if (isList)\n    {\n        // list type (e.g. \"INFO\")\n        writeStringAsBytes(outArray, header);\n    }\n    chunks.forEach(c =>\n    {\n        outArray.set(c, dataOffset);\n        dataOffset += c.length;\n    });\n    return outArray;\n}\n\n/**\n * @param collection {RiffChunk[]}\n * @param type {string}\n * @returns {RiffChunk|undefined}\n */\nexport function findRIFFListType(collection, type)\n{\n    return collection.find(c =>\n    {\n        if (c.header !== \"LIST\")\n        {\n            return false;\n        }\n        c.chunkData.currentIndex = 0;\n        return readBytesAsString(c.chunkData, 4) === type;\n    });\n}", "import { writeDword, writeWord } from \"../../../utils/byte_functions/little_endian.js\";\nimport { IndexedByteArray } from \"../../../utils/indexed_array.js\";\nimport { writeRIFFChunkRaw } from \"../riff_chunk.js\";\nimport { GEN_BYTE_SIZE, Generator } from \"../generator.js\";\nimport { generatorTypes } from \"../generator_types.js\";\n\n/**\n * @this {BasicSoundBank}\n * @returns {ReturnedExtendedSf2Chunks}\n */\nexport function getIGEN()\n{\n    // go through all instruments -> zones and write generators sequentially (add 4 for terminal)\n    let igenSize = GEN_BYTE_SIZE;\n    for (const inst of this.instruments)\n    {\n        igenSize += inst.globalZone.generators.length * GEN_BYTE_SIZE;\n        igenSize += inst.instrumentZones.reduce((sum, z) =>\n        {\n            // clear sample and range generators before determining the size\n            z.generators = (z.generators.filter(g =>\n                g.generatorType !== generatorTypes.sampleID &&\n                g.generatorType !== generatorTypes.keyRange &&\n                g.generatorType !== generatorTypes.velRange\n            ));\n            // add sample and ranges if necessary\n            // unshift vel then key (to make key first) and the sample is last\n            if (z.hasVelRange)\n            {\n                z.prependGenerator(new Generator(\n                    generatorTypes.velRange,\n                    z.velRange.max << 8 | Math.max(z.velRange.min, 0),\n                    false\n                ));\n            }\n            if (z.hasKeyRange)\n            {\n                z.prependGenerator(new Generator(\n                    generatorTypes.keyRange,\n                    z.keyRange.max << 8 | Math.max(z.keyRange.min, 0),\n                    false\n                ));\n            }\n            // add sample id\n            z.addGenerators(new Generator(\n                generatorTypes.sampleID,\n                this.samples.indexOf(z.sample),\n                false\n            ));\n            return z.generators.length * GEN_BYTE_SIZE + sum;\n        }, 0);\n    }\n    const igenData = new IndexedByteArray(igenSize);\n    \n    /**\n     * @param z {BasicZone}\n     */\n    const writeZone = z =>\n    {\n        for (const gen of z.generators)\n        {\n            // name is deceptive, it works on negatives\n            writeWord(igenData, gen.generatorType);\n            writeWord(igenData, gen.generatorValue);\n        }\n    };\n    \n    for (const instrument of this.instruments)\n    {\n        // global zone\n        writeZone(instrument.globalZone);\n        for (const instrumentZone of instrument.instrumentZones)\n        {\n            writeZone(instrumentZone);\n        }\n    }\n    // terminal generator, is zero\n    writeDword(igenData, 0);\n    \n    // https://github.com/spessasus/soundfont-proposals/blob/main/extended_limits.md\n    const xigenData = new IndexedByteArray(GEN_BYTE_SIZE);\n    writeDword(xigenData, 0);\n    \n    const igen = writeRIFFChunkRaw(\"igen\", igenData);\n    const xigen = writeRIFFChunkRaw(\"igen\", xigenData);\n    return {\n        pdta: igen,\n        xdta: xigen,\n        highestIndex: 0 // not applicable\n    };\n}", "import { IndexedByteArray } from \"../../../utils/indexed_array.js\";\nimport { writeStringAsBytes } from \"../../../utils/byte_functions/string.js\";\nimport { writeLittleEndian } from \"../../../utils/byte_functions/little_endian.js\";\nimport { SpessaSynthInfo } from \"../../../utils/loggin.js\";\nimport { consoleColors } from \"../../../utils/other.js\";\n\n/*\nSdta structure:\n\nLIST chunk\n- \"sdta\" ASCII string\n- smpl chunk\n- - raw data\n */\n\n// in bytes, from the start of sdta-LIST to the first actual sample\nconst SDTA_TO_DATA_OFFSET =\n    4 + // \"LIST\"\n    4 + // sdta size\n    4 + // \"sdta\"\n    4 + // \"smpl\"\n    4;  // smpl size\n\n/**\n * @this {BasicSoundBank}\n * @param smplStartOffsets {number[]}\n * @param smplEndOffsets {number[]}\n * @param compress {boolean}\n * @param decompress {boolean}\n * @param vorbisFunc {SampleEncodingFunction}\n * @param progressFunc {ProgressFunction|undefined}\n * @returns {Uint8Array}\n */\nexport async function getSDTA(smplStartOffsets,\n                              smplEndOffsets,\n                              compress,\n                              decompress,\n                              vorbisFunc,\n                              progressFunc\n)\n{\n    // write smpl: write int16 data of each sample linearly\n    // get size (calling getAudioData twice doesn't matter since it gets cached)\n    let writtenCount = 0;\n    let smplChunkSize = 0;\n    const sampleDatas = [];\n    \n    // linear async is faster here as the writing function usually uses a single wasm instance\n    for (const s of this.samples)\n    {\n        if (compress)\n        {\n            await s.compressSample(vorbisFunc);\n        }\n        if (decompress)\n        {\n            s.setAudioData(s.getAudioData());\n        }\n        \n        // raw data: either copy s16le or encoded vorbis or encode manually if overridden\n        // use set timeout so the thread doesn't die\n        const r = s.getRawData(true);\n        writtenCount++;\n        progressFunc?.(s.sampleName, writtenCount, this.samples.length);\n        \n        SpessaSynthInfo(\n            `%cEncoded sample %c${writtenCount}. ${s.sampleName}%c of %c${this.samples.length}%c. Compressed: %c${s.isCompressed}%c.`,\n            consoleColors.info,\n            consoleColors.recognized,\n            consoleColors.info,\n            consoleColors.recognized,\n            consoleColors.info,\n            s.isCompressed ? consoleColors.recognized : consoleColors.unrecognized,\n            consoleColors.info\n        );\n        \n        /* 6.1 Sample Data Format in the smpl Sub-chunk\n        Each sample is followed by a minimum of forty-six zero\n        valued sample data points. These zero valued data points are necessary to guarantee that any reasonable upward pitch shift\n        using any reasonable interpolator can loop on zero data at the end of the sound.\n        This doesn't apply to sf3 tho\n         */\n        smplChunkSize += r.length + (s.isCompressed ? 0 : 92);\n        sampleDatas.push(r);\n    }\n    \n    if (smplChunkSize % 2 !== 0)\n    {\n        smplChunkSize++;\n    }\n    \n    const sdta = new IndexedByteArray(smplChunkSize + SDTA_TO_DATA_OFFSET);\n    \n    // avoid using writeRIFFChunk for performance\n    // sdta chunk\n    writeStringAsBytes(sdta, \"LIST\");\n    // \"sdta\" + full smpl length\n    writeLittleEndian(sdta, smplChunkSize + SDTA_TO_DATA_OFFSET - 8, 4);\n    writeStringAsBytes(sdta, \"sdta\");\n    writeStringAsBytes(sdta, \"smpl\");\n    writeLittleEndian(sdta, smplChunkSize, 4);\n    \n    let offset = 0;\n    // write out\n    this.samples.forEach((sample, i) =>\n    {\n        const data = sampleDatas[i];\n        sdta.set(data, offset + SDTA_TO_DATA_OFFSET);\n        let startOffset;\n        let endOffset;\n        if (sample.isCompressed)\n        {\n            // sf3 offset is in bytes\n            startOffset = offset;\n            endOffset = startOffset + data.length;\n        }\n        else\n        {\n            // sf2 in sample data points\n            startOffset = offset / 2; // inclusive\n            endOffset = startOffset + data.length / 2; // exclusive\n            offset += 92; // 46 sample data points\n        }\n        offset += data.length;\n        smplStartOffsets.push(startOffset);\n        \n        smplEndOffsets.push(endOffset);\n    });\n    \n    return sdta;\n}", "import { SpessaSynthWarn } from \"../../utils/loggin.js\";\nimport { IndexedByteArray } from \"../../utils/indexed_array.js\";\nimport { stbvorbis } from \"../../externals/stbvorbis_sync/stbvorbis_sync.min.js\";\n\n// should be reasonable for most cases\nconst RESAMPLE_RATE = 48000;\n\n/**\n * @typedef {1|2|4|8|32769|32770|32772|32776} sampleTypes\n */\n\n/**\n * @enum {sampleTypes}\n */\nexport const sampleTypes = {\n    monoSample: 1,\n    rightSample: 2,\n    leftSample: 4,\n    linkedSample: 8,\n    romMonoSample: 32769,\n    romRightSample: 32770,\n    romLeftSample: 32772,\n    romLinkedSample: 32776\n};\n\n/**\n * @typedef {function} SampleEncodingFunction\n * @async\n * @param audioData {Float32Array}\n * @param sampleRate {number}\n * @returns {Promise<Uint8Array>}\n */\n\nexport class BasicSample\n{\n    \n    /**\n     * The sample's name\n     * @type {string}\n     */\n    sampleName;\n    \n    /**\n     * Sample rate in Hz\n     * @type {number}\n     */\n    sampleRate;\n    \n    /**\n     * Original pitch of the sample as a MIDI note number\n     * @type {number}\n     */\n    samplePitch;\n    \n    /**\n     * Pitch correction, in cents. Can be negative\n     * @type {number}\n     */\n    samplePitchCorrection;\n    \n    /**\n     * Linked sample, unused if mono\n     * @type {BasicSample|undefined}\n     */\n    linkedSample;\n    \n    /**\n     * The type of the sample\n     * @type {sampleTypes}\n     */\n    sampleType;\n    \n    /**\n     * Relative to the start of the sample in sample points\n     * @type {number}\n     */\n    sampleLoopStartIndex;\n    \n    /**\n     * Relative to the start of the sample in sample points\n     * @type {number}\n     */\n    sampleLoopEndIndex;\n    \n    /**\n     * Indicates if the sample is compressed using vorbis SF3\n     * @type {boolean}\n     */\n    isCompressed = false;\n    \n    /**\n     * The compressed sample data if the sample has been compressed\n     * @type {Uint8Array|undefined}\n     */\n    compressedData = undefined;\n    /**\n     * Sample's linked instruments (the instruments that use it)\n     * note that duplicates are allowed since one instrument can use the same sample multople times\n     * @type {BasicInstrument[]}\n     */\n    linkedInstruments = [];\n    /**\n     * The sample's audio data\n     * @type {Float32Array|undefined}\n     */\n    sampleData = undefined;\n    \n    /**\n     * Indicates if the data was overriden, so it cannot be copied back unchanged\n     * @type {boolean}\n     */\n    dataOverriden = true;\n    \n    /**\n     * The basic representation of a sample\n     * @param sampleName {string} The sample's name\n     * @param sampleRate {number} The sample's rate in Hz\n     * @param samplePitch {number} The sample's pitch as a MIDI note number\n     * @param samplePitchCorrection {number} The sample's pitch correction in cents\n     * @param sampleType {sampleTypes} The sample's type, an enum that can indicate SF3\n     * @param loopStart {number} The sample's loop start relative to the sample start in sample points\n     * @param loopEnd {number} The sample's loop end relative to the sample start in sample points\n     */\n    constructor(\n        sampleName,\n        sampleRate,\n        samplePitch,\n        samplePitchCorrection,\n        sampleType,\n        loopStart,\n        loopEnd\n    )\n    {\n        this.sampleName = sampleName;\n        this.sampleRate = sampleRate;\n        this.samplePitch = samplePitch;\n        this.samplePitchCorrection = samplePitchCorrection;\n        this.sampleLoopStartIndex = loopStart;\n        this.sampleLoopEndIndex = loopEnd;\n        this.sampleType = sampleType;\n    }\n    \n    /**\n     * If the sample is linked to another sample\n     * @returns {boolean}\n     */\n    get isLinked()\n    {\n        return this.sampleType === sampleTypes.rightSample ||\n            this.sampleType === sampleTypes.leftSample ||\n            this.sampleType === sampleTypes.linkedSample;\n    }\n    \n    /**\n     * The sample's use count\n     * @type {number}\n     */\n    get useCount()\n    {\n        return this.linkedInstruments.length;\n    }\n    \n    /**\n     * Get raw data for writing the file\n     * @param allowVorbis {boolean}\n     * @return {Uint8Array} either s16 or vorbis data\n     * @virtual\n     */\n    getRawData(allowVorbis)\n    {\n        if (this.isCompressed && allowVorbis && !this.dataOverriden)\n        {\n            return this.compressedData;\n        }\n        return this.encodeS16LE();\n    }\n    \n    resampleData(newSampleRate)\n    {\n        let audioData = this.getAudioData();\n        const ratio = newSampleRate / this.sampleRate;\n        const resampled = new Float32Array(Math.floor(audioData.length * ratio));\n        for (let i = 0; i < resampled.length; i++)\n        {\n            resampled[i] = audioData[Math.floor(i * (1 / ratio))];\n        }\n        audioData = resampled;\n        this.sampleRate = newSampleRate;\n        // adjust loop points\n        this.sampleLoopStartIndex = Math.floor(this.sampleLoopStartIndex * ratio);\n        this.sampleLoopEndIndex = Math.floor(this.sampleLoopEndIndex * ratio);\n        this.sampleData = audioData;\n    }\n    \n    /**\n     * @param encodeVorbis {SampleEncodingFunction}\n     */\n    async compressSample(encodeVorbis)\n    {\n        // no need to compress\n        if (this.isCompressed)\n        {\n            return;\n        }\n        // compress, always mono!\n        try\n        {\n            // if the sample rate is too low or too high, resample\n            let audioData = this.getAudioData();\n            if (this.sampleRate < 8000 || this.sampleRate > 96000)\n            {\n                this.resampleData(RESAMPLE_RATE);\n                audioData = this.getAudioData();\n            }\n            const compressed = await encodeVorbis(audioData, this.sampleRate);\n            this.setCompressedData(compressed);\n        }\n        catch (e)\n        {\n            SpessaSynthWarn(`Failed to compress ${this.sampleName}. Leaving as uncompressed!`, e);\n            delete this.compressedData;\n            // flag as uncompressed\n            this.isCompressed = false;\n        }\n        \n    }\n    \n    /**\n     * @param type {sampleTypes|number}\n     */\n    setSampleType(type)\n    {\n        this.sampleType = type;\n        if (!this.isLinked)\n        {\n            // unlink the other sample\n            if (this.linkedSample)\n            {\n                this.linkedSample.linkedSample = undefined;\n                this.linkedSample.sampleType = type;\n            }\n            \n            this.linkedSample = undefined;\n        }\n        if ((type & 0x8000) > 0)\n        {\n            throw new Error(\"ROM samples are not supported.\");\n        }\n        \n    }\n    \n    deleteSample()\n    {\n        if (this.useCount > 0)\n        {\n            throw new Error(`Cannot delete sample used by: ${this.linkedInstruments.map(i => i.instrumentName)}.`);\n        }\n        this.unlinkSample();\n    }\n    \n    // noinspection JSUnusedGlobalSymbols\n    /**\n     * Unlinks a sample link\n     */\n    unlinkSample()\n    {\n        this.setSampleType(sampleTypes.monoSample);\n    }\n    \n    // noinspection JSUnusedGlobalSymbols\n    /**\n     * Links a stereo sample\n     * @param sample {BasicSample} the sample to link to\n     * @param type {sampleTypes} either left, right or linked\n     */\n    setLinkedSample(sample, type)\n    {\n        // sanity check\n        if (sample.linkedSample)\n        {\n            throw new Error(`${sample.sampleName} is linked tp ${sample.linkedSample.sampleName}. Unlink it first.`);\n        }\n        this.linkedSample = sample;\n        sample.linkedSample = this;\n        if (type === sampleTypes.leftSample)\n        {\n            this.setSampleType(sampleTypes.leftSample);\n            sample.setSampleType(sampleTypes.rightSample);\n        }\n        else if (type === sampleTypes.rightSample)\n        {\n            this.setSampleType(sampleTypes.rightSample);\n            sample.setSampleType(sampleTypes.leftSample);\n        }\n        else if (type === sampleTypes.linkedSample)\n        {\n            this.setSampleType(sampleTypes.linkedSample);\n            sample.setSampleType(sampleTypes.linkedSample);\n        }\n        else\n        {\n            throw new Error(\"Invalid sample type: \" + type);\n        }\n    }\n    \n    /**\n     * @param instrument {BasicInstrument}\n     */\n    linkTo(instrument)\n    {\n        this.linkedInstruments.push(instrument);\n    }\n    \n    /**\n     * @param instrument {BasicInstrument}\n     */\n    unlinkFrom(instrument)\n    {\n        const index = this.linkedInstruments.indexOf(instrument);\n        if (index < 0)\n        {\n            SpessaSynthWarn(`Cannot unlink ${instrument.instrumentName} from ${this.sampleName}: not linked.`);\n            return;\n        }\n        this.linkedInstruments.splice(index, 1);\n    }\n    \n    \n    /**\n     * @private\n     * Decode binary vorbis into a float32 pcm\n     * @returns {Float32Array}\n     */\n    decodeVorbis()\n    {\n        if (this.sampleData)\n        {\n            return this.sampleData;\n        }\n        // get the compressed byte stream\n        // reset array and being decoding\n        try\n        {\n            /**\n             * @type {{data: Float32Array[], error: (string|null), sampleRate: number, eof: boolean}}\n             */\n            const vorbis = stbvorbis.decode(this.compressedData);\n            const decoded = vorbis.data[0];\n            if (decoded === undefined)\n            {\n                SpessaSynthWarn(`Error decoding sample ${this.sampleName}: Vorbis decode returned undefined.`);\n                return new Float32Array(0);\n            }\n            // clip\n            // because vorbis can go above 1 sometimes\n            for (let i = 0; i < decoded.length; i++)\n            {\n                // magic number is 32,767 / 32,768\n                decoded[i] = Math.max(-1, Math.min(decoded[i], 0.999969482421875));\n            }\n            return decoded;\n        }\n        catch (e)\n        {\n            // do not error out, fill with silence\n            SpessaSynthWarn(`Error decoding sample ${this.sampleName}: ${e}`);\n            return new Float32Array(this.sampleLoopEndIndex + 1);\n        }\n    }\n    \n    /**\n     * Get the float32 audio data.\n     * Note that this either decodes the compressed data or passes the ready sampleData.\n     * If neither are set then it will throw an error!\n     * @returns {Float32Array}\n     */\n    getAudioData()\n    {\n        if (this.sampleData)\n        {\n            return this.sampleData;\n        }\n        if (this.isCompressed)\n        {\n            // SF3\n            // if compressed, decode\n            this.sampleData = this.decodeVorbis();\n            return this.sampleData;\n        }\n        throw new Error(\"Sample data is undefined for a BasicSample instance.\");\n    }\n    \n    /**\n     * Encodes s16le sample\n     * @return {IndexedByteArray}\n     */\n    encodeS16LE()\n    {\n        const data = this.getAudioData();\n        const data16 = new Int16Array(data.length);\n        const len = data.length;\n        for (let i = 0; i < len; i++)\n        {\n            let sample = data[i] * 32768;\n            // Clamp for safety (do not use Math.max/Math.min here)\n            if (sample > 32767)\n            {\n                sample = 32767;\n            }\n            else if (sample < -32768)\n            {\n                sample = -32768;\n            }\n            data16[i] = sample;\n        }\n        return new IndexedByteArray(data16.buffer);\n    }\n    \n    // noinspection JSUnusedGlobalSymbols\n    /**\n     * REPLACES the audio data\n     * @param audioData {Float32Array}\n     * @virtual\n     */\n    setAudioData(audioData)\n    {\n        this.isCompressed = false;\n        delete this.compressedData;\n        this.sampleData = audioData;\n        this.dataOverriden = true;\n    }\n    \n    /**\n     * Replaces the audio with a compressed data sample\n     * @param data {Uint8Array}\n     */\n    setCompressedData(data)\n    {\n        this.sampleData = undefined;\n        this.compressedData = data;\n        this.isCompressed = true;\n        this.dataOverriden = false;\n    }\n}\n\n\nexport class CreatedSample extends BasicSample\n{\n    /**\n     * A simplified class for creating samples\n     * @param name\n     * @param sampleRate\n     * @param sampleData\n     */\n    constructor(name, sampleRate, sampleData)\n    {\n        super(name, sampleRate, 60, 0, sampleTypes.monoSample, 0, sampleData.length - 1);\n        this.setAudioData(sampleData);\n    }\n    \n    /**\n     * @param allowVorbis {boolean}\n     * @returns {Uint8Array}\n     */\n    getRawData(allowVorbis)\n    {\n        return super.getRawData(allowVorbis);\n    }\n    \n    /**\n     * @param audioData {Float32Array}\n     */\n    setAudioData(audioData)\n    {\n        super.setAudioData(audioData);\n    }\n}", "import { RiffChunk } from \"../basic_soundfont/riff_chunk.js\";\nimport { IndexedByteArray } from \"../../utils/indexed_array.js\";\nimport { readLittleEndian, signedInt8 } from \"../../utils/byte_functions/little_endian.js\";\nimport { SpessaSynthInfo, SpessaSynthWarn } from \"../../utils/loggin.js\";\nimport { readBytesAsString } from \"../../utils/byte_functions/string.js\";\nimport { BasicSample } from \"../basic_soundfont/basic_sample.js\";\nimport { consoleColors } from \"../../utils/other.js\";\n\n/**\n * samples.js\n * purpose: parses soundfont samples\n */\n\nexport const SF3_BIT_FLIT = 0x10;\n\nexport class SoundFontSample extends BasicSample\n{\n    /**\n     * Linked sample index for retrieving linked samples in sf2\n     * @type {number}\n     */\n    linkedSampleIndex;\n    \n    /**\n     * The sliced sample from the smpl chunk\n     * @type {Uint8Array}\n     */\n    s16leData;\n    \n    /**\n     * Creates a sample\n     * @param sampleName {string}\n     * @param sampleStartIndex {number}\n     * @param sampleEndIndex {number}\n     * @param sampleLoopStartIndex {number}\n     * @param sampleLoopEndIndex {number}\n     * @param sampleRate {number}\n     * @param samplePitch {number}\n     * @param samplePitchCorrection {number}\n     * @param linkedSampleIndex {number}\n     * @param sampleType {number}\n     * @param sampleDataArray {IndexedByteArray|Float32Array}\n     * @param sampleIndex {number} initial sample index when loading the sfont\n     * Used for SF2Pack support\n     */\n    constructor(\n        sampleName,\n        sampleStartIndex,\n        sampleEndIndex,\n        sampleLoopStartIndex,\n        sampleLoopEndIndex,\n        sampleRate,\n        samplePitch,\n        samplePitchCorrection,\n        linkedSampleIndex,\n        sampleType,\n        sampleDataArray,\n        sampleIndex\n    )\n    {\n        // read sf3\n        // https://github.com/FluidSynth/fluidsynth/wiki/SoundFont3Format\n        const compressed = (sampleType & SF3_BIT_FLIT) > 0;\n        // remove the compression flag\n        sampleType &= ~SF3_BIT_FLIT;\n        super(\n            sampleName,\n            sampleRate,\n            samplePitch,\n            samplePitchCorrection,\n            sampleType,\n            sampleLoopStartIndex - (sampleStartIndex / 2),\n            sampleLoopEndIndex - (sampleStartIndex / 2)\n        );\n        this.dataOverriden = false;\n        this.isCompressed = compressed;\n        this.sampleName = sampleName;\n        // in bytes\n        this.startByteOffset = sampleStartIndex;\n        this.endByteOffset = sampleEndIndex;\n        this.sampleID = sampleIndex;\n        const smplStart = sampleDataArray.currentIndex;\n        \n        // three data types in:\n        // SF2 (s16le)\n        // SF3 (vorbis)\n        // SF2Pack (\n        if (this.isCompressed)\n        {\n            // correct loop points\n            this.sampleLoopStartIndex += this.startByteOffset / 2;\n            this.sampleLoopEndIndex += this.startByteOffset / 2;\n            \n            // copy the compressed data, it can be preserved during writing\n            this.compressedData = sampleDataArray.slice(\n                this.startByteOffset / 2 + smplStart,\n                this.endByteOffset / 2 + smplStart\n            );\n        }\n        else\n        {\n            if (sampleDataArray instanceof Float32Array)\n            {\n                // float32 array from SF2pack, copy directly\n                this.sampleData = sampleDataArray.slice(\n                    this.startByteOffset / 2,\n                    this.endByteOffset / 2\n                );\n                this.dataOverriden = true;\n            }\n            else\n            {\n                // regular sf2 s16le\n                this.s16leData = sampleDataArray.slice(\n                    smplStart + this.startByteOffset,\n                    smplStart + this.endByteOffset\n                );\n            }\n            \n        }\n        this.linkedSampleIndex = linkedSampleIndex;\n    }\n    \n    /**\n     * @param samplesArray {BasicSample[]}\n     */\n    getLinkedSample(samplesArray)\n    {\n        if (this.linkedSample || !this.isLinked)\n        {\n            return;\n        }\n        const linked = samplesArray[this.linkedSampleIndex];\n        if (!linked)\n        {\n            // log as info because it's common and not really dangerous\n            SpessaSynthInfo(`%cInvalid linked sample for ${this.sampleName}. Setting to mono.`, consoleColors.warn);\n            this.unlinkSample();\n        }\n        else\n        {\n            // check for corrupted files (like FluidR3_GM.sf2 that link EVERYTHING to a single sample)\n            if (linked.linkedSample)\n            {\n                SpessaSynthInfo(\n                    `%cInvalid linked sample for ${this.sampleName}: Already linked to ${linked.linkedSample.sampleName}`,\n                    consoleColors.warn\n                );\n                this.unlinkSample();\n            }\n            else\n            {\n                this.setLinkedSample(linked, this.sampleType);\n            }\n        }\n    }\n    \n    /**\n     * @param audioData {Float32Array}\n     */\n    setAudioData(audioData)\n    {\n        super.setAudioData(audioData);\n    }\n    \n    /**\n     * Loads the audio data and stores it for reuse\n     * @returns {Float32Array} The audioData\n     */\n    getAudioData()\n    {\n        if (this.sampleData)\n        {\n            return this.sampleData;\n        }\n        // SF2Pack is decoded during load time\n        // SF3 is decoded in BasicSample\n        if (this.isCompressed)\n        {\n            return super.getAudioData();\n        }\n        \n        // start loading data if it is not loaded\n        const byteLength = this.endByteOffset - this.startByteOffset;\n        if (byteLength < 1)\n        {\n            SpessaSynthWarn(`Invalid sample ${this.sampleName}! Invalid length: ${byteLength}`);\n            return new Float32Array(1);\n        }\n        \n        \n        // SF2\n        // read the sample data\n        let audioData = new Float32Array(byteLength / 2);\n        let convertedSigned16 = new Int16Array(\n            this.s16leData.buffer\n        );\n        \n        // convert to float\n        for (let i = 0; i < convertedSigned16.length; i++)\n        {\n            audioData[i] = convertedSigned16[i] / 32768;\n        }\n        \n        this.sampleData = audioData;\n        return audioData;\n        \n    }\n    \n    /**\n     * @param allowVorbis\n     * @returns {Uint8Array}\n     */\n    getRawData(allowVorbis)\n    {\n        if (this.dataOverriden || this.compressedData)\n        {\n            // return vorbis or encode manually\n            return super.getRawData(allowVorbis);\n        }\n        // copy the smpl directly\n        return this.s16leData;\n    }\n}\n\n/**\n * Reads the generatorTranslator from the shdr read\n * @param sampleHeadersChunk {RiffChunk}\n * @param smplChunkData {IndexedByteArray|Float32Array}\n * @param linkSamples {boolean}\n * @returns {SoundFontSample[]}\n */\nexport function readSamples(sampleHeadersChunk, smplChunkData, linkSamples = true)\n{\n    /**\n     * @type {SoundFontSample[]}\n     */\n    let samples = [];\n    let index = 0;\n    while (sampleHeadersChunk.chunkData.length > sampleHeadersChunk.chunkData.currentIndex)\n    {\n        const sample = readSample(index, sampleHeadersChunk.chunkData, smplChunkData);\n        samples.push(sample);\n        index++;\n    }\n    // remove EOS\n    samples.pop();\n    \n    // link samples\n    if (linkSamples)\n    {\n        samples.forEach(s => s.getLinkedSample(samples));\n    }\n    \n    return samples;\n}\n\n/**\n * Reads it into a sample\n * @param index {number}\n * @param sampleHeaderData {IndexedByteArray}\n * @param smplArrayData {IndexedByteArray|Float32Array}\n * @returns {SoundFontSample}\n */\nfunction readSample(index, sampleHeaderData, smplArrayData)\n{\n    \n    // read the sample name\n    let sampleName = readBytesAsString(sampleHeaderData, 20);\n    \n    // read the sample start index\n    let sampleStartIndex = readLittleEndian(sampleHeaderData, 4) * 2;\n    \n    // read the sample end index\n    let sampleEndIndex = readLittleEndian(sampleHeaderData, 4) * 2;\n    \n    // read the sample looping start index\n    let sampleLoopStartIndex = readLittleEndian(sampleHeaderData, 4);\n    \n    // read the sample looping end index\n    let sampleLoopEndIndex = readLittleEndian(sampleHeaderData, 4);\n    \n    // read the sample rate\n    let sampleRate = readLittleEndian(sampleHeaderData, 4);\n    \n    // read the original sample pitch\n    let samplePitch = sampleHeaderData[sampleHeaderData.currentIndex++];\n    if (samplePitch > 127)\n    {\n        // if it's out of range, then default to 60\n        samplePitch = 60;\n    }\n    \n    // read the sample pitch correction\n    let samplePitchCorrection = signedInt8(sampleHeaderData[sampleHeaderData.currentIndex++]);\n    \n    \n    // read the link to the other channel\n    let sampleLink = readLittleEndian(sampleHeaderData, 2);\n    let sampleType = readLittleEndian(sampleHeaderData, 2);\n    \n    \n    return new SoundFontSample(\n        sampleName,\n        sampleStartIndex,\n        sampleEndIndex,\n        sampleLoopStartIndex,\n        sampleLoopEndIndex,\n        sampleRate,\n        samplePitch,\n        samplePitchCorrection,\n        sampleLink,\n        sampleType,\n        smplArrayData,\n        index\n    );\n}", "import { IndexedByteArray } from \"../../../utils/indexed_array.js\";\nimport { writeStringAsBytes } from \"../../../utils/byte_functions/string.js\";\nimport { writeDword, writeWord } from \"../../../utils/byte_functions/little_endian.js\";\nimport { writeRIFFChunkRaw } from \"../riff_chunk.js\";\nimport { SF3_BIT_FLIT } from \"../../read_sf2/samples.js\";\n\n/**\n * @this {BasicSoundBank}\n * @param smplStartOffsets {number[]}\n * @param smplEndOffsets {number[]}\n * @returns {ReturnedExtendedSf2Chunks}\n */\nexport function getSHDR(smplStartOffsets, smplEndOffsets)\n{\n    const sampleLength = 46;\n    const shdrSize = sampleLength * (this.samples.length + 1); // +1 because EOP\n    const shdrData = new IndexedByteArray(shdrSize);\n    // https://github.com/spessasus/soundfont-proposals/blob/main/extended_limits.md\n    const xshdrData = new IndexedByteArray(shdrSize);\n    let maxSampleLink = 0;\n    this.samples.forEach((sample, index) =>\n    {\n        // sample name\n        writeStringAsBytes(shdrData, sample.sampleName.substring(0, 20), 20);\n        writeStringAsBytes(xshdrData, sample.sampleName.substring(20), 20);\n        // start offset\n        const dwStart = smplStartOffsets[index];\n        writeDword(shdrData, dwStart);\n        xshdrData.currentIndex += 4;\n        // end offset\n        const dwEnd = smplEndOffsets[index];\n        writeDword(shdrData, dwEnd);\n        xshdrData.currentIndex += 4;\n        // loop is stored as relative in sample points, change it to absolute sample points here\n        let loopStart = sample.sampleLoopStartIndex + dwStart;\n        let loopEnd = sample.sampleLoopEndIndex + dwStart;\n        if (sample.isCompressed)\n        {\n            // https://github.com/FluidSynth/fluidsynth/wiki/SoundFont3Format\n            loopStart -= dwStart;\n            loopEnd -= dwStart;\n        }\n        writeDword(shdrData, loopStart);\n        writeDword(shdrData, loopEnd);\n        // sample rate\n        writeDword(shdrData, sample.sampleRate);\n        // pitch and correction\n        shdrData[shdrData.currentIndex++] = sample.samplePitch;\n        shdrData[shdrData.currentIndex++] = sample.samplePitchCorrection;\n        // skip all those for xshdr\n        xshdrData.currentIndex += 14;\n        // sample link\n        const sampleLinkIndex = this.samples.indexOf(sample.linkedSample);\n        writeWord(shdrData, Math.max(0, sampleLinkIndex) & 0xFFFF);\n        writeWord(xshdrData, Math.max(0, sampleLinkIndex) >> 16);\n        maxSampleLink = Math.max(maxSampleLink, sampleLinkIndex);\n        // sample type: add byte if compressed\n        let type = sample.sampleType;\n        if (sample.isCompressed)\n        {\n            type |= SF3_BIT_FLIT;\n        }\n        writeWord(shdrData, type);\n        xshdrData.currentIndex += 2;\n    });\n    \n    // write EOS and zero everything else\n    writeStringAsBytes(shdrData, \"EOS\", sampleLength);\n    writeStringAsBytes(xshdrData, \"EOS\", sampleLength);\n    const shdr = writeRIFFChunkRaw(\"shdr\", shdrData);\n    const xshdr = writeRIFFChunkRaw(\"shdr\", xshdrData);\n    return {\n        pdta: shdr,\n        xdta: xshdr,\n        highestIndex: maxSampleLink\n    };\n}", "import { IndexedByteArray } from \"../../../utils/indexed_array.js\";\nimport { writeLittleEndian, writeWord } from \"../../../utils/byte_functions/little_endian.js\";\nimport { writeRIFFChunkRaw } from \"../riff_chunk.js\";\nimport { MOD_BYTE_SIZE } from \"../modulator.js\";\n\n/**\n * @this {BasicSoundBank}\n * @returns {ReturnedExtendedSf2Chunks}\n */\nexport function getIMOD()\n{\n    // very similar to igen,\n    // go through all instruments -> zones and write modulators sequentially\n    let imodSize = MOD_BYTE_SIZE; // terminal\n    for (const inst of this.instruments)\n    {\n        imodSize += inst.globalZone.modulators.length * MOD_BYTE_SIZE;\n        // start with one mod for global\n        imodSize += inst.instrumentZones.reduce((sum, z) => z.modulators.length * MOD_BYTE_SIZE + sum, 0);\n    }\n    const imodData = new IndexedByteArray(imodSize);\n    \n    /**\n     * @param z {BasicZone}\n     */\n    const writeZone = z =>\n    {\n        for (const mod of z.modulators)\n        {\n            writeWord(imodData, mod.getSourceEnum());\n            writeWord(imodData, mod.modulatorDestination);\n            writeWord(imodData, mod.transformAmount);\n            writeWord(imodData, mod.getSecSrcEnum());\n            writeWord(imodData, mod.transformType);\n        }\n    };\n    \n    for (const inst of this.instruments)\n    {\n        // global\n        writeZone(inst.globalZone);\n        for (const instrumentZone of inst.instrumentZones)\n        {\n            writeZone(instrumentZone);\n        }\n    }\n    \n    // terminal modulator, is zero\n    writeLittleEndian(imodData, 0, MOD_BYTE_SIZE);\n    \n    // https://github.com/spessasus/soundfont-proposals/blob/main/extended_limits.md\n    const ximodData = new IndexedByteArray(MOD_BYTE_SIZE);\n    writeLittleEndian(ximodData, 0, MOD_BYTE_SIZE);\n    \n    const imod = writeRIFFChunkRaw(\"imod\", imodData);\n    const ximod = writeRIFFChunkRaw(\"imod\", ximodData);\n    return {\n        pdta: imod,\n        xdta: ximod,\n        highestIndex: 0 // not applicable\n    };\n}", "import { IndexedByteArray } from \"../../../utils/indexed_array.js\";\nimport { writeWord } from \"../../../utils/byte_functions/little_endian.js\";\nimport { writeRIFFChunkRaw } from \"../riff_chunk.js\";\n\nconst BAG_SIZE = 4;\n\n/**\n * @this {BasicSoundBank}\n * @returns {ReturnedExtendedSf2Chunks}\n */\nexport function getIBAG()\n{\n    // write all ibag with their start indexes as they were changed in getIGEN() and getIMOD()\n    const ibagSize = this.instruments.reduce(\n        (sum, i) =>\n            // +1 because global zone\n            (i.instrumentZones.length + 1) * BAG_SIZE + sum,\n        BAG_SIZE\n    );\n    const ibagData = new IndexedByteArray(ibagSize);\n    // https://github.com/spessasus/soundfont-proposals/blob/main/extended_limits.md\n    const xibagData = new IndexedByteArray(ibagSize);\n    let generatorIndex = 0;\n    let modulatorIndex = 0;\n    /**\n     * @param z {BasicZone}\n     */\n    const writeZone = z =>\n    {\n        // bottom WORD: regular ibag\n        writeWord(ibagData, generatorIndex & 0xFFFF);\n        writeWord(ibagData, modulatorIndex & 0xFFFF);\n        // top WORD: extended ibag\n        writeWord(xibagData, generatorIndex >> 16);\n        writeWord(xibagData, modulatorIndex >> 16);\n        generatorIndex += z.generators.length;\n        modulatorIndex += z.modulators.length;\n    };\n    \n    for (const inst of this.instruments)\n    {\n        writeZone(inst.globalZone);\n        for (const ibag of inst.instrumentZones)\n        {\n            writeZone(ibag);\n        }\n    }\n    // write the terminal IBAG\n    writeWord(ibagData, generatorIndex & 0xFFFF);\n    writeWord(ibagData, modulatorIndex & 0xFFFF);\n    writeWord(xibagData, generatorIndex >> 16);\n    writeWord(xibagData, modulatorIndex >> 16);\n    const ibag = writeRIFFChunkRaw(\"ibag\", ibagData);\n    const xibag = writeRIFFChunkRaw(\"ibag\", xibagData);\n    return {\n        pdta: ibag,\n        xdta: xibag,\n        highestIndex: Math.max(generatorIndex, modulatorIndex)\n    };\n}", "import { IndexedByteArray } from \"../../../utils/indexed_array.js\";\nimport { writeStringAsBytes } from \"../../../utils/byte_functions/string.js\";\nimport { writeWord } from \"../../../utils/byte_functions/little_endian.js\";\nimport { writeRIFFChunkRaw } from \"../riff_chunk.js\";\n\nconst INST_SIZE = 22;\n\n/**\n * @this {BasicSoundBank}\n * @returns {ReturnedExtendedSf2Chunks}\n */\nexport function getINST()\n{\n    const instSize = this.instruments.length * INST_SIZE + INST_SIZE;\n    const instData = new IndexedByteArray(instSize);\n    // https://github.com/spessasus/soundfont-proposals/blob/main/extended_limits.md\n    const xinstData = new IndexedByteArray(instSize);\n    // the instrument start index is adjusted in ibag, write it here\n    let instrumentStart = 0;\n    for (const inst of this.instruments)\n    {\n        writeStringAsBytes(instData, inst.instrumentName.substring(0, 20), 20);\n        writeStringAsBytes(xinstData, inst.instrumentName.substring(20), 20);\n        writeWord(instData, instrumentStart & 0xFFFF);\n        writeWord(xinstData, instrumentStart >> 16);\n        instrumentStart += inst.instrumentZones.length + 1; // global\n    }\n    // write EOI\n    writeStringAsBytes(instData, \"EOI\", 20);\n    writeStringAsBytes(xinstData, \"EOI\", 20);\n    writeWord(instData, instrumentStart & 0xFFFF);\n    writeWord(xinstData, instrumentStart >> 16);\n    \n    const inst = writeRIFFChunkRaw(\"inst\", instData);\n    const xinst = writeRIFFChunkRaw(\"inst\", xinstData);\n    \n    return {\n        pdta: inst,\n        xdta: xinst,\n        highestIndex: instrumentStart\n    };\n}", "import { writeDword, writeWord } from \"../../../utils/byte_functions/little_endian.js\";\nimport { IndexedByteArray } from \"../../../utils/indexed_array.js\";\nimport { writeRIFFChunkRaw } from \"../riff_chunk.js\";\n\nimport { GEN_BYTE_SIZE, Generator } from \"../generator.js\";\nimport { generatorTypes } from \"../generator_types.js\";\n\n/**\n * @this {BasicSoundBank}\n * @returns {ReturnedExtendedSf2Chunks}\n */\nexport function getPGEN()\n{\n    // almost identical to igen, except the correct instrument instead of sample gen\n    // goes through all preset zones and writes generators sequentially (add 4 for terminal)\n    let pgenSize = GEN_BYTE_SIZE;\n    for (const preset of this.presets)\n    {\n        pgenSize += preset.globalZone.generators.length * GEN_BYTE_SIZE;\n        pgenSize += preset.presetZones.reduce((size, z) =>\n        {\n            // clear instrument and range generators before determining the size\n            z.generators = z.generators.filter(g =>\n                g.generatorType !== generatorTypes.instrument &&\n                g.generatorType !== generatorTypes.keyRange &&\n                g.generatorType !== generatorTypes.velRange\n            );\n            // unshift vel then key and instrument is last\n            if (z.hasVelRange)\n            {\n                z.prependGenerator(new Generator(\n                    generatorTypes.velRange,\n                    z.velRange.max << 8 | Math.max(z.velRange.min, 0),\n                    false\n                ));\n            }\n            if (z.hasKeyRange)\n            {\n                z.prependGenerator(new Generator(\n                    generatorTypes.keyRange,\n                    z.keyRange.max << 8 | Math.max(z.keyRange.min, 0),\n                    false\n                ));\n            }\n            // write the instrument id\n            z.addGenerators(new Generator(\n                generatorTypes.instrument,\n                this.instruments.indexOf(z.instrument),\n                false\n            ));\n            return z.generators.length * GEN_BYTE_SIZE + size;\n        }, 0);\n    }\n    const pgenData = new IndexedByteArray(pgenSize);\n    \n    /**\n     * @param z {BasicZone}\n     */\n    const writeZone = z =>\n    {\n        for (const gen of z.generators)\n        {\n            // name is deceptive, it works on negatives\n            writeWord(pgenData, gen.generatorType);\n            writeWord(pgenData, gen.generatorValue);\n        }\n    };\n    for (const preset of this.presets)\n    {\n        // global zone\n        writeZone(preset.globalZone);\n        for (const zone of preset.presetZones)\n        {\n            writeZone(zone);\n        }\n    }\n    // terminal generator, is zero\n    writeDword(pgenData, 0);\n    \n    // https://github.com/spessasus/soundfont-proposals/blob/main/extended_limits.md\n    const xpgenData = new IndexedByteArray(GEN_BYTE_SIZE);\n    writeDword(xpgenData, 0);\n    \n    const pgen = writeRIFFChunkRaw(\"pgen\", pgenData);\n    \n    const xpgen = writeRIFFChunkRaw(\"pgen\", xpgenData);\n    return {\n        pdta: pgen,\n        xdta: xpgen,\n        highestIndex: 0 // not applicable\n    };\n}", "import { IndexedByteArray } from \"../../../utils/indexed_array.js\";\nimport { writeLittleEndian, writeWord } from \"../../../utils/byte_functions/little_endian.js\";\nimport { writeRIFFChunkRaw } from \"../riff_chunk.js\";\nimport { MOD_BYTE_SIZE } from \"../modulator.js\";\n\n/**\n * @this {BasicSoundBank}\n * @returns {ReturnedExtendedSf2Chunks}\n */\nexport function getPMOD()\n{\n    // very similar to imod,\n    // go through all presets -> zones and write modulators sequentially\n    let pmodSize = MOD_BYTE_SIZE;\n    for (const preset of this.presets)\n    {\n        pmodSize += preset.globalZone.modulators.length * MOD_BYTE_SIZE;\n        pmodSize += preset.presetZones.reduce((sum, z) => z.modulators.length * MOD_BYTE_SIZE + sum, 0);\n    }\n    const pmodData = new IndexedByteArray(pmodSize);\n    \n    /**\n     * @param z {BasicZone}\n     */\n    const writeZone = z =>\n    {\n        for (const mod of z.modulators)\n        {\n            writeWord(pmodData, mod.getSourceEnum());\n            writeWord(pmodData, mod.modulatorDestination);\n            writeWord(pmodData, mod.transformAmount);\n            writeWord(pmodData, mod.getSecSrcEnum());\n            writeWord(pmodData, mod.transformType);\n        }\n    };\n    \n    \n    for (const preset of this.presets)\n    {\n        // global\n        writeZone(preset.globalZone);\n        for (const zone of preset.presetZones)\n        {\n            writeZone(zone);\n        }\n    }\n    \n    // terminal modulator, is zero\n    writeLittleEndian(pmodData, 0, MOD_BYTE_SIZE);\n    \n    // https://github.com/spessasus/soundfont-proposals/blob/main/extended_limits.md\n    const xpmodData = new IndexedByteArray(MOD_BYTE_SIZE);\n    writeLittleEndian(xpmodData, 0, MOD_BYTE_SIZE);\n    \n    const pmod = writeRIFFChunkRaw(\"pmod\", pmodData);\n    const xpmod = writeRIFFChunkRaw(\"pmod\", xpmodData);\n    return {\n        pdta: pmod,\n        xdta: xpmod,\n        highestIndex: 0 // not applicable\n    };\n}", "import { IndexedByteArray } from \"../../../utils/indexed_array.js\";\nimport { writeWord } from \"../../../utils/byte_functions/little_endian.js\";\nimport { writeRIFFChunkRaw } from \"../riff_chunk.js\";\n\nconst BAG_SIZE = 4;\n\n/**\n * @this {BasicSoundBank}\n * @returns {ReturnedExtendedSf2Chunks}\n */\nexport function getPBAG()\n{\n    // write all pbag with their start indexes as they were changed in getPGEN() and getPMOD()\n    const pbagSize = this.presets.reduce((sum, i) =>\n        // +1 because global zone\n        (i.presetZones.length + 1) * BAG_SIZE + sum, BAG_SIZE);\n    const pbagData = new IndexedByteArray(pbagSize);\n    // https://github.com/spessasus/soundfont-proposals/blob/main/extended_limits.md\n    const xpbagData = new IndexedByteArray(pbagSize);\n    let generatorIndex = 0;\n    let modulatorIndex = 0;\n    \n    /**\n     * @param z {BasicZone}\n     */\n    const writeZone = z =>\n    {\n        writeWord(pbagData, generatorIndex & 0xFFFF);\n        writeWord(pbagData, modulatorIndex & 0xFFFF);\n        writeWord(xpbagData, generatorIndex >> 16);\n        writeWord(xpbagData, modulatorIndex >> 16);\n        generatorIndex += z.generators.length;\n        modulatorIndex += z.modulators.length;\n    };\n    \n    for (const preset of this.presets)\n    {\n        // global\n        writeZone(preset.globalZone);\n        for (const pbag of preset.presetZones)\n        {\n            writeZone(pbag);\n        }\n    }\n    // write the terminal PBAG\n    writeWord(pbagData, generatorIndex);\n    writeWord(pbagData, modulatorIndex);\n    writeWord(xpbagData, generatorIndex);\n    writeWord(xpbagData, modulatorIndex);\n    const pbag = writeRIFFChunkRaw(\"pbag\", pbagData);\n    const xbag = writeRIFFChunkRaw(\"pbag\", xpbagData);\n    return {\n        pdta: pbag,\n        xdta: xbag,\n        highestIndex: Math.max(generatorIndex, modulatorIndex)\n    };\n}", "import { IndexedByteArray } from \"../../../utils/indexed_array.js\";\nimport { writeStringAsBytes } from \"../../../utils/byte_functions/string.js\";\nimport { writeDword, writeWord } from \"../../../utils/byte_functions/little_endian.js\";\nimport { writeRIFFChunkRaw } from \"../riff_chunk.js\";\n\nconst PHDR_SIZE = 38;\n\n/**\n * @this {BasicSoundBank}\n * @returns {ReturnedExtendedSf2Chunks}\n */\nexport function getPHDR()\n{\n    const phdrSize = this.presets.length * PHDR_SIZE + PHDR_SIZE;\n    const phdrData = new IndexedByteArray(phdrSize);\n    // https://github.com/spessasus/soundfont-proposals/blob/main/extended_limits.md\n    const xphdrData = new IndexedByteArray(phdrSize);\n    // the preset start is adjusted in pbag, this is only for the terminal preset index\n    let presetStart = 0;\n    for (const preset of this.presets)\n    {\n        writeStringAsBytes(phdrData, preset.presetName.substring(0, 20), 20);\n        writeStringAsBytes(xphdrData, preset.presetName.substring(20), 20);\n        \n        writeWord(phdrData, preset.program);\n        writeWord(phdrData, preset.bank);\n        writeWord(phdrData, presetStart & 0xFFFF);\n        \n        xphdrData.currentIndex += 4;\n        writeWord(xphdrData, presetStart >> 16);\n        \n        // 3 unused dword, spec says to keep em so we do\n        writeDword(phdrData, preset.library);\n        writeDword(phdrData, preset.genre);\n        writeDword(phdrData, preset.morphology);\n        \n        xphdrData.currentIndex += 12;\n        \n        presetStart += preset.presetZones.length + 1; // global\n    }\n    // write EOP\n    writeStringAsBytes(phdrData, \"EOP\", 20);\n    phdrData.currentIndex += 4; // program, bank\n    writeWord(phdrData, presetStart & 0xFFFF);\n    phdrData.currentIndex += 12;// library, genre, morphology\n    \n    writeStringAsBytes(xphdrData, \"EOP\", 20);\n    xphdrData.currentIndex += 4; // program, bank\n    writeWord(xphdrData, presetStart >> 16);\n    xphdrData.currentIndex += 12;// library, genre, morphology\n    \n    const phdr = writeRIFFChunkRaw(\"phdr\", phdrData);\n    \n    const xphdr = writeRIFFChunkRaw(\"phdr\", xphdrData);\n    \n    return {\n        pdta: phdr,\n        xdta: xphdr,\n        highestIndex: presetStart\n    };\n}", "/**\n * Fills the object with default values\n * @param obj {Object}\n * @param defObj {Object}\n * @returns {Object}\n */\nexport function fillWithDefaults(obj, defObj)\n{\n    if (obj === undefined)\n    {\n        obj = {};\n    }\n    for (const key in defObj)\n    {\n        if (defObj.hasOwnProperty(key) && !(key in obj))\n        {\n            obj[key] = defObj[key];\n        }\n    }\n    return obj;\n}", "import { IndexedByteArray } from \"../../../utils/indexed_array.js\";\nimport { writeRIFFChunkParts, writeRIFFChunkRaw } from \"../riff_chunk.js\";\nimport { getStringBytes } from \"../../../utils/byte_functions/string.js\";\nimport { consoleColors } from \"../../../utils/other.js\";\nimport { getIGEN } from \"./igen.js\";\nimport { getSDTA } from \"./sdta.js\";\nimport { getSHDR } from \"./shdr.js\";\nimport { getIMOD } from \"./imod.js\";\nimport { getIBAG } from \"./ibag.js\";\nimport { getINST } from \"./inst.js\";\nimport { getPGEN } from \"./pgen.js\";\nimport { getPMOD } from \"./pmod.js\";\nimport { getPBAG } from \"./pbag.js\";\nimport { getPHDR } from \"./phdr.js\";\nimport { writeLittleEndian, writeWord } from \"../../../utils/byte_functions/little_endian.js\";\nimport { SpessaSynthGroupCollapsed, SpessaSynthGroupEnd, SpessaSynthInfo } from \"../../../utils/loggin.js\";\nimport { MOD_BYTE_SIZE } from \"../modulator.js\";\nimport { fillWithDefaults } from \"../../../utils/fill_with_defaults.js\";\n\n/**\n * @typedef {function} ProgressFunction\n * @param {string} sampleName - the written sample name.\n * @param {number} sampleIndex - the sample's index.\n * @param {number} sampleCount - the total sample count for progress displaying.\n */\n\n/**\n * @typedef {Object} SoundFont2WriteOptions\n * @property {boolean} compress - if the soundfont should be compressed with a given function.\n * @property {SampleEncodingFunction} compressionFunction -\n * the encode vorbis function. It can be undefined if not compressed.\n * @property {ProgressFunction} progressFunction - a function to show progress for writing large banks. It can be undefined.\n * @property {boolean} writeDefaultModulators - if the DMOD chunk should be written.\n * Recommended.\n * @property {boolean} writeExtendedLimits - if the xdta chunk should be written to allow virtually infinite parameters.\n * Recommended.\n * @property {boolean} decompress - if an sf3 bank should be decompressed back to sf2. Not recommended.\n */\n\n\n/**\n * @typedef {Object} ReturnedExtendedSf2Chunks\n * @property {IndexedByteArray} pdta - the pdta part of the chunk\n * @property {IndexedByteArray} xdta - the xdta (https://github.com/spessasus/soundfont-proposals/blob/main/extended_limits.md) part of the chunk\n * @property {number} highestIndex - the highest index written (0 if not applicable). Used for determining whether the xdta chunk is necessary.\n */\n\n/**\n * @type {SoundFont2WriteOptions}\n */\nconst DEFAULT_WRITE_OPTIONS = {\n    compress: false,\n    compressionQuality: 0.5,\n    compressionFunction: undefined,\n    progressFunction: undefined,\n    writeDefaultModulators: true,\n    writeExtendedLimits: true,\n    decompress: false\n};\n\n/**\n * Write the soundfont as an .sf2 file\n * @this {BasicSoundBank}\n * @param {Partial<SoundFont2WriteOptions>} options\n * @returns {Uint8Array}\n */\nexport async function write(options = DEFAULT_WRITE_OPTIONS)\n{\n    options = fillWithDefaults(options, DEFAULT_WRITE_OPTIONS);\n    if (options?.compress)\n    {\n        if (typeof options?.compressionFunction !== \"function\")\n        {\n            throw new Error(\"No compression function supplied but compression enabled.\");\n        }\n        if (options?.decompress)\n        {\n            throw new Error(\"Decompressed and compressed at the same time.\");\n        }\n    }\n    SpessaSynthGroupCollapsed(\n        \"%cSaving soundfont...\",\n        consoleColors.info\n    );\n    SpessaSynthInfo(\n        `%cCompression: %c${options?.compress || \"false\"}%c quality: %c${options?.compressionQuality || \"none\"}`,\n        consoleColors.info,\n        consoleColors.recognized,\n        consoleColors.info,\n        consoleColors.recognized\n    );\n    SpessaSynthInfo(\n        \"%cWriting INFO...\",\n        consoleColors.info\n    );\n    /**\n     * Write INFO\n     * @type {IndexedByteArray[]}\n     */\n    const infoArrays = [];\n    this.soundFontInfo[\"ISFT\"] = \"SpessaSynth\"; // ( \u0361\u00B0 \u035C\u0296 \u0361\u00B0)\n    if (options?.compress || this.samples.some(s => s.isCompressed))\n    {\n        this.soundFontInfo[\"ifil\"] = \"3.0\"; // set version to 3\n    }\n    if (options?.decompress)\n    {\n        this.soundFontInfo[\"ifil\"] = \"2.4\"; // set version to 2.04\n    }\n    \n    if (options?.writeDefaultModulators)\n    {\n        // trigger the DMOD write\n        this.soundFontInfo[\"DMOD\"] = `${this.defaultModulators.length} Modulators`;\n        this.customDefaultModulators = true;\n    }\n    else\n    {\n        delete this.soundFontInfo[\"DMOD\"];\n    }\n    \n    for (const [type, data] of Object.entries(this.soundFontInfo))\n    {\n        if (type === \"ifil\" || type === \"iver\")\n        {\n            const major = parseInt(data.split(\".\")[0]);\n            const minor = parseInt(data.split(\".\")[1]);\n            const ckdata = new IndexedByteArray(4);\n            writeWord(ckdata, major);\n            writeWord(ckdata, minor);\n            infoArrays.push(writeRIFFChunkRaw(type, ckdata));\n        }\n        else if (type === \"DMOD\")\n        {\n            const mods = this.defaultModulators;\n            SpessaSynthInfo(\n                `%cWriting %c${mods.length}%c default modulators...`,\n                consoleColors.info,\n                consoleColors.recognized,\n                consoleColors.info\n            );\n            let dmodsize = MOD_BYTE_SIZE + mods.length * MOD_BYTE_SIZE;\n            const dmoddata = new IndexedByteArray(dmodsize);\n            for (const mod of mods)\n            {\n                writeWord(dmoddata, mod.getSourceEnum());\n                writeWord(dmoddata, mod.modulatorDestination);\n                writeWord(dmoddata, mod.transformAmount);\n                writeWord(dmoddata, mod.getSecSrcEnum());\n                writeWord(dmoddata, mod.transformType);\n            }\n            \n            // terminal modulator, is zero\n            writeLittleEndian(dmoddata, 0, MOD_BYTE_SIZE);\n            \n            infoArrays.push(writeRIFFChunkRaw(type, dmoddata));\n        }\n        else\n        {\n            infoArrays.push(writeRIFFChunkRaw(\n                type,\n                getStringBytes(data, true, true) // pad with zero and ensure even length\n            ));\n        }\n    }\n    \n    SpessaSynthInfo(\n        \"%cWriting SDTA...\",\n        consoleColors.info\n    );\n    // write sdta\n    const smplStartOffsets = [];\n    const smplEndOffsets = [];\n    const sdtaChunk = await getSDTA.call(\n        this,\n        smplStartOffsets,\n        smplEndOffsets,\n        options.compress,\n        options.decompress,\n        options?.compressionFunction,\n        options?.progressFunction\n    );\n    \n    SpessaSynthInfo(\n        \"%cWriting PDTA...\",\n        consoleColors.info\n    );\n    // write pdta\n    // go in reverse so the indexes are correct\n    // instruments\n    SpessaSynthInfo(\n        \"%cWriting SHDR...\",\n        consoleColors.info\n    );\n    const shdrChunk = getSHDR.call(this, smplStartOffsets, smplEndOffsets);\n    SpessaSynthInfo(\n        \"%cWriting IGEN...\",\n        consoleColors.info\n    );\n    const igenChunk = getIGEN.call(this);\n    SpessaSynthInfo(\n        \"%cWriting IMOD...\",\n        consoleColors.info\n    );\n    const imodChunk = getIMOD.call(this);\n    SpessaSynthInfo(\n        \"%cWriting IBAG...\",\n        consoleColors.info\n    );\n    const ibagChunk = getIBAG.call(this);\n    SpessaSynthInfo(\n        \"%cWriting INST...\",\n        consoleColors.info\n    );\n    const instChunk = getINST.call(this);\n    SpessaSynthInfo(\n        \"%cWriting PGEN...\",\n        consoleColors.info\n    );\n    // presets\n    const pgenChunk = getPGEN.call(this);\n    SpessaSynthInfo(\n        \"%cWriting PMOD...\",\n        consoleColors.info\n    );\n    const pmodChunk = getPMOD.call(this);\n    SpessaSynthInfo(\n        \"%cWriting PBAG...\",\n        consoleColors.info\n    );\n    const pbagChunk = getPBAG.call(this);\n    SpessaSynthInfo(\n        \"%cWriting PHDR...\",\n        consoleColors.info\n    );\n    const phdrChunk = getPHDR.call(this);\n    /**\n     * @type {ReturnedExtendedSf2Chunks[]}\n     */\n    const chunks = [phdrChunk, pbagChunk, pmodChunk, pgenChunk, instChunk, ibagChunk, imodChunk, igenChunk, shdrChunk];\n    // combine in the sfspec order\n    const pdtaChunk = writeRIFFChunkParts(\n        \"pdta\",\n        chunks.map(c => c.pdta),\n        true\n    );\n    const maxIndex = Math.max(\n        ...chunks.map(c => c.highestIndex)\n    );\n    \n    const writeXdta = options.writeExtendedLimits && (\n        maxIndex > 0xFFFF\n        || this.presets.some(p => p.presetName.length > 20)\n        || this.instruments.some(i => i.instrumentName.length > 20)\n        || this.samples.some(s => s.sampleName.length > 20)\n    );\n    \n    if (writeXdta)\n    {\n        SpessaSynthInfo(\n            `%cWriting the xdta chunk! Max index: %c${maxIndex}`,\n            consoleColors.info,\n            consoleColors.value\n        );\n        // https://github.com/spessasus/soundfont-proposals/blob/main/extended_limits.md\n        const xpdtaChunk = writeRIFFChunkParts(\"xdta\", chunks.map(c => c.xdta), true);\n        infoArrays.push(xpdtaChunk);\n    }\n    \n    const infoChunk = writeRIFFChunkParts(\"INFO\", infoArrays, true);\n    SpessaSynthInfo(\n        \"%cWriting the output file...\",\n        consoleColors.info\n    );\n    // finally, combine everything\n    const main = writeRIFFChunkParts(\n        \"RIFF\",\n        [getStringBytes(\"sfbk\"), infoChunk, sdtaChunk, pdtaChunk]\n    );\n    SpessaSynthInfo(\n        `%cSaved succesfully! Final file size: %c${main.length}`,\n        consoleColors.info,\n        consoleColors.recognized\n    );\n    SpessaSynthGroupEnd();\n    return main;\n}", "/**\n * @typedef {Object} SoundFontRange\n * @property {number} min - the minimum midi note\n * @property {number} max - the maximum midi note\n */\nimport { generatorTypes } from \"./generator_types.js\";\nimport { Generator } from \"./generator.js\";\nimport { Modulator } from \"./modulator.js\";\n\nexport class BasicZone\n{\n    /**\n     * The zone's velocity range\n     * min -1 means that it is a default value\n     * @type {SoundFontRange}\n     */\n    velRange = { min: -1, max: 127 };\n    \n    /**\n     * The zone's key range\n     * min -1 means that it is a default value\n     * @type {SoundFontRange}\n     */\n    keyRange = { min: -1, max: 127 };\n    \n    /**\n     * The zone's generators\n     * @type {Generator[]}\n     */\n    generators = [];\n    /**\n     * The zone's modulators\n     * @type {Modulator[]}\n     */\n    modulators = [];\n    \n    /**\n     * @returns {boolean}\n     */\n    get hasKeyRange()\n    {\n        return this.keyRange.min !== -1;\n    }\n    \n    /**\n     * @returns {boolean}\n     */\n    get hasVelRange()\n    {\n        return this.velRange.min !== -1;\n    }\n    \n    /**\n     * Adds at the start\n     * @param generator {Generator}\n     */\n    prependGenerator(generator)\n    {\n        this.generators.unshift(generator);\n    }\n    \n    // noinspection JSUnusedGlobalSymbols\n    /**\n     * @param type {generatorTypes}\n     * @param value {number}\n     */\n    setGenerator(type, value)\n    {\n        switch (type)\n        {\n            case generatorTypes.sampleID:\n                throw new Error(\"Use setSample()\");\n            case generatorTypes.instrument:\n                throw new Error(\"Use setInstrument()\");\n            \n            case generatorTypes.velRange:\n            case generatorTypes.keyRange:\n                throw new Error(\"Set the range manually\");\n        }\n        let generator = this.generators.find(g => g.generatorType === type);\n        if (generator)\n        {\n            generator.generatorValue = value;\n        }\n        else\n        {\n            this.addGenerators(new Generator(type, value));\n        }\n    }\n    \n    /**\n     * @param generators {Generator}\n     */\n    addGenerators(...generators)\n    {\n        generators.forEach(g =>\n        {\n            switch (g.generatorType)\n            {\n                default:\n                    this.generators.push(g);\n                    break;\n                \n                case generatorTypes.velRange:\n                    this.velRange.min = g.generatorValue & 0x7F;\n                    this.velRange.max = (g.generatorValue >> 8) & 0x7F;\n                    break;\n                \n                case generatorTypes.keyRange:\n                    this.keyRange.min = g.generatorValue & 0x7F;\n                    this.keyRange.max = (g.generatorValue >> 8) & 0x7F;\n            }\n        });\n    }\n    \n    /**\n     * @param modulators {Modulator}\n     */\n    addModulators(...modulators)\n    {\n        this.modulators.push(...modulators);\n    }\n    \n    /**\n     * @param generatorType {generatorTypes}\n     * @param notFoundValue {number}\n     * @returns {number}\n     */\n    getGeneratorValue(generatorType, notFoundValue)\n    {\n        return this.generators.find(g => g.generatorType === generatorType)?.generatorValue ?? notFoundValue;\n    }\n    \n    /**\n     * @param zone {BasicZone}\n     */\n    copyFrom(zone)\n    {\n        this.generators = [...zone.generators];\n        this.modulators = zone.modulators.map(m => Modulator.copy(m));\n        this.velRange = { ...zone.velRange };\n        this.keyRange = { ...zone.keyRange };\n    }\n}\n\n", "import { BasicZone } from \"./basic_zone.js\";\n\nexport class BasicGlobalZone extends BasicZone\n{\n    // nothing here, just a different instance...\n}", "import { BasicZone } from \"./basic_zone.js\";\n\nexport class BasicInstrumentZone extends BasicZone\n{\n    /**\n     * The parent instrument.\n     * @type {BasicInstrument}\n     */\n    parentInstrument;\n    \n    /**\n     * Zone's sample.\n     * @type {BasicSample}\n     */\n    sample;\n    /**\n     * For tracking on the individual zone level, since multiple presets can refer to the same instrument.\n     * @type {number}\n     */\n    useCount;\n    \n    /**\n     * @param instrument {BasicInstrument}\n     */\n    constructor(instrument)\n    {\n        super();\n        this.parentInstrument = instrument;\n        this.useCount = instrument.useCount;\n    }\n    \n    /**\n     * @param sample {BasicSample}\n     */\n    setSample(sample)\n    {\n        this.sample = sample;\n        sample.linkTo(this.parentInstrument);\n    }\n    \n    deleteZone()\n    {\n        this.sample.unlinkFrom(this.parentInstrument);\n    }\n}", "import { BasicGlobalZone } from \"./basic_global_zone.js\";\nimport { BasicInstrumentZone } from \"./basic_instrument_zone.js\";\nimport { SpessaSynthWarn } from \"../../utils/loggin.js\";\n\nexport class BasicInstrument\n{\n    /**\n     * The instrument's name\n     * @type {string}\n     */\n    instrumentName = \"\";\n    \n    /**\n     * The instrument's zones\n     * @type {BasicInstrumentZone[]}\n     * @readonly\n     */\n    instrumentZones = [];\n    \n    /**\n     * Instrument's global zone\n     * @type {BasicGlobalZone}\n     */\n    globalZone = new BasicGlobalZone();\n    \n    /**\n     * Instrument's linked presets (the presets that use it)\n     * note that duplicates are allowed since one preset can use the same instrument multople times\n     * @type {BasicPreset[]}\n     */\n    linkedPresets = [];\n    \n    /**\n     * @returns {number}\n     */\n    get useCount()\n    {\n        return this.linkedPresets.length;\n    }\n    \n    /**\n     * @returns {BasicInstrumentZone}\n     */\n    createZone()\n    {\n        const zone = new BasicInstrumentZone(this);\n        this.instrumentZones.push(zone);\n        return zone;\n    }\n    \n    /**\n     * @param preset {BasicPreset}\n     */\n    linkTo(preset)\n    {\n        this.linkedPresets.push(preset);\n        this.instrumentZones.forEach(z => z.useCount++);\n    }\n    \n    /**\n     * @param preset {BasicPreset}\n     */\n    unlinkFrom(preset)\n    {\n        const index = this.linkedPresets.indexOf(preset);\n        if (index < 0)\n        {\n            SpessaSynthWarn(`Cannot unlink ${preset.presetName} from ${this.instrumentName}: not linked.`);\n            return;\n        }\n        this.linkedPresets.splice(index, 1);\n        this.instrumentZones.forEach(z => z.useCount--);\n    }\n    \n    deleteUnusedZones()\n    {\n        this.instrumentZones = this.instrumentZones.filter(z =>\n        {\n            const stays = z.useCount > 0;\n            if (!stays)\n            {\n                z.deleteZone();\n            }\n            return stays;\n        });\n    }\n    \n    // unlinks everything from this instrument\n    deleteInstrument()\n    {\n        if (this.useCount > 0)\n        {\n            throw new Error(`Cannot delete an instrument that is used by: ${this.linkedPresets.map(p => p.presetName)}.`);\n        }\n        this.instrumentZones.forEach(z => z.deleteZone());\n    }\n    \n    /**\n     * @param index {number}\n     * @param force {boolean} ignore use count\n     * @returns {boolean} if deleted\n     */\n    deleteZone(index, force = false)\n    {\n        const zone = this.instrumentZones[index];\n        zone.useCount -= 1;\n        if (zone.useCount < 1 || force)\n        {\n            zone.deleteZone();\n            this.instrumentZones.splice(index, 1);\n            return true;\n        }\n        return false;\n    }\n}", "import { Modulator } from \"../modulator.js\";\nimport { Generator } from \"../generator.js\";\nimport { generatorLimits, generatorTypes } from \"../generator_types.js\";\nimport { BasicInstrument } from \"../basic_instrument.js\";\n\nconst notGlobalizedTypes = new Set([\n    generatorTypes.velRange,\n    generatorTypes.keyRange,\n    generatorTypes.instrument,\n    generatorTypes.exclusiveClass,\n    generatorTypes.endOper,\n    generatorTypes.sampleModes,\n    generatorTypes.startloopAddrsOffset,\n    generatorTypes.startloopAddrsCoarseOffset,\n    generatorTypes.endloopAddrsOffset,\n    generatorTypes.endloopAddrsCoarseOffset,\n    generatorTypes.startAddrsOffset,\n    generatorTypes.startAddrsCoarseOffset,\n    generatorTypes.endAddrOffset,\n    generatorTypes.endAddrsCoarseOffset,\n    generatorTypes.initialAttenuation, // written into wsmp, there's no global wsmp\n    generatorTypes.fineTune,           // written into wsmp, there's no global wsmp\n    generatorTypes.coarseTune,         // written into wsmp, there's no global wsmp\n    generatorTypes.keyNumToVolEnvHold, // KEY TO SOMETHING:\n    generatorTypes.keyNumToVolEnvDecay,// cannot be globalized as they modify their respective generators\n    generatorTypes.keyNumToModEnvHold, // (for example, keyNumToVolEnvDecay modifies VolEnvDecay)\n    generatorTypes.keyNumToModEnvDecay\n]);\n\n/**\n * Combines preset zones\n * @param preset {BasicPreset}\n * @param globalize {boolean}\n * @returns {BasicInstrument}\n */\nexport function combineZones(preset, globalize = true)\n{\n    /**\n     * @param main {Generator[]}\n     * @param adder {Generator[]}\n     */\n    function addUnique(main, adder)\n    {\n        main.push(...adder.filter(g => !main.find(mg => mg.generatorType === g.generatorType)));\n    }\n    \n    /**\n     * @param r1 {SoundFontRange}\n     * @param r2 {SoundFontRange}\n     * @returns {SoundFontRange}\n     */\n    function subtractRanges(r1, r2)\n    {\n        return { min: Math.max(r1.min, r2.min), max: Math.min(r1.max, r2.max) };\n    }\n    \n    /**\n     * @param main {Modulator[]}\n     * @param adder {Modulator[]}\n     */\n    function addUniqueMods(main, adder)\n    {\n        main.push(...adder.filter(m => !main.find(mm => Modulator.isIdentical(m, mm))));\n    }\n    \n    const outputInstrument = new BasicInstrument();\n    \n    /**\n     * @type {Generator[]}\n     */\n    const globalPresetGenerators = [];\n    /**\n     * @type {Modulator[]}\n     */\n    const globalPresetModulators = [];\n    // find the global zone and apply ranges, generators, and modulators\n    const globalPresetZone = preset.globalZone;\n    globalPresetGenerators.push(...globalPresetZone.generators);\n    globalPresetModulators.push(...globalPresetZone.modulators);\n    let globalPresetKeyRange = globalPresetZone.keyRange;\n    let globalPresetVelRange = globalPresetZone.velRange;\n    // for each non-global preset zone\n    for (const presetZone of preset.presetZones)\n    {\n        // use global ranges if not provided\n        let presetZoneKeyRange = presetZone.keyRange;\n        if (!presetZone.hasKeyRange)\n        {\n            presetZoneKeyRange = globalPresetKeyRange;\n        }\n        let presetZoneVelRange = presetZone.velRange;\n        if (!presetZone.hasVelRange)\n        {\n            presetZoneVelRange = globalPresetVelRange;\n        }\n        // add unique generators and modulators from the global zone\n        const presetGenerators = presetZone.generators.map(g => new Generator(g.generatorType, g.generatorValue));\n        addUnique(presetGenerators, globalPresetGenerators);\n        const presetModulators = [...presetZone.modulators];\n        addUniqueMods(presetModulators, globalPresetModulators);\n        const instrument = presetZone.instrument;\n        const iZones = instrument.instrumentZones;\n        /**\n         * @type {Generator[]}\n         */\n        const globalInstGenerators = [];\n        /**\n         * @type {Modulator[]}\n         */\n        const globalInstModulators = [];\n        const globalInstZone = instrument.globalZone;\n        globalInstGenerators.push(...globalInstZone.generators);\n        globalInstModulators.push(...globalInstZone.modulators);\n        let globalInstKeyRange = globalInstZone.keyRange;\n        let globalInstVelRange = globalInstZone.velRange;\n        // for each non-global instrument zone\n        for (const instZone of iZones)\n        {\n            // use global ranges if not provided\n            let instZoneKeyRange = instZone.keyRange;\n            if (!instZone.hasKeyRange)\n            {\n                instZoneKeyRange = globalInstKeyRange;\n            }\n            let instZoneVelRange = instZone.velRange;\n            if (!instZone.hasVelRange)\n            {\n                instZoneVelRange = globalInstVelRange;\n            }\n            instZoneKeyRange = subtractRanges(instZoneKeyRange, presetZoneKeyRange);\n            instZoneVelRange = subtractRanges(instZoneVelRange, presetZoneVelRange);\n            \n            // if either of the zones is out of range (i.e.m min larger than the max),\n            // then we discard that zone\n            if (instZoneKeyRange.max < instZoneKeyRange.min || instZoneVelRange.max < instZoneVelRange.min)\n            {\n                continue;\n            }\n            \n            // add unique generators and modulators from the global zone\n            const instGenerators = instZone.generators.map(g => new Generator(g.generatorType, g.generatorValue));\n            addUnique(instGenerators, globalInstGenerators);\n            const instModulators = [...instZone.modulators];\n            addUniqueMods(instModulators, globalInstModulators);\n            \n            /**\n             * sum preset modulators to instruments (amount) sf spec page 54\n             * @type {Modulator[]}\n             */\n            const finalModList = [...instModulators];\n            for (const mod of presetModulators)\n            {\n                const identicalInstMod = finalModList.findIndex(\n                    m => Modulator.isIdentical(mod, m));\n                if (identicalInstMod !== -1)\n                {\n                    // sum the amounts\n                    // (this makes a new modulator\n                    // because otherwise it would overwrite the one in the soundfont!\n                    finalModList[identicalInstMod] = finalModList[identicalInstMod].sumTransform(\n                        mod);\n                }\n                else\n                {\n                    finalModList.push(mod);\n                }\n            }\n            \n            // clone the generators as the values are modified during DLS conversion (keyNumToSomething)\n            let finalGenList = instGenerators.map(g => new Generator(g.generatorType, g.generatorValue));\n            for (const gen of presetGenerators)\n            {\n                if (gen.generatorType === generatorTypes.velRange ||\n                    gen.generatorType === generatorTypes.keyRange ||\n                    gen.generatorType === generatorTypes.instrument ||\n                    gen.generatorType === generatorTypes.endOper ||\n                    gen.generatorType === generatorTypes.sampleModes)\n                {\n                    continue;\n                }\n                const identicalInstGen = instGenerators.findIndex(g => g.generatorType === gen.generatorType);\n                if (identicalInstGen !== -1)\n                {\n                    // if exists, sum to that generator\n                    const newAmount = finalGenList[identicalInstGen].generatorValue + gen.generatorValue;\n                    finalGenList[identicalInstGen] = new Generator(gen.generatorType, newAmount);\n                }\n                else\n                {\n                    // if not, sum to the default generator\n                    const newAmount = generatorLimits[gen.generatorType].def + gen.generatorValue;\n                    finalGenList.push(new Generator(gen.generatorType, newAmount));\n                }\n            }\n            \n            // remove unwanted\n            finalGenList = finalGenList.filter(g =>\n                g.generatorType !== generatorTypes.sampleID &&\n                g.generatorType !== generatorTypes.keyRange &&\n                g.generatorType !== generatorTypes.velRange &&\n                g.generatorType !== generatorTypes.endOper &&\n                g.generatorType !== generatorTypes.instrument &&\n                g.generatorValue !== generatorLimits[g.generatorType].def\n            );\n            \n            // create the zone and copy over values\n            const zone = outputInstrument.createZone();\n            zone.keyRange = instZoneKeyRange;\n            zone.velRange = instZoneVelRange;\n            if (zone.keyRange.min === 0 && zone.keyRange.max === 127)\n            {\n                zone.keyRange.min = -1;\n            }\n            if (zone.velRange.min === 0 && zone.velRange.max === 127)\n            {\n                zone.velRange.min = -1;\n            }\n            zone.setSample(instZone.sample);\n            zone.addGenerators(...finalGenList);\n            zone.addModulators(...finalModList);\n        }\n    }\n    const globalZone = outputInstrument.globalZone;\n    if (globalize)\n    {\n        // create a global zone and add repeating generators to it\n        // also modulators\n        // iterate over every type of generator\n        for (let checkedType = 0; checkedType < 58; checkedType++)\n        {\n            // not these though\n            if (notGlobalizedTypes.has(checkedType))\n            {\n                continue;\n            }\n            /**\n             * @type {Record<string, number>}\n             */\n            let occurencesForValues = {};\n            const defaultForChecked = generatorLimits[checkedType]?.def || 0;\n            occurencesForValues[defaultForChecked] = 0;\n            for (const z of outputInstrument.instrumentZones)\n            {\n                const gen = z.generators.find(g => g.generatorType === checkedType);\n                if (gen)\n                {\n                    const value = gen.generatorValue;\n                    if (occurencesForValues[value] === undefined)\n                    {\n                        occurencesForValues[value] = 1;\n                    }\n                    else\n                    {\n                        occurencesForValues[value]++;\n                    }\n                }\n                else\n                {\n                    occurencesForValues[defaultForChecked]++;\n                }\n                \n                // if the checked type has the keyNumTo something generator set, it cannot be globalized.\n                let relativeCounterpart;\n                switch (checkedType)\n                {\n                    default:\n                        continue;\n                    \n                    case generatorTypes.decayVolEnv:\n                        relativeCounterpart = generatorTypes.keyNumToVolEnvDecay;\n                        break;\n                    case generatorTypes.holdVolEnv:\n                        relativeCounterpart = generatorTypes.keyNumToVolEnvHold;\n                        break;\n                    case generatorTypes.decayModEnv:\n                        relativeCounterpart = generatorTypes.keyNumToModEnvDecay;\n                        break;\n                    case generatorTypes.holdModEnv:\n                        relativeCounterpart = generatorTypes.keyNumToModEnvHold;\n                }\n                const relative = z.generators.find(g => g.generatorType === relativeCounterpart);\n                if (relative !== undefined)\n                {\n                    occurencesForValues = {};\n                    break;\n                }\n            }\n            // if at least one occurrence, find the most used one and add it to global\n            if (Object.keys(occurencesForValues).length > 0)\n            {\n                // [value, occurrences]\n                const valueToGlobalize = Object.entries(occurencesForValues).reduce((max, curr) =>\n                {\n                    if (max[1] < curr[1])\n                    {\n                        return curr;\n                    }\n                    return max;\n                }, [0, 0]);\n                const targetValue = parseInt(valueToGlobalize[0]);\n                \n                // if the global value is the default value just remove it, no need to add it\n                if (targetValue !== defaultForChecked)\n                {\n                    globalZone.addGenerators(new Generator(checkedType, targetValue));\n                }\n                // remove from the zones\n                outputInstrument.instrumentZones.forEach(z =>\n                {\n                    const gen = z.generators.findIndex(g =>\n                        g.generatorType === checkedType);\n                    if (gen !== -1)\n                    {\n                        if (z.generators[gen].generatorValue === targetValue)\n                        {\n                            // That exact value exists. Since it's global now, remove it\n                            z.generators.splice(gen, 1);\n                        }\n                    }\n                    else\n                    {\n                        // That type does not exist at all here.\n                        // Since we're globalizing, we need to add the default here.\n                        if (targetValue !== defaultForChecked)\n                        {\n                            z.addGenerators(new Generator(checkedType, defaultForChecked));\n                        }\n                    }\n                });\n            }\n        }\n        \n        // globalize only modulators that exist in all zones\n        const firstZone = outputInstrument.instrumentZones[0];\n        const modulators = firstZone.modulators.map(m => Modulator.copy(m));\n        for (const checkedModulator of modulators)\n        {\n            let existsForAllZones = true;\n            for (const zone of outputInstrument.instrumentZones)\n            {\n                if (!existsForAllZones)\n                {\n                    continue;\n                }\n                // check if that zone has an existing modulator\n                const mod = zone.modulators.find(m => Modulator.isIdentical(m, checkedModulator));\n                if (!mod)\n                {\n                    // does not exist for this zone, so it's not global.\n                    existsForAllZones = false;\n                }\n                // exists.\n                \n            }\n            if (existsForAllZones === true)\n            {\n                globalZone.addModulators(Modulator.copy(checkedModulator));\n                // delete it from local zones.\n                for (const zone of outputInstrument.instrumentZones)\n                {\n                    const modulator = zone.modulators.find(m => Modulator.isIdentical(m, checkedModulator));\n                    // Check if the amount is correct.\n                    // If so, delete it since it's global.\n                    // If not, then it will simply override global as it's identical.\n                    if (modulator.transformAmount === checkedModulator.transformAmount)\n                    {\n                        zone.modulators.splice(zone.modulators.indexOf(modulator), 1);\n                    }\n                }\n            }\n        }\n    }\n    return outputInstrument;\n}", "import { writeDword, writeWord } from \"../../../utils/byte_functions/little_endian.js\";\nimport { IndexedByteArray } from \"../../../utils/indexed_array.js\";\nimport { writeRIFFChunkRaw } from \"../riff_chunk.js\";\n\nconst WSMP_SIZE = 20;\n\n/**\n * @param sample {BasicSample}\n * @param rootKey {number}\n * @param tuning {number}\n * @param attenuationCentibels {number} CENTIBELS, NO CORRECTION\n * @param loopStart {number}\n * @param loopEnd {number}\n * @param loopingMode {number}\n * @returns {IndexedByteArray}\n */\nexport function writeWavesample(\n    sample,\n    rootKey,\n    tuning,\n    attenuationCentibels,\n    loopStart,\n    loopEnd,\n    loopingMode)\n{\n    let loopCount = loopingMode === 0 ? 0 : 1;\n    const wsmpData = new IndexedByteArray(WSMP_SIZE + loopCount * 16);\n    writeDword(wsmpData, WSMP_SIZE); // cbSize\n    // usUnityNote (apply root pitch here)\n    writeWord(wsmpData, rootKey);\n    // sFineTune\n    writeWord(wsmpData, tuning);\n    \n    // gain correction, use InitialAttenuation, apply attenuation correction\n    const attenuationCb = attenuationCentibels * 0.4;\n    \n    // gain correction: Each unit of gain represents 1/655360 dB\n    const lGain = Math.floor(attenuationCb * -65536);\n    writeDword(wsmpData, lGain);\n    // fulOptions: has to be 2, according to all DLS files I have\n    writeDword(wsmpData, 2);\n    \n    const loopSize = loopEnd - loopStart;\n    let ulLoopType = 0;\n    switch (loopingMode)\n    {\n        default:\n        case 0:\n            // no loop\n            loopCount = 0;\n            break;\n        \n        case 1:\n            // loop\n            ulLoopType = 0;\n            loopCount = 1;\n            break;\n        \n        case 3:\n            // loop and release\n            ulLoopType = 1;\n            loopCount = 1;\n    }\n    \n    // cSampleLoops\n    writeDword(wsmpData, loopCount);\n    if (loopCount === 1)\n    {\n        writeDword(wsmpData, 16); // cbSize\n        writeDword(wsmpData, ulLoopType);\n        writeDword(wsmpData, loopStart);\n        writeDword(wsmpData, loopSize);\n    }\n    return writeRIFFChunkRaw(\n        \"wsmp\",\n        wsmpData\n    );\n}", "import { DecodedModulator } from \"../basic_soundfont/modulator.js\";\n\nimport { generatorTypes } from \"../basic_soundfont/generator_types.js\";\n\n/**\n * @enum {number}\n */\nexport const DLSSources = {\n    none: 0x0,\n    modLfo: 0x1,\n    velocity: 0x2,\n    keyNum: 0x3,\n    volEnv: 0x4,\n    modEnv: 0x5,\n    pitchWheel: 0x6,\n    polyPressure: 0x7,\n    channelPressure: 0x8,\n    vibratoLfo: 0x9,\n    \n    modulationWheel: 0x81,\n    volume: 0x87,\n    pan: 0x8a,\n    expression: 0x8b,\n    // note: these are flipped unintentionally in DLS2 table 9. Argh!\n    chorus: 0xdd,\n    reverb: 0xdb,\n    \n    pitchWheelRange: 0x100,\n    fineTune: 0x101,\n    coarseTune: 0x102\n};\n\nexport const DEFAULT_DLS_REVERB = new DecodedModulator(\n    0x00DB,\n    0x0,\n    generatorTypes.reverbEffectsSend,\n    1000,\n    0\n);\n\nexport const DEFAULT_DLS_CHORUS = new DecodedModulator(\n    0x00DD,\n    0x0,\n    generatorTypes.chorusEffectsSend,\n    1000,\n    0\n);\n\nexport const DLS_1_NO_VIBRATO_MOD = new DecodedModulator(\n    0x0081,\n    0x0,\n    generatorTypes.vibLfoToPitch,\n    0,\n    0\n);\n\nexport const DLS_1_NO_VIBRATO_PRESSURE = new DecodedModulator(\n    0x000D,\n    0x0,\n    generatorTypes.vibLfoToPitch,\n    0,\n    0\n);", "/**\n *\n * @enum {number}\n */\nexport const DLSDestinations = {\n    none: 0x0,                  // no destination\n    gain: 0x1,                  // linear gain\n    reserved: 0x2,              // reserved\n    pitch: 0x3,                 // pitch in cents\n    pan: 0x4,                   // pan 10ths of a percent\n    keyNum: 0x5,                // MIDI key number\n    // nuh uh, the channel controllers are not supported!\n    chorusSend: 0x80,           // chorus send level 10ths of a percent\n    reverbSend: 0x81,           // reverb send level 10ths of a percent\n    \n    modLfoFreq: 0x104,          // modulation LFO frequency\n    modLfoDelay: 0x105,         // modulation LFO delay\n    \n    vibLfoFreq: 0x114,          // vibrato LFO frequency\n    vibLfoDelay: 0x115,         // vibrato LFO delay\n    \n    volEnvAttack: 0x206,        // volume envelope attack\n    volEnvDecay: 0x207,         // volume envelope decay\n    volEnvRelease: 0x209,       // volume envelope release\n    volEnvSustain: 0x20a,       // volume envelope sustain\n    volEnvDelay: 0x20b,         // volume envelope delay\n    volEnvHold: 0x20c,          // volume envelope hold\n    \n    modEnvAttack: 0x30a,        // modulation envelope attack\n    modEnvDecay: 0x30b,         // modulation envelope decay\n    modEnvRelease: 0x30d,       // modulation envelope release\n    modEnvSustain: 0x30e,       // modulation envelope sustain\n    modEnvDelay: 0x30f,         // modulation envelope delay\n    modEnvHold: 0x310,          // modulation envelope hold\n    \n    filterCutoff: 0x500,        // low pass filter cutoff frequency\n    filterQ: 0x501              // low pass filter resonance\n};", "import { IndexedByteArray } from \"../../../utils/indexed_array.js\";\nimport { writeDword, writeWord } from \"../../../utils/byte_functions/little_endian.js\";\n\nexport class Articulator\n{\n    /**\n     * @type {DLSSources}\n     */\n    source;\n    /**\n     * @type {DLSSources}\n     */\n    control;\n    /**\n     * @type {DLSDestinations}\n     */\n    destination;\n    /**\n     * @type {number}\n     */\n    scale;\n    /**\n     * @type {number}\n     */\n    transform;\n    \n    constructor(source, control, destination, scale, transform)\n    {\n        this.source = source;\n        this.control = control;\n        this.destination = destination;\n        this.scale = scale;\n        this.transform = transform;\n    }\n    \n    /**\n     * @returns {IndexedByteArray}\n     */\n    writeArticulator()\n    {\n        const out = new IndexedByteArray(12);\n        writeWord(out, this.source);\n        writeWord(out, this.control);\n        writeWord(out, this.destination);\n        writeWord(out, this.transform);\n        writeDword(out, this.scale << 16);\n        return out;\n    }\n}", "import { midiControllers } from \"../../../midi/midi_message.js\";\nimport { DLSSources } from \"../../dls/dls_sources.js\";\nimport { modulatorCurveTypes, modulatorSources } from \"../modulator.js\";\nimport { DLSDestinations } from \"../../dls/dls_destinations.js\";\nimport { Articulator } from \"./articulator.js\";\nimport { SpessaSynthWarn } from \"../../../utils/loggin.js\";\nimport { generatorTypes } from \"../generator_types.js\";\n\n\n/**\n * @param cc {0|1}\n * @param index {number}\n * @returns {number|undefined}\n */\nfunction getDLSSourceFromSf2Source(cc, index)\n{\n    if (cc)\n    {\n        switch (index)\n        {\n            default:\n                // DLS supports limited controllers\n                return undefined;\n            \n            case midiControllers.modulationWheel:\n                return DLSSources.modulationWheel;\n            case midiControllers.mainVolume:\n                return DLSSources.volume;\n            case midiControllers.pan:\n                return DLSSources.pan;\n            case midiControllers.expressionController:\n                return DLSSources.expression;\n            case midiControllers.chorusDepth:\n                return DLSSources.chorus;\n            case midiControllers.reverbDepth:\n                return DLSSources.reverb;\n        }\n    }\n    else\n    {\n        switch (index)\n        {\n            default:\n                // cannot be a DLS articulator\n                return undefined;\n            \n            case modulatorSources.noteOnKeyNum:\n                return DLSSources.keyNum;\n            case modulatorSources.noteOnVelocity:\n                return DLSSources.velocity;\n            case modulatorSources.noController:\n                return DLSSources.none;\n            case modulatorSources.polyPressure:\n                return DLSSources.polyPressure;\n            case modulatorSources.channelPressure:\n                return DLSSources.channelPressure;\n            case modulatorSources.pitchWheel:\n                return DLSSources.pitchWheel;\n            case modulatorSources.pitchWheelRange:\n                return DLSSources.pitchWheelRange;\n        }\n    }\n}\n\n/**\n * @param dest {number}\n * @param amount {number}\n * @returns {number|undefined|{dest: number, amount: number}}\n */\nfunction getDLSDestinationFromSf2(dest, amount)\n{\n    switch (dest)\n    {\n        default:\n            return undefined;\n        \n        case generatorTypes.initialAttenuation:\n            // the amount does not get EMU corrected here, as this only applies to modulator attenuation\n            // the generator (affected) attenuation is handled in wsmp.\n            return { dest: DLSDestinations.gain, amount: -amount };\n        case generatorTypes.fineTune:\n            return DLSDestinations.pitch;\n        case generatorTypes.pan:\n            return DLSDestinations.pan;\n        case generatorTypes.keyNum:\n            return DLSDestinations.keyNum;\n        \n        case generatorTypes.reverbEffectsSend:\n            return DLSDestinations.reverbSend;\n        case generatorTypes.chorusEffectsSend:\n            return DLSDestinations.chorusSend;\n        \n        case generatorTypes.freqModLFO:\n            return DLSDestinations.modLfoFreq;\n        case generatorTypes.delayModLFO:\n            return DLSDestinations.modLfoDelay;\n        \n        case generatorTypes.delayVibLFO:\n            return DLSDestinations.vibLfoDelay;\n        case generatorTypes.freqVibLFO:\n            return DLSDestinations.vibLfoFreq;\n        \n        case generatorTypes.delayVolEnv:\n            return DLSDestinations.volEnvDelay;\n        case generatorTypes.attackVolEnv:\n            return DLSDestinations.volEnvAttack;\n        case generatorTypes.holdVolEnv:\n            return DLSDestinations.volEnvHold;\n        case generatorTypes.decayVolEnv:\n            return DLSDestinations.volEnvDecay;\n        case generatorTypes.sustainVolEnv:\n            return { dest: DLSDestinations.volEnvSustain, amount: 1000 - amount };\n        case generatorTypes.releaseVolEnv:\n            return DLSDestinations.volEnvRelease;\n        \n        case generatorTypes.delayModEnv:\n            return DLSDestinations.modEnvDelay;\n        case generatorTypes.attackModEnv:\n            return DLSDestinations.modEnvAttack;\n        case generatorTypes.holdModEnv:\n            return DLSDestinations.modEnvHold;\n        case generatorTypes.decayModEnv:\n            return DLSDestinations.modEnvDecay;\n        case generatorTypes.sustainModEnv:\n            return { dest: DLSDestinations.modEnvSustain, amount: 1000 - amount };\n        case generatorTypes.releaseModEnv:\n            return DLSDestinations.modEnvRelease;\n        \n        case generatorTypes.initialFilterFc:\n            return DLSDestinations.filterCutoff;\n        case generatorTypes.initialFilterQ:\n            return DLSDestinations.filterQ;\n    }\n}\n\n/**\n * @param dest {number}\n * @param amt {number}\n * @returns {{source: DLSSources, dest: DLSDestinations, amt: number, isBipolar: boolean}|undefined}\n */\nfunction checkSF2SpecialCombos(dest, amt)\n{\n    \n    switch (dest)\n    {\n        default:\n            return undefined;\n        // mod env\n        case generatorTypes.modEnvToFilterFc:\n            return { source: DLSSources.modEnv, dest: DLSDestinations.filterCutoff, amt: amt, isBipolar: false };\n        case generatorTypes.modEnvToPitch:\n            return { source: DLSSources.modEnv, dest: DLSDestinations.pitch, amt: amt, isBipolar: false };\n        \n        // mod lfo\n        case generatorTypes.modLfoToFilterFc:\n            return { source: DLSSources.modLfo, dest: DLSDestinations.filterCutoff, amt: amt, isBipolar: true };\n        case generatorTypes.modLfoToVolume:\n            return { source: DLSSources.modLfo, dest: DLSDestinations.gain, amt: amt, isBipolar: true };\n        case generatorTypes.modLfoToPitch:\n            return { source: DLSSources.modLfo, dest: DLSDestinations.pitch, amt: amt, isBipolar: true };\n        \n        // vib lfo\n        case generatorTypes.vibLfoToPitch:\n            return { source: DLSSources.vibratoLfo, dest: DLSDestinations.pitch, amt: amt, isBipolar: true };\n        \n        // key to something\n        case generatorTypes.keyNumToVolEnvHold:\n            return {\n                source: DLSSources.keyNum,\n                dest: DLSDestinations.volEnvHold,\n                amt: amt,\n                isBipolar: true\n            };\n        case generatorTypes.keyNumToVolEnvDecay:\n            return {\n                source: DLSSources.keyNum,\n                dest: DLSDestinations.volEnvDecay,\n                amt: amt,\n                isBipolar: true\n            };\n        case generatorTypes.keyNumToModEnvHold:\n            return {\n                source: DLSSources.keyNum,\n                dest: DLSDestinations.modEnvHold,\n                amt: amt,\n                isBipolar: true\n            };\n        case generatorTypes.keyNumToModEnvDecay:\n            return {\n                source: DLSSources.keyNum,\n                dest: DLSDestinations.modEnvDecay,\n                amt: amt,\n                isBipolar: true\n            };\n        \n        // Scale tuning is implemented in DLS via an articulator:\n        // keyNum to relative pitch at 12,800 cents.\n        // Change that to scale tuning * 128.\n        // Therefore, a regular scale is still 12,800, half is 6400, etc.\n        case generatorTypes.scaleTuning:\n            return {\n                source: DLSSources.keyNum,\n                dest: DLSDestinations.pitch,\n                amt: amt * 128,\n                isBipolar: false // according to table 4, this should be false.\n            };\n    }\n}\n\n/**\n * @param gen {Generator}\n * @returns {Articulator|undefined}\n */\nexport function getDLSArticulatorFromSf2Generator(gen)\n{\n    const dest = getDLSDestinationFromSf2(gen.generatorType, gen.generatorValue);\n    let destination = dest;\n    let source = 0;\n    let amount = gen.generatorValue;\n    if (dest?.amount !== undefined)\n    {\n        amount = dest.amount;\n        destination = dest.dest;\n    }\n    // check for special combo\n    const combo = checkSF2SpecialCombos(gen.generatorType, gen.generatorValue);\n    if (combo !== undefined)\n    {\n        amount = combo.amt;\n        destination = combo.dest;\n        source = combo.source;\n    }\n    else if (destination === undefined)\n    {\n        SpessaSynthWarn(`Invalid generator type: ${gen.generatorType}`);\n        return undefined;\n    }\n    return new Articulator(\n        source,\n        0,\n        destination,\n        amount,\n        0\n    );\n}\n\n\n/**\n * @param mod {Modulator}\n * @returns {Articulator|undefined}\n */\nexport function getDLSArticulatorFromSf2Modulator(mod)\n{\n    if (mod.transformType !== 0)\n    {\n        SpessaSynthWarn(\"Other transform types are not supported.\");\n        return undefined;\n    }\n    let source = getDLSSourceFromSf2Source(mod.sourceUsesCC, mod.sourceIndex);\n    let sourceTransformType = mod.sourceCurveType;\n    let sourceBipolar = mod.sourcePolarity;\n    let sourceDirection = mod.sourceDirection;\n    if (source === undefined)\n    {\n        SpessaSynthWarn(`Invalid source: ${mod.sourceIndex}, CC: ${mod.sourceUsesCC}`);\n        return undefined;\n    }\n    // Attenuation is the opposite of gain. Invert.\n    if (mod.modulatorDestination === generatorTypes.initialAttenuation)\n    {\n        sourceDirection = sourceDirection === 1 ? 0 : 1;\n    }\n    let control = getDLSSourceFromSf2Source(mod.secSrcUsesCC, mod.secSrcIndex);\n    let controlTransformType = mod.secSrcCurveType;\n    let controlBipolar = mod.secSrcPolarity;\n    let controlDirection = mod.secSrcDirection;\n    if (control === undefined)\n    {\n        SpessaSynthWarn(`Invalid secondary source: ${mod.secSrcIndex}, CC: ${mod.secSrcUsesCC}`);\n        return undefined;\n    }\n    let dlsDestinationFromSf2 = getDLSDestinationFromSf2(mod.modulatorDestination, mod.transformAmount);\n    let destination = dlsDestinationFromSf2;\n    let amt = mod.transformAmount;\n    if (dlsDestinationFromSf2?.dest !== undefined)\n    {\n        destination = dlsDestinationFromSf2.dest;\n        amt = dlsDestinationFromSf2.amount;\n    }\n    const specialCombo = checkSF2SpecialCombos(mod.modulatorDestination, mod.transformAmount);\n    if (specialCombo !== undefined)\n    {\n        amt = specialCombo.amt;\n        // move the source to control\n        control = source;\n        controlTransformType = sourceTransformType;\n        controlBipolar = sourceBipolar;\n        controlDirection = sourceDirection;\n        \n        // set source as static as it's either: env, lfo or key num\n        sourceTransformType = modulatorCurveTypes.linear;\n        sourceBipolar = specialCombo.isBipolar ? 1 : 0;\n        sourceDirection = 0;\n        source = specialCombo.source;\n        destination = specialCombo.dest;\n    }\n    else if (destination === undefined)\n    {\n        SpessaSynthWarn(`Invalid destination: ${mod.modulatorDestination}`);\n        return undefined;\n    }\n    \n    // source curve type maps to a desfont curve type in section 2.10, table 9\n    let transform = 0;\n    transform |= controlTransformType << 4;\n    transform |= controlBipolar << 8;\n    transform |= controlDirection << 9;\n    \n    // use the source curve in output transform\n    transform |= sourceTransformType;\n    transform |= sourceBipolar << 14;\n    transform |= sourceDirection << 15;\n    return new Articulator(\n        source,\n        control,\n        destination,\n        amt,\n        transform\n    );\n}", "import { getDLSArticulatorFromSf2Generator, getDLSArticulatorFromSf2Modulator } from \"./modulator_converter.js\";\nimport { writeRIFFChunkParts } from \"../riff_chunk.js\";\nimport { IndexedByteArray } from \"../../../utils/indexed_array.js\";\nimport { Generator } from \"../generator.js\";\nimport { writeDword } from \"../../../utils/byte_functions/little_endian.js\";\nimport { consoleColors } from \"../../../utils/other.js\";\nimport { SpessaSynthInfo, SpessaSynthWarn } from \"../../../utils/loggin.js\";\nimport { Modulator } from \"../modulator.js\";\nimport {\n    DEFAULT_DLS_CHORUS,\n    DEFAULT_DLS_REVERB,\n    DLS_1_NO_VIBRATO_MOD,\n    DLS_1_NO_VIBRATO_PRESSURE\n} from \"../../dls/dls_sources.js\";\nimport { generatorTypes } from \"../generator_types.js\";\n\nconst invalidGeneratorTypes = new Set([\n    generatorTypes.sampleModes,\n    generatorTypes.initialAttenuation,\n    generatorTypes.keyRange,\n    generatorTypes.velRange,\n    generatorTypes.sampleID,\n    generatorTypes.fineTune,\n    generatorTypes.coarseTune,\n    generatorTypes.startAddrsOffset,\n    generatorTypes.startAddrsCoarseOffset,\n    generatorTypes.endAddrOffset,\n    generatorTypes.endAddrsCoarseOffset,\n    generatorTypes.startloopAddrsOffset,\n    generatorTypes.startloopAddrsCoarseOffset,\n    generatorTypes.endloopAddrsOffset,\n    generatorTypes.endloopAddrsCoarseOffset,\n    generatorTypes.overridingRootKey,\n    generatorTypes.exclusiveClass\n]);\n\n/**\n * @param zone {BasicZone}\n * @returns {IndexedByteArray}\n */\nexport function writeArticulator(zone)\n{\n    \n    \n    // envelope generators are limited to 40 seconds\n    // in timecents, this is 1200 * log2(10) = 6386\n    \n    for (let i = 0; i < zone.generators.length; i++)\n    {\n        const g = zone.generators[i];\n        if (\n            g.generatorType === generatorTypes.delayVolEnv ||\n            g.generatorType === generatorTypes.attackVolEnv ||\n            g.generatorType === generatorTypes.holdVolEnv ||\n            g.generatorType === generatorTypes.decayVolEnv ||\n            g.generatorType === generatorTypes.releaseVolEnv ||\n            g.generatorType === generatorTypes.delayModEnv ||\n            g.generatorType === generatorTypes.attackModEnv ||\n            g.generatorType === generatorTypes.holdModEnv ||\n            g.generatorType === generatorTypes.decayModEnv\n        )\n        {\n            zone.generators[i] = new Generator(g.generatorType, Math.min(g.generatorValue, 6386), false);\n        }\n    }\n    \n    \n    // read_articulation.js:\n    // according to viena and another strange (with modulators) rendition of gm.dls in sf2,\n    // it shall be divided by -128,\n    // and a strange correction needs to be applied to the real value:\n    // real + (60 / 128) * scale\n    // we invert this here\n    for (let i = 0; i < zone.generators.length; i++)\n    {\n        const relativeGenerator = zone.generators[i];\n        let absoluteCounterpart = undefined;\n        switch (relativeGenerator.generatorType)\n        {\n            default:\n                continue;\n            \n            case generatorTypes.keyNumToVolEnvDecay:\n                absoluteCounterpart = generatorTypes.decayVolEnv;\n                break;\n            case generatorTypes.keyNumToVolEnvHold:\n                absoluteCounterpart = generatorTypes.holdVolEnv;\n                break;\n            case generatorTypes.keyNumToModEnvDecay:\n                absoluteCounterpart = generatorTypes.decayModEnv;\n                break;\n            case generatorTypes.keyNumToModEnvHold:\n                absoluteCounterpart = generatorTypes.holdModEnv;\n        }\n        let absoluteGenerator = zone.generators.find(g => g.generatorType === absoluteCounterpart);\n        if (absoluteGenerator === undefined)\n        {\n            // there's no absolute generator here.\n            continue;\n        }\n        const dlsRelative = relativeGenerator.generatorValue * -128;\n        const subtraction = (60 / 128) * dlsRelative;\n        const newAbsolute = absoluteGenerator.generatorValue - subtraction;\n        \n        const iR = zone.generators.indexOf(relativeGenerator);\n        const iA = zone.generators.indexOf(absoluteGenerator);\n        zone.generators[iA] =\n            new Generator(absoluteCounterpart, newAbsolute, false);\n        zone.generators[iR] =\n            new Generator(relativeGenerator.generatorType, dlsRelative, false);\n    }\n    /**\n     * @type {Articulator[]}\n     */\n    const generators = zone.generators.reduce((arrs, g) =>\n    {\n        if (invalidGeneratorTypes.has(g.generatorType))\n        {\n            return arrs;\n        }\n        const art = getDLSArticulatorFromSf2Generator(g);\n        if (art !== undefined)\n        {\n            arrs.push(art);\n            SpessaSynthInfo(\"%cSucceeded converting to DLS Articulator!\", consoleColors.recognized);\n            \n        }\n        else\n        {\n            SpessaSynthWarn(\"Failed converting to DLS Articulator!\");\n        }\n        return arrs;\n    }, []);\n    /**\n     * @type {Articulator[]}\n     */\n    const modulators = zone.modulators.reduce((arrs, m) =>\n    {\n        // do not write the default DLS modulators\n        if (\n            Modulator.isIdentical(m, DEFAULT_DLS_CHORUS, true) ||\n            Modulator.isIdentical(m, DEFAULT_DLS_REVERB, true) ||\n            Modulator.isIdentical(m, DLS_1_NO_VIBRATO_MOD, true) ||\n            Modulator.isIdentical(m, DLS_1_NO_VIBRATO_PRESSURE, true)\n        )\n        {\n            return arrs;\n        }\n        const art = getDLSArticulatorFromSf2Modulator(m);\n        if (art !== undefined)\n        {\n            arrs.push(art);\n            SpessaSynthInfo(\"%cSucceeded converting to DLS Articulator!\", consoleColors.recognized);\n            \n        }\n        else\n        {\n            SpessaSynthWarn(\"Failed converting to DLS Articulator!\");\n        }\n        return arrs;\n    }, []);\n    generators.push(...modulators);\n    \n    const art2Data = new IndexedByteArray(8);\n    writeDword(art2Data, 8); // cbSize\n    writeDword(art2Data, generators.length); // cbConnectionBlocks\n    \n    \n    const out = generators.map(a => a.writeArticulator());\n    return writeRIFFChunkParts(\n        \"art2\",\n        [art2Data, ...out]\n    );\n}", "import { IndexedByteArray } from \"../../../utils/indexed_array.js\";\nimport { writeDword, writeWord } from \"../../../utils/byte_functions/little_endian.js\";\nimport { writeRIFFChunkParts, writeRIFFChunkRaw } from \"../riff_chunk.js\";\nimport { writeWavesample } from \"./wsmp.js\";\nimport { writeArticulator } from \"./art2.js\";\nimport { generatorTypes } from \"../generator_types.js\";\n\n/**\n * @param zone {BasicInstrumentZone}\n * @param globalZone {BasicGlobalZone}\n * @this {BasicSoundBank}\n * @returns {IndexedByteArray}\n */\nexport function writeDLSRegion(zone, globalZone)\n{\n    // region header\n    const rgnhData = new IndexedByteArray(12);\n    // keyRange\n    writeWord(rgnhData, Math.max(zone.keyRange.min, 0));\n    writeWord(rgnhData, zone.keyRange.max);\n    // velRange\n    writeWord(rgnhData, Math.max(zone.velRange.min, 0));\n    writeWord(rgnhData, zone.velRange.max);\n    // fusOptions: 0 it seems\n    writeWord(rgnhData, 0);\n    // keyGroup (exclusive class)\n    const exclusive = zone.getGeneratorValue(generatorTypes.exclusiveClass, 0);\n    writeWord(rgnhData, exclusive);\n    // usLayer\n    writeWord(rgnhData, 0);\n    const rgnh = writeRIFFChunkRaw(\n        \"rgnh\",\n        rgnhData\n    );\n    \n    let rootKey = zone.getGeneratorValue(generatorTypes.overridingRootKey, zone.sample.samplePitch);\n    \n    // a lot of soundfonts like to set scale tuning to 0 in drums and keep the key at 60\n    // since we implement scale tuning via a dls articulator and fluid doesn't support these,\n    // change the root key here\n    const scaleTuning = zone.getGeneratorValue(\n        generatorTypes.scaleTuning,\n        globalZone.getGeneratorValue(generatorTypes.scaleTuning, 100)\n    );\n    if (scaleTuning === 0 && zone.keyRange.max - zone.keyRange.min === 0)\n    {\n        rootKey = zone.keyRange.min;\n    }\n    \n    // wave sample (Wsmp)\n    const wsmp = writeWavesample(\n        zone.sample,\n        rootKey,\n        zone.getGeneratorValue(\n            generatorTypes.fineTune,\n            0\n        ) + zone.getGeneratorValue(generatorTypes.coarseTune, 0) * 100\n        + zone.sample.samplePitchCorrection,\n        zone.getGeneratorValue(generatorTypes.initialAttenuation, 0),\n        // calculate loop with offsets\n        zone.sample.sampleLoopStartIndex\n        + zone.getGeneratorValue(generatorTypes.startloopAddrsOffset, 0)\n        + zone.getGeneratorValue(generatorTypes.startloopAddrsCoarseOffset, 0) * 32768,\n        zone.sample.sampleLoopEndIndex\n        + zone.getGeneratorValue(generatorTypes.endloopAddrsOffset, 0)\n        + zone.getGeneratorValue(generatorTypes.endloopAddrsCoarseOffset, 0) * 32768,\n        zone.getGeneratorValue(generatorTypes.sampleModes, 0)\n    );\n    \n    // wave link (wlnk)\n    const wlnkData = new IndexedByteArray(12);\n    writeWord(wlnkData, 0); // fusOptions\n    writeWord(wlnkData, 0); // usPhaseGroup\n    // let sampleType = 0;\n    // switch (zone.sample.sampleType)\n    // {\n    //     default:\n    //     case 1:\n    //     case 4:\n    //         // mono/left\n    //         sampleType = 0;\n    //         break;\n    //\n    //     case 2:\n    //         // right\n    //         sampleType = 1;\n    // }\n    // 1 means that the first bit is on so mono/left\n    writeDword(wlnkData, 1); // ulChannel\n    writeDword(wlnkData, this.samples.indexOf(zone.sample)); // ulTableIndex\n    const wlnk = writeRIFFChunkRaw(\n        \"wlnk\",\n        wlnkData\n    );\n    \n    // art\n    let lar2 = new IndexedByteArray(0);\n    if (zone.modulators.length + zone.generators.length > 0)\n    {\n        const art2 = writeArticulator(zone);\n        \n        lar2 = writeRIFFChunkRaw(\n            \"lar2\",\n            art2,\n            false,\n            true\n        );\n    }\n    \n    return writeRIFFChunkParts(\n        \"rgn2\",\n        [\n            rgnh,\n            wsmp,\n            wlnk,\n            lar2\n        ],\n        true\n    );\n}", "import { IndexedByteArray } from \"../../../utils/indexed_array.js\";\nimport { combineZones } from \"./combine_zones.js\";\nimport { writeRIFFChunkParts, writeRIFFChunkRaw } from \"../riff_chunk.js\";\nimport { writeDword } from \"../../../utils/byte_functions/little_endian.js\";\nimport { writeDLSRegion } from \"./rgn2.js\";\nimport { writeArticulator } from \"./art2.js\";\nimport { SpessaSynthGroupCollapsed, SpessaSynthGroupEnd } from \"../../../utils/loggin.js\";\nimport { consoleColors } from \"../../../utils/other.js\";\nimport { getStringBytes } from \"../../../utils/byte_functions/string.js\";\n\n/**\n * @this {BasicSoundBank}\n * @param preset {BasicPreset}\n * @returns {IndexedByteArray}\n */\nexport function writeIns(preset)\n{\n    SpessaSynthGroupCollapsed(\n        `%cWriting %c${preset.presetName}%c...`,\n        consoleColors.info,\n        consoleColors.recognized,\n        consoleColors.info\n    );\n    // combine preset and instrument zones into a single instrument zone (region) list\n    const inst = combineZones(preset);\n    const global = inst.globalZone;\n    const zones = inst.instrumentZones;\n    \n    \n    // insh: instrument header\n    const inshData = new IndexedByteArray(12);\n    writeDword(inshData, zones.length); // cRegions\n    // bank MSB is in bits 8-14\n    let ulBank = (preset.bank & 127) << 8;\n    // bit 32 means drums\n    if (preset.bank === 128)\n    {\n        ulBank |= (1 << 31);\n    }\n    writeDword(inshData, ulBank);                     // ulBank\n    writeDword(inshData, preset.program & 127); // ulInstrument\n    \n    const insh = writeRIFFChunkRaw(\n        \"insh\",\n        inshData\n    );\n    \n    // write global zone\n    const art2 = writeArticulator(global);\n    let lar2 = writeRIFFChunkRaw(\n        \"lar2\",\n        art2,\n        false,\n        true\n    );\n    \n    // write the region list\n    const lrgn = writeRIFFChunkParts(\n        \"lrgn\",\n        zones.reduce((arrs, z) =>\n        {\n            arrs.push(writeDLSRegion.apply(this, [z, global]));\n            return arrs;\n        }, []),\n        true\n    );\n    \n    // writeINFO\n    const inam = writeRIFFChunkRaw(\n        \"INAM\",\n        getStringBytes(preset.presetName, true)\n    );\n    const info = writeRIFFChunkRaw(\n        \"INFO\",\n        inam,\n        false,\n        true\n    );\n    \n    SpessaSynthGroupEnd();\n    return writeRIFFChunkParts(\n        \"ins \", [insh, lrgn, lar2, info],\n        true\n    );\n}", "import { writeRIFFChunkParts } from \"../riff_chunk.js\";\nimport { writeIns } from \"./ins.js\";\n\n/**\n * @this {BasicSoundBank}\n * @returns {IndexedByteArray}\n */\nexport function writeLins()\n{\n    return writeRIFFChunkParts(\n        \"lins\",\n        this.presets.map(p => writeIns.apply(this, [p])),\n        true\n    );\n}", "import { IndexedByteArray } from \"../../../utils/indexed_array.js\";\nimport { writeDword, writeWord } from \"../../../utils/byte_functions/little_endian.js\";\nimport { writeRIFFChunkParts, writeRIFFChunkRaw } from \"../riff_chunk.js\";\nimport { writeWavesample } from \"./wsmp.js\";\nimport { SpessaSynthInfo } from \"../../../utils/loggin.js\";\nimport { consoleColors } from \"../../../utils/other.js\";\nimport { getStringBytes } from \"../../../utils/byte_functions/string.js\";\n\n/**\n * @param sample {BasicSample}\n * @returns {IndexedByteArray}\n */\nexport function writeDLSSample(sample)\n{\n    const fmtData = new IndexedByteArray(18);\n    writeWord(fmtData, 1); // wFormatTag\n    writeWord(fmtData, 1); // wChannels\n    writeDword(fmtData, sample.sampleRate);\n    writeDword(fmtData, sample.sampleRate * 2); // 16-bit samples\n    writeWord(fmtData, 2); // wBlockAlign\n    writeWord(fmtData, 16); // wBitsPerSample\n    const fmt = writeRIFFChunkRaw(\n        \"fmt \",\n        fmtData\n    );\n    let loop = 1;\n    if (sample.sampleLoopStartIndex + Math.abs(sample.getAudioData().length - sample.sampleLoopEndIndex) < 2)\n    {\n        loop = 0;\n    }\n    const wsmp = writeWavesample(\n        sample,\n        sample.samplePitch,\n        sample.samplePitchCorrection,\n        0,\n        sample.sampleLoopStartIndex,\n        sample.sampleLoopEndIndex,\n        loop\n    );\n    let data = writeRIFFChunkRaw(\n        \"data\",\n        sample.getRawData(false) // no vorbis allowed\n    );\n    \n    const inam = writeRIFFChunkRaw(\n        \"INAM\",\n        getStringBytes(sample.sampleName, true)\n    );\n    const info = writeRIFFChunkRaw(\n        \"INFO\",\n        inam,\n        false,\n        true\n    );\n    SpessaSynthInfo(\n        `%cSaved %c${sample.sampleName}%c succesfully!`,\n        consoleColors.recognized,\n        consoleColors.value,\n        consoleColors.recognized\n    );\n    return writeRIFFChunkParts(\n        \"wave\",\n        [\n            fmt,\n            wsmp,\n            data,\n            info\n        ],\n        true\n    );\n}", "import { writeDLSSample } from \"./wave.js\";\nimport { writeRIFFChunkParts } from \"../riff_chunk.js\";\n\n/**\n * @this {BasicSoundBank}\n * @param {ProgressFunction|undefined} progressFunction\n * @returns {Promise<{data: IndexedByteArray, indexes: number[] }>}\n */\nexport async function writeWavePool(progressFunction)\n{\n    let currentIndex = 0;\n    const offsets = [];\n    /**\n     * @type {IndexedByteArray[]}\n     */\n    const samples = [];\n    let written = 0;\n    for (const s of this.samples)\n    {\n        const out = writeDLSSample(s);\n        await progressFunction?.(s.sampleName, written, this.samples.length);\n        offsets.push(currentIndex);\n        currentIndex += out.length;\n        samples.push(out);\n        written++;\n    }\n    return {\n        data: writeRIFFChunkParts(\n            \"wvpl\",\n            samples,\n            true\n        ),\n        indexes: offsets\n    };\n}", "import { writeRIFFChunkParts, writeRIFFChunkRaw } from \"../riff_chunk.js\";\nimport { writeDword } from \"../../../utils/byte_functions/little_endian.js\";\nimport { IndexedByteArray } from \"../../../utils/indexed_array.js\";\nimport { writeLins } from \"./lins.js\";\nimport { getStringBytes } from \"../../../utils/byte_functions/string.js\";\nimport { writeWavePool } from \"./wvpl.js\";\nimport { SpessaSynthGroupCollapsed, SpessaSynthGroupEnd, SpessaSynthInfo } from \"../../../utils/loggin.js\";\nimport { consoleColors } from \"../../../utils/other.js\";\nimport { fillWithDefaults } from \"../../../utils/fill_with_defaults.js\";\n\n/**\n * @typedef {Object} DLSWriteOptions\n * @property {ProgressFunction} progressFunction - a function to show progress for writing large banks. It can be undefined.\n */\n\n\n/**\n * @type {DLSWriteOptions}\n */\nconst DEFAULT_DLS_OPTIONS = {\n    progressFunction: undefined\n};\n\n/**\n * Write the soundfont as a .dls file. Experimental\n * @this {BasicSoundBank}\n * @param {Partial<DLSWriteOptions>} options - options for writing the file.\n * @returns {Uint8Array}\n */\nexport async function writeDLS(options = DEFAULT_DLS_OPTIONS)\n{\n    options = fillWithDefaults(options, DEFAULT_DLS_OPTIONS);\n    SpessaSynthGroupCollapsed(\n        \"%cSaving DLS...\",\n        consoleColors.info\n    );\n    // write colh\n    const colhNum = new IndexedByteArray(4);\n    writeDword(colhNum, this.presets.length);\n    const colh = writeRIFFChunkRaw(\n        \"colh\",\n        colhNum\n    );\n    SpessaSynthGroupCollapsed(\n        \"%cWriting instruments...\",\n        consoleColors.info\n    );\n    const lins = writeLins.apply(this);\n    SpessaSynthInfo(\n        \"%cSuccess!\",\n        consoleColors.recognized\n    );\n    SpessaSynthGroupEnd();\n    \n    SpessaSynthGroupCollapsed(\n        \"%cWriting WAVE samples...\",\n        consoleColors.info\n    );\n    const wavepool = await writeWavePool.call(this, options.progressFunction);\n    const wvpl = wavepool.data;\n    const ptblOffsets = wavepool.indexes;\n    SpessaSynthInfo(\"%cSucceeded!\", consoleColors.recognized);\n    SpessaSynthGroupEnd();\n    \n    // write ptbl\n    const ptblData = new IndexedByteArray(8 + 4 * ptblOffsets.length);\n    writeDword(ptblData, 8);\n    writeDword(ptblData, ptblOffsets.length);\n    for (const offset of ptblOffsets)\n    {\n        writeDword(ptblData, offset);\n    }\n    const ptbl = writeRIFFChunkRaw(\n        \"ptbl\",\n        ptblData\n    );\n    \n    this.soundFontInfo[\"ICMT\"] = (this.soundFontInfo[\"ICMT\"] || \"Soundfont\") + \"\\nConverted from SF2 to DLS using SpessaSynth\";\n    this.soundFontInfo[\"ISFT\"] = \"SpessaSynth\";\n    // write INFO\n    const infos = [];\n    for (const [info, data] of Object.entries(this.soundFontInfo))\n    {\n        if (\n            info !== \"ICMT\" &&\n            info !== \"INAM\" &&\n            info !== \"ICRD\" &&\n            info !== \"IENG\" &&\n            info !== \"ICOP\" &&\n            info !== \"ISFT\" &&\n            info !== \"ISBJ\"\n        )\n        {\n            continue;\n        }\n        infos.push(\n            writeRIFFChunkRaw(\n                info,\n                getStringBytes(data, true)\n            )\n        );\n    }\n    const info = writeRIFFChunkParts(\n        \"INFO\",\n        infos,\n        true\n    );\n    SpessaSynthInfo(\n        \"%cSaved succesfully!\",\n        consoleColors.recognized\n    );\n    SpessaSynthGroupEnd();\n    return writeRIFFChunkParts(\n        \"RIFF\",\n        [\n            getStringBytes(\"DLS \"),\n            colh,\n            lins,\n            ptbl,\n            wvpl,\n            info\n        ]\n    );\n}", "import { BasicZone } from \"./basic_zone.js\";\n\nexport class BasicPresetZone extends BasicZone\n{\n    /**\n     * The parent preset.\n     * @type {BasicPreset}\n     */\n    parentPreset;\n    \n    /**\n     * Zone's instrument.\n     * @type {BasicInstrument}\n     */\n    instrument;\n    \n    /**\n     * @param preset {BasicPreset}\n     */\n    constructor(preset)\n    {\n        super();\n        this.parentPreset = preset;\n    }\n    \n    deleteZone()\n    {\n        this.instrument.unlinkFrom(this.parentPreset);\n    }\n    \n    /**\n     * @param instrument {BasicInstrument}\n     */\n    setInstrument(instrument)\n    {\n        this.instrument = instrument;\n        this.instrument.linkTo(this.parentPreset);\n    }\n}", "/**\n * @typedef {{\n *  instrumentGenerators: Generator[],\n *  presetGenerators: Generator[],\n *  modulators: Modulator[],\n *  sample: BasicSample,\n * }} SampleAndGenerators\n */\nimport { Modulator } from \"./modulator.js\";\nimport { isXGDrums } from \"../../utils/xg_hacks.js\";\n\nimport { BasicGlobalZone } from \"./basic_global_zone.js\";\nimport { BasicPresetZone } from \"./basic_preset_zone.js\";\n\nexport class BasicPreset\n{\n    /**\n     * The parent soundbank instance\n     * Currently used for determining default modulators and XG status\n     * @type {BasicSoundBank}\n     */\n    parentSoundBank;\n    \n    /**\n     * The preset's name\n     * @type {string}\n     */\n    presetName = \"\";\n    \n    /**\n     * The preset's MIDI program number\n     * @type {number}\n     */\n    program = 0;\n    \n    /**\n     * The preset's MIDI bank number\n     * @type {number}\n     */\n    bank = 0;\n    \n    /**\n     * The preset's zones\n     * @type {BasicPresetZone[]}\n     */\n    presetZones = [];\n    \n    /**\n     * Preset's global zone\n     * @type {BasicGlobalZone}\n     */\n    globalZone = new BasicGlobalZone();\n    \n    /**\n     * unused metadata\n     * @type {number}\n     */\n    library = 0;\n    /**\n     * unused metadata\n     * @type {number}\n     */\n    genre = 0;\n    /**\n     * unused metadata\n     * @type {number}\n     */\n    morphology = 0;\n    \n    /**\n     * Creates a new preset representation\n     * @param parentSoundBank {BasicSoundBank}\n     */\n    constructor(parentSoundBank)\n    {\n        this.parentSoundBank = parentSoundBank;\n    }\n    \n    /**\n     * @param allowXG {boolean}\n     * @param allowSFX {boolean}\n     * @returns {boolean}\n     */\n    isDrumPreset(allowXG, allowSFX = false)\n    {\n        const xg = allowXG && this.parentSoundBank.isXGBank;\n        // sfx is not cool\n        return this.bank === 128 || (\n            xg &&\n            (isXGDrums(this.bank) && (this.bank !== 126 || allowSFX))\n        );\n    }\n    \n    // unlinks everything from this preset\n    deletePreset()\n    {\n        this.presetZones.forEach(z => z.deleteZone());\n    }\n    \n    /**\n     * @param index {number}\n     */\n    deleteZone(index)\n    {\n        this.presetZones[index].deleteZone();\n        this.presetZones.splice(index, 1);\n    }\n    \n    /**\n     * @returns {BasicPresetZone}\n     */\n    createZone()\n    {\n        const z = new BasicPresetZone(this);\n        this.presetZones.push(z);\n        return z;\n    }\n    \n    // noinspection JSUnusedGlobalSymbols\n    /**\n     * Preloads all samples (async)\n     */\n    preload(keyMin, keyMax)\n    {\n        for (let key = keyMin; key < keyMax + 1; key++)\n        {\n            for (let velocity = 0; velocity < 128; velocity++)\n            {\n                this.getSamplesAndGenerators(key, velocity).forEach(samandgen =>\n                {\n                    samandgen.sample.getAudioData();\n                });\n            }\n        }\n    }\n    \n    /**\n     * Returns samples and generators for given note\n     * @param midiNote {number}\n     * @param velocity {number}\n     * @returns {SampleAndGenerators[]}\n     */\n    getSamplesAndGenerators(midiNote, velocity)\n    {\n        \n        if (this.presetZones.length < 1)\n        {\n            return [];\n        }\n        \n        /**\n         * @param range {SoundFontRange}\n         * @param number {number}\n         * @returns {boolean}\n         */\n        function isInRange(range, number)\n        {\n            return number >= range.min && number <= range.max;\n        }\n        \n        /**\n         * @param main {Generator[]}\n         * @param adder {Generator[]}\n         */\n        function addUnique(main, adder)\n        {\n            main.push(...adder.filter(g => !main.find(mg => mg.generatorType === g.generatorType)));\n        }\n        \n        /**\n         * @param main {Modulator[]}\n         * @param adder {Modulator[]}\n         */\n        function addUniqueMods(main, adder)\n        {\n            main.push(...adder.filter(m => !main.find(mm => Modulator.isIdentical(m, mm))));\n        }\n        \n        /**\n         * @type {SampleAndGenerators[]}\n         */\n        let parsedGeneratorsAndSamples = [];\n        \n        /**\n         * global zone is always first, so it or nothing\n         * @type {Generator[]}\n         */\n        let globalPresetGenerators = [...this.globalZone.generators];\n        \n        /**\n         * @type {Modulator[]}\n         */\n        let globalPresetModulators = [...this.globalZone.modulators];\n        const globalKeyRange = this.globalZone.keyRange;\n        const globalVelRange = this.globalZone.velRange;\n        \n        // find the preset zones in range\n        let presetZonesInRange = this.presetZones.filter(currentZone =>\n            isInRange(\n                currentZone.hasKeyRange ? currentZone.keyRange : globalKeyRange,\n                midiNote\n            )\n            &&\n            isInRange(\n                currentZone.hasVelRange ? currentZone.velRange : globalVelRange,\n                velocity\n            )\n        );\n        \n        presetZonesInRange.forEach(presetZone =>\n        {\n            const instrument = presetZone.instrument;\n            // the global zone is already taken into account earlier\n            if (instrument.instrumentZones.length < 1)\n            {\n                return;\n            }\n            let presetGenerators = presetZone.generators;\n            let presetModulators = presetZone.modulators;\n            /**\n             * global zone is always first, so it or nothing\n             * @type {Generator[]}\n             */\n            let globalInstrumentGenerators = [...instrument.globalZone.generators];\n            let globalInstrumentModulators = [...instrument.globalZone.modulators];\n            const globalKeyRange = instrument.globalZone.keyRange;\n            const globalVelRange = instrument.globalZone.velRange;\n            \n            \n            let instrumentZonesInRange = instrument.instrumentZones\n                .filter(currentZone =>\n                    \n                    isInRange(\n                        currentZone.hasKeyRange ? currentZone.keyRange : globalKeyRange,\n                        midiNote\n                    )\n                    &&\n                    isInRange(\n                        currentZone.hasVelRange ? currentZone.velRange : globalVelRange,\n                        velocity\n                    )\n                );\n            \n            instrumentZonesInRange.forEach(instrumentZone =>\n            {\n                let instrumentGenerators = [...instrumentZone.generators];\n                let instrumentModulators = [...instrumentZone.modulators];\n                \n                addUnique(\n                    presetGenerators,\n                    globalPresetGenerators\n                );\n                // add the unique global preset generators (local replace global(\n                \n                \n                // add the unique global instrument generators (local replace global)\n                addUnique(\n                    instrumentGenerators,\n                    globalInstrumentGenerators\n                );\n                \n                addUniqueMods(\n                    presetModulators,\n                    globalPresetModulators\n                );\n                addUniqueMods(\n                    instrumentModulators,\n                    globalInstrumentModulators\n                );\n                \n                // default mods\n                addUniqueMods(\n                    instrumentModulators,\n                    this.parentSoundBank.defaultModulators\n                );\n                \n                /**\n                 * sum preset modulators to instruments (amount) sf spec page 54\n                 * @type {Modulator[]}\n                 */\n                const finalModulatorList = [...instrumentModulators];\n                for (let i = 0; i < presetModulators.length; i++)\n                {\n                    let mod = presetModulators[i];\n                    const identicalInstrumentModulator = finalModulatorList.findIndex(\n                        m => Modulator.isIdentical(mod, m));\n                    if (identicalInstrumentModulator !== -1)\n                    {\n                        // sum the amounts\n                        // this makes a new modulator\n                        // because otherwise it would overwrite the one in the soundfont!\n                        finalModulatorList[identicalInstrumentModulator] = finalModulatorList[identicalInstrumentModulator].sumTransform(\n                            mod);\n                    }\n                    else\n                    {\n                        finalModulatorList.push(mod);\n                    }\n                }\n                \n                \n                // combine both generators and add to the final result\n                parsedGeneratorsAndSamples.push({\n                    instrumentGenerators: instrumentGenerators,\n                    presetGenerators: presetGenerators,\n                    modulators: finalModulatorList,\n                    sample: instrumentZone.sample\n                });\n            });\n        });\n        return parsedGeneratorsAndSamples;\n    }\n}", "import {\n    SpessaSynthGroup,\n    SpessaSynthGroupCollapsed,\n    SpessaSynthGroupEnd,\n    SpessaSynthInfo,\n    SpessaSynthWarn\n} from \"../../utils/loggin.js\";\nimport { consoleColors } from \"../../utils/other.js\";\nimport { write } from \"./write_sf2/write.js\";\nimport { defaultModulators, Modulator } from \"./modulator.js\";\nimport { writeDLS } from \"./write_dls/write_dls.js\";\nimport { BasicSample, sampleTypes } from \"./basic_sample.js\";\nimport { Generator } from \"./generator.js\";\nimport { BasicInstrument } from \"./basic_instrument.js\";\nimport { BasicPreset } from \"./basic_preset.js\";\nimport { isXGDrums } from \"../../utils/xg_hacks.js\";\nimport { generatorTypes } from \"./generator_types.js\";\nimport { BasicGlobalZone } from \"./basic_global_zone.js\";\nimport { stbvorbis } from \"../../externals/stbvorbis_sync/stbvorbis_sync.min.js\";\n\n/**\n * Represents a single sound bank, be it DLS or SF2.\n */\nclass BasicSoundBank\n{\n    /**\n     * Indicates if the SF3/SF2Pack decoder is ready.\n     * @type {Promise<boolean>}\n     * @static\n     */\n    static isSF3DecoderReady = stbvorbis.isInitialized;\n    \n    /**\n     * Soundfont's info stored as name: value. ifil and iver are stored as string representation of float (e.g., 2.1)\n     * @type {Record<string, string|IndexedByteArray>}\n     */\n    soundFontInfo = {};\n    \n    /**\n     * The soundfont's presets\n     * @type {BasicPreset[]}\n     * @readonly\n     */\n    presets = [];\n    \n    /**\n     * The soundfont's samples\n     * @type {BasicSample[]}\n     * @readonly\n     */\n    samples = [];\n    \n    /**\n     * The soundfont's instruments\n     * @type {BasicInstrument[]}\n     * @readonly\n     */\n    instruments = [];\n    \n    /**\n     * Soundfont's default modulatorss\n     * @type {Modulator[]}\n     */\n    defaultModulators = defaultModulators.map(m => Modulator.copy(m));\n    \n    /**\n     * If the bank has custom default modulators (DMOD).\n     * @type {boolean}\n     */\n    customDefaultModulators = false;\n    \n    /**\n     * Checks for XG drumsets and considers if this soundfont is XG.\n     * @type {boolean}\n     */\n    isXGBank = false;\n    \n    /**\n     * Creates a new basic soundfont template (or copies)\n     * @param data {undefined|{presets: BasicPreset[], info: Record<string, string>}}\n     */\n    constructor(data = undefined)\n    {\n        if (data?.presets)\n        {\n            this.soundFontInfo = data.info;\n            this.addPresets(...data.presets);\n            /**\n             * @type {BasicInstrument[]}\n             */\n            const instrumentList = [];\n            for (const preset of data.presets)\n            {\n                for (const zone of preset.presetZones)\n                {\n                    if (!instrumentList.includes(zone.instrument))\n                    {\n                        instrumentList.push(zone.instrument);\n                    }\n                }\n            }\n            this.addInstruments(...instrumentList);\n            \n            /**\n             * @type {BasicSample[]}\n             */\n            const sampleList = [];\n            \n            for (const instrument of instrumentList)\n            {\n                for (const zone of instrument.instrumentZones)\n                {\n                    if (!sampleList.includes(zone.sample))\n                    {\n                        sampleList.push(zone.sample);\n                    }\n                }\n            }\n            this.addSamples(...sampleList);\n        }\n    }\n    \n    /**\n     * Merges soundfonts with the given order. Keep in mind that the info read is copied from the first one\n     * @param soundfonts {...BasicSoundBank} the soundfonts to merge, the first overwrites the last\n     * @returns {BasicSoundBank}\n     */\n    static mergeSoundBanks(...soundfonts)\n    {\n        const mainSf = soundfonts.shift();\n        const presets = mainSf.presets;\n        while (soundfonts.length)\n        {\n            const newPresets = soundfonts.shift().presets;\n            newPresets.forEach(newPreset =>\n            {\n                if (\n                    presets.find(existingPreset => existingPreset.bank === newPreset.bank && existingPreset.program === newPreset.program) === undefined\n                )\n                {\n                    presets.push(newPreset);\n                }\n            });\n        }\n        \n        return new BasicSoundBank({ presets: presets, info: mainSf.soundFontInfo });\n    }\n    \n    /**\n     * Creates a simple soundfont with one saw wave preset.\n     * @returns {Promise<ArrayBufferLike>}\n     */\n    static async getDummySoundfontFile()\n    {\n        const font = new BasicSoundBank();\n        const sample = new BasicSample(\n            \"Saw\",\n            44100,\n            65,\n            20,\n            sampleTypes.monoSample,\n            0,\n            127\n        );\n        const sampleData = new Float32Array(128);\n        for (let i = 0; i < 128; i++)\n        {\n            sampleData[i] = (i / 128) * 2 - 1;\n        }\n        sample.setAudioData(sampleData);\n        font.addSamples(sample);\n        \n        const gZone = new BasicGlobalZone();\n        gZone.addGenerators(\n            new Generator(generatorTypes.initialAttenuation, 375),\n            new Generator(generatorTypes.releaseVolEnv, -1000),\n            new Generator(generatorTypes.sampleModes, 1)\n        );\n        \n        const inst = new BasicInstrument();\n        inst.instrumentName = \"Saw Wave\";\n        inst.globalZone = gZone;\n        \n        const zone1 = inst.createZone();\n        zone1.setSample(sample);\n        \n        const zone2 = inst.createZone();\n        zone2.setSample(sample);\n        zone2.addGenerators(new Generator(generatorTypes.fineTune, -9));\n        \n        font.addInstruments(inst);\n        \n        \n        const preset = new BasicPreset(font);\n        preset.presetName = \"Saw Wave\";\n        const pZone = preset.createZone();\n        pZone.setInstrument(inst);\n        \n        font.addPresets(preset);\n        \n        font.soundFontInfo[\"ifil\"] = \"2.1\";\n        font.soundFontInfo[\"isng\"] = \"E-mu 10K2\";\n        font.soundFontInfo[\"INAM\"] = \"Dummy\";\n        font.flush();\n        const f = await font.write();\n        return f.buffer;\n    }\n    \n    /**\n     * @param presets {BasicPreset}\n     */\n    addPresets(...presets)\n    {\n        this.presets.push(...presets);\n    }\n    \n    /**\n     * @param instruments {BasicInstrument}\n     */\n    addInstruments(...instruments)\n    {\n        this.instruments.push(...instruments);\n    }\n    \n    /**\n     * @param samples {BasicSample}\n     */\n    addSamples(...samples)\n    {\n        this.samples.push(...samples);\n    }\n    \n    /**\n     * Clones samples into this bank\n     * @param sample {BasicSample} samples to copy\n     * @returns {BasicSample} copied sample, if a sample exists with that name, it is returned instead\n     */\n    cloneSample(sample)\n    {\n        const duplicate = this.samples.find(s => s.sampleName === sample.sampleName);\n        if (duplicate)\n        {\n            return duplicate;\n        }\n        const newSample = new BasicSample(\n            sample.sampleName,\n            sample.sampleRate,\n            sample.samplePitch,\n            sample.samplePitchCorrection,\n            sample.sampleType,\n            sample.sampleLoopStartIndex,\n            sample.sampleLoopEndIndex\n        );\n        if (sample.isCompressed)\n        {\n            newSample.setCompressedData(sample.compressedData.slice());\n        }\n        else\n        {\n            newSample.setAudioData(sample.getAudioData());\n        }\n        this.addSamples(newSample);\n        if (sample.linkedSample)\n        {\n            const clonedLinked = this.cloneSample(sample.linkedSample);\n            // sanity check\n            if (!clonedLinked.linkedSample)\n            {\n                newSample.setLinkedSample(clonedLinked, newSample.sampleType);\n            }\n        }\n        return newSample;\n    }\n    \n    \n    /**\n     * Clones an instruments into this bank\n     * @param instrument {BasicInstrument}\n     * @returns {BasicInstrument} the copied instrument, if an instrument exists with that name, it is returned instead\n     */\n    cloneInstrument(instrument)\n    {\n        const duplicate = this.instruments.find(i => i.instrumentName === instrument.instrumentName);\n        if (duplicate)\n        {\n            return duplicate;\n        }\n        const newInstrument = new BasicInstrument();\n        newInstrument.instrumentName = instrument.instrumentName;\n        newInstrument.globalZone.copyFrom(instrument.globalZone);\n        for (const zone of instrument.instrumentZones)\n        {\n            const copiedZone = newInstrument.createZone();\n            copiedZone.copyFrom(zone);\n            copiedZone.setSample(this.cloneSample(zone.sample));\n        }\n        this.addInstruments(newInstrument);\n        return newInstrument;\n    }\n    \n    // noinspection JSUnusedGlobalSymbols\n    /**\n     * Clones presets into this sound bank\n     * @param preset {BasicPreset}\n     * @returns {BasicPreset} the copied preset, if a preset exists with that name, it is returned instead\n     */\n    clonePreset(preset)\n    {\n        const duplicate = this.presets.find(p => p.presetName === preset.presetName);\n        if (duplicate)\n        {\n            return duplicate;\n        }\n        const newPreset = new BasicPreset(this);\n        newPreset.presetName = preset.presetName;\n        newPreset.bank = preset.bank;\n        newPreset.program = preset.program;\n        newPreset.library = preset.library;\n        newPreset.genre = preset.genre;\n        newPreset.morphology = preset.morphology;\n        newPreset.globalZone.copyFrom(preset.globalZone);\n        for (const zone of preset.presetZones)\n        {\n            const copiedZone = newPreset.createZone();\n            copiedZone.copyFrom(zone);\n            copiedZone.setInstrument(this.cloneInstrument(zone.instrument));\n        }\n        \n        this.addPresets(newPreset);\n        return newPreset;\n    }\n    \n    flush()\n    {\n        this.presets.sort((a, b) =>\n        {\n            if (a.bank !== b.bank)\n            {\n                return a.bank - b.bank;\n            }\n            return a.program - b.program;\n        });\n        this._parseInternal();\n    }\n    \n    /**\n     * parses the bank after loading is done\n     * @protected\n     */\n    _parseInternal()\n    {\n        this.isXGBank = false;\n        // definitions for XG:\n        // at least one preset with bank 127, 126 or 120\n        // MUST be a valid XG bank.\n        // allowed banks: (see XG specification)\n        // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 16, 17, 24,\n        // 25, 27, 28, 29, 30, 31, 32, 33, 40, 41, 48, 56, 57, 58,\n        // 64, 65, 66, 126, 127\n        const allowedPrograms = new Set([\n            0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 16, 17, 24,\n            25, 27, 28, 29, 30, 31, 32, 33, 40, 41, 48, 56, 57, 58,\n            64, 65, 66, 126, 127\n        ]);\n        for (const preset of this.presets)\n        {\n            if (isXGDrums(preset.bank))\n            {\n                this.isXGBank = true;\n                if (!allowedPrograms.has(preset.program))\n                {\n                    // not valid!\n                    this.isXGBank = false;\n                    SpessaSynthInfo(\n                        `%cThis bank is not valid XG. Preset %c${preset.bank}:${preset.program}%c is not a valid XG drum. XG mode will use presets on bank 128.`,\n                        consoleColors.info,\n                        consoleColors.value,\n                        consoleColors.info\n                    );\n                    break;\n                }\n            }\n        }\n    }\n    \n    /**\n     * Trims a sound bank to only contain samples in a given MIDI file\n     * @param mid {BasicMIDI} - the MIDI file\n     */\n    trimSoundBank(mid)\n    {\n        const soundfont = this;\n        \n        /**\n         * @param instrument {BasicInstrument}\n         * @param combos {{key: number, velocity: number}[]}\n         * @returns {number}\n         */\n        function trimInstrumentZones(instrument, combos)\n        {\n            let trimmedIZones = 0;\n            for (let iZoneIndex = 0; iZoneIndex < instrument.instrumentZones.length; iZoneIndex++)\n            {\n                const iZone = instrument.instrumentZones[iZoneIndex];\n                const iKeyRange = iZone.keyRange;\n                const iVelRange = iZone.velRange;\n                let isIZoneUsed = false;\n                for (const iCombo of combos)\n                {\n                    if (\n                        (iCombo.key >= iKeyRange.min && iCombo.key <= iKeyRange.max) &&\n                        (iCombo.velocity >= iVelRange.min && iCombo.velocity <= iVelRange.max)\n                    )\n                    {\n                        isIZoneUsed = true;\n                        break;\n                    }\n                }\n                if (!isIZoneUsed)\n                {\n                    SpessaSynthInfo(\n                        `%c${iZone.sample.sampleName} %cremoved from %c${instrument.instrumentName}%c.`,\n                        consoleColors.recognized,\n                        consoleColors.info,\n                        consoleColors.recognized,\n                        consoleColors.info\n                    );\n                    if (instrument.deleteZone(iZoneIndex))\n                    {\n                        trimmedIZones++;\n                        iZoneIndex--;\n                        SpessaSynthInfo(\n                            `%c${iZone.sample.sampleName} %cdeleted`,\n                            consoleColors.recognized,\n                            consoleColors.info\n                        );\n                    }\n                    if (iZone.sample.useCount < 1)\n                    {\n                        soundfont.deleteSample(iZone.sample);\n                    }\n                }\n                \n            }\n            return trimmedIZones;\n        }\n        \n        SpessaSynthGroup(\n            \"%cTrimming soundfont...\",\n            consoleColors.info\n        );\n        const usedProgramsAndKeys = mid.getUsedProgramsAndKeys(soundfont);\n        \n        SpessaSynthGroupCollapsed(\n            \"%cModifying soundfont...\",\n            consoleColors.info\n        );\n        SpessaSynthInfo(\"Detected keys for midi:\", usedProgramsAndKeys);\n        // modify the soundfont to only include programs and samples that are used\n        for (let presetIndex = 0; presetIndex < soundfont.presets.length; presetIndex++)\n        {\n            const p = soundfont.presets[presetIndex];\n            const string = p.bank + \":\" + p.program;\n            const used = usedProgramsAndKeys[string];\n            if (used === undefined)\n            {\n                SpessaSynthInfo(\n                    `%cDeleting preset %c${p.presetName}%c and its zones`,\n                    consoleColors.info,\n                    consoleColors.recognized,\n                    consoleColors.info\n                );\n                soundfont.deletePreset(p);\n                presetIndex--;\n            }\n            else\n            {\n                const combos = [...used].map(s =>\n                {\n                    const split = s.split(\"-\");\n                    return {\n                        key: parseInt(split[0]),\n                        velocity: parseInt(split[1])\n                    };\n                });\n                SpessaSynthGroupCollapsed(\n                    `%cTrimming %c${p.presetName}`,\n                    consoleColors.info,\n                    consoleColors.recognized\n                );\n                SpessaSynthInfo(`Keys for ${p.presetName}:`, combos);\n                let trimmedZones = 0;\n                // clean the preset to only use zones that are used\n                for (let zoneIndex = 0; zoneIndex < p.presetZones.length; zoneIndex++)\n                {\n                    const zone = p.presetZones[zoneIndex];\n                    const keyRange = zone.keyRange;\n                    const velRange = zone.velRange;\n                    // check if any of the combos matches the zone\n                    let isZoneUsed = false;\n                    for (const combo of combos)\n                    {\n                        if (\n                            (combo.key >= keyRange.min && combo.key <= keyRange.max) &&\n                            (combo.velocity >= velRange.min && combo.velocity <= velRange.max)\n                        )\n                        {\n                            // zone is used, trim the instrument zones\n                            isZoneUsed = true;\n                            const trimmedIZones = trimInstrumentZones(zone.instrument, combos);\n                            SpessaSynthInfo(\n                                `%cTrimmed off %c${trimmedIZones}%c zones from %c${zone.instrument.instrumentName}`,\n                                consoleColors.info,\n                                consoleColors.recognized,\n                                consoleColors.info,\n                                consoleColors.recognized\n                            );\n                            break;\n                        }\n                    }\n                    if (!isZoneUsed)\n                    {\n                        trimmedZones++;\n                        p.deleteZone(zoneIndex);\n                        if (zone.instrument.useCount < 1)\n                        {\n                            soundfont.deleteInstrument(zone.instrument);\n                        }\n                        zoneIndex--;\n                    }\n                }\n                SpessaSynthInfo(\n                    `%cTrimmed off %c${trimmedZones}%c zones from %c${p.presetName}`,\n                    consoleColors.info,\n                    consoleColors.recognized,\n                    consoleColors.info,\n                    consoleColors.recognized\n                );\n                SpessaSynthGroupEnd();\n            }\n        }\n        soundfont.removeUnusedElements();\n        \n        soundfont.soundFontInfo[\"ICMT\"] = `NOTE: This soundfont was trimmed by SpessaSynth to only contain presets used in \"${mid.midiName}\"\\n\\n`\n            + soundfont.soundFontInfo[\"ICMT\"];\n        \n        SpessaSynthInfo(\n            \"%cSoundfont modified!\",\n            consoleColors.recognized\n        );\n        SpessaSynthGroupEnd();\n        SpessaSynthGroupEnd();\n    }\n    \n    removeUnusedElements()\n    {\n        this.instruments = this.instruments.filter(i =>\n        {\n            i.deleteUnusedZones();\n            const deletable = i.useCount < 1;\n            if (deletable)\n            {\n                i.deleteInstrument();\n            }\n            return !deletable;\n        });\n        this.samples = this.samples.filter(s =>\n        {\n            const deletable = s.useCount < 1;\n            if (deletable)\n            {\n                s.deleteSample();\n            }\n            return !deletable;\n        });\n    }\n    \n    /**\n     * @param instrument {BasicInstrument}\n     */\n    deleteInstrument(instrument)\n    {\n        instrument.deleteInstrument();\n        this.instruments.splice(this.instruments.indexOf(instrument), 1);\n    }\n    \n    /**\n     * @param preset {BasicPreset}\n     */\n    deletePreset(preset)\n    {\n        preset.deletePreset();\n        this.presets.splice(this.presets.indexOf(preset), 1);\n    }\n    \n    /**\n     * @param sample {BasicSample}\n     */\n    deleteSample(sample)\n    {\n        sample.deleteSample();\n        this.samples.splice(this.samples.indexOf(sample), 1);\n    }\n    \n    /**\n     * Get the appropriate preset, undefined if not found\n     * @param bankNr {number}\n     * @param programNr {number}\n     * @param allowXGDrums {boolean} if true, allows XG drum banks (120, 126 and 127) as drum preset\n     * @return {BasicPreset}\n     */\n    getPresetNoFallback(bankNr, programNr, allowXGDrums = false)\n    {\n        const isDrum = bankNr === 128 || (allowXGDrums && isXGDrums(bankNr));\n        // check for exact match\n        let p;\n        if (isDrum)\n        {\n            p = this.presets.find(p => p.bank === bankNr && p.isDrumPreset(allowXGDrums) && p.program === programNr);\n        }\n        else\n        {\n            p = this.presets.find(p => p.bank === bankNr && p.program === programNr);\n        }\n        if (p)\n        {\n            return p;\n        }\n        // no match...\n        if (isDrum)\n        {\n            if (allowXGDrums)\n            {\n                // try any drum preset with matching program?\n                const p = this.presets.find(p => p.isDrumPreset(allowXGDrums) && p.program === programNr);\n                if (p)\n                {\n                    return p;\n                }\n            }\n        }\n        return undefined;\n    }\n    \n    /**\n     * Get the appropriate preset\n     * @param bankNr {number}\n     * @param programNr {number}\n     * @param allowXGDrums {boolean} if true, allows XG drum banks (120, 126 and 127) as drum preset\n     * @returns {BasicPreset}\n     */\n    getPreset(bankNr, programNr, allowXGDrums = false)\n    {\n        const isDrums = bankNr === 128 || (allowXGDrums && isXGDrums(bankNr));\n        // check for exact match\n        let preset;\n        // only allow drums if the preset is considered to be a drum preset\n        if (isDrums)\n        {\n            preset = this.presets.find(p => p.bank === bankNr && p.isDrumPreset(allowXGDrums) && p.program === programNr);\n        }\n        else\n        {\n            preset = this.presets.find(p => p.bank === bankNr && p.program === programNr);\n        }\n        if (preset)\n        {\n            return preset;\n        }\n        // no match...\n        if (isDrums)\n        {\n            // drum preset: find any preset with bank 128\n            preset = this.presets.find(p => p.isDrumPreset(allowXGDrums) && p.program === programNr);\n            if (!preset)\n            {\n                // only allow 128, otherwise it would default to XG SFX\n                preset = this.presets.find(p => p.isDrumPreset(allowXGDrums));\n            }\n        }\n        else\n        {\n            // non-drum preset: find any preset with the given program that is not a drum preset\n            preset = this.presets.find(p => p.program === programNr && !p.isDrumPreset(allowXGDrums));\n        }\n        if (preset)\n        {\n            SpessaSynthWarn(\n                `%cPreset ${bankNr}.${programNr} not found. Replaced with %c${preset.presetName} (${preset.bank}.${preset.program})`,\n                consoleColors.warn,\n                consoleColors.recognized\n            );\n        }\n        \n        // no preset, use the first one available\n        if (!preset)\n        {\n            SpessaSynthWarn(`Preset ${programNr} not found. Defaulting to`, this.presets[0].presetName);\n            preset = this.presets[0];\n        }\n        return preset;\n    }\n    \n    /**\n     * gets preset by name\n     * @param presetName {string}\n     * @returns {BasicPreset}\n     */\n    getPresetByName(presetName)\n    {\n        let preset = this.presets.find(p => p.presetName === presetName);\n        if (!preset)\n        {\n            SpessaSynthWarn(\"Preset not found. Defaulting to:\", this.presets[0].presetName);\n            preset = this.presets[0];\n        }\n        return preset;\n    }\n    \n    /**\n     * @param error {string}\n     */\n    parsingError(error)\n    {\n        throw new Error(`SF parsing error: ${error} The file may be corrupted.`);\n    }\n    \n    destroySoundBank()\n    {\n        delete this.presets;\n        delete this.instruments;\n        delete this.samples;\n        delete this.soundFontInfo;\n    }\n}\n\nBasicSoundBank.prototype.write = write;\nBasicSoundBank.prototype.writeDLS = writeDLS;\n\nexport { BasicSoundBank };", "import { readRIFFChunk } from \"../basic_soundfont/riff_chunk.js\";\nimport { SpessaSynthGroupCollapsed, SpessaSynthGroupEnd } from \"../../utils/loggin.js\";\nimport { consoleColors } from \"../../utils/other.js\";\n\n/**\n * @this {DLSSoundFont}\n * @param instrumentListChunk {RiffChunk}\n */\nexport function readDLSInstrumentList(instrumentListChunk)\n{\n    SpessaSynthGroupCollapsed(\"%cLoading instruments...\", consoleColors.info);\n    for (let i = 0; i < this.instrumentAmount; i++)\n    {\n        this.readDLSInstrument(readRIFFChunk(instrumentListChunk.chunkData));\n    }\n    SpessaSynthGroupEnd();\n}", "import { Generator } from \"../basic_soundfont/generator.js\";\nimport { generatorTypes } from \"../basic_soundfont/generator_types.js\";\nimport { BasicInstrumentZone } from \"../basic_soundfont/basic_instrument_zone.js\";\n\nexport class DLSZone extends BasicInstrumentZone\n{\n    /**\n     * @param inst {BasicInstrument}\n     */\n    constructor(inst)\n    {\n        super(inst);\n    }\n    \n    /**\n     * @param attenuationCb {number} with EMU correction\n     * @param loopingMode {number} the sfont one\n     * @param loop {{start: number, end: number}}\n     * @param sampleKey {number}\n     * @param sample {BasicSample}\n     * @param sampleID {number}\n     * @param samplePitchCorrection {number} cents\n     */\n    setWavesample(\n        attenuationCb,\n        loopingMode,\n        loop,\n        sampleKey,\n        sample,\n        sampleID,\n        samplePitchCorrection\n    )\n    {\n        if (loopingMode !== 0)\n        {\n            this.addGenerators(new Generator(generatorTypes.sampleModes, loopingMode));\n        }\n        this.addGenerators(new Generator(generatorTypes.initialAttenuation, attenuationCb));\n        \n        // correct tuning if needed\n        samplePitchCorrection -= sample.samplePitchCorrection;\n        const coarseTune = Math.trunc(samplePitchCorrection / 100);\n        if (coarseTune !== 0)\n        {\n            this.addGenerators(new Generator(generatorTypes.coarseTune, coarseTune));\n        }\n        const fineTune = samplePitchCorrection - (coarseTune * 100);\n        if (fineTune !== 0)\n        {\n            this.addGenerators(new Generator(generatorTypes.fineTune, fineTune));\n        }\n        \n        // correct loop if needed\n        if (loopingMode !== 0)\n        {\n            const diffStart = loop.start - sample.sampleLoopStartIndex;\n            const diffEnd = loop.end - sample.sampleLoopEndIndex;\n            if (diffStart !== 0)\n            {\n                const fine = diffStart % 32768;\n                this.addGenerators(new Generator(generatorTypes.startloopAddrsOffset, fine));\n                // coarse generator uses 32768 samples per step\n                const coarse = Math.trunc(diffStart / 32768);\n                if (coarse !== 0)\n                {\n                    this.addGenerators(new Generator(generatorTypes.startloopAddrsCoarseOffset, coarse));\n                }\n            }\n            if (diffEnd !== 0)\n            {\n                const fine = diffEnd % 32768;\n                this.addGenerators(new Generator(generatorTypes.endloopAddrsOffset, fine));\n                // coarse generator uses 32768 samples per step\n                const coarse = Math.trunc(diffEnd / 32768);\n                if (coarse !== 0)\n                {\n                    this.addGenerators(new Generator(generatorTypes.endloopAddrsCoarseOffset, coarse));\n                }\n            }\n        }\n        // correct the key if needed\n        if (sampleKey !== sample.samplePitch)\n        {\n            this.addGenerators(new Generator(generatorTypes.overridingRootKey, sampleKey));\n        }\n        // add sample\n        this.setSample(sample);\n    }\n}", "import { BasicInstrument } from \"../basic_soundfont/basic_instrument.js\";\nimport { DLSZone } from \"./dls_zone.js\";\n\nexport class DLSInstrument extends BasicInstrument\n{\n    constructor()\n    {\n        super();\n    }\n    \n    /**\n     * @returns {DLSZone}\n     */\n    createZone()\n    {\n        const z = new DLSZone(this);\n        this.instrumentZones.push(z);\n        return z;\n    }\n}", "import { BasicPreset } from \"../basic_soundfont/basic_preset.js\";\nimport { DLSInstrument } from \"./dls_instrument.js\";\n\nexport class DLSPreset extends BasicPreset\n{\n    /**\n     * @type {DLSInstrument}\n     */\n    dlsInstrument = new DLSInstrument();\n    \n    /**\n     * Creates a new DLS preset\n     * @param dls {BasicSoundBank}\n     * @param ulBank {number}\n     * @param ulInstrument {number}\n     */\n    constructor(dls, ulBank, ulInstrument)\n    {\n        // use stock default modulators, dls won't ever have DMOD chunk\n        super(dls);\n        this.program = ulInstrument & 127;\n        const bankMSB = (ulBank >> 8) & 127;\n        const bankLSB = ulBank & 127;\n        // switch accordingly\n        if (bankMSB > 0)\n        {\n            this.bank = bankMSB;\n        }\n        else\n        {\n            this.bank = bankLSB;\n        }\n        const isDrums = ulBank >> 31;\n        if (isDrums)\n        {\n            // soundfont bank is 128, so we change it here\n            this.bank = 128;\n        }\n        \n        const zone = this.createZone();\n        zone.setInstrument(this.dlsInstrument);\n    }\n}", "import { readLittleEndian, signedInt16 } from \"../../utils/byte_functions/little_endian.js\";\nimport { findRIFFListType, readRIFFChunk } from \"../basic_soundfont/riff_chunk.js\";\nimport { Generator } from \"../basic_soundfont/generator.js\";\nimport { generatorTypes } from \"../basic_soundfont/generator_types.js\";\nimport { SpessaSynthWarn } from \"../../utils/loggin.js\";\n\n/**\n * @this {DLSSoundFont}\n * @param chunk {RiffChunk}\n * @param instrument {DLSInstrument}\n */\nexport function readRegion(chunk, instrument)\n{\n    // regions are essentially instrument zones\n    \n    /**\n     * read chunks in the region\n     * @type {RiffChunk[]}\n     */\n    const regionChunks = [];\n    while (chunk.chunkData.length > chunk.chunkData.currentIndex)\n    {\n        regionChunks.push(readRIFFChunk(chunk.chunkData));\n    }\n    \n    // region header\n    const regionHeader = regionChunks.find(c => c.header === \"rgnh\");\n    \n    if (!regionHeader)\n    {\n        SpessaSynthWarn(\"Invalid DLS region: missing 'rgnh' chunk! Discarding...\");\n        return;\n    }\n    // key range\n    let keyMin = readLittleEndian(regionHeader.chunkData, 2);\n    let keyMax = readLittleEndian(regionHeader.chunkData, 2);\n    // vel range\n    let velMin = readLittleEndian(regionHeader.chunkData, 2);\n    let velMax = readLittleEndian(regionHeader.chunkData, 2);\n    \n    // a fix for not cool files\n    if (velMin === 0 && velMax === 0)\n    {\n        velMax = 127;\n        velMin = 0;\n    }\n    // cannot do the same to key zones sadly\n    // create zone\n    const zone = instrument.createZone();\n    // apply ranges\n    zone.keyRange = { min: keyMin, max: keyMax };\n    zone.velRange = { min: velMin, max: velMax };\n    \n    // fusOptions: no idea about that one???\n    readLittleEndian(regionHeader.chunkData, 2);\n    \n    // keyGroup: essentially exclusive class\n    const exclusive = readLittleEndian(regionHeader.chunkData, 2);\n    if (exclusive !== 0)\n    {\n        zone.addGenerators(new Generator(generatorTypes.exclusiveClass, exclusive));\n    }\n    \n    // lart\n    const lart = findRIFFListType(regionChunks, \"lart\");\n    const lar2 = findRIFFListType(regionChunks, \"lar2\");\n    this.readLart(lart, lar2, zone);\n    \n    // wsmp: wave sample chunk\n    const waveSampleChunk = regionChunks.find(c => c.header === \"wsmp\");\n    // cbSize\n    readLittleEndian(waveSampleChunk.chunkData, 4);\n    let originalKey = readLittleEndian(waveSampleChunk.chunkData, 2);\n    \n    // sFineTune\n    let pitchCorrection = signedInt16(\n        waveSampleChunk.chunkData[waveSampleChunk.chunkData.currentIndex++],\n        waveSampleChunk.chunkData[waveSampleChunk.chunkData.currentIndex++]\n    );\n    \n    // gain correction: Each unit of gain represents 1/655360 dB\n    // it is set after linking the sample\n    const gainCorrection = readLittleEndian(waveSampleChunk.chunkData, 4);\n    // convert to signed and turn into attenuation (invert)\n    const dbCorrection = (gainCorrection | 0) / -655360;\n    \n    // skip options\n    readLittleEndian(waveSampleChunk.chunkData, 4);\n    \n    // read loop count (always one or zero)\n    const loopsAmount = readLittleEndian(waveSampleChunk.chunkData, 4);\n    let loopingMode;\n    const loop = { start: 0, end: 0 };\n    if (loopsAmount === 0)\n    {\n        // no loop\n        loopingMode = 0;\n    }\n    else\n    {\n        // ignore cbSize\n        readLittleEndian(waveSampleChunk.chunkData, 4);\n        // loop type: loop normally or loop until release (like soundfont)\n        const loopType = readLittleEndian(waveSampleChunk.chunkData, 4); // why is it long?\n        if (loopType === 0)\n        {\n            loopingMode = 1;\n        }\n        else\n        {\n            loopingMode = 3;\n        }\n        loop.start = readLittleEndian(waveSampleChunk.chunkData, 4);\n        const loopLength = readLittleEndian(waveSampleChunk.chunkData, 4);\n        loop.end = loop.start + loopLength;\n    }\n    \n    // wave link\n    const waveLinkChunk = regionChunks.find(c => c.header === \"wlnk\");\n    if (waveLinkChunk === undefined)\n    {\n        // No wave link means no sample. What? Why is it even here then?\n        return undefined;\n    }\n    \n    // flags\n    readLittleEndian(waveLinkChunk.chunkData, 2);\n    // phase group\n    readLittleEndian(waveLinkChunk.chunkData, 2);\n    // channel\n    readLittleEndian(waveLinkChunk.chunkData, 4);\n    // sampleID\n    const sampleID = readLittleEndian(waveLinkChunk.chunkData, 4);\n    // noinspection JSValidateTypes\n    /**\n     * @type {DLSSample}\n     */\n    const sample = this.samples[sampleID];\n    if (sample === undefined)\n    {\n        throw new Error(\"Invalid sample ID!\");\n    }\n    \n    // this correction overrides the sample gain correction\n    const actualDbCorrection = dbCorrection || sample.sampleDbAttenuation;\n    // convert to centibels\n    const attenuation = (actualDbCorrection * 10) / 0.4; // make sure to apply EMU correction\n    \n    zone.setWavesample(\n        attenuation, loopingMode,\n        loop,\n        originalKey,\n        sample,\n        sampleID,\n        pitchCorrection\n    );\n}", "import { readBytesAsString } from \"../../utils/byte_functions/string.js\";\nimport { readLittleEndian } from \"../../utils/byte_functions/little_endian.js\";\nimport { DLSPreset } from \"./dls_preset.js\";\nimport { findRIFFListType, readRIFFChunk } from \"../basic_soundfont/riff_chunk.js\";\nimport { SpessaSynthGroupCollapsed, SpessaSynthGroupEnd } from \"../../utils/loggin.js\";\nimport { consoleColors } from \"../../utils/other.js\";\nimport { Modulator } from \"../basic_soundfont/modulator.js\";\nimport { DEFAULT_DLS_CHORUS, DEFAULT_DLS_REVERB } from \"./dls_sources.js\";\nimport { generatorLimits, generatorTypes } from \"../basic_soundfont/generator_types.js\";\nimport { readRegion } from \"./read_region.js\";\n\n/**\n * @this {DLSSoundFont}\n * @param chunk {RiffChunk}\n */\nexport function readDLSInstrument(chunk)\n{\n    this.verifyHeader(chunk, \"LIST\");\n    this.verifyText(readBytesAsString(chunk.chunkData, 4), \"ins \");\n    /**\n     * @type {RiffChunk[]}\n     */\n    const chunks = [];\n    while (chunk.chunkData.length > chunk.chunkData.currentIndex)\n    {\n        chunks.push(readRIFFChunk(chunk.chunkData));\n    }\n    \n    \n    const instrumentHeader = chunks.find(c => c.header === \"insh\");\n    if (!instrumentHeader)\n    {\n        SpessaSynthGroupEnd();\n        throw new Error(\"No instrument header!\");\n    }\n    \n    // read instrument header\n    const regions = readLittleEndian(instrumentHeader.chunkData, 4);\n    const ulBank = readLittleEndian(instrumentHeader.chunkData, 4);\n    const ulInstrument = readLittleEndian(instrumentHeader.chunkData, 4);\n    const preset = new DLSPreset(this, ulBank, ulInstrument);\n    \n    // read preset name in INFO\n    let presetName = ``;\n    const infoChunk = findRIFFListType(chunks, \"INFO\");\n    if (infoChunk)\n    {\n        let info = readRIFFChunk(infoChunk.chunkData);\n        while (info.header !== \"INAM\")\n        {\n            info = readRIFFChunk(infoChunk.chunkData);\n        }\n        presetName = readBytesAsString(info.chunkData, info.chunkData.length).trim();\n    }\n    if (presetName.length < 1)\n    {\n        presetName = `unnamed ${(ulBank >> 8) & 127}:${ulInstrument & 127}`;\n    }\n    preset.presetName = presetName;\n    preset.dlsInstrument.instrumentName = presetName;\n    SpessaSynthGroupCollapsed(\n        `%cParsing %c\"${presetName}\"%c...`,\n        consoleColors.info,\n        consoleColors.recognized,\n        consoleColors.info\n    );\n    \n    // list of regions\n    const regionListChunk = findRIFFListType(chunks, \"lrgn\");\n    if (!regionListChunk)\n    {\n        SpessaSynthGroupEnd();\n        throw new Error(\"No region list!\");\n    }\n    \n    // global articulation: essentially global zone\n    const globalZone = preset.dlsInstrument.globalZone;\n    \n    // read articulators\n    const globalLart = findRIFFListType(chunks, \"lart\");\n    const globalLar2 = findRIFFListType(chunks, \"lar2\");\n    if (globalLar2 !== undefined || globalLart !== undefined)\n    {\n        this.readLart(globalLart, globalLar2, globalZone);\n    }\n    // remove generators with default values\n    globalZone.generators = globalZone.generators.filter(g => g.generatorValue !== generatorLimits[g.generatorType].def);\n    // override reverb and chorus with 1000 instead of 200 (if not override)\n    // reverb\n    if (globalZone.modulators.find(m => m.modulatorDestination === generatorTypes.reverbEffectsSend) === undefined)\n    {\n        globalZone.addModulators(Modulator.copy(DEFAULT_DLS_REVERB));\n    }\n    // chorus\n    if (globalZone.modulators.find(m => m.modulatorDestination === generatorTypes.chorusEffectsSend) === undefined)\n    {\n        globalZone.addModulators(Modulator.copy(DEFAULT_DLS_CHORUS));\n    }\n    \n    // read regions\n    for (let i = 0; i < regions; i++)\n    {\n        const chunk = readRIFFChunk(regionListChunk.chunkData);\n        this.verifyHeader(chunk, \"LIST\");\n        const type = readBytesAsString(chunk.chunkData, 4);\n        if (type !== \"rgn \" && type !== \"rgn2\")\n        {\n            SpessaSynthGroupEnd();\n            this.parsingError(`Invalid DLS region! Expected \"rgn \" or \"rgn2\" got \"${type}\"`);\n        }\n        \n        \n        readRegion.call(this, chunk, preset.dlsInstrument);\n    }\n    this.addPresets(preset);\n    this.addInstruments(preset.dlsInstrument);\n    SpessaSynthGroupEnd();\n}", "import { DLSSources } from \"./dls_sources.js\";\nimport {\n    DecodedModulator,\n    getModSourceEnum,\n    Modulator,\n    modulatorCurveTypes,\n    modulatorSources\n} from \"../basic_soundfont/modulator.js\";\nimport { midiControllers } from \"../../midi/midi_message.js\";\nimport { DLSDestinations } from \"./dls_destinations.js\";\n\nimport { consoleColors } from \"../../utils/other.js\";\nimport { SpessaSynthWarn } from \"../../utils/loggin.js\";\nimport { generatorTypes } from \"../basic_soundfont/generator_types.js\";\n\n/**\n * @param source {number}\n * @returns {{enum: number, isCC: boolean}|undefined}\n */\nfunction getSF2SourceFromDLS(source)\n{\n    let sourceEnum = undefined;\n    let isCC = false;\n    switch (source)\n    {\n        default:\n        case DLSSources.modLfo:\n        case DLSSources.vibratoLfo:\n        case DLSSources.coarseTune:\n        case DLSSources.fineTune:\n        case DLSSources.modEnv:\n            return undefined; // cannot be this in sf2\n        \n        case DLSSources.keyNum:\n            sourceEnum = modulatorSources.noteOnKeyNum;\n            break;\n        case DLSSources.none:\n            sourceEnum = modulatorSources.noController;\n            break;\n        case DLSSources.modulationWheel:\n            sourceEnum = midiControllers.modulationWheel;\n            isCC = true;\n            break;\n        case DLSSources.pan:\n            sourceEnum = midiControllers.pan;\n            isCC = true;\n            break;\n        case DLSSources.reverb:\n            sourceEnum = midiControllers.reverbDepth;\n            isCC = true;\n            break;\n        case DLSSources.chorus:\n            sourceEnum = midiControllers.chorusDepth;\n            isCC = true;\n            break;\n        case DLSSources.expression:\n            sourceEnum = midiControllers.expressionController;\n            isCC = true;\n            break;\n        case DLSSources.volume:\n            sourceEnum = midiControllers.mainVolume;\n            isCC = true;\n            break;\n        case DLSSources.velocity:\n            sourceEnum = modulatorSources.noteOnVelocity;\n            break;\n        case DLSSources.polyPressure:\n            sourceEnum = modulatorSources.polyPressure;\n            break;\n        case DLSSources.channelPressure:\n            sourceEnum = modulatorSources.channelPressure;\n            break;\n        case DLSSources.pitchWheel:\n            sourceEnum = modulatorSources.pitchWheel;\n            break;\n        case DLSSources.pitchWheelRange:\n            sourceEnum = modulatorSources.pitchWheelRange;\n            break;\n    }\n    if (sourceEnum === undefined)\n    {\n        throw new Error(`Unknown DLS Source: ${source}`);\n    }\n    return { enum: sourceEnum, isCC: isCC };\n}\n\n/**\n * @param destination {number}\n * @param amount {number}\n * @returns {generatorTypes|{gen: generatorTypes, newAmount: number}} // transform amount to sf2 units\n */\nfunction getSF2GeneratorFromDLS(destination, amount)\n{\n    switch (destination)\n    {\n        default:\n        case DLSDestinations.none:\n            return undefined;\n        case DLSDestinations.pan:\n            return generatorTypes.pan;\n        case DLSDestinations.gain:\n            return { gen: generatorTypes.initialAttenuation, newAmount: amount * -1 };\n        case DLSDestinations.pitch:\n            return generatorTypes.fineTune;\n        case DLSDestinations.keyNum:\n            return generatorTypes.overridingRootKey;\n        \n        // vol env\n        case DLSDestinations.volEnvDelay:\n            return generatorTypes.delayVolEnv;\n        case DLSDestinations.volEnvAttack:\n            return generatorTypes.attackVolEnv;\n        case DLSDestinations.volEnvHold:\n            return generatorTypes.holdVolEnv;\n        case DLSDestinations.volEnvDecay:\n            return generatorTypes.decayVolEnv;\n        case DLSDestinations.volEnvSustain:\n            return { gen: generatorTypes.sustainVolEnv, newAmount: 1000 - amount };\n        case DLSDestinations.volEnvRelease:\n            return generatorTypes.releaseVolEnv;\n        \n        // mod env\n        case DLSDestinations.modEnvDelay:\n            return generatorTypes.delayModEnv;\n        case DLSDestinations.modEnvAttack:\n            return generatorTypes.attackModEnv;\n        case DLSDestinations.modEnvHold:\n            return generatorTypes.holdModEnv;\n        case DLSDestinations.modEnvDecay:\n            return generatorTypes.decayModEnv;\n        case DLSDestinations.modEnvSustain:\n            return { gen: generatorTypes.sustainModEnv, newAmount: (1000 - amount) / 10 };\n        case DLSDestinations.modEnvRelease:\n            return generatorTypes.releaseModEnv;\n        \n        case DLSDestinations.filterCutoff:\n            return generatorTypes.initialFilterFc;\n        case DLSDestinations.filterQ:\n            return generatorTypes.initialFilterQ;\n        case DLSDestinations.chorusSend:\n            return generatorTypes.chorusEffectsSend;\n        case DLSDestinations.reverbSend:\n            return generatorTypes.reverbEffectsSend;\n        \n        // lfo\n        case DLSDestinations.modLfoFreq:\n            return generatorTypes.freqModLFO;\n        case DLSDestinations.modLfoDelay:\n            return generatorTypes.delayModLFO;\n        case DLSDestinations.vibLfoFreq:\n            return generatorTypes.freqVibLFO;\n        case DLSDestinations.vibLfoDelay:\n            return generatorTypes.delayVibLFO;\n    }\n}\n\n/**\n * checks for combos such as mod lfo as source and pitch as destination which results in modLfoToPitch\n * @param source {number}\n * @param destination {number}\n * @returns {generatorTypes} real destination\n */\nfunction checkForSpecialDLSCombo(source, destination)\n{\n    if (source === DLSSources.vibratoLfo && destination === DLSDestinations.pitch)\n    {\n        // vibrato lfo to pitch\n        return generatorTypes.vibLfoToPitch;\n    }\n    else if (source === DLSSources.modLfo && destination === DLSDestinations.pitch)\n    {\n        // mod lfo to pitch\n        return generatorTypes.modLfoToPitch;\n    }\n    else if (source === DLSSources.modLfo && destination === DLSDestinations.filterCutoff)\n    {\n        // mod lfo to filter\n        return generatorTypes.modLfoToFilterFc;\n    }\n    else if (source === DLSSources.modLfo && destination === DLSDestinations.gain)\n    {\n        // mod lfo to volume\n        return generatorTypes.modLfoToVolume;\n    }\n    else if (source === DLSSources.modEnv && destination === DLSDestinations.filterCutoff)\n    {\n        // mod envelope to filter\n        return generatorTypes.modEnvToFilterFc;\n    }\n    else if (source === DLSSources.modEnv && destination === DLSDestinations.pitch)\n    {\n        // mod envelope to pitch\n        return generatorTypes.modEnvToPitch;\n    }\n    else\n    {\n        return undefined;\n    }\n}\n\n// noinspection JSUnusedGlobalSymbols\n/**\n * @param source {number}\n * @param control {number}\n * @param destination {number}\n * @param value {number}\n * @param transform {number}\n * @param msg {string}\n */\nexport function modulatorConverterDebug(\n    source,\n    control,\n    destination,\n    value,\n    transform,\n    msg = \"Attempting to convert the following DLS Articulator to SF2 Modulator:\"\n)\n{\n    const type = Object.keys(DLSDestinations).find(k => DLSDestinations[k] === destination);\n    const srcType = Object.keys(DLSSources).find(k => DLSSources[k] === source);\n    const ctrlType = Object.keys(DLSSources).find(k => DLSSources[k] === control);\n    const typeString = type ? type : destination.toString(16);\n    const srcString = srcType ? srcType : source.toString(16);\n    const ctrlString = ctrlType ? ctrlType : control.toString(16);\n    console.debug(\n        `%c${msg}\n        Source: %c${srcString}%c\n        Control: %c${ctrlString}%c\n        Destination: %c${typeString}%c\n        Amount: %c${value}%c\n        Transform: %c${transform}%c...`,\n        consoleColors.info,\n        consoleColors.recognized,\n        consoleColors.info,\n        consoleColors.recognized,\n        consoleColors.info,\n        consoleColors.recognized,\n        consoleColors.info,\n        consoleColors.recognized,\n        consoleColors.info,\n        consoleColors.recognized,\n        consoleColors.info\n    );\n}\n\n/**\n * @param source {number}\n * @param control {number}\n * @param destination {number}\n * @param transform {number}\n * @param value {number}\n * @returns {Modulator|undefined}\n */\nexport function getSF2ModulatorFromArticulator(\n    source,\n    control,\n    destination,\n    transform,\n    value\n)\n{\n    // modulatorConverterDebug(\n    //     source,\n    //     control,\n    //     destination,\n    //     value,\n    //     transform\n    // );\n    // check for special combinations\n    const specialDestination = checkForSpecialDLSCombo(source, destination);\n    /**\n     * @type {generatorTypes}\n     */\n    let destinationGenerator;\n    /**\n     * @type {{enum: number, isCC: boolean}}\n     */\n    let sf2Source;\n    let swapSources = false;\n    let isSourceNoController = false;\n    let newValue = value;\n    if (specialDestination === undefined)\n    {\n        // determine destination\n        const sf2GenDestination = getSF2GeneratorFromDLS(destination, value);\n        if (sf2GenDestination === undefined)\n        {\n            // cannot be a valid modulator\n            SpessaSynthWarn(`Invalid destination: ${destination}`);\n            return undefined;\n        }\n        /**\n         * @type {generatorTypes}\n         */\n        destinationGenerator = sf2GenDestination;\n        if (sf2GenDestination.newAmount !== undefined)\n        {\n            newValue = sf2GenDestination.newAmount;\n            destinationGenerator = sf2GenDestination.gen;\n        }\n        sf2Source = getSF2SourceFromDLS(source);\n        if (sf2Source === undefined)\n        {\n            // cannot be a valid modulator\n            SpessaSynthWarn(`Invalid source: ${source}`);\n            return undefined;\n        }\n    }\n    else\n    {\n        destinationGenerator = specialDestination;\n        swapSources = true;\n        sf2Source = { enum: modulatorSources.noController, isCC: false };\n        isSourceNoController = true;\n    }\n    let sf2SecondSource = getSF2SourceFromDLS(control);\n    if (sf2SecondSource === undefined)\n    {\n        // cannot be a valid modulator\n        SpessaSynthWarn(`Invalid control: ${control}`);\n        return undefined;\n    }\n    \n    // get transforms and final enums\n    let sourceEnumFinal;\n    if (isSourceNoController)\n    {\n        // we force it into this state because before it was some strange value,\n        // like vibrato lfo bipolar, for example,\n        // since we turn it into NoController -> vibLfoToPitch,\n        // the result is the same and bipolar controller is technically 0\n        sourceEnumFinal = 0x0;\n    }\n    else\n    {\n        // output transform is ignored as it's not a thing in sfont format\n        // unless the curve type of source is linear, then output is copied\n        const outputTransform = transform & 0b1111;\n        // source curve type maps to a desfont curve type in section 2.10, table 9\n        let sourceTransform = (transform >> 10) & 0b1111;\n        if (sourceTransform === modulatorCurveTypes.linear && outputTransform !== modulatorCurveTypes.linear)\n        {\n            sourceTransform = outputTransform;\n        }\n        const sourceIsBipolar = (transform >> 14) & 1;\n        let sourceIsNegative = (transform >> 15) & 1;\n        // special case: for attenuation, invert source (dls gain is the opposite of sf2 attenuation)\n        if (destinationGenerator === generatorTypes.initialAttenuation)\n        {\n            // if the value is negative, the source shall be negative!\n            // why?\n            // IDK, it makes it work with ROCK.RMI and NOKIA_S30.dls\n            if (value < 0)\n            {\n                sourceIsNegative = 1;\n            }\n        }\n        sourceEnumFinal = getModSourceEnum(\n            sourceTransform,\n            sourceIsBipolar,\n            sourceIsNegative,\n            sf2Source.isCC,\n            sf2Source.enum\n        );\n    }\n    \n    // a corrupted rendition of gm.dls was found under\n    // https://sembiance.com/fileFormatSamples/audio/downloadableSoundBank/\n    // which specifies a whopping -32,768 decibels of attenuation\n    if (destinationGenerator === generatorTypes.initialAttenuation)\n    {\n        newValue = Math.max(960, Math.min(0, newValue));\n    }\n    \n    const secSourceTransform = (transform >> 4) & 0b1111;\n    const secSourceIsBipolar = (transform >> 8) & 1;\n    const secSourceIsNegative = transform >> 9 & 1;\n    let secSourceEnumFinal = getModSourceEnum(\n        secSourceTransform,\n        secSourceIsBipolar,\n        secSourceIsNegative,\n        sf2SecondSource.isCC,\n        sf2SecondSource.enum\n    );\n    \n    if (swapSources)\n    {\n        const temp = secSourceEnumFinal;\n        secSourceEnumFinal = sourceEnumFinal;\n        sourceEnumFinal = temp;\n    }\n    \n    // return the modulator!\n    return new DecodedModulator(\n        sourceEnumFinal,\n        secSourceEnumFinal,\n        destinationGenerator,\n        newValue,\n        0x0\n    );\n    \n}", "import { readLittleEndian } from \"../../utils/byte_functions/little_endian.js\";\nimport { DLSDestinations } from \"./dls_destinations.js\";\nimport { DLS_1_NO_VIBRATO_MOD, DLS_1_NO_VIBRATO_PRESSURE, DLSSources } from \"./dls_sources.js\";\nimport { getSF2ModulatorFromArticulator } from \"./articulator_converter.js\";\nimport { SpessaSynthInfo, SpessaSynthWarn } from \"../../utils/loggin.js\";\nimport { consoleColors } from \"../../utils/other.js\";\nimport { Generator } from \"../basic_soundfont/generator.js\";\nimport { Modulator } from \"../basic_soundfont/modulator.js\";\nimport { generatorTypes } from \"../basic_soundfont/generator_types.js\";\n\n\n/**\n * Reads the articulator chunk\n * @param chunk {RiffChunk}\n * @param disableVibrato {boolean} it seems that dls 1 does not have vibrato lfo, so we shall disable it\n * @returns {{modulators: Modulator[], generators: Generator[]}}\n */\nexport function readArticulation(chunk, disableVibrato)\n{\n    const artData = chunk.chunkData;\n    /**\n     * @type {Generator[]}\n     */\n    const generators = [];\n    /**\n     * @type {Modulator[]}\n     */\n    const modulators = [];\n    \n    // cbSize (ignore)\n    readLittleEndian(artData, 4);\n    const connectionsAmount = readLittleEndian(artData, 4);\n    for (let i = 0; i < connectionsAmount; i++)\n    {\n        // read the block\n        const source = readLittleEndian(artData, 2);\n        const control = readLittleEndian(artData, 2);\n        const destination = readLittleEndian(artData, 2);\n        const transform = readLittleEndian(artData, 2);\n        const scale = readLittleEndian(artData, 4) | 0;\n        const value = scale >> 16; // convert it to 16 bit as soundfont uses that\n        \n        // modulatorConverterDebug(\n        //     source,\n        //     control,\n        //     destination,\n        //     value,\n        //     transform\n        // );\n        \n        // interpret this somehow...\n        // if source and control are both zero, it's a generator\n        if (source === 0 && control === 0 && transform === 0)\n        {\n            /**\n             * @type {Generator}\n             */\n            let generator;\n            switch (destination)\n            {\n                case DLSDestinations.pan:\n                    generator = new Generator(generatorTypes.pan, value); // turn percent into tenths of percent\n                    break;\n                case DLSDestinations.gain:\n                    generator = new Generator(generatorTypes.initialAttenuation, -value * 10 / 0.4); // turn to centibels and apply emu correction\n                    break;\n                case DLSDestinations.filterCutoff:\n                    generator = new Generator(generatorTypes.initialFilterFc, value);\n                    break;\n                case DLSDestinations.filterQ:\n                    generator = new Generator(generatorTypes.initialFilterQ, value);\n                    break;\n                \n                // mod lfo raw values it seems\n                case DLSDestinations.modLfoFreq:\n                    generator = new Generator(generatorTypes.freqModLFO, value);\n                    break;\n                case DLSDestinations.modLfoDelay:\n                    generator = new Generator(generatorTypes.delayModLFO, value);\n                    break;\n                case DLSDestinations.vibLfoFreq:\n                    generator = new Generator(generatorTypes.freqVibLFO, value);\n                    break;\n                case DLSDestinations.vibLfoDelay:\n                    generator = new Generator(generatorTypes.delayVibLFO, value);\n                    break;\n                \n                // vol. env: all times are timecents like sf2\n                case DLSDestinations.volEnvDelay:\n                    generator = new Generator(generatorTypes.delayVolEnv, value);\n                    break;\n                case DLSDestinations.volEnvAttack:\n                    generator = new Generator(generatorTypes.attackVolEnv, value);\n                    break;\n                case DLSDestinations.volEnvHold:\n                    // do not validate because keyNumToSomething\n                    generator = new Generator(generatorTypes.holdVolEnv, value, false);\n                    break;\n                case DLSDestinations.volEnvDecay:\n                    // do not validate because keyNumToSomething\n                    generator = new Generator(generatorTypes.decayVolEnv, value, false);\n                    break;\n                case DLSDestinations.volEnvRelease:\n                    generator = new Generator(generatorTypes.releaseVolEnv, value);\n                    break;\n                case DLSDestinations.volEnvSustain:\n                    // gain seems to be (1000 - value) / 10 = sustain dB\n                    const sustainCb = 1000 - value;\n                    generator = new Generator(generatorTypes.sustainVolEnv, sustainCb);\n                    break;\n                \n                // mod env\n                case DLSDestinations.modEnvDelay:\n                    generator = new Generator(generatorTypes.delayModEnv, value);\n                    break;\n                case DLSDestinations.modEnvAttack:\n                    generator = new Generator(generatorTypes.attackModEnv, value);\n                    break;\n                case DLSDestinations.modEnvHold:\n                    // do not validate because keyNumToSomething\n                    generator = new Generator(generatorTypes.holdModEnv, value, false);\n                    break;\n                case DLSDestinations.modEnvDecay:\n                    // do not validate because keyNumToSomething\n                    generator = new Generator(generatorTypes.decayModEnv, value, false);\n                    break;\n                case DLSDestinations.modEnvRelease:\n                    generator = new Generator(generatorTypes.releaseModEnv, value);\n                    break;\n                case DLSDestinations.modEnvSustain:\n                    // dls uses 1%, desfont uses 0.1%\n                    const percentageSustain = 1000 - value;\n                    generator = new Generator(generatorTypes.sustainModEnv, percentageSustain);\n                    break;\n                \n                case DLSDestinations.reverbSend:\n                    generator = new Generator(generatorTypes.reverbEffectsSend, value);\n                    break;\n                case DLSDestinations.chorusSend:\n                    generator = new Generator(generatorTypes.chorusEffectsSend, value);\n                    break;\n                case DLSDestinations.pitch:\n                    // split it up\n                    const semi = Math.floor(value / 100);\n                    const cents = Math.floor(value - semi * 100);\n                    generator = new Generator(generatorTypes.fineTune, cents);\n                    generators.push(new Generator(generatorTypes.coarseTune, semi));\n                    break;\n            }\n            if (generator)\n            {\n                generators.push(generator);\n            }\n        }\n        else\n            // if not, modulator?\n        {\n            let isGenerator = true;\n            \n            const applyKeyToCorrection = (value, keyToGen, realGen) =>\n            {\n                // according to viena and another strange (with modulators) rendition of gm.dls in sf2,\n                // it shall be divided by -128\n                // and a strange correction needs to be applied to the real value:\n                // real + (60 / 128) * scale\n                const keyToGenValue = value / -128;\n                generators.push(new Generator(keyToGen, keyToGenValue));\n                // airfont 340 fix\n                if (keyToGenValue <= 120)\n                {\n                    const correction = Math.round((60 / 128) * value);\n                    generators.forEach(g =>\n                    {\n                        if (g.generatorType === realGen)\n                        {\n                            g.generatorValue += correction;\n                        }\n                    });\n                }\n            };\n            \n            // a few special cases which are generators:\n            if (control === DLSSources.none)\n            {\n                // mod lfo to pitch\n                if (source === DLSSources.modLfo && destination === DLSDestinations.pitch)\n                {\n                    generators.push(new Generator(generatorTypes.modLfoToPitch, value));\n                }\n                else\n                    // mod lfo to volume\n                if (source === DLSSources.modLfo && destination === DLSDestinations.gain)\n                {\n                    generators.push(new Generator(generatorTypes.modLfoToVolume, value));\n                }\n                else\n                    // mod lfo to filter\n                if (source === DLSSources.modLfo && destination === DLSDestinations.filterCutoff)\n                {\n                    generators.push(new Generator(generatorTypes.modLfoToFilterFc, value));\n                }\n                else\n                    // vib lfo to pitch\n                if (source === DLSSources.vibratoLfo && destination === DLSDestinations.pitch)\n                {\n                    generators.push(new Generator(generatorTypes.vibLfoToPitch, value));\n                }\n                else\n                    // mod env to pitch\n                if (source === DLSSources.modEnv && destination === DLSDestinations.pitch)\n                {\n                    generators.push(new Generator(generatorTypes.modEnvToPitch, value));\n                }\n                else\n                    // mod env to filter\n                if (source === DLSSources.modEnv && destination === DLSDestinations.filterCutoff)\n                {\n                    generators.push(new Generator(generatorTypes.modEnvToFilterFc, value));\n                }\n                else\n                    // scale tuning (key number to pitch)\n                if (source === DLSSources.keyNum && destination === DLSDestinations.pitch)\n                {\n                    // this is just a soundfont generator, but the amount must be changed\n                    // 12,800 means the regular scale (100)\n                    generators.push(new Generator(generatorTypes.scaleTuning, value / 128));\n                }\n                else\n                    // key to vol env hold\n                if (source === DLSSources.keyNum && destination === DLSDestinations.volEnvHold)\n                {\n                    applyKeyToCorrection(value, generatorTypes.keyNumToVolEnvHold, generatorTypes.holdVolEnv);\n                }\n                else\n                    // key to vol env decay\n                if (source === DLSSources.keyNum && destination === DLSDestinations.volEnvDecay)\n                {\n                    applyKeyToCorrection(value, generatorTypes.keyNumToVolEnvDecay, generatorTypes.decayVolEnv);\n                }\n                else\n                    // key to mod env hold\n                if (source === DLSSources.keyNum && destination === DLSDestinations.modEnvHold)\n                {\n                    applyKeyToCorrection(value, generatorTypes.keyNumToModEnvHold, generatorTypes.holdModEnv);\n                }\n                else\n                    // key to mod env decay\n                if (source === DLSSources.keyNum && destination === DLSDestinations.modEnvDecay)\n                {\n                    applyKeyToCorrection(value, generatorTypes.keyNumToModEnvDecay, generatorTypes.decayModEnv);\n                }\n                else\n                {\n                    isGenerator = false;\n                }\n                \n            }\n            else\n            {\n                isGenerator = false;\n            }\n            if (isGenerator === false)\n            {\n                // UNCOMMENT TO ENABLE DEBUG\n                // modulatorConverterDebug(source, control, destination, value, transform)\n                // convert it to modulator\n                const mod = getSF2ModulatorFromArticulator(\n                    source,\n                    control,\n                    destination,\n                    transform,\n                    value\n                );\n                if (mod)\n                {\n                    // some articulators cannot be turned into modulators, that's why this check is a thing\n                    modulators.push(mod);\n                    SpessaSynthInfo(\"%cSucceeded converting to SF2 Modulator!\", consoleColors.recognized);\n                }\n                else\n                {\n                    SpessaSynthWarn(\"Failed converting to SF2 Modulator!\");\n                }\n            }\n        }\n    }\n    \n    // it seems that dls 1 does not have vibrato lfo, so we shall disable it\n    if (disableVibrato)\n    {\n        modulators.push(\n            // mod to vib\n            Modulator.copy(DLS_1_NO_VIBRATO_MOD),\n            // press to vib\n            Modulator.copy(DLS_1_NO_VIBRATO_PRESSURE)\n        );\n    }\n    \n    return { modulators: modulators, generators: generators };\n}", "import { readRIFFChunk } from \"../basic_soundfont/riff_chunk.js\";\nimport { readArticulation } from \"./read_articulation.js\";\n\n/**\n * @param lartChunk {RiffChunk|undefined}\n * @param lar2Chunk {RiffChunk|undefined}\n * @param zone {BasicZone}\n * @this {DLSSoundFont}\n */\nexport function readLart(lartChunk, lar2Chunk, zone)\n{\n    if (lartChunk)\n    {\n        while (lartChunk.chunkData.currentIndex < lartChunk.chunkData.length)\n        {\n            const art1 = readRIFFChunk(lartChunk.chunkData);\n            this.verifyHeader(art1, \"art1\", \"art2\");\n            const modsAndGens = readArticulation(art1, true);\n            zone.addGenerators(...modsAndGens.generators);\n            zone.addModulators(...modsAndGens.modulators);\n        }\n    }\n    \n    if (lar2Chunk)\n    {\n        while (lar2Chunk.chunkData.currentIndex < lar2Chunk.chunkData.length)\n        {\n            const art2 = readRIFFChunk(lar2Chunk.chunkData);\n            this.verifyHeader(art2, \"art2\", \"art1\");\n            const modsAndGens = readArticulation(art2, false);\n            zone.addGenerators(...modsAndGens.generators);\n            zone.addModulators(...modsAndGens.modulators);\n        }\n    }\n}", "import { BasicSample, sampleTypes } from \"../basic_soundfont/basic_sample.js\";\nimport { SpessaSynthWarn } from \"../../utils/loggin.js\";\nimport { readLittleEndian } from \"../../utils/byte_functions/little_endian.js\";\nimport { IndexedByteArray } from \"../../utils/indexed_array.js\";\n\nconst W_FORMAT_TAG = {\n    PCM: 0x01,\n    ALAW: 0x6\n};\n\n\n/**\n * @param data {IndexedByteArray}\n * @param bytesPerSample {number}\n * @returns {Float32Array}\n */\nfunction readPCM(data, bytesPerSample)\n{\n    const maxSampleValue = Math.pow(2, bytesPerSample * 8 - 1); // Max value for the sample\n    const maxUnsigned = Math.pow(2, bytesPerSample * 8);\n    \n    let normalizationFactor;\n    let isUnsigned = false;\n    \n    if (bytesPerSample === 1)\n    {\n        normalizationFactor = 255; // For 8-bit normalize from 0-255\n        isUnsigned = true;\n    }\n    else\n    {\n        normalizationFactor = maxSampleValue; // For 16-bit normalize from -32,768 to 32,767\n    }\n    const sampleLength = data.length / bytesPerSample;\n    const sampleData = new Float32Array(sampleLength);\n    if (bytesPerSample === 2)\n    {\n        // special optimized case for s16 (most common)\n        const s16 = new Int16Array(data.buffer);\n        for (let i = 0; i < s16.length; i++)\n        {\n            sampleData[i] = s16[i] / 32768;\n        }\n    }\n    else\n    {\n        for (let i = 0; i < sampleData.length; i++)\n        {\n            // read\n            let sample = readLittleEndian(data, bytesPerSample);\n            // turn into signed\n            if (isUnsigned)\n            {\n                // normalize unsigned 8-bit sample\n                sampleData[i] = (sample / normalizationFactor) - 0.5;\n            }\n            else\n            {\n                // normalize signed sample\n                if (sample >= maxSampleValue)\n                {\n                    sample -= maxUnsigned;\n                }\n                sampleData[i] = sample / normalizationFactor;\n            }\n        }\n    }\n    return sampleData;\n}\n\n/**\n * @param data {IndexedByteArray}\n * @param bytesPerSample {number}\n * @returns {Float32Array}\n */\nfunction readALAW(data, bytesPerSample)\n{\n    const sampleLength = data.length / bytesPerSample;\n    const sampleData = new Float32Array(sampleLength);\n    for (let i = 0; i < sampleData.length; i++)\n    {\n        // read\n        const input = readLittleEndian(data, bytesPerSample);\n        \n        // https://en.wikipedia.org/wiki/G.711#A-law\n        // re-toggle toggled bits\n        let sample = input ^ 0x55;\n        \n        // remove sign bit\n        sample &= 0x7F;\n        \n        // extract exponent\n        let exponent = sample >> 4;\n        // extract mantissa\n        let mantissa = sample & 0xF;\n        if (exponent > 0)\n        {\n            mantissa += 16; // add leading '1', if exponent > 0\n        }\n        \n        mantissa = (mantissa << 4) + 0x8;\n        if (exponent > 1)\n        {\n            mantissa = mantissa << (exponent - 1);\n        }\n        \n        const s16sample = input > 127 ? mantissa : -mantissa;\n        \n        // convert to float\n        sampleData[i] = s16sample / 32678;\n    }\n    return sampleData;\n}\n\nexport class DLSSample extends BasicSample\n{\n    /**\n     * in decibels of attenuation, WITHOUT EMU CORRECTION\n     * @type {number}\n     */\n    sampleDbAttenuation;\n    /**\n     * @type {Float32Array}\n     */\n    sampleData;\n    \n    /**\n     * @type {number}\n     */\n    wFormatTag;\n    \n    /**\n     * @type {number}\n     */\n    bytesPerSample;\n    \n    /**\n     * Sample's raw data before decoding it, for faster writing\n     * @type {IndexedByteArray}\n     */\n    rawData;\n    \n    /**\n     * @param name {string}\n     * @param rate {number}\n     * @param pitch {number}\n     * @param pitchCorrection {number}\n     * @param loopStart {number} sample data points\n     * @param loopEnd {number} sample data points\n     * @param sampleDbAttenuation {number} in db\n     * @param dataChunk {RiffChunk}\n     * @param wFormatTag {number}\n     * @param bytesPerSample {number}\n     */\n    constructor(\n        name,\n        rate,\n        pitch,\n        pitchCorrection,\n        loopStart,\n        loopEnd,\n        sampleDbAttenuation,\n        dataChunk,\n        wFormatTag,\n        bytesPerSample\n    )\n    {\n        super(\n            name,\n            rate,\n            pitch,\n            pitchCorrection,\n            sampleTypes.monoSample,\n            loopStart,\n            loopEnd\n        );\n        this.sampleDbAttenuation = sampleDbAttenuation;\n        this.dataOverriden = false;\n        /**\n         * @type {IndexedByteArray}\n         */\n        this.rawData = dataChunk.chunkData;\n        this.wFormatTag = wFormatTag;\n        this.bytesPerSample = bytesPerSample;\n    }\n    \n    getAudioData()\n    {\n        if (!(this.rawData instanceof Uint8Array))\n        {\n            return new Float32Array(0);\n        }\n        if (!this.sampleData)\n        {\n            let sampleData;\n            switch (this.wFormatTag)\n            {\n                default:\n                    SpessaSynthWarn(`Failed to decode sample. Unknown wFormatTag: ${this.wFormatTag}`);\n                    sampleData = new Float32Array(this.rawData.length / this.bytesPerSample);\n                    break;\n                \n                case W_FORMAT_TAG.PCM:\n                    sampleData = readPCM(this.rawData, this.bytesPerSample);\n                    break;\n                \n                case W_FORMAT_TAG.ALAW:\n                    sampleData = readALAW(this.rawData, this.bytesPerSample);\n                    break;\n                \n            }\n            this.setAudioData(sampleData);\n        }\n        return this.sampleData;\n    }\n    \n    /**\n     * @param audioData {Float32Array}\n     */\n    setAudioData(audioData)\n    {\n        super.setAudioData(audioData);\n    }\n    \n    getRawData(allowVorbis)\n    {\n        if (this.dataOverriden || this.isCompressed)\n        {\n            return super.getRawData(allowVorbis);\n        }\n        if (this.wFormatTag === W_FORMAT_TAG.PCM && this.bytesPerSample === 2)\n        {\n            // copy straight away\n            return this.rawData;\n        }\n        return this.encodeS16LE();\n    }\n}", "import { findRIFFListType, readRIFFChunk } from \"../basic_soundfont/riff_chunk.js\";\nimport { readBytesAsString } from \"../../utils/byte_functions/string.js\";\nimport {\n    SpessaSynthGroupCollapsed,\n    SpessaSynthGroupEnd,\n    SpessaSynthInfo,\n    SpessaSynthWarn\n} from \"../../utils/loggin.js\";\nimport { consoleColors } from \"../../utils/other.js\";\nimport { readLittleEndian, signedInt16 } from \"../../utils/byte_functions/little_endian.js\";\nimport { DLSSample } from \"./dls_sample.js\";\n\n\n/**\n * @this {DLSSoundFont}\n * @param waveListChunk {RiffChunk}\n */\nexport function readDLSSamples(waveListChunk)\n{\n    SpessaSynthGroupCollapsed(\n        \"%cLoading Wave samples...\",\n        consoleColors.recognized\n    );\n    let sampleID = 0;\n    while (waveListChunk.chunkData.currentIndex < waveListChunk.chunkData.length)\n    {\n        const waveChunk = readRIFFChunk(waveListChunk.chunkData);\n        this.verifyHeader(waveChunk, \"LIST\");\n        this.verifyText(readBytesAsString(waveChunk.chunkData, 4), \"wave\");\n        \n        /**\n         * @type {RiffChunk[]}\n         */\n        const waveChunks = [];\n        while (waveChunk.chunkData.currentIndex < waveChunk.chunkData.length)\n        {\n            waveChunks.push(readRIFFChunk(waveChunk.chunkData));\n        }\n        \n        const fmtChunk = waveChunks.find(c => c.header === \"fmt \");\n        if (!fmtChunk)\n        {\n            throw new Error(\"No fmt chunk in the wave file!\");\n        }\n        // https://github.com/tpn/winsdk-10/blob/9b69fd26ac0c7d0b83d378dba01080e93349c2ed/Include/10.0.14393.0/shared/mmreg.h#L2108\n        const wFormatTag = readLittleEndian(fmtChunk.chunkData, 2);\n        const channelsAmount = readLittleEndian(fmtChunk.chunkData, 2);\n        if (channelsAmount !== 1)\n        {\n            throw new Error(`Only mono samples are supported. Fmt reports ${channelsAmount} channels`);\n        }\n        const sampleRate = readLittleEndian(fmtChunk.chunkData, 4);\n        // skip avg bytes\n        readLittleEndian(fmtChunk.chunkData, 4);\n        // blockAlign\n        readLittleEndian(fmtChunk.chunkData, 2);\n        // it's bits per sample because one channel\n        const wBitsPerSample = readLittleEndian(fmtChunk.chunkData, 2);\n        const bytesPerSample = wBitsPerSample / 8;\n        \n        const dataChunk = waveChunks.find(c => c.header === \"data\");\n        if (!dataChunk)\n        {\n            this.parsingError(\"No data chunk in the WAVE chunk!\");\n        }\n        \n        // read sample name\n        const waveInfo = findRIFFListType(waveChunks, \"INFO\");\n        let sampleName = `Unnamed ${sampleID}`;\n        if (waveInfo)\n        {\n            let infoChunk = readRIFFChunk(waveInfo.chunkData);\n            while (infoChunk.header !== \"INAM\" && waveInfo.chunkData.currentIndex < waveInfo.chunkData.length)\n            {\n                infoChunk = readRIFFChunk(waveInfo.chunkData);\n            }\n            if (infoChunk.header === \"INAM\")\n            {\n                sampleName = readBytesAsString(infoChunk.chunkData, infoChunk.size).trim();\n            }\n        }\n        \n        // correct defaults\n        let sampleKey = 60;\n        let samplePitch = 0;\n        let sampleLoopStart = 0;\n        const sampleLength = dataChunk.size / bytesPerSample;\n        let sampleLoopEnd = sampleLength - 1;\n        let sampleDbAttenuation = 0;\n        \n        // read wsmp\n        const wsmpChunk = waveChunks.find(c => c.header === \"wsmp\");\n        if (wsmpChunk)\n        {\n            // skip cbsize\n            readLittleEndian(wsmpChunk.chunkData, 4);\n            sampleKey = readLittleEndian(wsmpChunk.chunkData, 2);\n            // section 1.14.2: Each relative pitch unit represents 1/65536 cents.\n            // but that doesn't seem true for this one: it's just cents.\n            samplePitch = signedInt16(\n                wsmpChunk.chunkData[wsmpChunk.chunkData.currentIndex++],\n                wsmpChunk.chunkData[wsmpChunk.chunkData.currentIndex++]\n            );\n            \n            // pitch correction: convert hundreds to the root key\n            const samplePitchSemitones = Math.trunc(samplePitch / 100);\n            sampleKey += samplePitchSemitones;\n            samplePitch -= samplePitchSemitones * 100;\n            \n            \n            // gain is applied it manually here (literally multiplying the samples)\n            const gainCorrection = readLittleEndian(wsmpChunk.chunkData, 4);\n            // convert to signed and turn into decibels\n            sampleDbAttenuation = (gainCorrection | 0) / -655360;\n            // no idea about ful options\n            readLittleEndian(wsmpChunk.chunkData, 4);\n            const loopsAmount = readLittleEndian(wsmpChunk.chunkData, 4);\n            if (loopsAmount === 1)\n            {\n                // skip size and type\n                readLittleEndian(wsmpChunk.chunkData, 8);\n                sampleLoopStart = readLittleEndian(wsmpChunk.chunkData, 4);\n                const loopSize = readLittleEndian(wsmpChunk.chunkData, 4);\n                sampleLoopEnd = sampleLoopStart + loopSize;\n            }\n        }\n        else\n        {\n            SpessaSynthWarn(\"No wsmp chunk in wave... using sane defaults.\");\n        }\n        \n        this.samples.push(new DLSSample(\n            sampleName,\n            sampleRate,\n            sampleKey,\n            samplePitch,\n            sampleLoopStart,\n            sampleLoopEnd,\n            sampleDbAttenuation,\n            dataChunk,\n            wFormatTag,\n            bytesPerSample\n        ));\n        \n        \n        sampleID++;\n        SpessaSynthInfo(\n            `%cLoaded sample %c${sampleName}`,\n            consoleColors.info,\n            consoleColors.recognized\n        );\n    }\n    SpessaSynthGroupEnd();\n}", "import { BasicSoundBank } from \"../basic_soundfont/basic_soundbank.js\";\nimport { IndexedByteArray } from \"../../utils/indexed_array.js\";\nimport { SpessaSynthGroup, SpessaSynthGroupEnd, SpessaSynthInfo } from \"../../utils/loggin.js\";\nimport { consoleColors } from \"../../utils/other.js\";\nimport { findRIFFListType, readRIFFChunk } from \"../basic_soundfont/riff_chunk.js\";\nimport { readBytesAsString } from \"../../utils/byte_functions/string.js\";\nimport { readLittleEndian } from \"../../utils/byte_functions/little_endian.js\";\nimport { readDLSInstrumentList } from \"./read_instrument_list.js\";\nimport { readDLSInstrument } from \"./read_instrument.js\";\nimport { readLart } from \"./read_lart.js\";\nimport { readDLSSamples } from \"./read_samples.js\";\n\nclass DLSSoundFont extends BasicSoundBank\n{\n    /**\n     * Loads a new DLS (Downloadable sounds) soundfont\n     * @param buffer {ArrayBuffer}\n     */\n    constructor(buffer)\n    {\n        super();\n        this.dataArray = new IndexedByteArray(buffer);\n        SpessaSynthGroup(\"%cParsing DLS...\", consoleColors.info);\n        if (!this.dataArray)\n        {\n            SpessaSynthGroupEnd();\n            this.parsingError(\"No data provided!\");\n        }\n        \n        // read the main chunk\n        let firstChunk = readRIFFChunk(this.dataArray, false);\n        this.verifyHeader(firstChunk, \"riff\");\n        this.verifyText(readBytesAsString(this.dataArray, 4).toLowerCase(), \"dls \");\n        \n        /**\n         * Read the list\n         * @type {RiffChunk[]}\n         */\n        const chunks = [];\n        while (this.dataArray.currentIndex < this.dataArray.length)\n        {\n            chunks.push(readRIFFChunk(this.dataArray));\n        }\n        \n        // mandatory\n        this.soundFontInfo[\"ifil\"] = \"2.1\"; // always for dls\n        this.soundFontInfo[\"isng\"] = \"E-mu 10K2\";\n        \n        // set some defaults\n        this.soundFontInfo[\"INAM\"] = \"Unnamed DLS\";\n        this.soundFontInfo[\"IENG\"] = \"Unknown\";\n        this.soundFontInfo[\"IPRD\"] = \"SpessaSynth DLS\";\n        this.soundFontInfo[\"ICRD\"] = new Date().toDateString();\n        \n        // read info\n        const infoChunk = findRIFFListType(chunks, \"INFO\");\n        if (infoChunk)\n        {\n            while (infoChunk.chunkData.currentIndex < infoChunk.chunkData.length)\n            {\n                const infoPart = readRIFFChunk(infoChunk.chunkData);\n                this.soundFontInfo[infoPart.header] = readBytesAsString(infoPart.chunkData, infoPart.size);\n            }\n        }\n        this.soundFontInfo[\"ICMT\"] = this.soundFontInfo[\"ICMT\"] || \"(No description)\";\n        if (this.soundFontInfo[\"ISBJ\"])\n        {\n            // merge it\n            this.soundFontInfo[\"ICMT\"] += \"\\n\" + this.soundFontInfo[\"ISBJ\"];\n            delete this.soundFontInfo[\"ISBJ\"];\n        }\n        this.soundFontInfo[\"ICMT\"] += \"\\nConverted from DLS to SF2 with SpessaSynth\";\n        \n        for (const [info, value] of Object.entries(this.soundFontInfo))\n        {\n            SpessaSynthInfo(\n                `%c\"${info}\": %c\"${value}\"`,\n                consoleColors.info,\n                consoleColors.recognized\n            );\n        }\n        \n        // read \"colh\"\n        let colhChunk = chunks.find(c => c.header === \"colh\");\n        if (!colhChunk)\n        {\n            SpessaSynthGroupEnd();\n            this.parsingError(\"No colh chunk!\");\n        }\n        this.instrumentAmount = readLittleEndian(colhChunk.chunkData, 4);\n        SpessaSynthInfo(\n            `%cInstruments amount: %c${this.instrumentAmount}`,\n            consoleColors.info,\n            consoleColors.recognized\n        );\n        \n        // read the wave list\n        let waveListChunk = findRIFFListType(chunks, \"wvpl\");\n        if (!waveListChunk)\n        {\n            SpessaSynthGroupEnd();\n            this.parsingError(\"No wvpl chunk!\");\n        }\n        this.readDLSSamples(waveListChunk);\n        \n        // read the instrument list\n        let instrumentListChunk = findRIFFListType(chunks, \"lins\");\n        if (!instrumentListChunk)\n        {\n            SpessaSynthGroupEnd();\n            this.parsingError(\"No lins chunk!\");\n        }\n        this.readDLSInstrumentList(instrumentListChunk);\n        \n        // sort presets\n        this.flush();\n        SpessaSynthInfo(\n            `%cParsing finished! %c\"${this.soundFontInfo[\"INAM\"] || \"UNNAMED\"}\"%c has %c${this.presets.length} %cpresets,\n        %c${this.instruments.length}%c instruments and %c${this.samples.length}%c samples.`,\n            consoleColors.info,\n            consoleColors.recognized,\n            consoleColors.info,\n            consoleColors.recognized,\n            consoleColors.info,\n            consoleColors.recognized,\n            consoleColors.info,\n            consoleColors.recognized,\n            consoleColors.info\n        );\n        SpessaSynthGroupEnd();\n    }\n    \n    /**\n     * @param chunk {RiffChunk}\n     * @param expected {string}\n     */\n    verifyHeader(chunk, ...expected)\n    {\n        for (const expect of expected)\n        {\n            if (chunk.header.toLowerCase() === expect.toLowerCase())\n            {\n                return;\n            }\n        }\n        SpessaSynthGroupEnd();\n        this.parsingError(`Invalid DLS chunk header! Expected \"${expected.toString()}\" got \"${chunk.header.toLowerCase()}\"`);\n    }\n    \n    /**\n     * @param text {string}\n     * @param expected {string}\n     */\n    verifyText(text, expected)\n    {\n        if (text.toLowerCase() !== expected.toLowerCase())\n        {\n            SpessaSynthGroupEnd();\n            this.parsingError(`FourCC error: Expected \"${expected.toLowerCase()}\" got \"${text.toLowerCase()}\"`);\n        }\n    }\n    \n    /**\n     * @param error {string}\n     */\n    parsingError(error)\n    {\n        throw new Error(`DLS parse error: ${error} The file may be corrupted.`);\n    }\n    \n    destroySoundBank()\n    {\n        super.destroySoundBank();\n        delete this.dataArray;\n    }\n}\n\nDLSSoundFont.prototype.readDLSInstrumentList = readDLSInstrumentList;\nDLSSoundFont.prototype.readDLSInstrument = readDLSInstrument;\nDLSSoundFont.prototype.readLart = readLart;\nDLSSoundFont.prototype.readDLSSamples = readDLSSamples;\n\nexport { DLSSoundFont };", "import { IndexedByteArray } from \"../../utils/indexed_array.js\";\nimport { RiffChunk } from \"../basic_soundfont/riff_chunk.js\";\nimport { signedInt16 } from \"../../utils/byte_functions/little_endian.js\";\nimport { Generator } from \"../basic_soundfont/generator.js\";\n\n\nexport class ReadGenerator extends Generator\n{\n    /**\n     * Creates a generator\n     * @param dataArray {IndexedByteArray}\n     */\n    constructor(dataArray)\n    {\n        super();\n        // 4 bytes:\n        // type, type, type, value\n        const i = dataArray.currentIndex;\n        /**\n         * @type {generatorTypes|number}\n         */\n        this.generatorType = (dataArray[i + 1] << 8) | dataArray[i];\n        this.generatorValue = signedInt16(dataArray[i + 2], dataArray[i + 3]);\n        dataArray.currentIndex += 4;\n    }\n}\n\n/**\n * Reads the generator read\n * @param generatorChunk {RiffChunk}\n * @returns {Generator[]}\n */\nexport function readGenerators(generatorChunk)\n{\n    let gens = [];\n    while (generatorChunk.chunkData.length > generatorChunk.chunkData.currentIndex)\n    {\n        gens.push(new ReadGenerator(generatorChunk.chunkData));\n    }\n    // remove terminal\n    gens.pop();\n    return gens;\n}", "import { BasicPresetZone } from \"../basic_soundfont/basic_preset_zone.js\";\nimport { Generator } from \"../basic_soundfont/generator.js\";\nimport { Modulator } from \"../basic_soundfont/modulator.js\";\nimport { generatorTypes } from \"../basic_soundfont/generator_types.js\";\n\n/**\n * preset_zones.js\n * purpose: reads preset zones from soundfont and gets their respective samples and generators and modulators\n */\n\nexport class PresetZone extends BasicPresetZone\n{\n    /**\n     * Creates a zone (preset)\n     * @param preset {BasicPreset}\n     */\n    constructor(preset)\n    {\n        super(preset);\n    }\n    \n    /**\n     * grab the instrument\n     * @param instruments {BasicInstrument[]}\n     */\n    getInstrument(instruments)\n    {\n        let instrumentID = this.generators.find(g => g.generatorType === generatorTypes.instrument);\n        if (instrumentID)\n        {\n            this.setInstrument(instruments[instrumentID.generatorValue]);\n        }\n    }\n}\n\n\n/**\n * Reads the given preset zone\n * @param indexes {{mod: number[], gen: number[]}}\n * @param presetGens {Generator[]}\n * @param instruments {BasicInstrument[]}\n * @param presetMods {Modulator[]}\n * @param presets {Preset[]}\n */\nexport function applyPresetZones(indexes, presetGens, presetMods, instruments, presets)\n{\n    const genStartIndexes = indexes.gen;\n    const modStartIndexes = indexes.mod;\n    \n    let modIndex = 0;\n    let genIndex = 0;\n    for (const preset of presets)\n    {\n        for (let i = 0; i < preset.zonesCount; i++)\n        {\n            const gensStart = genStartIndexes[genIndex++];\n            const gensEnd = genStartIndexes[genIndex];\n            const gens = presetGens.slice(gensStart, gensEnd);\n            const modsStart = modStartIndexes[modIndex++];\n            const modsEnd = modStartIndexes[modIndex];\n            const mods = presetMods.slice(modsStart, modsEnd);\n            // check for global zone\n            if (gens.find(g => g.generatorType === generatorTypes.instrument) !== undefined)\n            {\n                // regular zone\n                const zone = preset.createZone();\n                zone.addGenerators(...gens);\n                zone.addModulators(...mods);\n                zone.getInstrument(instruments);\n            }\n            else\n            {\n                // global zone\n                preset.globalZone.addGenerators(...gens);\n                preset.globalZone.addModulators(...mods);\n            }\n        }\n    }\n}", "import { RiffChunk } from \"../basic_soundfont/riff_chunk.js\";\nimport { readLittleEndian } from \"../../utils/byte_functions/little_endian.js\";\nimport { readBytesAsString } from \"../../utils/byte_functions/string.js\";\nimport { BasicPreset } from \"../basic_soundfont/basic_preset.js\";\nimport { PresetZone } from \"./preset_zones.js\";\n\n/**\n * parses soundfont presets, also includes function for getting the generators and samples from midi note and velocity\n */\n\nexport class Preset extends BasicPreset\n{\n    \n    /**\n     * @type {number}\n     */\n    zoneStartIndex;\n    /**\n     * @type {number}\n     */\n    zonesCount = 0;\n    \n    /**\n     * Creates a preset\n     * @param presetChunk {RiffChunk}\n     * @param sf2 {BasicSoundBank}\n     */\n    constructor(presetChunk, sf2)\n    {\n        super(sf2);\n        this.presetName = readBytesAsString(presetChunk.chunkData, 20)\n            .replace(/\\d{3}:\\d{3}/, \"\"); // remove those pesky \"000:001\"\n        \n        this.program = readLittleEndian(presetChunk.chunkData, 2);\n        this.bank = readLittleEndian(presetChunk.chunkData, 2);\n        this.zoneStartIndex = readLittleEndian(presetChunk.chunkData, 2);\n        \n        // read the dword\n        this.library = readLittleEndian(presetChunk.chunkData, 4);\n        this.genre = readLittleEndian(presetChunk.chunkData, 4);\n        this.morphology = readLittleEndian(presetChunk.chunkData, 4);\n    }\n    \n    /**\n     * @returns {PresetZone}\n     */\n    createZone()\n    {\n        const z = new PresetZone(this);\n        this.presetZones.push(z);\n        return z;\n    }\n}\n\n/**\n * Reads the presets\n * @param presetChunk {RiffChunk}\n * @param parent {BasicSoundBank}\n * @returns {Preset[]}\n */\nexport function readPresets(presetChunk, parent)\n{\n    /**\n     * @type {Preset[]}\n     */\n    let presets = [];\n    while (presetChunk.chunkData.length > presetChunk.chunkData.currentIndex)\n    {\n        let preset = new Preset(presetChunk, parent);\n        if (presets.length > 0)\n        {\n            const previous = presets[presets.length - 1];\n            previous.zonesCount = preset.zoneStartIndex - previous.zoneStartIndex;\n        }\n        presets.push(preset);\n    }\n    // remove EOP\n    presets.pop();\n    return presets;\n}", "/**\n * instrument_zones.js\n * purpose: reads instrument zones from soundfont and gets their respective samples and generators and modulators\n */\nimport { BasicInstrumentZone } from \"../basic_soundfont/basic_instrument_zone.js\";\nimport { generatorTypes } from \"../basic_soundfont/generator_types.js\";\n\nexport class InstrumentZone extends BasicInstrumentZone\n{\n    /**\n     * Creates a zone (instrument)\n     * @param inst {Instrument}\n     */\n    constructor(inst)\n    {\n        super(inst);\n    }\n    \n    /**\n     * Loads the zone's sample\n     * @param samples {BasicSample[]}\n     */\n    getSample(samples)\n    {\n        let sampleID = this.generators.find(g => g.generatorType === generatorTypes.sampleID);\n        if (sampleID)\n        {\n            this.setSample(samples[sampleID.generatorValue]);\n        }\n    }\n}\n\n/**\n * Reads the given instrument zone\n * @param indexes {{mod: number[], gen: number[]}}\n * @param instrumentGenerators {Generator[]}\n * @param instrumentModulators {Modulator[]}\n * @param samples {BasicSample[]}\n * @param instruments {Instrument[]}\n */\nexport function applyInstrumentZones(indexes, instrumentGenerators, instrumentModulators, samples, instruments)\n{\n    const genStartIndexes = indexes.gen;\n    const modStartIndexes = indexes.mod;\n    \n    let modIndex = 0;\n    let genIndex = 0;\n    for (const instrument of instruments)\n    {\n        for (let i = 0; i < instrument.zonesCount; i++)\n        {\n            const gensStart = genStartIndexes[genIndex++];\n            const gensEnd = genStartIndexes[genIndex];\n            const gens = instrumentGenerators.slice(gensStart, gensEnd);\n            const modsStart = modStartIndexes[modIndex++];\n            const modsEnd = modStartIndexes[modIndex];\n            const mods = instrumentModulators.slice(modsStart, modsEnd);\n            // check for global zone\n            if (gens.find(g => g.generatorType === generatorTypes.sampleID))\n            {\n                // regular zone\n                const zone = instrument.createZone();\n                zone.addGenerators(...gens);\n                zone.addModulators(...mods);\n                zone.getSample(samples);\n            }\n            else\n            {\n                // global zone\n                instrument.globalZone.addGenerators(...gens);\n                instrument.globalZone.addModulators(...mods);\n            }\n        }\n    }\n}", "import { RiffChunk } from \"../basic_soundfont/riff_chunk.js\";\nimport { readLittleEndian } from \"../../utils/byte_functions/little_endian.js\";\nimport { readBytesAsString } from \"../../utils/byte_functions/string.js\";\nimport { BasicInstrument } from \"../basic_soundfont/basic_instrument.js\";\n\nimport { InstrumentZone } from \"./instrument_zones.js\";\n\n/**\n * instrument.js\n * purpose: parses soundfont instrument and stores them as a class\n */\n\nexport class Instrument extends BasicInstrument\n{\n    /**\n     * @type {number}\n     */\n    zoneStartIndex;\n    /**\n     * @type {number}\n     */\n    zonesCount = 0;\n    \n    /**\n     * Creates an instrument\n     * @param instrumentChunk {RiffChunk}\n     */\n    constructor(instrumentChunk)\n    {\n        super();\n        this.instrumentName = readBytesAsString(instrumentChunk.chunkData, 20);\n        this.zoneStartIndex = readLittleEndian(instrumentChunk.chunkData, 2);\n    }\n    \n    /**\n     * @returns {InstrumentZone}\n     */\n    createZone()\n    {\n        const z = new InstrumentZone(this);\n        this.instrumentZones.push(z);\n        return z;\n    }\n}\n\n/**\n * Reads the instruments\n * @param instrumentChunk {RiffChunk}\n * @returns {Instrument[]}\n */\nexport function readInstruments(instrumentChunk)\n{\n    /**\n     * @type {Instrument[]}\n     */\n    let instruments = [];\n    while (instrumentChunk.chunkData.length > instrumentChunk.chunkData.currentIndex)\n    {\n        let instrument = new Instrument(instrumentChunk);\n        \n        if (instruments.length > 0)\n        {\n            const previous = instruments[instruments.length - 1];\n            previous.zonesCount = instrument.zoneStartIndex - previous.zoneStartIndex;\n        }\n        instruments.push(instrument);\n    }\n    // remove EOI\n    instruments.pop();\n    return instruments;\n}", "import { readLittleEndian, signedInt16 } from \"../../utils/byte_functions/little_endian.js\";\nimport { DecodedModulator, Modulator } from \"../basic_soundfont/modulator.js\";\n\n/**\n * Reads the modulator read\n * @param modulatorChunk {RiffChunk}\n * @returns {Modulator[]}\n */\nexport function readModulators(modulatorChunk)\n{\n    let mods = [];\n    while (modulatorChunk.chunkData.length > modulatorChunk.chunkData.currentIndex)\n    {\n        const dataArray = modulatorChunk.chunkData;\n        const sourceEnum = readLittleEndian(dataArray, 2);\n        const destination = readLittleEndian(dataArray, 2);\n        const amount = signedInt16(dataArray[dataArray.currentIndex++], dataArray[dataArray.currentIndex++]);\n        const secondarySourceEnum = readLittleEndian(dataArray, 2);\n        const transformType = readLittleEndian(dataArray, 2);\n        mods.push(new DecodedModulator(sourceEnum, secondarySourceEnum, destination, amount, transformType));\n    }\n    // remove terminal\n    mods.pop();\n    return mods;\n}", "import { readLittleEndian } from \"../../utils/byte_functions/little_endian.js\";\n\n/**\n *\n * @param zonesChunk {RiffChunk} both pbag and ibag work\n * @returns {{mod: number[], gen: number[]}}\n */\nexport function readZoneIndexes(zonesChunk)\n{\n    /**\n     * @type {number[]}\n     */\n    const modStartIndexes = [];\n    /**\n     * @type {number[]}\n     */\n    const genStartIndexes = [];\n    \n    while (zonesChunk.chunkData.length > zonesChunk.chunkData.currentIndex)\n    {\n        genStartIndexes.push(readLittleEndian(zonesChunk.chunkData, 2));\n        modStartIndexes.push(readLittleEndian(zonesChunk.chunkData, 2));\n    }\n    return {\n        mod: modStartIndexes,\n        gen: genStartIndexes\n    };\n}", "import { IndexedByteArray } from \"../../utils/indexed_array.js\";\nimport { readSamples } from \"./samples.js\";\nimport { readLittleEndian } from \"../../utils/byte_functions/little_endian.js\";\nimport { readGenerators } from \"./generators.js\";\nimport { applyPresetZones } from \"./preset_zones.js\";\nimport { readPresets } from \"./presets.js\";\nimport { readInstruments } from \"./instruments.js\";\nimport { readModulators } from \"./modulators.js\";\nimport { readRIFFChunk, RiffChunk } from \"../basic_soundfont/riff_chunk.js\";\nimport { consoleColors } from \"../../utils/other.js\";\nimport { SpessaSynthGroup, SpessaSynthGroupEnd, SpessaSynthInfo } from \"../../utils/loggin.js\";\nimport { readBytesAsString } from \"../../utils/byte_functions/string.js\";\nimport { stbvorbis } from \"../../externals/stbvorbis_sync/stbvorbis_sync.min.js\";\nimport { BasicSoundBank } from \"../basic_soundfont/basic_soundbank.js\";\nimport { Generator } from \"../basic_soundfont/generator.js\";\nimport { Modulator } from \"../basic_soundfont/modulator.js\";\nimport { applyInstrumentZones, InstrumentZone } from \"./instrument_zones.js\";\nimport { readZoneIndexes } from \"./zones.js\";\n\n/**\n * soundfont.js\n * purpose: parses a soundfont2 file\n */\n\nexport class SoundFont2 extends BasicSoundBank\n{\n    /**\n     * @type {Instrument[]}\n     */\n    instruments = [];\n    \n    /**\n     * @type {Preset[]}\n     */\n    presets = [];\n    \n    /**\n     * Initializes a new SoundFont2 Parser and parses the given data array\n     * @param arrayBuffer {ArrayBuffer}\n     * @param warnDeprecated {boolean}\n     */\n    constructor(arrayBuffer, warnDeprecated = true)\n    {\n        super();\n        if (warnDeprecated)\n        {\n            console.warn(\"Using the constructor directly is deprecated. Use loadSoundFont instead.\");\n        }\n        const mainFileArray = new IndexedByteArray(arrayBuffer);\n        SpessaSynthGroup(\"%cParsing SoundFont...\", consoleColors.info);\n        if (!mainFileArray)\n        {\n            SpessaSynthGroupEnd();\n            this.parsingError(\"No data provided!\");\n        }\n        \n        // read the main chunk\n        let firstChunk = readRIFFChunk(mainFileArray, false);\n        this.verifyHeader(firstChunk, \"riff\");\n        \n        const type = readBytesAsString(mainFileArray, 4).toLowerCase();\n        if (type !== \"sfbk\" && type !== \"sfpk\")\n        {\n            SpessaSynthGroupEnd();\n            throw new SyntaxError(`Invalid soundFont! Expected \"sfbk\" or \"sfpk\" got \"${type}\"`);\n        }\n        /*\n        Some SF2Pack description:\n        this is essentially sf2, but the entire smpl chunk is compressed (we only support Ogg Vorbis here)\n        and the only other difference is that the main chunk isn't \"sfbk\" but rather \"sfpk\"\n         */\n        const isSF2Pack = type === \"sfpk\";\n        \n        // INFO\n        let infoChunk = readRIFFChunk(mainFileArray);\n        this.verifyHeader(infoChunk, \"list\");\n        const infoString = readBytesAsString(infoChunk.chunkData, 4);\n        if (infoString !== \"INFO\")\n        {\n            SpessaSynthGroupEnd();\n            throw new SyntaxError(`Invalid soundFont! Expected \"INFO\" or \"${infoString}\"`);\n        }\n        \n        /**\n         * @type {RiffChunk|undefined}\n         */\n        let xdtaChunk = undefined;\n        \n        \n        while (infoChunk.chunkData.length > infoChunk.chunkData.currentIndex)\n        {\n            let chunk = readRIFFChunk(infoChunk.chunkData);\n            let text;\n            // special cases\n            switch (chunk.header.toLowerCase())\n            {\n                case  \"ifil\":\n                case \"iver\":\n                    text = `${readLittleEndian(chunk.chunkData, 2)}.${readLittleEndian(chunk.chunkData, 2)}`;\n                    this.soundFontInfo[chunk.header] = text;\n                    break;\n                \n                case \"icmt\":\n                    text = readBytesAsString(chunk.chunkData, chunk.chunkData.length, false);\n                    this.soundFontInfo[chunk.header] = text;\n                    break;\n                \n                // dmod: default modulators\n                case \"dmod\":\n                    const newModulators = readModulators(chunk);\n                    text = `Modulators: ${newModulators.length}`;\n                    \n                    // override default modulators\n                    this.defaultModulators = newModulators;\n                    this.customDefaultModulators = true;\n                    this.soundFontInfo[chunk.header] = text;\n                    break;\n                \n                case \"list\":\n                    // possible xdta\n                    const listType = readBytesAsString(chunk.chunkData, 4);\n                    if (listType === \"xdta\")\n                    {\n                        SpessaSynthInfo(\"%cExtended SF2 found!\", consoleColors.recognized);\n                        xdtaChunk = chunk;\n                    }\n                    break;\n                \n                default:\n                    text = readBytesAsString(chunk.chunkData, chunk.chunkData.length);\n                    this.soundFontInfo[chunk.header] = text;\n            }\n            \n            SpessaSynthInfo(\n                `%c\"${chunk.header}\": %c\"${text}\"`,\n                consoleColors.info,\n                consoleColors.recognized\n            );\n        }\n        // https://github.com/spessasus/soundfont-proposals/blob/main/extended_limits.md\n        const isExtended = xdtaChunk !== undefined;\n        /**\n         * @type {{\n         *     phdr: RiffChunk,\n         *     pbag: RiffChunk,\n         *     pmod: RiffChunk,\n         *     pgen: RiffChunk,\n         *     inst: RiffChunk,\n         *     ibag: RiffChunk,\n         *     imod: RiffChunk,\n         *     igen: RiffChunk,\n         *     shdr: RiffChunk,\n         * }}\n         */\n        let xChunks = {};\n        if (isExtended)\n        {\n            // read the hydra chunks\n            xChunks.phdr = readRIFFChunk(xdtaChunk.chunkData);\n            xChunks.pbag = readRIFFChunk(xdtaChunk.chunkData);\n            xChunks.pmod = readRIFFChunk(xdtaChunk.chunkData);\n            xChunks.pgen = readRIFFChunk(xdtaChunk.chunkData);\n            xChunks.inst = readRIFFChunk(xdtaChunk.chunkData);\n            xChunks.ibag = readRIFFChunk(xdtaChunk.chunkData);\n            xChunks.imod = readRIFFChunk(xdtaChunk.chunkData);\n            xChunks.igen = readRIFFChunk(xdtaChunk.chunkData);\n            xChunks.shdr = readRIFFChunk(xdtaChunk.chunkData);\n        }\n        \n        // SDTA\n        const sdtaChunk = readRIFFChunk(mainFileArray, false);\n        this.verifyHeader(sdtaChunk, \"list\");\n        this.verifyText(readBytesAsString(mainFileArray, 4), \"sdta\");\n        \n        // smpl\n        SpessaSynthInfo(\"%cVerifying smpl chunk...\", consoleColors.warn);\n        let sampleDataChunk = readRIFFChunk(mainFileArray, false);\n        this.verifyHeader(sampleDataChunk, \"smpl\");\n        /**\n         * @type {IndexedByteArray|Float32Array}\n         */\n        let sampleData;\n        // SF2Pack: the entire data is compressed\n        if (isSF2Pack)\n        {\n            SpessaSynthInfo(\n                \"%cSF2Pack detected, attempting to decode the smpl chunk...\",\n                consoleColors.info\n            );\n            try\n            {\n                /**\n                 * @type {Float32Array}\n                 */\n                sampleData = stbvorbis.decode(mainFileArray.buffer.slice(\n                    mainFileArray.currentIndex,\n                    mainFileArray.currentIndex + sdtaChunk.size - 12\n                )).data[0];\n            }\n            catch (e)\n            {\n                SpessaSynthGroupEnd();\n                throw new Error(`SF2Pack Ogg Vorbis decode error: ${e}`);\n            }\n            SpessaSynthInfo(\n                `%cDecoded the smpl chunk! Length: %c${sampleData.length}`,\n                consoleColors.info,\n                consoleColors.value\n            );\n        }\n        else\n        {\n            /**\n             * @type {IndexedByteArray}\n             */\n            sampleData = mainFileArray;\n            this.sampleDataStartIndex = mainFileArray.currentIndex;\n        }\n        \n        SpessaSynthInfo(\n            `%cSkipping sample chunk, length: %c${sdtaChunk.size - 12}`,\n            consoleColors.info,\n            consoleColors.value\n        );\n        mainFileArray.currentIndex += sdtaChunk.size - 12;\n        \n        // PDTA\n        SpessaSynthInfo(\"%cLoading preset data chunk...\", consoleColors.warn);\n        let presetChunk = readRIFFChunk(mainFileArray);\n        this.verifyHeader(presetChunk, \"list\");\n        readBytesAsString(presetChunk.chunkData, 4);\n        \n        // read the hydra chunks\n        const phdrChunk = readRIFFChunk(presetChunk.chunkData);\n        this.verifyHeader(phdrChunk, \"phdr\");\n        \n        const pbagChunk = readRIFFChunk(presetChunk.chunkData);\n        this.verifyHeader(pbagChunk, \"pbag\");\n        \n        const pmodChunk = readRIFFChunk(presetChunk.chunkData);\n        this.verifyHeader(pmodChunk, \"pmod\");\n        \n        const pgenChunk = readRIFFChunk(presetChunk.chunkData);\n        this.verifyHeader(pgenChunk, \"pgen\");\n        \n        const instChunk = readRIFFChunk(presetChunk.chunkData);\n        this.verifyHeader(instChunk, \"inst\");\n        \n        const ibagChunk = readRIFFChunk(presetChunk.chunkData);\n        this.verifyHeader(ibagChunk, \"ibag\");\n        \n        const imodChunk = readRIFFChunk(presetChunk.chunkData);\n        this.verifyHeader(imodChunk, \"imod\");\n        \n        const igenChunk = readRIFFChunk(presetChunk.chunkData);\n        this.verifyHeader(igenChunk, \"igen\");\n        \n        const shdrChunk = readRIFFChunk(presetChunk.chunkData);\n        this.verifyHeader(shdrChunk, \"shdr\");\n        \n        /**\n         * read all the samples\n         * (the current index points to start of the smpl read)\n         */\n        mainFileArray.currentIndex = this.sampleDataStartIndex;\n        const samples = readSamples(shdrChunk, sampleData, !isExtended);\n        \n        if (isExtended)\n        {\n            // apply extensions to samples\n            const xSamples = readSamples(xChunks.shdr, new Float32Array(1), false);\n            if (xSamples.length === samples.length)\n            {\n                samples.forEach((s, i) =>\n                {\n                    s.sampleName += xSamples[i].sampleName;\n                    s.linkedSampleIndex |= xSamples[i].linkedSampleIndex << 16;\n                });\n            }\n            \n        }\n        // trim names\n        samples.forEach(s => s.sampleName = s.sampleName.trim());\n        this.samples.push(...samples);\n        \n        /**\n         * read all the instrument generators\n         * @type {Generator[]}\n         */\n        let instrumentGenerators = readGenerators(igenChunk);\n        \n        /**\n         * read all the instrument modulators\n         * @type {Modulator[]}\n         */\n        let instrumentModulators = readModulators(imodChunk);\n        \n        const instruments = readInstruments(instChunk);\n        \n        if (isExtended)\n        {\n            // apply extensions to instruments\n            const xInst = readInstruments(xChunks.inst);\n            if (xInst.length === instruments.length)\n            {\n                instruments.forEach((inst, i) =>\n                {\n                    inst.instrumentName += xInst[i].instrumentName;\n                    inst.zoneStartIndex |= xInst[i].zoneStartIndex;\n                });\n                // adjust zone counts\n                instruments.forEach((inst, i) =>\n                {\n                    if (i < instruments.length - 1)\n                    {\n                        inst.zonesCount = instruments[i + 1].zoneStartIndex - inst.zoneStartIndex;\n                    }\n                });\n            }\n            \n        }\n        // trim names\n        instruments.forEach(i => i.instrumentName = i.instrumentName.trim());\n        this.instruments.push(...instruments);\n        \n        const ibagIndexes = readZoneIndexes(ibagChunk);\n        \n        if (isExtended)\n        {\n            const extraIndexes = readZoneIndexes(xChunks.ibag);\n            for (let i = 0; i < ibagIndexes.mod.length; i++)\n            {\n                ibagIndexes.mod[i] |= extraIndexes.mod[i] << 16;\n            }\n            for (let i = 0; i < ibagIndexes.gen.length; i++)\n            {\n                ibagIndexes.gen[i] |= extraIndexes.gen[i] << 16;\n            }\n        }\n        \n        /**\n         * read all the instrument zones (and apply them)\n         * @type {InstrumentZone[]}\n         */\n        applyInstrumentZones(\n            ibagIndexes,\n            instrumentGenerators,\n            instrumentModulators,\n            this.samples,\n            this.instruments\n        );\n        \n        /**\n         * read all the preset generators\n         * @type {Generator[]}\n         */\n        let presetGenerators = readGenerators(pgenChunk);\n        \n        /**\n         * Read all the preset modulatorrs\n         * @type {Modulator[]}\n         */\n        let presetModulators = readModulators(pmodChunk);\n        \n        const presets = readPresets(phdrChunk, this);\n        \n        if (isExtended)\n        {\n            // apply extensions to presets\n            const xPreset = readPresets(xChunks.phdr, this);\n            if (xPreset.length === presets.length)\n            {\n                presets.forEach((pres, i) =>\n                {\n                    pres.presetName += xPreset[i].presetName;\n                    pres.zoneStartIndex |= xPreset[i].zoneStartIndex;\n                });\n                // adjust zone counts\n                presets.forEach((preset, i) =>\n                {\n                    if (i < presets.length - 1)\n                    {\n                        preset.zonesCount = presets[i + 1].zoneStartIndex - preset.zoneStartIndex;\n                    }\n                });\n            }\n            \n        }\n        \n        // trim names\n        presets.forEach(p => p.presetName === p.presetName.trim());\n        this.addPresets(...presets);\n        \n        const pbagIndexes = readZoneIndexes(pbagChunk);\n        \n        if (isExtended)\n        {\n            const extraIndexes = readZoneIndexes(xChunks.pbag);\n            for (let i = 0; i < pbagIndexes.mod.length; i++)\n            {\n                pbagIndexes.mod[i] |= extraIndexes.mod[i] << 16;\n            }\n            for (let i = 0; i < pbagIndexes.gen.length; i++)\n            {\n                pbagIndexes.gen[i] |= extraIndexes.gen[i] << 16;\n            }\n        }\n        \n        applyPresetZones(pbagIndexes, presetGenerators, presetModulators, this.instruments, this.presets);\n        this.flush();\n        SpessaSynthInfo(\n            `%cParsing finished! %c\"${this.soundFontInfo[\"INAM\"]}\"%c has %c${this.presets.length} %cpresets,\n        %c${this.instruments.length}%c instruments and %c${this.samples.length}%c samples.`,\n            consoleColors.info,\n            consoleColors.recognized,\n            consoleColors.info,\n            consoleColors.recognized,\n            consoleColors.info,\n            consoleColors.recognized,\n            consoleColors.info,\n            consoleColors.recognized,\n            consoleColors.info\n        );\n        SpessaSynthGroupEnd();\n    }\n    \n    /**\n     * @param chunk {RiffChunk}\n     * @param expected {string}\n     */\n    verifyHeader(chunk, expected)\n    {\n        if (chunk.header.toLowerCase() !== expected.toLowerCase())\n        {\n            SpessaSynthGroupEnd();\n            this.parsingError(`Invalid chunk header! Expected \"${expected.toLowerCase()}\" got \"${chunk.header.toLowerCase()}\"`);\n        }\n    }\n    \n    /**\n     * @param text {string}\n     * @param expected {string}\n     */\n    verifyText(text, expected)\n    {\n        if (text.toLowerCase() !== expected.toLowerCase())\n        {\n            SpessaSynthGroupEnd();\n            this.parsingError(`Invalid FourCC: Expected \"${expected.toLowerCase()}\" got \"${text.toLowerCase()}\"\\``);\n        }\n    }\n}", "import { IndexedByteArray } from \"../utils/indexed_array.js\";\nimport { readBytesAsString } from \"../utils/byte_functions/string.js\";\nimport { DLSSoundFont } from \"./dls/dls_soundfont.js\";\nimport { SoundFont2 } from \"./read_sf2/soundfont.js\";\n\n/**\n * Loads a soundfont or dls file\n * @param buffer {ArrayBuffer} the binary file to load\n * @returns {BasicSoundBank}\n */\nexport function loadSoundFont(buffer)\n{\n    const check = buffer.slice(8, 12);\n    const a = new IndexedByteArray(check);\n    const id = readBytesAsString(a, 4, false).toLowerCase();\n    if (id === \"dls \")\n    {\n        return new DLSSoundFont(buffer);\n    }\n    return new SoundFont2(buffer, false);\n}", "import { loadSoundFont } from \"../../../../soundfont/load_soundfont.js\";\nimport { SpessaSynthInfo } from \"../../../../utils/loggin.js\";\nimport { consoleColors } from \"../../../../utils/other.js\";\nimport { EMBEDDED_SOUND_BANK_ID } from \"../../../synth_constants.js\";\n\n/**\n * @this {SpessaSynthProcessor}\n */\nexport function clearEmbeddedBank()\n{\n    if (this.soundfontManager.soundfontList.some(s => s.id === EMBEDDED_SOUND_BANK_ID))\n    {\n        this.soundfontManager.deleteSoundFont(EMBEDDED_SOUND_BANK_ID);\n    }\n}\n\n/**\n * Sets the embedded (RMI soundfont)\n * @param font {ArrayBuffer}\n * @param offset {number}\n * @this {SpessaSynthProcessor}\n */\nexport function setEmbeddedSoundFont(font, offset)\n{\n    // the embedded bank is set as the first bank in the manager,\n    // with a special ID that does not clear when reloadManager is performed.\n    const loadedFont = loadSoundFont(font);\n    this.soundfontManager.addNewSoundFont(loadedFont, EMBEDDED_SOUND_BANK_ID, offset);\n    // rearrange so the embedded is first (most important as it overrides all others)\n    const order = this.soundfontManager.getCurrentSoundFontOrder();\n    order.pop();\n    order.unshift(EMBEDDED_SOUND_BANK_ID);\n    this.soundfontManager.rearrangeSoundFonts(order);\n    \n    \n    // apply snapshot again if applicable\n    if (this._snapshot !== undefined)\n    {\n        this.applySynthesizerSnapshot(this._snapshot);\n    }\n    SpessaSynthInfo(`%cEmbedded sound bank set at offset %c${offset}`, consoleColors.recognized, consoleColors.value);\n}", "/**\n * @this {SpessaSynthProcessor}\n */\nexport function updatePresetList()\n{\n    /**\n     * @type {{bank: number, presetName: string, program: number}[]}\n     */\n    const mainFont = this.soundfontManager.getPresetList();\n    this.clearCache();\n    this.callEvent(\"presetlistchange\", mainFont);\n    this.getDefaultPresets();\n    // unlock presets\n    this.midiAudioChannels.forEach(c =>\n    {\n        c.setPresetLock(false);\n    });\n    this.resetAllControllers(false);\n}", "/**\n * Transposes all channels by given amount of semitones\n * @this {SpessaSynthProcessor}\n * @param semitones {number} Can be float\n * @param force {boolean} defaults to false, if true transposes the channel even if it's a drum channel\n */\nexport function transposeAllChannels(semitones, force = false)\n{\n    this.transposition = 0;\n    for (let i = 0; i < this.midiAudioChannels.length; i++)\n    {\n        this.midiAudioChannels[i].transposeChannel(semitones, force);\n    }\n    this.transposition = semitones;\n}", "import { customControllers } from \"../../engine_components/controller_tables.js\";\n\n/**\n * Sets the synth's primary tuning\n * @this {SpessaSynthProcessor}\n * @param cents {number}\n */\nexport function setMasterTuning(cents)\n{\n    cents = Math.round(cents);\n    for (let i = 0; i < this.midiAudioChannels.length; i++)\n    {\n        this.midiAudioChannels[i].setCustomController(customControllers.masterTuning, cents);\n    }\n}", "/**\n * Represents a snapshot of a single channel's state in the synthesizer.\n */\nexport class ChannelSnapshot\n{\n    /**\n     * The channel's MIDI program number.\n     * @type {number}\n     */\n    program;\n    \n    /**\n     * The channel's bank number.\n     * @type {number}\n     */\n    bank;\n    \n    /**\n     * If the bank is LSB. For restoring.\n     * @type {boolean}\n     */\n    isBankLSB;\n    \n    /**\n     * The name of the patch currently loaded in the channel.\n     * @type {string}\n     */\n    patchName;\n    \n    /**\n     * Indicates whether the channel's program change is disabled.\n     * @type {boolean}\n     */\n    lockPreset;\n    \n    /**\n     * Indicates the MIDI system when the preset was locked\n     * @type {SynthSystem}\n     */\n    lockedSystem;\n    \n    /**\n     * The array of all MIDI controllers (in 14-bit values) with the modulator sources at the end.\n     * @type {Int16Array}\n     */\n    midiControllers;\n    \n    /**\n     * An array of booleans, indicating if the controller with a current index is locked.\n     * @type {boolean[]}\n     */\n    lockedControllers;\n    \n    /**\n     * Array of custom (not SF2) control values such as RPN pitch tuning, transpose, modulation depth, etc.\n     * @type {Float32Array}\n     */\n    customControllers;\n    \n    /**\n     * Indicates whether the channel vibrato is locked.\n     * @type {boolean}\n     */\n    lockVibrato;\n    \n    /**\n     * The channel's vibrato settings.\n     * @type {Object}\n     * @property {number} depth - Vibrato depth, in gain.\n     * @property {number} delay - Vibrato delay from note on in seconds.\n     * @property {number} rate - Vibrato rate in Hz.\n     */\n    channelVibrato;\n    \n    /**\n     * Key shift for the channel.\n     * @type {number}\n     */\n    channelTransposeKeyShift;\n    \n    /**\n     * The channel's octave tuning in cents.\n     * @type {Int8Array}\n     */\n    channelOctaveTuning;\n    \n    /**\n     * Indicates whether the channel is muted.\n     * @type {boolean}\n     */\n    isMuted;\n    \n    /**\n     * Overrides velocity if greater than 0, otherwise disabled.\n     * @type {number}\n     */\n    velocityOverride;\n    \n    /**\n     * Indicates whether the channel is a drum channel.\n     * @type {boolean}\n     */\n    drumChannel;\n    \n    /**\n     * Creates a snapshot of a single channel's state in the synthesizer.\n     * @param spessaSynthProcessor {SpessaSynthProcessor}\n     * @param channelNumber {number}\n     * @returns {ChannelSnapshot}\n     */\n    static getChannelSnapshot(spessaSynthProcessor, channelNumber)\n    {\n        const channelObject = spessaSynthProcessor.midiAudioChannels[channelNumber];\n        const channelSnapshot = new ChannelSnapshot();\n        // program data\n        channelSnapshot.program = channelObject.preset.program;\n        channelSnapshot.bank = channelObject.getBankSelect();\n        channelSnapshot.isBankLSB = channelSnapshot.bank !== channelObject.bank;\n        channelSnapshot.lockPreset = channelObject.lockPreset;\n        channelSnapshot.lockedSystem = channelObject.lockedSystem;\n        channelSnapshot.patchName = channelObject.preset.presetName;\n        \n        // controller data\n        channelSnapshot.midiControllers = channelObject.midiControllers;\n        channelSnapshot.lockedControllers = channelObject.lockedControllers;\n        channelSnapshot.customControllers = channelObject.customControllers;\n        \n        // vibrato data\n        channelSnapshot.channelVibrato = channelObject.channelVibrato;\n        channelSnapshot.lockVibrato = channelObject.lockGSNRPNParams;\n        \n        // tuning and transpose data\n        channelSnapshot.channelTransposeKeyShift = channelObject.channelTransposeKeyShift;\n        channelSnapshot.channelOctaveTuning = channelObject.channelOctaveTuning;\n        \n        // other data\n        channelSnapshot.isMuted = channelObject.isMuted;\n        channelSnapshot.velocityOverride = channelObject.velocityOverride;\n        channelSnapshot.drumChannel = channelObject.drumChannel;\n        return channelSnapshot;\n    }\n    \n    /**\n     * Applies the snapshot to the specified channel.\n     * @param spessaSynthProcessor {SpessaSynthProcessor}\n     * @param channelNumber {number}\n     * @param channelSnapshot {ChannelSnapshot}\n     */\n    static applyChannelSnapshot(spessaSynthProcessor, channelNumber, channelSnapshot)\n    {\n        const channelObject = spessaSynthProcessor.midiAudioChannels[channelNumber];\n        channelObject.muteChannel(channelSnapshot.isMuted);\n        channelObject.setDrums(channelSnapshot.drumChannel);\n        \n        // restore controllers\n        channelObject.midiControllers = channelSnapshot.midiControllers;\n        channelObject.lockedControllers = channelSnapshot.lockedControllers;\n        channelObject.customControllers = channelSnapshot.customControllers;\n        channelObject.updateChannelTuning();\n        \n        // restore vibrato and transpose\n        channelObject.channelVibrato = channelSnapshot.channelVibrato;\n        channelObject.lockGSNRPNParams = channelSnapshot.lockVibrato;\n        channelObject.channelTransposeKeyShift = channelSnapshot.channelTransposeKeyShift;\n        channelObject.channelOctaveTuning = channelSnapshot.channelOctaveTuning;\n        channelObject.velocityOverride = channelSnapshot.velocityOverride;\n        \n        // restore preset and lock\n        channelObject.setPresetLock(false);\n        channelObject.setBankSelect(channelSnapshot.bank, channelSnapshot.isBankLSB);\n        channelObject.programChange(channelSnapshot.program);\n        channelObject.setPresetLock(channelSnapshot.lockPreset);\n        channelObject.lockedSystem = channelSnapshot.lockedSystem;\n    }\n}", "import { SpessaSynthInfo } from \"../../../utils/loggin.js\";\nimport { consoleColors } from \"../../../utils/other.js\";\nimport { ChannelSnapshot } from \"./channel_snapshot.js\";\nimport { masterParameterType } from \"../engine_methods/controller_control/master_parameters.js\";\n\n/**\n * Represents a snapshot of the synthesizer's state.\n */\nexport class SynthesizerSnapshot\n{\n    /**\n     * The individual channel snapshots.\n     * @type {ChannelSnapshot[]}\n     */\n    channelSnapshots;\n    \n    /**\n     * Key modifiers.\n     * @type {KeyModifier[][]}\n     */\n    keyMappings;\n    \n    /**\n     * Main synth volume (set by MIDI), from 0 to 1.\n     * @type {number}\n     */\n    mainVolume;\n    \n    /**\n     * Master stereo panning, from -1 to 1.\n     * @type {number}\n     */\n    pan;\n    \n    /**\n     * The synth's interpolation type.\n     * @type {interpolationTypes}\n     */\n    interpolation;\n    \n    /**\n     * The synth's system. Values can be \"gs\", \"gm\", \"gm2\" or \"xg\".\n     * @type {SynthSystem}\n     */\n    system;\n    \n    /**\n     * The current synth transposition in semitones. Can be a float.\n     * @type {number}\n     */\n    transposition;\n    \n    \n    /**\n     * Creates a snapshot of the synthesizer's state.\n     * @param spessaSynthProcessor {SpessaSynthProcessor}\n     * @returns {SynthesizerSnapshot}\n     */\n    static createSynthesizerSnapshot(spessaSynthProcessor)\n    {\n        const snapshot = new SynthesizerSnapshot();\n        // channel snapshots\n        snapshot.channelSnapshots =\n            spessaSynthProcessor.midiAudioChannels.map((_, i) =>\n                ChannelSnapshot.getChannelSnapshot(spessaSynthProcessor, i));\n        \n        // key mappings\n        snapshot.keyMappings = spessaSynthProcessor.keyModifierManager.getMappings();\n        // pan and volume\n        snapshot.mainVolume = spessaSynthProcessor.midiVolume;\n        snapshot.pan = spessaSynthProcessor.pan;\n        \n        // others\n        snapshot.system = spessaSynthProcessor.system;\n        snapshot.interpolation = spessaSynthProcessor.interpolationType;\n        snapshot.transposition = spessaSynthProcessor.transposition;\n        \n        // effect config is stored on the main thread, leave it empty\n        snapshot.effectsConfig = {};\n        return snapshot;\n        \n    }\n    \n    /**\n     * Applies the snapshot to the synthesizer.\n     * @param spessaSynthProcessor {SpessaSynthProcessor}\n     * @param snapshot {SynthesizerSnapshot}\n     */\n    static applySnapshot(spessaSynthProcessor, snapshot)\n    {\n        // restore system\n        spessaSynthProcessor.setSystem(snapshot.system);\n        \n        // restore pan and volume\n        spessaSynthProcessor.setMasterParameter(masterParameterType.mainVolume, snapshot.mainVolume);\n        spessaSynthProcessor.setMasterParameter(masterParameterType.masterPan, snapshot.pan);\n        spessaSynthProcessor.transposeAllChannels(snapshot.transposition);\n        spessaSynthProcessor.interpolationType = snapshot.interpolation;\n        spessaSynthProcessor.keyModifierManager.setMappings(snapshot.keyMappings);\n        \n        // add channels if more needed\n        while (spessaSynthProcessor.midiAudioChannels.length < snapshot.channelSnapshots.length)\n        {\n            spessaSynthProcessor.createMidiChannel();\n        }\n        \n        // restore channels\n        snapshot.channelSnapshots.forEach((channelSnapshot, index) =>\n        {\n            ChannelSnapshot.applyChannelSnapshot(spessaSynthProcessor, index, channelSnapshot);\n        });\n        \n        SpessaSynthInfo(\"%cFinished restoring controllers!\", consoleColors.info);\n    }\n}\n\n", "import { SpessaSynthInfo } from \"../../../utils/loggin.js\";\nimport { consoleColors } from \"../../../utils/other.js\";\nimport { SynthesizerSnapshot } from \"./synthesizer_snapshot.js\";\n\n/**\n * Applies the snapshot to the synth\n * @param snapshot {SynthesizerSnapshot}\n * @this {SpessaSynthProcessor}\n */\nexport function applySynthesizerSnapshot(snapshot)\n{\n    this._snapshot = snapshot;\n    SynthesizerSnapshot.applySnapshot(this, snapshot);\n    SpessaSynthInfo(\"%cFinished applying snapshot!\", consoleColors.info);\n    this.resetAllControllers();\n}", "/**\n * lfo.js\n * purpose: low frequency triangel oscillator\n */\n\n/**\n * Calculates a triangular wave value for the given time\n * @param startTime {number} seconds\n * @param frequency {number} Hz\n * @param currentTime {number} seconds\n * @return {number} the value from -1 to 1\n */\nexport function getLFOValue(startTime, frequency, currentTime)\n{\n    if (currentTime < startTime)\n    {\n        return 0;\n    }\n    \n    const xVal = (currentTime - startTime) / (1 / frequency) + 0.25;\n    // offset by -0.25, otherwise we start at -1 and can have unexpected jump in pitch or low-pass\n    // (happened with Synth Strings 2)\n    \n    // triangle, not sine\n    return Math.abs(xVal - (~~(xVal + 0.5))) * 4 - 1;\n}\n", "import { interpolationTypes } from \"./enums.js\";\n\n/**\n * wavetable_oscillator.js\n * purpose: plays back raw audio data at an arbitrary playback rate\n */\n\n\nexport class WavetableOscillator\n{\n    /**\n     * Fills the output buffer with raw sample data using a given interpolation\n     * @param voice {Voice} the voice we're working on\n     * @param outputBuffer {Float32Array} the output buffer to write to\n     * @param interpolation {interpolationTypes} the interpolation type\n     */\n    static getSample(voice, outputBuffer, interpolation)\n    {\n        const step = voice.currentTuningCalculated * voice.sample.playbackStep;\n        // why not?\n        if (step === 1)\n        {\n            WavetableOscillator.getSampleNearest(voice, outputBuffer, step);\n            return;\n        }\n        switch (interpolation)\n        {\n            case interpolationTypes.fourthOrder:\n                this.getSampleHermite(voice, outputBuffer, step);\n                return;\n            \n            case interpolationTypes.linear:\n            default:\n                this.getSampleLinear(voice, outputBuffer, step);\n                return;\n            \n            case interpolationTypes.nearestNeighbor:\n                WavetableOscillator.getSampleNearest(voice, outputBuffer, step);\n                return;\n        }\n    }\n    \n    /**\n     * Fills the output buffer with raw sample data using linear interpolation\n     * @param voice {Voice} the voice we're working on\n     * @param outputBuffer {Float32Array} the output buffer to write to\n     * @param step {number} the step to advance every sample\n     */\n    static getSampleLinear(voice, outputBuffer, step)\n    {\n        const sample = voice.sample;\n        let cur = sample.cursor;\n        const sampleData = sample.sampleData;\n        \n        if (sample.isLooping)\n        {\n            const loopLength = sample.loopEnd - sample.loopStart;\n            for (let i = 0; i < outputBuffer.length; i++)\n            {\n                // check for loop\n                while (cur >= sample.loopEnd)\n                {\n                    cur -= loopLength;\n                }\n                \n                // grab the 2 nearest points\n                const floor = ~~cur;\n                let ceil = floor + 1;\n                \n                while (ceil >= sample.loopEnd)\n                {\n                    ceil -= loopLength;\n                }\n                \n                const fraction = cur - floor;\n                \n                // grab the samples and interpolate\n                const upper = sampleData[ceil];\n                const lower = sampleData[floor];\n                outputBuffer[i] = (lower + (upper - lower) * fraction);\n                \n                cur += step;\n            }\n        }\n        else\n        {\n            for (let i = 0; i < outputBuffer.length; i++)\n            {\n                \n                // linear interpolation\n                const floor = ~~cur;\n                const ceil = floor + 1;\n                \n                // flag the voice as finished if needed\n                if (ceil >= sample.end)\n                {\n                    voice.finished = true;\n                    return;\n                }\n                \n                const fraction = cur - floor;\n                \n                // grab the samples and interpolate\n                const upper = sampleData[ceil];\n                const lower = sampleData[floor];\n                outputBuffer[i] = (lower + (upper - lower) * fraction);\n                \n                cur += step;\n            }\n        }\n        voice.sample.cursor = cur;\n    }\n    \n    /**\n     * Fills the output buffer with raw sample data using no interpolation (nearest neighbor)\n     * @param voice {Voice} the voice we're working on\n     * @param outputBuffer {Float32Array} the output buffer to write to\n     * @param step {number} the step to advance every sample\n     */\n    static getSampleNearest(voice, outputBuffer, step)\n    {\n        const sample = voice.sample;\n        let cur = sample.cursor;\n        const sampleData = sample.sampleData;\n        \n        if (sample.isLooping)\n        {\n            const loopLength = sample.loopEnd - sample.loopStart;\n            for (let i = 0; i < outputBuffer.length; i++)\n            {\n                // check for loop\n                while (cur >= sample.loopEnd)\n                {\n                    cur -= loopLength;\n                }\n                \n                // grab the nearest neighbor\n                let ceil = ~~cur + 1;\n                \n                while (ceil >= sample.loopEnd)\n                {\n                    ceil -= loopLength;\n                }\n                \n                outputBuffer[i] = sampleData[ceil];\n                cur += step;\n            }\n        }\n        else\n        {\n            for (let i = 0; i < outputBuffer.length; i++)\n            {\n                \n                // nearest neighbor\n                const ceil = ~~cur + 1;\n                \n                // flag the voice as finished if needed\n                if (ceil >= sample.end)\n                {\n                    voice.finished = true;\n                    return;\n                }\n                \n                outputBuffer[i] = sampleData[ceil];\n                cur += step;\n            }\n        }\n        sample.cursor = cur;\n    }\n    \n    \n    /**\n     * Fills the output buffer with raw sample data using Hermite interpolation\n     * @param voice {Voice} the voice we're working on\n     * @param outputBuffer {Float32Array} the output buffer to write to\n     * @param step {number} the step to advance every sample\n     */\n    static getSampleHermite(voice, outputBuffer, step)\n    {\n        const sample = voice.sample;\n        let cur = sample.cursor;\n        const sampleData = sample.sampleData;\n        \n        if (sample.isLooping)\n        {\n            const loopLength = sample.loopEnd - sample.loopStart;\n            for (let i = 0; i < outputBuffer.length; i++)\n            {\n                // check for loop (it can exceed the end point multiple times)\n                while (cur >= sample.loopEnd)\n                {\n                    cur -= loopLength;\n                }\n                \n                // grab the 4 points\n                const y0 = ~~cur;   // point before the cursor. twice bitwise-not is just a faster Math.floor\n                let y1 = y0 + 1;    // point after the cursor\n                let y2 = y0 + 2;    // point 1 after the cursor\n                let y3 = y0 + 3;    // point 2 after the cursor\n                const t = cur - y0; // the distance from y0 to cursor [0;1]\n                // y0 is not handled here\n                // as it's math.floor of cur which is handled above\n                if (y1 >= sample.loopEnd)\n                {\n                    y1 -= loopLength;\n                }\n                if (y2 >= sample.loopEnd)\n                {\n                    y2 -= loopLength;\n                }\n                if (y3 >= sample.loopEnd)\n                {\n                    y3 -= loopLength;\n                }\n                \n                // grab the samples\n                const xm1 = sampleData[y0];\n                const x0 = sampleData[y1];\n                const x1 = sampleData[y2];\n                const x2 = sampleData[y3];\n                \n                // interpolate\n                // https://www.musicdsp.org/en/latest/Other/93-hermite-interpollation.html\n                const c = (x1 - xm1) * 0.5;\n                const v = x0 - x1;\n                const w = c + v;\n                const a = w + v + (x2 - x0) * 0.5;\n                const b = w + a;\n                outputBuffer[i] = ((((a * t) - b) * t + c) * t + x0);\n                \n                cur += step;\n            }\n        }\n        else\n        {\n            for (let i = 0; i < outputBuffer.length; i++)\n            {\n                // grab the 4 points\n                const y0 = ~~cur;   // point before the cursor. twice bitwise-not is just a faster Math.floor\n                let y1 = y0 + 1;    // point after the cursor\n                let y2 = y0 + 2;    // point 1 after the cursor\n                let y3 = y0 + 3;    // point 2 after the cursor\n                const t = cur - y0; // the distance from y0 to cursor [0;1]\n                \n                // flag as finished if needed\n                if (y1 >= sample.end ||\n                    y2 >= sample.end ||\n                    y3 >= sample.end)\n                {\n                    voice.finished = true;\n                    return;\n                }\n                \n                // grab the samples\n                const xm1 = sampleData[y0];\n                const x0 = sampleData[y1];\n                const x1 = sampleData[y2];\n                const x2 = sampleData[y3];\n                \n                // interpolate\n                // https://www.musicdsp.org/en/latest/Other/93-hermite-interpollation.html\n                const c = (x1 - xm1) * 0.5;\n                const v = x0 - x1;\n                const w = c + v;\n                const a = w + v + (x2 - x0) * 0.5;\n                const b = w + a;\n                outputBuffer[i] = ((((a * t) - b) * t + c) * t + x0);\n                \n                cur += step;\n            }\n        }\n        voice.sample.cursor = cur;\n    }\n}", "import { VolumeEnvelope } from \"../engine_components/volume_envelope.js\";\nimport { ModulationEnvelope } from \"../engine_components/modulation_envelope.js\";\nimport { customControllers } from \"../engine_components/controller_tables.js\";\nimport { absCentsToHz, timecentsToSeconds } from \"../engine_components/unit_converter.js\";\nimport { getLFOValue } from \"../engine_components/lfo.js\";\nimport { WavetableOscillator } from \"../engine_components/wavetable_oscillator.js\";\nimport { LowpassFilter } from \"../engine_components/lowpass_filter.js\";\nimport { generatorTypes } from \"../../../soundfont/basic_soundfont/generator_types.js\";\n\n/**\n * Renders a voice to the stereo output buffer\n * @param voice {Voice} the voice to render\n * @param timeNow {number} current time in seconds\n * @param outputLeft {Float32Array} the left output buffer\n * @param outputRight {Float32Array} the right output buffer\n * @param reverbOutputLeft {Float32Array} left output for reverb\n * @param reverbOutputRight {Float32Array} right output for reverb\n * @param chorusOutputLeft {Float32Array} left output for chorus\n * @param chorusOutputRight {Float32Array} right output for chorus\n * @param startIndex {number}\n * @param sampleCount {number}\n * @this {MidiAudioChannel}\n * @returns {boolean} true if the voice is finished\n */\nexport function renderVoice(\n    voice, timeNow,\n    outputLeft, outputRight,\n    reverbOutputLeft, reverbOutputRight,\n    chorusOutputLeft, chorusOutputRight,\n    startIndex, sampleCount\n)\n{\n    // check if release\n    if (!voice.isInRelease)\n    {\n        // if not in release, check if the release time is\n        if (timeNow >= voice.releaseStartTime)\n        {\n            // release the voice here\n            voice.isInRelease = true;\n            VolumeEnvelope.startRelease(voice);\n            ModulationEnvelope.startRelease(voice);\n            if (voice.sample.loopingMode === 3)\n            {\n                voice.sample.isLooping = false;\n            }\n        }\n    }\n    \n    \n    // if the initial attenuation is more than 100dB, skip the voice (it's silent anyway)\n    if (voice.modulatedGenerators[generatorTypes.initialAttenuation] > 2500)\n    {\n        if (voice.isInRelease)\n        {\n            voice.finished = true;\n        }\n        return voice.finished;\n    }\n    \n    // TUNING\n    let targetKey = voice.targetKey;\n    \n    // calculate tuning\n    let cents = voice.modulatedGenerators[generatorTypes.fineTune]         // soundfont fine tune\n        + this.channelOctaveTuning[voice.midiNote]                         // MTS octave tuning\n        + this.channelTuningCents;                                         // channel tuning\n    let semitones = voice.modulatedGenerators[generatorTypes.coarseTune];  // soundfont coarse tuning\n    \n    // midi tuning standard\n    const tuning = this.synth.tunings[this.preset?.program]?.[voice.realKey];\n    if (tuning !== undefined && tuning?.midiNote >= 0)\n    {\n        // override key\n        targetKey = tuning.midiNote;\n        // add micro-tonal tuning\n        cents += tuning.centTuning;\n    }\n    \n    // portamento\n    if (voice.portamentoFromKey > -1)\n    {\n        // 0 to 1\n        const elapsed = Math.min((timeNow - voice.startTime) / voice.portamentoDuration, 1);\n        const diff = targetKey - voice.portamentoFromKey;\n        // zero progress means the pitch being in fromKey, full progress means the normal pitch\n        semitones -= diff * (1 - elapsed);\n    }\n    \n    // calculate tuning by key using soundfont's scale tuning\n    cents += (targetKey - voice.sample.rootKey) * voice.modulatedGenerators[generatorTypes.scaleTuning];\n    \n    // low pass excursion with LFO and mod envelope\n    let lowpassExcursion = 0;\n    let volumeExcursionCentibels = 0;\n    \n    // vibrato LFO\n    const vibPitchDepth = voice.modulatedGenerators[generatorTypes.vibLfoToPitch];\n    const vibVolDepth = voice.modulatedGenerators[generatorTypes.vibLfoToVolume];\n    const vibFilterDepth = voice.modulatedGenerators[generatorTypes.vibLfoToFilterFc];\n    if (vibPitchDepth !== 0 || vibVolDepth !== 0 || vibFilterDepth !== 0)\n    {\n        // calculate start time and lfo value\n        const vibStart = voice.startTime + timecentsToSeconds(voice.modulatedGenerators[generatorTypes.delayVibLFO]);\n        const vibFreqHz = absCentsToHz(voice.modulatedGenerators[generatorTypes.freqVibLFO]);\n        const vibLfoValue = getLFOValue(vibStart, vibFreqHz, timeNow);\n        // use modulation multiplier (RPN modulation depth)\n        cents += vibLfoValue * (vibPitchDepth * this.customControllers[customControllers.modulationMultiplier]);\n        // vol env volume offset\n        // negate the lfo value because audigy starts with increase rather than decrease\n        volumeExcursionCentibels += -vibLfoValue * vibVolDepth;\n        // low pass frequency\n        lowpassExcursion += vibLfoValue * vibFilterDepth;\n    }\n    \n    // mod LFO\n    const modPitchDepth = voice.modulatedGenerators[generatorTypes.modLfoToPitch];\n    const modVolDepth = voice.modulatedGenerators[generatorTypes.modLfoToVolume];\n    const modFilterDepth = voice.modulatedGenerators[generatorTypes.modLfoToFilterFc];\n    // don't compute mod lfo unless necessary\n    if (modPitchDepth !== 0 || modFilterDepth !== 0 || modVolDepth !== 0)\n    {\n        // calculate start time and lfo value\n        const modStart = voice.startTime + timecentsToSeconds(voice.modulatedGenerators[generatorTypes.delayModLFO]);\n        const modFreqHz = absCentsToHz(voice.modulatedGenerators[generatorTypes.freqModLFO]);\n        const modLfoValue = getLFOValue(modStart, modFreqHz, timeNow);\n        // use modulation multiplier (RPN modulation depth)\n        cents += modLfoValue * (modPitchDepth * this.customControllers[customControllers.modulationMultiplier]);\n        // vol env volume offset\n        // negate the lfo value because audigy starts with increase rather than decrease\n        volumeExcursionCentibels += -modLfoValue * modVolDepth;\n        // low pass frequency\n        lowpassExcursion += modLfoValue * modFilterDepth;\n    }\n    \n    // channel vibrato (GS NRPN)\n    if (this.channelVibrato.depth > 0)\n    {\n        // same as others\n        const channelVibrato = getLFOValue(\n            voice.startTime + this.channelVibrato.delay,\n            this.channelVibrato.rate,\n            timeNow\n        );\n        if (channelVibrato)\n        {\n            cents += channelVibrato * this.channelVibrato.depth;\n        }\n    }\n    \n    // mod env\n    const modEnvPitchDepth = voice.modulatedGenerators[generatorTypes.modEnvToPitch];\n    const modEnvFilterDepth = voice.modulatedGenerators[generatorTypes.modEnvToFilterFc];\n    // don't compute mod env unless necessary\n    if (modEnvFilterDepth !== 0 || modEnvPitchDepth !== 0)\n    {\n        const modEnv = ModulationEnvelope.getValue(voice, timeNow);\n        // apply values\n        lowpassExcursion += modEnv * modEnvFilterDepth;\n        cents += modEnv * modEnvPitchDepth;\n    }\n    \n    // default resonant modulator: it does not affect the filter gain (neither XG nor GS did that)\n    volumeExcursionCentibels -= voice.resonanceOffset;\n    \n    // finally, calculate the playback rate\n    const centsTotal = ~~(cents + semitones * 100);\n    if (centsTotal !== voice.currentTuningCents)\n    {\n        voice.currentTuningCents = centsTotal;\n        voice.currentTuningCalculated = Math.pow(2, centsTotal / 1200);\n    }\n    \n    \n    // SYNTHESIS\n    const bufferOut = new Float32Array(sampleCount);\n    \n    \n    // looping mode 2: start on release. process only volEnv\n    if (voice.sample.loopingMode === 2 && !voice.isInRelease)\n    {\n        VolumeEnvelope.apply(\n            voice,\n            bufferOut,\n            volumeExcursionCentibels,\n            this.synth.volumeEnvelopeSmoothingFactor\n        );\n        return voice.finished;\n    }\n    \n    // wave table oscillator\n    WavetableOscillator.getSample(voice, bufferOut, this.synth.interpolationType);\n    \n    // low pass filter\n    LowpassFilter.apply(voice, bufferOut, lowpassExcursion, this.synth.filterSmoothingFactor);\n    \n    // vol env\n    VolumeEnvelope.apply(\n        voice,\n        bufferOut,\n        volumeExcursionCentibels,\n        this.synth.volumeEnvelopeSmoothingFactor\n    );\n    \n    this.panAndMixVoice(\n        voice,\n        bufferOut,\n        outputLeft, outputRight,\n        reverbOutputLeft, reverbOutputRight,\n        chorusOutputLeft, chorusOutputRight,\n        startIndex\n    );\n    return voice.finished;\n}", "import { customControllers } from \"../../engine_components/controller_tables.js\";\nimport { generatorTypes } from \"../../../../soundfont/basic_soundfont/generator_types.js\";\n\n/**\n * Stops a note nearly instantly\n * @param midiNote {number}\n * @param releaseTime {number} ticks\n * @this {MidiAudioChannel}\n */\nexport function killNote(midiNote, releaseTime = -12000)\n{\n    midiNote += this.customControllers[customControllers.channelKeyShift];\n    \n    this.voices.forEach(v =>\n    {\n        if (v.realKey !== midiNote)\n        {\n            return;\n        }\n        v.modulatedGenerators[generatorTypes.releaseVolEnv] = releaseTime; // set release to be very short\n        v.release(this.synth.currentSynthTime);\n    });\n}", "import { customControllers } from \"../../engine_components/controller_tables.js\";\nimport { SpessaSynthInfo } from \"../../../../utils/loggin.js\";\nimport { consoleColors } from \"../../../../utils/other.js\";\n\n/**\n * Sets the channel's tuning\n * @this {MidiAudioChannel}\n * @param cents {number}\n * @param log {boolean}\n */\nexport function setTuning(cents, log = true)\n{\n    cents = Math.round(cents);\n    this.setCustomController(customControllers.channelTuning, cents);\n    if (!log)\n    {\n        return;\n    }\n    SpessaSynthInfo(\n        `%cFine tuning for %c${this.channelNumber}%c is now set to %c${cents}%c cents.`,\n        consoleColors.info,\n        consoleColors.recognized,\n        consoleColors.info,\n        consoleColors.value,\n        consoleColors.info\n    );\n}", "import { SpessaSynthInfo } from \"../../../../utils/loggin.js\";\nimport { consoleColors } from \"../../../../utils/other.js\";\nimport { customControllers } from \"../../engine_components/controller_tables.js\";\n\n/**\n * @this {MidiAudioChannel}\n * @param cents {number}\n */\nexport function setModulationDepth(cents)\n{\n    cents = Math.round(cents);\n    SpessaSynthInfo(\n        `%cChannel ${this.channelNumber} modulation depth. Cents: %c${cents}`,\n        consoleColors.info,\n        consoleColors.value\n    );\n    /* ==============\n        IMPORTANT\n        here we convert cents into a multiplier.\n        midi spec assumes the default is 50 cents,\n        but it might be different for the soundfont,\n        so we create a multiplier by dividing cents by 50.\n        for example, if we want 100 cents, then multiplier will be 2,\n        which for a preset with depth of 50 will create 100.\n     ================ */\n    this.setCustomController(customControllers.modulationMultiplier, cents / 50);\n}", "import { customControllers, dataEntryStates, NON_CC_INDEX_OFFSET } from \"../../engine_components/controller_tables.js\";\nimport { SpessaSynthInfo, SpessaSynthWarn } from \"../../../../utils/loggin.js\";\nimport { consoleColors } from \"../../../../utils/other.js\";\nimport { midiControllers } from \"../../../../midi/midi_message.js\";\nimport { modulatorSources } from \"../../../../soundfont/basic_soundfont/modulator.js\";\n\n\n/**\n * @enum {number}\n */\nexport const registeredParameterTypes = {\n    pitchBendRange: 0x0000,\n    fineTuning: 0x0001,\n    coarseTuning: 0x0002,\n    modulationDepth: 0x0005,\n    resetParameters: 0x3FFF\n};\n\n/**\n * @enum {number}\n */\nexport const nonRegisteredMSB = {\n    partParameter: 0x01,\n    awe32: 0x7F,\n    SF2: 120\n};\n\n/**\n * https://cdn.roland.com/assets/media/pdf/SC-88PRO_OM.pdf\n * http://hummer.stanford.edu/sig/doc/classes/MidiOutput/rpn.html\n * @enum {number}\n */\nconst nonRegisteredGSLSB = {\n    vibratoRate: 0x08,\n    vibratoDepth: 0x09,\n    vibratoDelay: 0x0A,\n    \n    TVFFilterCutoff: 0x20,\n    TVFFilterResonance: 0x21,\n    \n    EGAttackTime: 0x63,\n    EGReleaseTime: 0x66\n    \n};\n\n\n/**\n * Executes a data entry for an NRP for a sc88pro NRP (because touhou yes) and RPN tuning\n * @param dataValue {number} dataEntryCoarse MSB\n * @this {MidiAudioChannel}\n * @private\n */\nexport function dataEntryCoarse(dataValue)\n{\n    // store in cc table\n    this.midiControllers[midiControllers.dataEntryMsb] = dataValue << 7;\n    /*\n    A note on this vibrato.\n    This is a completely custom vibrato, with its own oscillator and parameters.\n    It is disabled by default,\n    only being enabled when one of the NPRN messages changing it is received\n    and stays on until the next system-reset.\n     */\n    const addDefaultVibrato = () =>\n    {\n        if (this.channelVibrato.delay === 0 && this.channelVibrato.rate === 0 && this.channelVibrato.depth === 0)\n        {\n            this.channelVibrato.depth = 50;\n            this.channelVibrato.rate = 8;\n            this.channelVibrato.delay = 0.6;\n        }\n    };\n    \n    const coolInfo = (what, value, type) =>\n    {\n        if (type.length > 0)\n        {\n            type = \" \" + type;\n        }\n        SpessaSynthInfo(\n            `%c${what} for %c${this.channelNumber}%c is now set to %c${value}%c${type}.`,\n            consoleColors.info,\n            consoleColors.recognized,\n            consoleColors.info,\n            consoleColors.value,\n            consoleColors.info\n        );\n    };\n    switch (this.dataEntryState)\n    {\n        default:\n        case dataEntryStates.Idle:\n            break;\n        \n        // process GS NRPNs\n        case dataEntryStates.NRPFine:\n            if (this.lockGSNRPNParams)\n            {\n                return;\n            }\n            /**\n             * @type {number}\n             */\n            const NRPNCoarse = this.midiControllers[midiControllers.NRPNMsb] >> 7;\n            /**\n             * @type {number}\n             */\n            const NRPNFine = this.midiControllers[midiControllers.NRPNLsb] >> 7;\n            const dataEntryFine = this.midiControllers[midiControllers.lsbForControl6DataEntry] >> 7;\n            switch (NRPNCoarse)\n            {\n                default:\n                    if (dataValue === 64)\n                    {\n                        // default value\n                        return;\n                    }\n                    SpessaSynthWarn(\n                        `%cUnrecognized NRPN for %c${this.channelNumber}%c: %c(0x${NRPNFine.toString(16)\n                            .toUpperCase()} 0x${NRPNFine.toString(\n                            16).toUpperCase()})%c data value: %c${dataValue}`,\n                        consoleColors.warn,\n                        consoleColors.recognized,\n                        consoleColors.warn,\n                        consoleColors.unrecognized,\n                        consoleColors.warn,\n                        consoleColors.value\n                    );\n                    break;\n                \n                // part parameters: vibrato, cutoff\n                case nonRegisteredMSB.partParameter:\n                    switch (NRPNFine)\n                    {\n                        default:\n                            if (dataValue === 64)\n                            {\n                                // default value\n                                return;\n                            }\n                            SpessaSynthWarn(\n                                `%cUnrecognized NRPN for %c${this.channelNumber}%c: %c(0x${NRPNCoarse.toString(16)} 0x${NRPNFine.toString(\n                                    16)})%c data value: %c${dataValue}`,\n                                consoleColors.warn,\n                                consoleColors.recognized,\n                                consoleColors.warn,\n                                consoleColors.unrecognized,\n                                consoleColors.warn,\n                                consoleColors.value\n                            );\n                            break;\n                        \n                        // vibrato rate\n                        case nonRegisteredGSLSB.vibratoRate:\n                            if (dataValue === 64)\n                            {\n                                return;\n                            }\n                            addDefaultVibrato();\n                            this.channelVibrato.rate = (dataValue / 64) * 8;\n                            coolInfo(\"Vibrato rate\", `${dataValue} = ${this.channelVibrato.rate}`, \"Hz\");\n                            break;\n                        \n                        // vibrato depth\n                        case nonRegisteredGSLSB.vibratoDepth:\n                            if (dataValue === 64)\n                            {\n                                return;\n                            }\n                            addDefaultVibrato();\n                            this.channelVibrato.depth = dataValue / 2;\n                            coolInfo(\"Vibrato depth\", `${dataValue} = ${this.channelVibrato.depth}`, \"cents of detune\");\n                            break;\n                        \n                        // vibrato delay\n                        case nonRegisteredGSLSB.vibratoDelay:\n                            if (dataValue === 64)\n                            {\n                                return;\n                            }\n                            addDefaultVibrato();\n                            this.channelVibrato.delay = (dataValue / 64) / 3;\n                            coolInfo(\"Vibrato delay\", `${dataValue} = ${this.channelVibrato.delay}`, \"seconds\");\n                            break;\n                        \n                        // filter cutoff\n                        case nonRegisteredGSLSB.TVFFilterCutoff:\n                            // affect the \"brightness\" controller as we have a default modulator that controls it\n                            this.controllerChange(midiControllers.brightness, dataValue);\n                            coolInfo(\"Filter cutoff\", dataValue.toString(), \"\");\n                            break;\n                        \n                        // attack time\n                        case nonRegisteredGSLSB.EGAttackTime:\n                            // affect the \"attack time\" controller as we have a default modulator that controls it\n                            this.controllerChange(midiControllers.attackTime, dataValue);\n                            coolInfo(\"EG attack time\", dataValue.toString(), \"\");\n                            break;\n                        \n                        // release time\n                        case nonRegisteredGSLSB.EGReleaseTime:\n                            // affect the \"release time\" controller as we have a default modulator that controls it\n                            this.controllerChange(midiControllers.releaseTime, dataValue);\n                            coolInfo(\"EG release time\", dataValue.toString(), \"\");\n                            break;\n                    }\n                    break;\n                \n                case nonRegisteredMSB.awe32:\n                    break;\n                \n                // SF2 NRPN\n                case nonRegisteredMSB.SF2:\n                    if (NRPNFine > 100)\n                    {\n                        // sfspec:\n                        // Note that NRPN Select LSB greater than 100 are for setup only, and should not be used on their own to select a\n                        // generator parameter.\n                        break;\n                    }\n                    const gen = this.customControllers[customControllers.sf2NPRNGeneratorLSB];\n                    const offset = (dataValue << 7 | dataEntryFine) - 8192;\n                    this.setGeneratorOffset(gen, offset);\n                    break;\n            }\n            break;\n        \n        case dataEntryStates.RPCoarse:\n        case dataEntryStates.RPFine:\n            /**\n             * @type {number}\n             */\n            const rpnValue = this.midiControllers[midiControllers.RPNMsb] | (this.midiControllers[midiControllers.RPNLsb] >> 7);\n            switch (rpnValue)\n            {\n                default:\n                    SpessaSynthWarn(\n                        `%cUnrecognized RPN for %c${this.channelNumber}%c: %c(0x${rpnValue.toString(16)})%c data value: %c${dataValue}`,\n                        consoleColors.warn,\n                        consoleColors.recognized,\n                        consoleColors.warn,\n                        consoleColors.unrecognized,\n                        consoleColors.warn,\n                        consoleColors.value\n                    );\n                    break;\n                \n                // pitch bend range\n                case registeredParameterTypes.pitchBendRange:\n                    this.midiControllers[NON_CC_INDEX_OFFSET + modulatorSources.pitchWheelRange] = dataValue << 7;\n                    coolInfo(\"Pitch bend range\", dataValue.toString(), \"semitones\");\n                    break;\n                \n                // coarse tuning\n                case registeredParameterTypes.coarseTuning:\n                    // semitones\n                    const semitones = dataValue - 64;\n                    this.setCustomController(customControllers.channelTuningSemitones, semitones);\n                    coolInfo(\"Coarse tuning\", semitones.toString(), \"semitones\");\n                    break;\n                \n                // fine-tuning\n                case registeredParameterTypes.fineTuning:\n                    // note: this will not work properly unless the lsb is sent!\n                    // here we store the raw value to then adjust in fine\n                    this.setTuning(dataValue - 64, false);\n                    break;\n                \n                // modulation depth\n                case registeredParameterTypes.modulationDepth:\n                    this.setModulationDepth(dataValue * 100);\n                    break;\n                \n                case registeredParameterTypes.resetParameters:\n                    this.resetParameters();\n                    break;\n                \n            }\n        \n    }\n}", "import { SpessaSynthWarn } from \"../../../../utils/loggin.js\";\nimport { consoleColors } from \"../../../../utils/other.js\";\nimport { generatorTypes } from \"../../../../soundfont/basic_soundfont/generator_types.js\";\n\n/**\n * http://archive.gamedev.net/archive/reference/articles/article445.html\n * https://github.com/user-attachments/files/15757220/adip301.pdf\n * @type {generatorTypes[]}\n */\nconst AWE_NRPN_GENERATOR_MAPPINGS = [\n    generatorTypes.delayModLFO,\n    generatorTypes.freqModLFO,\n    \n    generatorTypes.delayVibLFO,\n    generatorTypes.freqVibLFO,\n    \n    generatorTypes.delayModEnv,\n    generatorTypes.attackModEnv,\n    generatorTypes.holdModEnv,\n    generatorTypes.decayModEnv,\n    generatorTypes.sustainModEnv,\n    generatorTypes.releaseModEnv,\n    \n    generatorTypes.delayVolEnv,\n    generatorTypes.attackVolEnv,\n    generatorTypes.holdVolEnv,\n    generatorTypes.decayVolEnv,\n    generatorTypes.sustainVolEnv,\n    generatorTypes.releaseVolEnv,\n    \n    generatorTypes.fineTune,\n    \n    generatorTypes.modLfoToPitch,\n    generatorTypes.vibLfoToPitch,\n    generatorTypes.modEnvToPitch,\n    generatorTypes.modLfoToVolume,\n    \n    generatorTypes.initialFilterFc,\n    generatorTypes.initialFilterQ,\n    \n    generatorTypes.modLfoToFilterFc,\n    generatorTypes.modEnvToFilterFc,\n    \n    generatorTypes.chorusEffectsSend,\n    generatorTypes.reverbEffectsSend\n];\n\n/**\n * Function that emulates AWE32 similarly to fluidsynth\n * https://github.com/FluidSynth/fluidsynth/wiki/FluidFeatures\n *\n * Note: This makes use of findings by mrbumpy409:\n * https://github.com/fluidSynth/fluidsynth/issues/1473\n *\n * The excellent test files are available here, also collected and converted by mrbumpy409:\n * https://github.com/mrbumpy409/AWE32-midi-conversions\n * @this {MidiAudioChannel}\n * @param aweGen {number}\n * @param dataLSB {number}\n * @param dataMSB {number}\n */\nexport function handleAWE32NRPN(aweGen, dataLSB, dataMSB)\n{\n    const clip = (v, min, max) => Math.max(min, Math.min(max, v));\n    const msecToTimecents = ms => Math.max(-32768, 1200 * Math.log2(ms / 1000));\n    const hzToCents = hz => 6900 + 1200 * Math.log2(hz / 440);\n    \n    \n    let dataValue = (dataMSB << 7) | dataLSB;\n    // center the value\n    // though ranges reported as 0 to 127 only use LSB\n    dataValue -= 8192;\n    const generator = AWE_NRPN_GENERATOR_MAPPINGS[aweGen];\n    if (!generator)\n    {\n        SpessaSynthWarn(\n            `Invalid AWE32 LSB: %c${aweGen}`,\n            consoleColors.unrecognized\n        );\n    }\n    let milliseconds, hertz, centibels, cents;\n    switch (generator)\n    {\n        default:\n            // this should not happen\n            break;\n        \n        // delays\n        case generatorTypes.delayModLFO:\n        case generatorTypes.delayVibLFO:\n        case generatorTypes.delayVolEnv:\n        case generatorTypes.delayModEnv:\n            milliseconds = 4 * clip(dataValue, 0, 5900);\n            // convert to timecents\n            this.setGeneratorOverride(generator, msecToTimecents(milliseconds));\n            break;\n        \n        // attacks\n        case generatorTypes.attackVolEnv:\n        case generatorTypes.attackModEnv:\n            milliseconds = clip(dataValue, 0, 5940);\n            // convert to timecents\n            this.setGeneratorOverride(generator, msecToTimecents(milliseconds));\n            break;\n        \n        // holds\n        case generatorTypes.holdVolEnv:\n        case generatorTypes.holdModEnv:\n            milliseconds = clip(dataValue, 0, 8191);\n            // convert to timecents\n            this.setGeneratorOverride(generator, msecToTimecents(milliseconds));\n            break;\n        \n        // decays and releases (share clips and units)\n        case generatorTypes.decayModEnv:\n        case generatorTypes.decayVolEnv:\n        case generatorTypes.releaseVolEnv:\n        case generatorTypes.releaseModEnv:\n            milliseconds = 4 * clip(dataValue, 0, 5940);\n            // convert to timecents\n            this.setGeneratorOverride(generator, msecToTimecents(milliseconds));\n            break;\n        \n        // lfo frequencies\n        case generatorTypes.freqVibLFO:\n        case generatorTypes.freqModLFO:\n            hertz = 0.084 * dataLSB;\n            // convert to abs cents\n            this.setGeneratorOverride(generator, hzToCents(hertz), true);\n            break;\n        \n        // sustains\n        case generatorTypes.sustainVolEnv:\n        case generatorTypes.sustainModEnv:\n            // 0.75 dB is 7.5 cB\n            centibels = dataLSB * 7.5;\n            this.setGeneratorOverride(generator, centibels);\n            break;\n        \n        // pitch\n        case generatorTypes.fineTune:\n            // data is already centered\n            this.setGeneratorOverride(generator, dataValue, true);\n            break;\n        \n        // lfo to pitch\n        case generatorTypes.modLfoToPitch:\n        case generatorTypes.vibLfoToPitch:\n            cents = clip(dataValue, -127, 127) * 9.375;\n            this.setGeneratorOverride(generator, cents, true);\n            break;\n        \n        // env to pitch\n        case generatorTypes.modEnvToPitch:\n            cents = clip(dataValue, -127, 127) * 9.375;\n            this.setGeneratorOverride(generator, cents);\n            break;\n        \n        // mod lfo to vol\n        case generatorTypes.modLfoToVolume:\n            // 0.1875 dB is 1.875 cB\n            centibels = 1.875 * dataLSB;\n            this.setGeneratorOverride(generator, centibels, true);\n            break;\n        \n        // filter fc\n        case generatorTypes.initialFilterFc:\n            // minimum: 100 Hz -> 4335 cents\n            const fcCents = 4335 + 59 * dataLSB;\n            this.setGeneratorOverride(generator, fcCents, true);\n            break;\n        \n        // filter Q\n        case generatorTypes.initialFilterQ:\n            // note: this uses the \"modulator-ish\" approach proposed by mrbumpy409\n            // here https://github.com/FluidSynth/fluidsynth/issues/1473\n            centibels = 215 * (dataLSB / 127);\n            this.setGeneratorOverride(generator, centibels, true);\n            break;\n        \n        // to filterFc\n        case generatorTypes.modLfoToFilterFc:\n            cents = clip(dataValue, -64, 63) * 56.25;\n            this.setGeneratorOverride(generator, cents, true);\n            break;\n        \n        case generatorTypes.modEnvToFilterFc:\n            cents = clip(dataValue, -64, 63) * 56.25;\n            this.setGeneratorOverride(generator, cents);\n            break;\n        \n        // effects\n        case generatorTypes.chorusEffectsSend:\n        case generatorTypes.reverbEffectsSend:\n            this.setGeneratorOverride(generator, clip(dataValue, 0, 255) * (1000 / 255));\n            break;\n    }\n}", "import { consoleColors } from \"../../../../utils/other.js\";\nimport { SpessaSynthInfo, SpessaSynthWarn } from \"../../../../utils/loggin.js\";\nimport { modulatorSources } from \"../../../../soundfont/basic_soundfont/modulator.js\";\nimport { customControllers, dataEntryStates, NON_CC_INDEX_OFFSET } from \"../../engine_components/controller_tables.js\";\nimport { midiControllers } from \"../../../../midi/midi_message.js\";\nimport { nonRegisteredMSB, registeredParameterTypes } from \"./data_entry_coarse.js\";\nimport { handleAWE32NRPN } from \"./awe32.js\";\n\n/**\n * Executes a data entry for an RPN tuning\n * @param dataValue {number} dataEntry LSB\n * @this {MidiAudioChannel}\n * @private\n */\nexport function dataEntryFine(dataValue)\n{\n    // store in cc table\n    this.midiControllers[midiControllers.lsbForControl6DataEntry] = dataValue << 7;\n    switch (this.dataEntryState)\n    {\n        default:\n            break;\n        \n        case dataEntryStates.RPCoarse:\n        case dataEntryStates.RPFine:\n            const rpnValue = this.midiControllers[midiControllers.RPNMsb] | (this.midiControllers[midiControllers.RPNLsb] >> 7);\n            switch (rpnValue)\n            {\n                default:\n                    break;\n                \n                // pitch bend range fine tune\n                case registeredParameterTypes.pitchBendRange:\n                    if (dataValue === 0)\n                    {\n                        break;\n                    }\n                    // 14-bit value, so upper 7 are coarse and lower 7 are fine!\n                    this.midiControllers[NON_CC_INDEX_OFFSET + modulatorSources.pitchWheelRange] |= dataValue;\n                    const actualTune = (this.midiControllers[NON_CC_INDEX_OFFSET + modulatorSources.pitchWheelRange] >> 7) + dataValue / 128;\n                    SpessaSynthInfo(\n                        `%cChannel ${this.channelNumber} bend range. Semitones: %c${actualTune}`,\n                        consoleColors.info,\n                        consoleColors.value\n                    );\n                    break;\n                \n                // fine-tuning\n                case registeredParameterTypes.fineTuning:\n                    // grab the data and shift\n                    const coarse = this.customControllers[customControllers.channelTuning];\n                    const finalTuning = (coarse << 7) | dataValue;\n                    this.setTuning(finalTuning * 0.01220703125); // multiply by 8192 / 100 (cent increments)\n                    break;\n                \n                // modulation depth\n                case registeredParameterTypes.modulationDepth:\n                    const currentModulationDepthCents = this.customControllers[customControllers.modulationMultiplier] * 50;\n                    let cents = currentModulationDepthCents + (dataValue / 128) * 100;\n                    this.setModulationDepth(cents);\n                    break;\n                \n                case 0x3FFF:\n                    this.resetParameters();\n                    break;\n                \n            }\n            break;\n        \n        case dataEntryStates.NRPFine:\n            /**\n             * @type {number}\n             */\n            const NRPNCoarse = this.midiControllers[midiControllers.NRPNMsb] >> 7;\n            /**\n             * @type {number}\n             */\n            const NRPNFine = this.midiControllers[midiControllers.NRPNLsb] >> 7;\n            if (NRPNCoarse === nonRegisteredMSB.SF2)\n            {\n                return;\n            }\n            switch (NRPNCoarse)\n            {\n                default:\n                    SpessaSynthWarn(\n                        `%cUnrecognized NRPN LSB for %c${this.channelNumber}%c: %c(0x${NRPNFine.toString(16)\n                            .toUpperCase()} 0x${NRPNFine.toString(\n                            16).toUpperCase()})%c data value: %c${dataValue}`,\n                        consoleColors.warn,\n                        consoleColors.recognized,\n                        consoleColors.warn,\n                        consoleColors.unrecognized,\n                        consoleColors.warn,\n                        consoleColors.value\n                    );\n                    break;\n                \n                case nonRegisteredMSB.awe32:\n                    handleAWE32NRPN.call(\n                        this,\n                        NRPNFine,\n                        dataValue,\n                        this.midiControllers[midiControllers.dataEntryMsb] >> 7\n                    );\n                    break;\n            }\n    }\n}", "import { midiControllers } from \"../../../../midi/midi_message.js\";\nimport { channelConfiguration, customControllers, dataEntryStates } from \"../../engine_components/controller_tables.js\";\nimport { nonRegisteredMSB } from \"../data_entry/data_entry_coarse.js\";\n\n/**\n * @param controllerNumber {number}\n * @param controllerValue {number}\n * @param force {boolean}\n * @this {MidiAudioChannel}\n */\nexport function controllerChange(controllerNumber, controllerValue, force = false)\n{\n    if (controllerNumber > 127)\n    {\n        // channel configuration. force must be set to true\n        if (!force)\n        {\n            return;\n        }\n        switch (controllerNumber)\n        {\n            default:\n                return;\n            \n            case channelConfiguration.velocityOverride:\n                this.velocityOverride = controllerValue;\n        }\n    }\n    \n    // lsb controller values: append them as the lower nibble of the 14-bit value\n    // excluding bank select and data entry as it's handled separately\n    if (\n        controllerNumber >= midiControllers.lsbForControl1ModulationWheel\n        && controllerNumber <= midiControllers.lsbForControl13EffectControl2\n        && controllerNumber !== midiControllers.lsbForControl6DataEntry\n    )\n    {\n        const actualCCNum = controllerNumber - 32;\n        if (this.lockedControllers[actualCCNum])\n        {\n            return;\n        }\n        // append the lower nibble to the main controller\n        this.midiControllers[actualCCNum] = (this.midiControllers[actualCCNum] & 0x3F80) | (controllerValue & 0x7F);\n        this.voices.forEach(v => this.computeModulators(v, 1, actualCCNum));\n    }\n    if (this.lockedControllers[controllerNumber])\n    {\n        return;\n    }\n    \n    // apply the cc to the table\n    this.midiControllers[controllerNumber] = controllerValue << 7;\n    \n    // interpret special CCs\n    {\n        switch (controllerNumber)\n        {\n            case midiControllers.allNotesOff:\n                this.stopAllNotes();\n                break;\n            \n            case midiControllers.allSoundOff:\n                this.stopAllNotes(true);\n                break;\n            \n            // special case: bank select\n            case midiControllers.bankSelect:\n                this.setBankSelect(controllerValue);\n                break;\n            \n            case midiControllers.lsbForControl0BankSelect:\n                this.setBankSelect(controllerValue, true);\n                break;\n            \n            // check for RPN and NPRN and data entry\n            case midiControllers.RPNLsb:\n                this.dataEntryState = dataEntryStates.RPFine;\n                break;\n            \n            case midiControllers.RPNMsb:\n                this.dataEntryState = dataEntryStates.RPCoarse;\n                break;\n            \n            case midiControllers.NRPNMsb:\n                // sfspec section 9.6.2\n                this.customControllers[customControllers.sf2NPRNGeneratorLSB] = 0;\n                this.dataEntryState = dataEntryStates.NRPCoarse;\n                break;\n            \n            case midiControllers.NRPNLsb:\n                if (this.midiControllers[midiControllers.NRPNMsb] >> 7 === nonRegisteredMSB.SF2)\n                {\n                    // if a <100 value has already been sent, reset!\n                    if (this.customControllers[customControllers.sf2NPRNGeneratorLSB] % 100 !== 0)\n                    {\n                        this.customControllers[customControllers.sf2NPRNGeneratorLSB] = 0;\n                    }\n                    \n                    if (controllerValue === 100)\n                    {\n                        this.customControllers[customControllers.sf2NPRNGeneratorLSB] += 100;\n                    }\n                    else if (controllerValue === 101)\n                    {\n                        this.customControllers[customControllers.sf2NPRNGeneratorLSB] += 1000;\n                    }\n                    else if (controllerValue === 102)\n                    {\n                        this.customControllers[customControllers.sf2NPRNGeneratorLSB] += 10000;\n                    }\n                    else if (controllerValue < 100)\n                    {\n                        this.customControllers[customControllers.sf2NPRNGeneratorLSB] += controllerValue;\n                    }\n                }\n                this.dataEntryState = dataEntryStates.NRPFine;\n                break;\n            \n            case midiControllers.dataEntryMsb:\n                this.dataEntryCoarse(controllerValue);\n                break;\n            \n            case midiControllers.lsbForControl6DataEntry:\n                this.dataEntryFine(controllerValue);\n                break;\n            \n            case midiControllers.resetAllControllers:\n                this.resetControllersRP15Compliant();\n                break;\n            \n            case midiControllers.sustainPedal:\n                if (controllerValue >= 64)\n                {\n                    this.holdPedal = true;\n                }\n                else\n                {\n                    this.holdPedal = false;\n                    this.sustainedVoices.forEach(v =>\n                    {\n                        v.release(this.synth.currentSynthTime);\n                    });\n                    this.sustainedVoices = [];\n                }\n                break;\n            \n            // default: just compute modulators\n            default:\n                this.voices.forEach(v => this.computeModulators(v, 1, controllerNumber));\n                break;\n        }\n    }\n    this.synth.callEvent(\"controllerchange\", {\n        channel: this.channelNumber,\n        controllerNumber: controllerNumber,\n        controllerValue: controllerValue\n    });\n}", "/**\n * stops all notes on a given channel\n * @param force {boolean}\n * @this {MidiAudioChannel}\n */\nexport function stopAllNotes(force = false)\n{\n    if (force)\n    {\n        // force stop all\n        this.voices.length = 0;\n        this.sustainedVoices.length = 0;\n        this.sendChannelProperty();\n    }\n    else\n    {\n        this.voices.forEach(v =>\n        {\n            if (v.isInRelease)\n            {\n                return;\n            }\n            v.release(this.synth.currentSynthTime);\n        });\n        this.sustainedVoices.forEach(v =>\n        {\n            v.release(this.synth.currentSynthTime);\n        });\n    }\n}", "/**\n * @param isMuted {boolean}\n * @this {MidiAudioChannel}\n */\nexport function muteChannel(isMuted)\n{\n    if (isMuted)\n    {\n        this.stopAllNotes(true);\n    }\n    this.isMuted = isMuted;\n    this.sendChannelProperty();\n    this.synth.callEvent(\"mutechannel\", {\n        channel: this.channelNumber,\n        isMuted: isMuted\n    });\n}", "import { customControllers } from \"../../engine_components/controller_tables.js\";\nimport { midiControllers } from \"../../../../midi/midi_message.js\";\n\n/**\n * Transposes the channel by given amount of semitones\n * @this {MidiAudioChannel}\n * @param semitones {number} Can be float\n * @param force {boolean} defaults to false, if true transposes the channel even if it's a drum channel\n */\nexport function transposeChannel(semitones, force = false)\n{\n    if (!this.drumChannel)\n    {\n        semitones += this.synth.transposition;\n    }\n    const keyShift = Math.trunc(semitones);\n    const currentTranspose = this.channelTransposeKeyShift + this.customControllers[customControllers.channelTransposeFine] / 100;\n    if (\n        (this.drumChannel && !force)\n        || semitones === currentTranspose\n    )\n    {\n        return;\n    }\n    if (keyShift !== this.channelTransposeKeyShift)\n    {\n        // stop all (and emit cc change)\n        this.controllerChange(midiControllers.allNotesOff, 127);\n    }\n    // apply transpose\n    this.channelTransposeKeyShift = keyShift;\n    this.setCustomController(customControllers.channelTransposeFine, (semitones - keyShift) * 100);\n    this.sendChannelProperty();\n}", "// Tests were performed by John Novak\n// https://github.com/dosbox-staging/dosbox-staging/pull/2705\n\n/*\nCC 5 value  Portamento time\n----------  ---------------\n     0          0.000 s\n     1          0.006 s\n     2          0.023 s\n     4          0.050 s\n     8          0.110 s\n    16          0.250 s\n    32          0.500 s\n    64          2.060 s\n    80          4.200 s\n    96          8.400 s\n   112         19.500 s\n   116         26.700 s\n   120         40.000 s\n   124         80.000 s\n   127        480.000 s\n*/\n\nconst portamentoLookup = {\n    0: 0.000,\n    1: 0.006,\n    2: 0.023,\n    4: 0.050,\n    8: 0.110,\n    16: 0.250,\n    32: 0.500,\n    64: 2.060,\n    80: 4.200,\n    96: 8.400,\n    112: 19.500,\n    116: 26.700,\n    120: 40.000,\n    124: 80.000,\n    127: 480.000\n};\n\n/**\n * @param value {number}\n * @returns {number}\n */\nfunction getLookup(value)\n{\n    if (portamentoLookup[value] !== undefined)\n    {\n        return portamentoLookup[value];\n    }\n    // get the nearest lower and upper points from the lookup table\n    let lower = null;\n    let upper = null;\n    \n    for (let key of Object.keys(portamentoLookup))\n    {\n        key = parseInt(key);\n        if (key < value && (lower === null || key > lower))\n        {\n            lower = key;\n        }\n        if (key > value && (upper === null || key < upper))\n        {\n            upper = key;\n        }\n    }\n    \n    // if we have found both lower and upper points, perform linear interpolation\n    if (lower !== null && upper !== null)\n    {\n        let lowerTime = portamentoLookup[lower];\n        let upperTime = portamentoLookup[upper];\n        \n        // linear interpolation\n        return lowerTime + ((value - lower) * (upperTime - lowerTime)) / (upper - lower);\n    }\n    return 0;\n}\n\n\n/**\n * Converts portamento time to seconds\n * @param time {number} 0 - 127\n * @param distance {number} distance in keys\n * @returns {number} seconds\n */\nexport function portamentoTimeToSeconds(time, distance)\n{\n    // this seems to work fine for the MIDIs I have\n    return getLookup(time) * (distance / 30);\n}", "import { midiControllers } from \"../../../midi/midi_message.js\";\nimport { portamentoTimeToSeconds } from \"./portamento_time.js\";\nimport { customControllers } from \"../engine_components/controller_tables.js\";\nimport { Modulator } from \"../../../soundfont/basic_soundfont/modulator.js\";\nimport { GENERATOR_OVERRIDE_NO_CHANGE_VALUE } from \"../../synth_constants.js\";\nimport { generatorTypes } from \"../../../soundfont/basic_soundfont/generator_types.js\";\nimport { SpessaSynthWarn } from \"../../../utils/loggin.js\";\n\n/**\n * sends a \"MIDI Note on message\"\n * @param midiNote {number}\n * @param velocity {number}\n * @this {MidiAudioChannel}\n */\nexport function noteOn(midiNote, velocity)\n{\n    if (velocity < 1)\n    {\n        this.noteOff(midiNote);\n        return;\n    }\n    velocity = Math.min(127, velocity);\n    \n    if (\n        (this.synth.highPerformanceMode && this.synth.totalVoicesAmount > 200 && velocity < 40) ||\n        (this.synth.highPerformanceMode && velocity < 10) ||\n        (this.isMuted)\n    )\n    {\n        return;\n    }\n    \n    if (!this.preset)\n    {\n        SpessaSynthWarn(`No preset for channel ${this.channelNumber}!`);\n        return;\n    }\n    \n    const realKey = midiNote + this.channelTransposeKeyShift + this.customControllers[customControllers.channelKeyShift];\n    let internalMidiNote = realKey;\n    \n    if (realKey > 127 || realKey < 0)\n    {\n        return;\n    }\n    const program = this.preset?.program;\n    const tune = this.synth.tunings[program]?.[realKey]?.midiNote;\n    if (tune >= 0)\n    {\n        internalMidiNote = tune;\n    }\n    \n    // velocity override\n    if (this.velocityOverride > 0)\n    {\n        velocity = this.velocityOverride;\n    }\n    \n    // key velocity override\n    const keyVel = this.synth.keyModifierManager.getVelocity(this.channelNumber, realKey);\n    if (keyVel > -1)\n    {\n        velocity = keyVel;\n    }\n    \n    // gain\n    const voiceGain = this.synth.keyModifierManager.getGain(this.channelNumber, realKey);\n    \n    // portamento\n    let portamentoFromKey = -1;\n    let portamentoDuration = 0;\n    // note: the 14-bit value needs to go down to 7-bit\n    const portamentoTime = this.midiControllers[midiControllers.portamentoTime] >> 7;\n    const control = this.midiControllers[midiControllers.portamentoControl];\n    const currentFromKey = control >> 7;\n    if (\n        !this.drumChannel && // no portamento on drum channel\n        currentFromKey !== internalMidiNote && // if the same note, there's no portamento\n        this.midiControllers[midiControllers.portamentoOnOff] >= 8192 && // (64 << 7)\n        portamentoTime > 0 // 0 duration is no portamento\n    )\n    {\n        // a value of one means the initial portamento\n        if (control !== 1)\n        {\n            const diff = Math.abs(internalMidiNote - currentFromKey);\n            portamentoDuration = portamentoTimeToSeconds(portamentoTime, diff);\n            portamentoFromKey = currentFromKey;\n        }\n        // set portamento control to previous value\n        this.controllerChange(midiControllers.portamentoControl, internalMidiNote);\n    }\n    // get voices\n    const voices = this.synth.getVoices(\n        this.channelNumber,\n        internalMidiNote,\n        velocity,\n        realKey\n    );\n    \n    // zero means disabled\n    let panOverride = 0;\n    if (this.randomPan)\n    {\n        // the range is -500 to 500\n        panOverride = Math.round(Math.random() * 1000 - 500);\n    }\n    \n    // add voices\n    const channelVoices = this.voices;\n    voices.forEach(voice =>\n    {\n        // apply portamento\n        voice.portamentoFromKey = portamentoFromKey;\n        voice.portamentoDuration = portamentoDuration;\n        \n        // apply pan override\n        voice.overridePan = panOverride;\n        \n        // apply gain override\n        voice.gain = voiceGain;\n        \n        // dynamic modulators (if none, this won't iterate over anything)\n        this.sysExModulators.modulatorList.forEach(m =>\n        {\n            const mod = m.mod;\n            const existingModIndex = voice.modulators.findIndex(voiceMod => Modulator.isIdentical(voiceMod, mod));\n            \n            // replace or add\n            if (existingModIndex !== -1)\n            {\n                voice.modulators[existingModIndex] = Modulator.copy(mod);\n            }\n            else\n            {\n                voice.modulators.push(Modulator.copy(mod));\n            }\n        });\n        \n        // apply generator override\n        if (this.generatorOverridesEnabled)\n        {\n            this.generatorOverrides.forEach((overrideValue, generatorType) =>\n            {\n                if (overrideValue === GENERATOR_OVERRIDE_NO_CHANGE_VALUE)\n                {\n                    return;\n                }\n                voice.generators[generatorType] = overrideValue;\n            });\n        }\n        \n        \n        // apply exclusive class\n        const exclusive = voice.exclusiveClass;\n        if (exclusive !== 0)\n        {\n            // kill all voices with the same exclusive class\n            channelVoices.forEach(v =>\n            {\n                if (v.exclusiveClass === exclusive)\n                {\n                    v.exclusiveRelease(this.synth.currentSynthTime);\n                }\n            });\n        }\n        // compute all modulators\n        this.computeModulators(voice);\n        // modulate sample offsets (these are not real time)\n        const cursorStartOffset = voice.modulatedGenerators[generatorTypes.startAddrsOffset] + voice.modulatedGenerators[generatorTypes.startAddrsCoarseOffset] * 32768;\n        const endOffset = voice.modulatedGenerators[generatorTypes.endAddrOffset] + voice.modulatedGenerators[generatorTypes.endAddrsCoarseOffset] * 32768;\n        const loopStartOffset = voice.modulatedGenerators[generatorTypes.startloopAddrsOffset] + voice.modulatedGenerators[generatorTypes.startloopAddrsCoarseOffset] * 32768;\n        const loopEndOffset = voice.modulatedGenerators[generatorTypes.endloopAddrsOffset] + voice.modulatedGenerators[generatorTypes.endloopAddrsCoarseOffset] * 32768;\n        const sm = voice.sample;\n        // apply them\n        const clamp = num => Math.max(0, Math.min(sm.sampleData.length - 1, num));\n        sm.cursor = clamp(sm.cursor + cursorStartOffset);\n        sm.end = clamp(sm.end + endOffset);\n        sm.loopStart = clamp(sm.loopStart + loopStartOffset);\n        sm.loopEnd = clamp(sm.loopEnd + loopEndOffset);\n        // swap loops if needed\n        if (sm.loopEnd < sm.loopStart)\n        {\n            const temp = sm.loopStart;\n            sm.loopStart = sm.loopEnd;\n            sm.loopEnd = temp;\n        }\n        if (sm.loopEnd - sm.loopStart < 1)\n        {\n            sm.loopingMode = 0;\n            sm.isLooping = false;\n        }\n        // set the current attenuation to target,\n        // as it's interpolated (we don't want 0 attenuation for even a split second)\n        voice.volumeEnvelope.attenuation = voice.volumeEnvelope.attenuationTargetGain;\n        // set initial pan to avoid split second changing from middle to the correct value\n        voice.currentPan = Math.max(-500, Math.min(500, voice.modulatedGenerators[generatorTypes.pan])); //  -500 to 500\n    });\n    \n    this.synth.totalVoicesAmount += voices.length;\n    // cap the voices\n    if (this.synth.totalVoicesAmount > this.synth.voiceCap)\n    {\n        this.synth.voiceKilling(voices.length);\n    }\n    channelVoices.push(...voices);\n    this.sendChannelProperty();\n    this.synth.callEvent(\"noteon\", {\n        midiNote: midiNote,\n        channel: this.channelNumber,\n        velocity: velocity\n    });\n    \n}", "import { SpessaSynthWarn } from \"../../../../utils/loggin.js\";\nimport { customControllers } from \"../../engine_components/controller_tables.js\";\n\n/**\n * Release a note\n * @param midiNote {number}\n * @this {MidiAudioChannel}\n */\nexport function noteOff(midiNote)\n{\n    if (midiNote > 127 || midiNote < 0)\n    {\n        SpessaSynthWarn(`Received a noteOn for note`, midiNote, \"Ignoring.\");\n        return;\n    }\n    \n    let realKey = midiNote + this.channelTransposeKeyShift + this.customControllers[customControllers.channelKeyShift];\n    \n    // if high performance mode, kill notes instead of stopping them\n    if (this.synth.highPerformanceMode)\n    {\n        // if the channel is percussion channel, do not kill the notes\n        if (!this.drumChannel)\n        {\n            this.killNote(realKey, -6950);\n            this.synth.callEvent(\"noteoff\", {\n                midiNote: midiNote,\n                channel: this.channelNumber\n            });\n            return;\n        }\n    }\n    \n    const channelVoices = this.voices;\n    channelVoices.forEach(v =>\n    {\n        if (v.realKey !== realKey || v.isInRelease === true)\n        {\n            return;\n        }\n        // if hold pedal, move to sustain\n        if (this.holdPedal)\n        {\n            this.sustainedVoices.push(v);\n        }\n        else\n        {\n            v.release(this.synth.currentSynthTime);\n        }\n    });\n    this.synth.callEvent(\"noteoff\", {\n        midiNote: midiNote,\n        channel: this.channelNumber\n    });\n}\n\n", "import { modulatorSources } from \"../../../../soundfont/basic_soundfont/modulator.js\";\n\n/**\n * Sets the pressure of the given note on a specific channel\n * @this {MidiAudioChannel}\n * @param midiNote {number} 0-127\n * @param pressure {number} the pressure of the note\n */\nexport function polyPressure(midiNote, pressure)\n{\n    this.voices.forEach(v =>\n    {\n        if (v.midiNote !== midiNote)\n        {\n            return;\n        }\n        v.pressure = pressure;\n        this.computeModulators(\n            v,\n            0,\n            modulatorSources.polyPressure\n        );\n    });\n    this.synth.callEvent(\"polypressure\", {\n        channel: this.channelNumber,\n        midiNote: midiNote,\n        pressure: pressure\n    });\n}", "import { NON_CC_INDEX_OFFSET } from \"../../engine_components/controller_tables.js\";\nimport { modulatorSources } from \"../../../../soundfont/basic_soundfont/modulator.js\";\n\n/**\n * Sets the pressure of the given channel\n * @this {MidiAudioChannel}\n * @param pressure {number} the pressure of the channel\n */\nexport function channelPressure(pressure)\n{\n    this.midiControllers[NON_CC_INDEX_OFFSET + modulatorSources.channelPressure] = pressure << 7;\n    this.updateChannelTuning();\n    this.voices.forEach(v =>\n        this.computeModulators(\n            v,\n            0,\n            modulatorSources.channelPressure\n        ));\n    this.synth.callEvent(\"channelpressure\", {\n        channel: this.channelNumber,\n        pressure: pressure\n    });\n}", "import { NON_CC_INDEX_OFFSET } from \"../../engine_components/controller_tables.js\";\nimport { modulatorSources } from \"../../../../soundfont/basic_soundfont/modulator.js\";\n\n/**\n * Sets the pitch of the given channel\n * @this {MidiAudioChannel}\n * @param MSB {number} SECOND byte of the MIDI pitchWheel message\n * @param LSB {number} FIRST byte of the MIDI pitchWheel message\n */\nexport function pitchWheel(MSB, LSB)\n{\n    if (this.lockedControllers[NON_CC_INDEX_OFFSET + modulatorSources.pitchWheel])\n    {\n        return;\n    }\n    const bend = (LSB | (MSB << 7));\n    this.synth.callEvent(\"pitchwheel\", {\n        channel: this.channelNumber,\n        MSB: MSB,\n        LSB: LSB\n    });\n    this.midiControllers[NON_CC_INDEX_OFFSET + modulatorSources.pitchWheel] = bend;\n    this.voices.forEach(v =>\n        // compute pitch modulators\n        this.computeModulators(\n            v,\n            0,\n            modulatorSources.pitchWheel\n        ));\n    this.sendChannelProperty();\n}", "/**\n * Sets the octave tuning for a given channel\n * @this {MidiAudioChannel}\n * @param tuning {Int8Array} LENGTH of 12!\n * relative cent tuning.\n * min -128 max 127.\n */\nexport function setOctaveTuning(tuning)\n{\n    if (tuning.length !== 12)\n    {\n        throw new Error(\"Tuning is not the length of 12.\");\n    }\n    this.channelOctaveTuning = new Int8Array(128);\n    for (let i = 0; i < 128; i++)\n    {\n        this.channelOctaveTuning[i] = tuning[i % 12];\n    }\n}", "import { SpessaSynthWarn } from \"../../../utils/loggin.js\";\nimport { BasicPreset } from \"../../../soundfont/basic_soundfont/basic_preset.js\";\n\n/**\n * executes a program change\n * @param programNumber {number}\n * @this {MidiAudioChannel}\n */\nexport function programChange(programNumber)\n{\n    if (this.lockPreset)\n    {\n        return;\n    }\n    // always 128 for percussion\n    let bank = this.getBankSelect();\n    \n    const isXG = this.isXGChannel;\n    const p = this.synth.soundfontManager.getPreset(bank, programNumber, isXG);\n    let preset = p.preset;\n    if (!preset)\n    {\n        SpessaSynthWarn(\"No presets! Using empty fallback.\");\n        preset = new BasicPreset(this.synth.soundfontManager.soundfontList[0].soundfont);\n        preset.presetName = \"SPESSA EMPTY FALLBACK PRESET\";\n    }\n    this.setPreset(preset);\n    this.sentBank = Math.min(128, preset.bank + p.bankOffset);\n    this.synth.callEvent(\"programchange\", {\n        channel: this.channelNumber,\n        program: preset.program,\n        bank: this.sentBank\n    });\n    this.sendChannelProperty();\n}", "import { Modulator, modulatorCurveTypes, modulatorSources } from \"../../../soundfont/basic_soundfont/modulator.js\";\nimport { NON_CC_INDEX_OFFSET } from \"./controller_tables.js\";\n\n/**\n * A class for dynamic modulators\n * that are assigned for more complex system exclusive messages\n */\nexport class DynamicModulatorSystem\n{\n    /**\n     * the current dynamic modulator list\n     * @type {{mod: Modulator, id: string}[]}\n     */\n    modulatorList = [];\n    \n    resetModulators()\n    {\n        this.modulatorList = [];\n    }\n    \n    /**\n     * @param source {number}\n     * @param destination {generatorTypes}\n     * @param isBipolar {boolean}\n     * @param isNegative {boolean}\n     */\n    _getModulatorId(source, destination, isBipolar, isNegative)\n    {\n        return `${source}-${destination}-${isBipolar}-${isNegative}`;\n    }\n    \n    /**\n     * @param id {string}\n     * @private\n     */\n    _deleteModulator(id)\n    {\n        this.modulatorList = this.modulatorList.filter(m => m.id !== id);\n    }\n    \n    /**\n     * @param source {number} like in midiControllers: values below NON_CC_INDEX_OFFSET are CCs,\n     * above are regular modulator sources\n     * @param destination {generatorTypes}\n     * @param amount {number}\n     * @param isBipolar {boolean}\n     * @param isNegative {boolean}\n     */\n    setModulator(source, destination, amount, isBipolar = false, isNegative = false)\n    {\n        const id = this._getModulatorId(source, destination, isBipolar, isNegative);\n        if (amount === 0)\n        {\n            this._deleteModulator(id);\n        }\n        const mod = this.modulatorList.find(m => m.id === id);\n        if (mod)\n        {\n            mod.mod.transformAmount = amount;\n        }\n        else\n        {\n            let srcNum, isCC;\n            if (source >= NON_CC_INDEX_OFFSET)\n            {\n                srcNum = source - NON_CC_INDEX_OFFSET;\n                isCC = false;\n            }\n            else\n            {\n                srcNum = source;\n                isCC = true;\n            }\n            const modulator = new Modulator(\n                srcNum,\n                modulatorCurveTypes.linear,\n                isCC ? 1 : 0,\n                isBipolar ? 1 : 0,\n                0,\n                modulatorSources.noController,\n                modulatorCurveTypes.linear,\n                0,\n                0,\n                0,\n                destination,\n                amount,\n                0\n            );\n            this.modulatorList.push({\n                mod: modulator,\n                id: id\n            });\n        }\n    }\n}", "import { getModulatorCurveValue, MOD_PRECOMPUTED_LENGTH } from \"./modulator_curves.js\";\nimport { VolumeEnvelope } from \"./volume_envelope.js\";\nimport { ModulationEnvelope } from \"./modulation_envelope.js\";\nimport { Modulator, modulatorSources } from \"../../../soundfont/basic_soundfont/modulator.js\";\nimport { NON_CC_INDEX_OFFSET } from \"./controller_tables.js\";\nimport { generatorLimits, generatorTypes } from \"../../../soundfont/basic_soundfont/generator_types.js\";\n\n/**\n * compute_modulator.js\n * purpose: precomputes all curve types and computes modulators\n */\n\nconst EFFECT_MODULATOR_TRANSFORM_MULTIPLIER = 1000 / 200;\n\n/**\n * Computes a given modulator\n * @param controllerTable {Int16Array} all midi controllers as 14bit values + the non-controller indexes, starting at 128\n * @param modulator {Modulator} the modulator to compute\n * @param voice {Voice} the voice belonging to the modulator\n * @returns {number} the computed value\n */\nexport function computeModulator(controllerTable, modulator, voice)\n{\n    if (modulator.transformAmount === 0)\n    {\n        modulator.currentValue = 0;\n        return 0;\n    }\n    // mapped to 0-16,384\n    let rawSourceValue;\n    if (modulator.sourceUsesCC)\n    {\n        rawSourceValue = controllerTable[modulator.sourceIndex];\n    }\n    else\n    {\n        const index = modulator.sourceIndex + NON_CC_INDEX_OFFSET;\n        switch (modulator.sourceIndex)\n        {\n            case modulatorSources.noController:\n                rawSourceValue = 16383; // equals to 1\n                break;\n            \n            case modulatorSources.noteOnKeyNum:\n                rawSourceValue = voice.midiNote << 7;\n                break;\n            \n            case modulatorSources.noteOnVelocity:\n                rawSourceValue = voice.velocity << 7;\n                break;\n            \n            case modulatorSources.polyPressure:\n                rawSourceValue = voice.pressure << 7;\n                break;\n            \n            default:\n                rawSourceValue = controllerTable[index]; // pitch bend and range are stored in the cc table\n                break;\n        }\n        \n    }\n    \n    const sourceValue = transforms[modulator.sourceCurveType][modulator.sourcePolarity][modulator.sourceDirection][rawSourceValue];\n    \n    // mapped to 0-127\n    let rawSecondSrcValue;\n    if (modulator.secSrcUsesCC)\n    {\n        rawSecondSrcValue = controllerTable[modulator.secSrcIndex];\n    }\n    else\n    {\n        const index = modulator.secSrcIndex + NON_CC_INDEX_OFFSET;\n        switch (modulator.secSrcIndex)\n        {\n            case modulatorSources.noController:\n                rawSecondSrcValue = 16383; // equals to 1\n                break;\n            \n            case modulatorSources.noteOnKeyNum:\n                rawSecondSrcValue = voice.midiNote << 7;\n                break;\n            \n            case modulatorSources.noteOnVelocity:\n                rawSecondSrcValue = voice.velocity << 7;\n                break;\n            \n            case modulatorSources.polyPressure:\n                rawSecondSrcValue = voice.pressure << 7;\n                break;\n            \n            default:\n                rawSecondSrcValue = controllerTable[index]; // pitch bend and range are stored in the cc table\n        }\n        \n    }\n    const secondSrcValue = transforms[modulator.secSrcCurveType][modulator.secSrcPolarity][modulator.secSrcDirection][rawSecondSrcValue];\n    \n    // see the comment for isEffectModulator (modulator.js in basic_soundfont) for explanation\n    let transformAmount = modulator.transformAmount;\n    if (modulator.isEffectModulator && transformAmount <= 1000)\n    {\n        transformAmount *= EFFECT_MODULATOR_TRANSFORM_MULTIPLIER;\n        transformAmount = Math.min(transformAmount, 1000);\n    }\n    \n    // compute the modulator\n    let computedValue = sourceValue * secondSrcValue * transformAmount;\n    \n    if (modulator.transformType === 2)\n    {\n        // abs value\n        computedValue = Math.abs(computedValue);\n    }\n    \n    // resonant modulator: take its value and ensure that it won't change the final gain\n    if (modulator.isDefaultResonantModulator)\n    {\n        // half the gain, negates the filter\n        voice.resonanceOffset = Math.max(0, computedValue / 2);\n    }\n    \n    modulator.currentValue = computedValue;\n    return computedValue;\n}\n\n/**\n * Computes modulators of a given voice. Source and index indicate what modulators shall be computed\n * @param voice {Voice} the voice to compute modulators for\n * @param sourceUsesCC {number} what modulators should be computed, -1 means all, 0 means modulator source enum 1 means midi controller\n * @param sourceIndex {number} enum for the source\n * @this {MidiAudioChannel}\n */\nexport function computeModulators(voice, sourceUsesCC = -1, sourceIndex = 0)\n{\n    const modulators = voice.modulators;\n    let generators = voice.generators;\n    // apply offsets if enabled\n    if (this.generatorOffsetsEnabled)\n    {\n        generators = new Int16Array(generators);\n        for (let i = 0; i < generators.length; i++)\n        {\n            generators[i] += this.generatorOffsets[i];\n        }\n    }\n    const modulatedGenerators = voice.modulatedGenerators;\n    \n    if (sourceUsesCC === -1)\n    {\n        // All modulators mode: compute all modulators\n        modulatedGenerators.set(generators);\n        modulators.forEach(mod =>\n        {\n            modulatedGenerators[mod.modulatorDestination] += computeModulator(\n                this.midiControllers,\n                mod,\n                voice\n            );\n        });\n        // apply limits\n        for (let gen = 0; gen < modulatedGenerators.length; gen++)\n        {\n            const limit = generatorLimits[gen];\n            if (!limit)\n            {\n                // skip unused\n                continue;\n            }\n            modulatedGenerators[gen] = Math.min(limit.max, Math.max(limit.min, modulatedGenerators[gen]));\n        }\n        VolumeEnvelope.recalculate(voice);\n        ModulationEnvelope.recalculate(voice);\n        return;\n    }\n    \n    // Optimized mode: calculate only modulators that use the given source\n    const volenvNeedsRecalculation = new Set([\n        generatorTypes.initialAttenuation,\n        generatorTypes.delayVolEnv,\n        generatorTypes.attackVolEnv,\n        generatorTypes.holdVolEnv,\n        generatorTypes.decayVolEnv,\n        generatorTypes.sustainVolEnv,\n        generatorTypes.releaseVolEnv,\n        generatorTypes.keyNumToVolEnvHold,\n        generatorTypes.keyNumToVolEnvDecay\n    ]);\n    \n    const computedDestinations = new Set();\n    \n    modulators.forEach(mod =>\n    {\n        if (\n            (mod.sourceUsesCC === sourceUsesCC && mod.sourceIndex === sourceIndex) ||\n            (mod.secSrcUsesCC === sourceUsesCC && mod.secSrcIndex === sourceIndex)\n        )\n        {\n            const destination = mod.modulatorDestination;\n            if (!computedDestinations.has(destination))\n            {\n                // Reset this destination\n                modulatedGenerators[destination] = generators[destination];\n                // compute our modulator\n                computeModulator(this.midiControllers, mod, voice);\n                // sum the values of all modulators for this destination\n                modulators.forEach(m =>\n                {\n                    if (m.modulatorDestination === destination)\n                    {\n                        modulatedGenerators[destination] += m.currentValue;\n                    }\n                });\n                // apply limits\n                const limits = generatorLimits[destination];\n                modulatedGenerators[destination] = Math.max(\n                    limits.min,\n                    Math.min(modulatedGenerators[destination], limits.max)\n                );\n                computedDestinations.add(destination);\n            }\n        }\n    });\n    \n    // Recalculate volume envelope if necessary\n    if ([...computedDestinations].some(dest => volenvNeedsRecalculation.has(dest)))\n    {\n        VolumeEnvelope.recalculate(voice);\n    }\n    \n    ModulationEnvelope.recalculate(voice);\n}\n\n\n/**\n * as follows: transforms[curveType][polarity][direction] is an array\n * @type {Float32Array[][][]}\n */\nconst transforms = [];\n\nfor (let curve = 0; curve < 4; curve++)\n{\n    transforms[curve] =\n        [\n            [\n                new Float32Array(MOD_PRECOMPUTED_LENGTH),\n                new Float32Array(MOD_PRECOMPUTED_LENGTH)\n            ],\n            [\n                new Float32Array(MOD_PRECOMPUTED_LENGTH),\n                new Float32Array(MOD_PRECOMPUTED_LENGTH)\n            ]\n        ];\n    for (let i = 0; i < MOD_PRECOMPUTED_LENGTH; i++)\n    {\n        \n        // polarity 0 dir 0\n        transforms[curve][0][0][i] = getModulatorCurveValue(\n            0,\n            curve,\n            i / MOD_PRECOMPUTED_LENGTH,\n            0\n        );\n        \n        // polarity 1 dir 0\n        transforms[curve][1][0][i] = getModulatorCurveValue(\n            0,\n            curve,\n            i / MOD_PRECOMPUTED_LENGTH,\n            1\n        );\n        \n        // polarity 0 dir 1\n        transforms[curve][0][1][i] = getModulatorCurveValue(\n            1,\n            curve,\n            i / MOD_PRECOMPUTED_LENGTH,\n            0\n        );\n        \n        // polarity 1 dir 1\n        transforms[curve][1][1][i] = getModulatorCurveValue(\n            1,\n            curve,\n            i / MOD_PRECOMPUTED_LENGTH,\n            1\n        );\n    }\n}", "import {\n    CONTROLLER_TABLE_SIZE,\n    CUSTOM_CONTROLLER_TABLE_SIZE,\n    customControllers,\n    dataEntryStates,\n    NON_CC_INDEX_OFFSET\n} from \"./controller_tables.js\";\nimport {\n    resetControllers,\n    resetControllersRP15Compliant,\n    resetParameters\n} from \"../engine_methods/controller_control/reset_controllers.js\";\nimport { renderVoice } from \"../engine_methods/render_voice.js\";\nimport { panAndMixVoice } from \"./stereo_panner.js\";\nimport { killNote } from \"../engine_methods/stopping_notes/kill_note.js\";\nimport { setTuning } from \"../engine_methods/tuning_control/set_tuning.js\";\nimport { setModulationDepth } from \"../engine_methods/tuning_control/set_modulation_depth.js\";\nimport { dataEntryFine } from \"../engine_methods/data_entry/data_entry_fine.js\";\nimport { controllerChange } from \"../engine_methods/controller_control/controller_change.js\";\nimport { stopAllNotes } from \"../engine_methods/stopping_notes/stop_all_notes.js\";\nimport { muteChannel } from \"../engine_methods/mute_channel.js\";\nimport { transposeChannel } from \"../engine_methods/tuning_control/transpose_channel.js\";\nimport { dataEntryCoarse } from \"../engine_methods/data_entry/data_entry_coarse.js\";\nimport { noteOn } from \"../engine_methods/note_on.js\";\nimport { noteOff } from \"../engine_methods/stopping_notes/note_off.js\";\nimport { polyPressure } from \"../engine_methods/tuning_control/poly_pressure.js\";\nimport { channelPressure } from \"../engine_methods/tuning_control/channel_pressure.js\";\nimport { pitchWheel } from \"../engine_methods/tuning_control/pitch_wheel.js\";\nimport { setOctaveTuning } from \"../engine_methods/tuning_control/set_octave_tuning.js\";\nimport { programChange } from \"../engine_methods/program_change.js\";\nimport { chooseBank, isSystemXG, parseBankSelect } from \"../../../utils/xg_hacks.js\";\nimport { DEFAULT_PERCUSSION, GENERATOR_OVERRIDE_NO_CHANGE_VALUE } from \"../../synth_constants.js\";\nimport { modulatorSources } from \"../../../soundfont/basic_soundfont/modulator.js\";\nimport { DynamicModulatorSystem } from \"./dynamic_modulator_system.js\";\nimport { computeModulators } from \"./compute_modulator.js\";\nimport { generatorLimits, GENERATORS_AMOUNT } from \"../../../soundfont/basic_soundfont/generator_types.js\";\n\n/**\n * This class represents a single MIDI Channel within the synthesizer.\n */\nclass MidiAudioChannel\n{\n    /**\n     * An array of MIDI controller values and values used by modulators as the source (e.g., pitch bend, bend range, etc.).\n     * These are stored as 14-bit values.\n     * Refer to controller_tables.js for the index definitions.\n     * @type {Int16Array}\n     */\n    midiControllers = new Int16Array(CONTROLLER_TABLE_SIZE);\n    \n    /**\n     * An array indicating if a controller, at the equivalent index in the midiControllers array, is locked\n     * (i.e., not allowed changing).\n     * A locked controller cannot be modified.\n     * @type {boolean[]}\n     */\n    lockedControllers = Array(CONTROLLER_TABLE_SIZE).fill(false);\n    \n    /**\n     * An array of custom (non-SF2) control values such as RPN pitch tuning, transpose, modulation depth, etc.\n     * Refer to controller_tables.js for the index definitions.\n     * @type {Float32Array}\n     */\n    customControllers = new Float32Array(CUSTOM_CONTROLLER_TABLE_SIZE);\n    \n    /**\n     * The key shift of the channel (in semitones).\n     * @type {number}\n     */\n    channelTransposeKeyShift = 0;\n    \n    /**\n     * An array of octave tuning values for each note on the channel.\n     * Each index corresponds to a note (0 = C, 1 = C#, ..., 11 = B).\n     * Note: Repeaded every 12 notes\n     * @type {Int8Array}\n     */\n    channelOctaveTuning = new Int8Array(128);\n    \n    /**\n     * Will be updated every time something tuning-related gets changed.\n     * This is used to avoid a big addition for every voice rendering call.\n     * @type {number}\n     */\n    channelTuningCents = 0;\n    \n    /**\n     * A system for dynamic modulator assignment for advanced system exclusives.\n     * @type {DynamicModulatorSystem}\n     */\n    sysExModulators = new DynamicModulatorSystem();\n    \n    /**\n     * An array of offsets generators for SF2 nrpn support.\n     * A value of 0 means no change; -10 means 10 lower, etc.\n     * @type {Int16Array}\n     */\n    generatorOffsets = new Int16Array(GENERATORS_AMOUNT);\n    \n    /**\n     * A small optimization that disables applying offsets until at least one is set.\n     * @type {boolean}\n     */\n    generatorOffsetsEnabled = false;\n    \n    /**\n     * An array of override generators for AWE32 support.\n     * A value of 32,767 means unchanged, as it is not allowed anywhere.\n     * @type {Int16Array}\n     */\n    generatorOverrides = new Int16Array(GENERATORS_AMOUNT);\n    \n    /**\n     * A small optimization that disables applying overrides until at least one is set.\n     * @type {boolean}\n     */\n    generatorOverridesEnabled = false;\n    \n    /**\n     * Indicates whether the sustain (hold) pedal is active.\n     * @type {boolean}\n     */\n    holdPedal = false;\n    \n    /**\n     * Indicates whether this channel is a drum channel.\n     * @type {boolean}\n     */\n    drumChannel = false;\n    \n    /**\n     * If greater than 0, overrides the velocity value for the channel, otherwise it's disabled.\n     * @type {number}\n     */\n    velocityOverride = 0;\n    \n    /**\n     * Enables random panning for every note played on this channel.\n     * @type {boolean}\n     */\n    randomPan = false;\n    \n    /**\n     * The current state of the data entry for the channel.\n     * @type {dataEntryStates}\n     */\n    dataEntryState = dataEntryStates.Idle;\n    \n    /**\n     * The bank number of the channel (used for patch changes).\n     * @type {number}\n     */\n    bank = 0;\n    \n    /**\n     * The bank number sent as channel properties.\n     * @type {number}\n     */\n    sentBank = 0;\n    \n    /**\n     * The bank LSB number of the channel (used for patch changes in XG mode).\n     * @type {number}\n     */\n    bankLSB = 0;\n    \n    /**\n     * The preset currently assigned to the channel.\n     * @type {?BasicPreset}\n     */\n    preset = undefined;\n    \n    /**\n     * Indicates whether the program on this channel is locked.\n     * @type {boolean}\n     */\n    lockPreset = false;\n    \n    /**\n     * Indicates the MIDI system when the preset was locked.\n     * @type {SynthSystem}\n     */\n    lockedSystem = \"gs\";\n    \n    /**\n     * Indicates whether the GS NRPN parameters are enabled for this channel.\n     * @type {boolean}\n     */\n    lockGSNRPNParams = false;\n    \n    /**\n     * The vibrato settings for the channel.\n     * @type {Object}\n     * @property {number} depth - Depth of the vibrato effect in cents.\n     * @property {number} delay - Delay before the vibrato effect starts (in seconds).\n     * @property {number} rate - Rate of the vibrato oscillation (in Hz).\n     */\n    channelVibrato = { delay: 0, depth: 0, rate: 0 };\n    \n    /**\n     * Indicates whether the channel is muted.\n     * @type {boolean}\n     */\n    isMuted = false;\n    \n    /**\n     * An array of voices currently active on the channel.\n     * @type {Voice[]}\n     */\n    voices = [];\n    \n    /**\n     * An array of voices that are sustained on the channel.\n     * @type {Voice[]}\n     */\n    sustainedVoices = [];\n    \n    /**\n     * The channel's number (0-based index)\n     * @type {number}\n     */\n    channelNumber;\n    \n    /**\n     * Parent processor instance.\n     * @type {SpessaSynthProcessor}\n     */\n    synth;\n    \n    /**\n     * Constructs a new MIDI channel\n     * @param synth {SpessaSynthProcessor}\n     * @param preset {BasicPreset}\n     * @param channelNumber {number}\n     */\n    constructor(synth, preset, channelNumber)\n    {\n        this.synth = synth;\n        this.preset = preset;\n        this.channelNumber = channelNumber;\n        this.resetGeneratorOverrides();\n        this.resetGeneratorOffsets();\n    }\n    \n    get isXGChannel()\n    {\n        return isSystemXG(this.synth.system) || (this.lockPreset && isSystemXG(this.lockedSystem));\n    }\n    \n    /**\n     * @param type {customControllers|number}\n     * @param value {number}\n     */\n    setCustomController(type, value)\n    {\n        this.customControllers[type] = value;\n        this.updateChannelTuning();\n    }\n    \n    updateChannelTuning()\n    {\n        this.channelTuningCents =\n            this.customControllers[customControllers.channelTuning]                         // RPN channel fine tuning\n            + this.customControllers[customControllers.channelTransposeFine]                // user tuning (transpose)\n            + this.customControllers[customControllers.masterTuning]                        // master tuning, set by sysEx\n            + (this.customControllers[customControllers.channelTuningSemitones] * 100);      // RPN channel coarse tuning\n    }\n    \n    /**\n     * @param outputLeft {Float32Array} the left output buffer\n     * @param outputRight {Float32Array} the right output buffer\n     * @param reverbOutputLeft {Float32Array} left output for reverb\n     * @param reverbOutputRight {Float32Array} right output for reverb\n     * @param chorusOutputLeft {Float32Array} left output for chorus\n     * @param chorusOutputRight {Float32Array} right output for chorus\n     * @param startIndex {number}\n     * @param sampleCount {number}\n     */\n    renderAudio(\n        outputLeft, outputRight,\n        reverbOutputLeft, reverbOutputRight,\n        chorusOutputLeft, chorusOutputRight,\n        startIndex, sampleCount\n    )\n    {\n        this.voices = this.voices.filter(v => !this.renderVoice(\n            v, this.synth.currentSynthTime,\n            outputLeft, outputRight,\n            reverbOutputLeft, reverbOutputRight,\n            chorusOutputLeft, chorusOutputRight,\n            startIndex, sampleCount\n        ));\n    }\n    \n    /**\n     * @param locked {boolean}\n     */\n    setPresetLock(locked)\n    {\n        this.lockPreset = locked;\n        if (locked)\n        {\n            this.lockedSystem = this.synth.system;\n        }\n    }\n    \n    /**\n     * @param bank {number}\n     * @param isLSB {boolean}\n     */\n    setBankSelect(bank, isLSB = false)\n    {\n        if (this.lockPreset)\n        {\n            return;\n        }\n        if (isLSB)\n        {\n            this.bankLSB = bank;\n        }\n        else\n        {\n            this.bank = bank;\n            const bankLogic = parseBankSelect(\n                this.getBankSelect(),\n                bank,\n                this.synth.system,\n                false,\n                this.drumChannel,\n                this.channelNumber\n            );\n            switch (bankLogic.drumsStatus)\n            {\n                default:\n                case 0:\n                    break;\n                \n                case 1:\n                    if (this.channelNumber % 16 === DEFAULT_PERCUSSION)\n                    {\n                        // cannot disable drums on channel 9\n                        this.bank = 127;\n                    }\n                    break;\n                \n                case 2:\n                    this.setDrums(true);\n                    break;\n            }\n        }\n    }\n    \n    /**\n     * @returns {number}\n     */\n    getBankSelect()\n    {\n        return chooseBank(this.bank, this.bankLSB, this.drumChannel, this.isXGChannel);\n    }\n    \n    /**\n     * Changes a preset of this channel\n     * @param preset {BasicPreset}\n     */\n    setPreset(preset)\n    {\n        if (this.lockPreset)\n        {\n            return;\n        }\n        this.preset = preset;\n    }\n    \n    /**\n     * Sets drums on channel.\n     * @param isDrum {boolean}\n     */\n    setDrums(isDrum)\n    {\n        if (this.lockPreset)\n        {\n            return;\n        }\n        if (this.drumChannel === isDrum)\n        {\n            return;\n        }\n        if (isDrum)\n        {\n            // clear transpose\n            this.channelTransposeKeyShift = 0;\n            this.drumChannel = true;\n        }\n        else\n        {\n            this.drumChannel = false;\n        }\n        this.synth.callEvent(\"drumchange\", {\n            channel: this.channelNumber,\n            isDrumChannel: this.drumChannel\n        });\n        this.programChange(this.preset.program);\n        this.sendChannelProperty();\n    }\n    \n    // noinspection JSUnusedGlobalSymbols\n    /**\n     * Sets a custom vibrato\n     * @param depth {number} cents\n     * @param rate {number} Hz\n     * @param delay {number} seconds\n     */\n    setVibrato(depth, rate, delay)\n    {\n        if (this.lockGSNRPNParams)\n        {\n            return;\n        }\n        this.channelVibrato.rate = rate;\n        this.channelVibrato.delay = delay;\n        this.channelVibrato.depth = depth;\n    }\n    \n    // noinspection JSUnusedGlobalSymbols\n    /**\n     * Yes\n     */\n    disableAndLockGSNRPN()\n    {\n        this.lockGSNRPNParams = true;\n        this.channelVibrato.rate = 0;\n        this.channelVibrato.delay = 0;\n        this.channelVibrato.depth = 0;\n    }\n    \n    \n    /**\n     * @typedef {Object} ChannelProperty\n     * @property {number} voicesAmount - the channel's current voice amount\n     * @property {number} pitchBend - the channel's current pitch bend from -8192 do 8192\n     * @property {number} pitchBendRangeSemitones - the pitch bend's range, in semitones\n     * @property {boolean} isMuted - indicates whether the channel is muted\n     * @property {boolean} isDrum - indicates whether the channel is a drum channel\n     * @property {number} transposition - the channel's transposition, in semitones\n     * @property {number} bank - the bank number of the current preset\n     * @property {number} program - the MIDI program number of the current preset\n     */\n    \n    \n    /**\n     * Sends this channel's property\n     */\n    sendChannelProperty()\n    {\n        if (!this.synth.enableEventSystem)\n        {\n            return;\n        }\n        /**\n         * @type {ChannelProperty}\n         */\n        const data = {\n            voicesAmount: this.voices.length,\n            pitchBend: this.midiControllers[NON_CC_INDEX_OFFSET + modulatorSources.pitchWheel],\n            pitchBendRangeSemitones: this.midiControllers[NON_CC_INDEX_OFFSET + modulatorSources.pitchWheelRange] / 128,\n            isMuted: this.isMuted,\n            isDrum: this.drumChannel,\n            transposition: this.channelTransposeKeyShift + this.customControllers[customControllers.channelTransposeFine] / 100,\n            bank: this.sentBank,\n            program: this.preset?.program\n        };\n        this.synth?.onChannelPropertyChange?.(data, this.channelNumber);\n    }\n    \n    resetGeneratorOverrides()\n    {\n        this.generatorOverrides.fill(GENERATOR_OVERRIDE_NO_CHANGE_VALUE);\n        this.generatorOverridesEnabled = false;\n    }\n    \n    /**\n     * @param gen {generatorTypes}\n     * @param value {number}\n     * @param realtime {boolean}\n     */\n    setGeneratorOverride(gen, value, realtime = false)\n    {\n        this.generatorOverrides[gen] = value;\n        this.generatorOverridesEnabled = true;\n        if (realtime)\n        {\n            this.voices.forEach(v =>\n            {\n                v.generators[gen] = value;\n                this.computeModulators(v);\n            });\n        }\n    }\n    \n    resetGeneratorOffsets()\n    {\n        this.generatorOffsets.fill(0);\n        this.generatorOffsetsEnabled = false;\n    }\n    \n    /**\n     * @param gen {generatorTypes}\n     * @param value {number}\n     */\n    setGeneratorOffset(gen, value)\n    {\n        this.generatorOffsets[gen] = value * generatorLimits[gen].nrpn;\n        this.generatorOffsetsEnabled = true;\n        this.voices.forEach(v =>\n        {\n            this.computeModulators(v);\n        });\n    }\n}\n\n// voice\nMidiAudioChannel.prototype.renderVoice = renderVoice;\nMidiAudioChannel.prototype.panAndMixVoice = panAndMixVoice;\nMidiAudioChannel.prototype.killNote = killNote;\nMidiAudioChannel.prototype.stopAllNotes = stopAllNotes;\nMidiAudioChannel.prototype.muteChannel = muteChannel;\nMidiAudioChannel.prototype.computeModulators = computeModulators;\n\n// MIDI messages\nMidiAudioChannel.prototype.noteOn = noteOn;\nMidiAudioChannel.prototype.noteOff = noteOff;\nMidiAudioChannel.prototype.polyPressure = polyPressure;\nMidiAudioChannel.prototype.channelPressure = channelPressure;\nMidiAudioChannel.prototype.pitchWheel = pitchWheel;\nMidiAudioChannel.prototype.programChange = programChange;\n\n// Tuning\nMidiAudioChannel.prototype.setTuning = setTuning;\nMidiAudioChannel.prototype.setOctaveTuning = setOctaveTuning;\nMidiAudioChannel.prototype.setModulationDepth = setModulationDepth;\nMidiAudioChannel.prototype.transposeChannel = transposeChannel;\n\n// CC\nMidiAudioChannel.prototype.controllerChange = controllerChange;\nMidiAudioChannel.prototype.resetControllers = resetControllers;\nMidiAudioChannel.prototype.resetControllersRP15Compliant = resetControllersRP15Compliant;\nMidiAudioChannel.prototype.resetParameters = resetParameters;\nMidiAudioChannel.prototype.dataEntryFine = dataEntryFine;\nMidiAudioChannel.prototype.dataEntryCoarse = dataEntryCoarse;\n\nexport { MidiAudioChannel };\n", "import { MidiAudioChannel } from \"../engine_components/midi_audio_channel.js\";\n\n/**\n * @param sendEvent {boolean}\n * @this {SpessaSynthProcessor}\n */\nexport function createMidiChannel(sendEvent = false)\n{\n    /**\n     * @type {MidiAudioChannel}\n     */\n    const channel = new MidiAudioChannel(this, this.defaultPreset, this.midiAudioChannels.length);\n    this.midiAudioChannels.push(channel);\n    if (sendEvent)\n    {\n        this.callEvent(\"newchannel\", undefined);\n        channel.sendChannelProperty();\n        this.midiAudioChannels[this.midiAudioChannels.length - 1].setDrums(true);\n    }\n}", "/**\n * @typedef {Object} SynthProcessorOptions\n * @property {boolean?} enableEventSystem - if the event system is enabled.\n * @property {number?} initialTime - initial synth time, in seconds.\n * @property {boolean?} effectsEnabled - if the processor should route audio to the effect channels.\n * @property {number?} midiChannels - the default MIDI channel count.\n */\n\n\n/**\n * @type {SynthProcessorOptions}\n */\nexport const DEFAULT_SYNTH_OPTIONS = {\n    enableEventSystem: true,\n    initialTime: 0,\n    effectsEnabled: true,\n    midiChannels: 16\n};", "import { SpessaSynthInfo } from \"../../utils/loggin.js\";\nimport { consoleColors } from \"../../utils/other.js\";\nimport { voiceKilling } from \"./engine_methods/stopping_notes/voice_killing.js\";\nimport { ALL_CHANNELS_OR_DIFFERENT_ACTION, DEFAULT_SYNTH_MODE, VOICE_CAP } from \"../synth_constants.js\";\nimport { stbvorbis } from \"../../externals/stbvorbis_sync/stbvorbis_sync.min.js\";\nimport { VOLUME_ENVELOPE_SMOOTHING_FACTOR } from \"./engine_components/volume_envelope.js\";\nimport { systemExclusive } from \"./engine_methods/system_exclusive.js\";\nimport { masterParameterType, setMasterParameter } from \"./engine_methods/controller_control/master_parameters.js\";\nimport { resetAllControllers } from \"./engine_methods/controller_control/reset_controllers.js\";\nimport { SoundFontManager } from \"./engine_components/soundfont_manager.js\";\nimport { KeyModifierManager } from \"./engine_components/key_modifier_manager.js\";\nimport { getVoices, getVoicesForPreset } from \"./engine_components/voice.js\";\nimport { PAN_SMOOTHING_FACTOR } from \"./engine_components/stereo_panner.js\";\nimport { stopAllChannels } from \"./engine_methods/stopping_notes/stop_all_channels.js\";\nimport { clearEmbeddedBank, setEmbeddedSoundFont } from \"./engine_methods/soundfont_management/embedded_sound_bank.js\";\nimport { updatePresetList } from \"./engine_methods/soundfont_management/update_preset_list.js\";\nimport { transposeAllChannels } from \"./engine_methods/tuning_control/transpose_all_channels.js\";\nimport { setMasterTuning } from \"./engine_methods/tuning_control/set_master_tuning.js\";\nimport { applySynthesizerSnapshot } from \"./snapshot/apply_synthesizer_snapshot.js\";\nimport { createMidiChannel } from \"./engine_methods/create_midi_channel.js\";\nimport { FILTER_SMOOTHING_FACTOR } from \"./engine_components/lowpass_filter.js\";\nimport { getEvent, messageTypes } from \"../../midi/midi_message.js\";\nimport { IndexedByteArray } from \"../../utils/indexed_array.js\";\nimport { interpolationTypes } from \"./engine_components/enums.js\";\nimport { DEFAULT_SYNTH_OPTIONS } from \"./synth_processor_options.js\";\nimport { fillWithDefaults } from \"../../utils/fill_with_defaults.js\";\nimport { isSystemXG } from \"../../utils/xg_hacks.js\";\n\n\n/**\n * @typedef {\"gm\"|\"gm2\"|\"gs\"|\"xg\"} SynthSystem\n */\n\n/**\n * main_processor.js\n * purpose: the core synthesis engine\n */\n\n\n/**\n * @typedef {Object} NoteOnCallback\n * @property {number} midiNote - The MIDI note number.\n * @property {number} channel - The MIDI channel number.\n * @property {number} velocity - The velocity of the note.\n */\n\n/**\n * @typedef {Object} NoteOffCallback\n * @property {number} midiNote - The MIDI note number.\n * @property {number} channel - The MIDI channel number.\n */\n\n/**\n * @typedef {Object} DrumChangeCallback\n * @property {number} channel - The MIDI channel number.\n * @property {boolean} isDrumChannel - Indicates if the channel is a drum channel.\n */\n\n/**\n * @typedef {Object} ProgramChangeCallback\n * @property {number} channel - The MIDI channel number.\n * @property {number} program - The program number.\n * @property {number} bank - The bank number.\n */\n\n/**\n * @typedef {Object} ControllerChangeCallback\n * @property {number} channel - The MIDI channel number.\n * @property {number} controllerNumber - The controller number.\n * @property {number} controllerValue - The value of the controller.\n */\n\n/**\n * @typedef {Object} MuteChannelCallback\n * @property {number} channel - The MIDI channel number.\n * @property {boolean} isMuted - Indicates if the channel is muted.\n */\n\n/**\n * @typedef {Object} PresetListChangeCallbackSingle\n * @property {string} presetName - The name of the preset.\n * @property {number} bank - The bank number.\n * @property {number} program - The program number.\n */\n\n/**\n * @typedef {PresetListChangeCallbackSingle[]} PresetListChangeCallback - A list of preset objects.\n */\n\n/**\n * @typedef {Object} SynthDisplayCallback\n * @property {Uint8Array} displayData - The data to display.\n * @property {synthDisplayTypes} displayType - The type of display.\n */\n\n/**\n * @typedef {Object} PitchWheelCallback\n * @property {number} channel - The MIDI channel number.\n * @property {number} MSB - The most significant byte of the pitch-wheel value.\n * @property {number} LSB - The least significant byte of the pitch-wheel value.\n */\n\n/**\n * @typedef {Object} ChannelPressureCallback\n * @property {number} channel - The MIDI channel number.\n * @property {number} pressure - The pressure value.\n */\n\n/**\n * @typedef {Error} SoundfontErrorCallback - The error message for soundfont errors.\n */\n\n/**\n * @typedef {\n *     NoteOnCallback |\n *     NoteOffCallback |\n *     DrumChangeCallback |\n *     ProgramChangeCallback |\n *     ControllerChangeCallback |\n *     MuteChannelCallback |\n *     PresetListChangeCallback |\n *     PitchWheelCallback |\n *     SoundfontErrorCallback |\n *     ChannelPressureCallback |\n *     SynthDisplayCallback |\n *     undefined\n * } EventCallbackData\n */\n\n/**\n * @typedef {\n * \"noteon\"|\n * \"noteoff\"|\n * \"pitchwheel\"|\n * \"controllerchange\"|\n * \"programchange\"|\n * \"channelpressure\"|\n * \"polypressure\" |\n * \"drumchange\"|\n * \"stopall\"|\n * \"newchannel\"|\n * \"mutechannel\"|\n * \"presetlistchange\"|\n * \"allcontrollerreset\"|\n * \"soundfonterror\"|\n * \"synthdisplay\"} EventTypes\n */\n\n\n/**\n * @typedef {Object} SynthMethodOptions\n * @property {number} time - the audio context time when the event should execute, in seconds.\n */\n\n/**\n * @type {SynthMethodOptions}\n */\nconst DEFAULT_SYNTH_METHOD_OPTIONS = {\n    time: 0\n};\n\n// if the note is released faster than that, it forced to last that long\n// this is used mostly for drum channels, where a lot of midis like to send instant note off after a note on\nexport const MIN_NOTE_LENGTH = 0.03;\n// this sounds way nicer for an instant hi-hat cutoff\nexport const MIN_EXCLUSIVE_LENGTH = 0.07;\n\nexport const SYNTHESIZER_GAIN = 1.0;\n\n\n// the core synthesis engine of spessasynth.\nclass SpessaSynthProcessor\n{\n    \n    /**\n     * Manages sound banks.\n     * @type {SoundFontManager}\n     */\n    soundfontManager = new SoundFontManager(this.updatePresetList.bind(this));\n    \n    /**\n     * Cached voices for all presets for this synthesizer.\n     * Nesting goes like this:\n     * this.cachedVoices[bankNumber][programNumber][midiNote][velocity] = a list of voices for that.\n     * @type {Voice[][][][][]}\n     */\n    cachedVoices = [];\n    \n    /**\n     * Synth's device id: -1 means all\n     * @type {number}\n     */\n    deviceID = ALL_CHANNELS_OR_DIFFERENT_ACTION;\n    \n    /**\n     * Synth's event queue from the main thread\n     * @type {{callback: function(), time: number}[]}\n     */\n    eventQueue = [];\n    \n    /**\n     * Interpolation type used\n     * @type {interpolationTypes}\n     */\n    interpolationType = interpolationTypes.fourthOrder;\n    \n    /**\n     * Global transposition in semitones\n     * @type {number}\n     */\n    transposition = 0;\n    \n    /**\n     * this.tunings[program][key] = tuning\n     * @type {MTSProgramTuning[]}\n     */\n    tunings = [];\n    \n    /**\n     * The volume gain, set by user\n     * @type {number}\n     */\n    masterGain = SYNTHESIZER_GAIN;\n    \n    /**\n     * The volume gain, set by MIDI sysEx\n     * @type {number}\n     */\n    midiVolume = 1;\n    \n    /**\n     * Reverb linear gain\n     * @type {number}\n     */\n    reverbGain = 1;\n    /**\n     * Chorus linear gain\n     * @type {number}\n     */\n    chorusGain = 1;\n    \n    /**\n     * Set via system exclusive\n     * @type {number}\n     */\n    reverbSend = 1;\n    /**\n     * Set via system exclusive\n     * @type {number}\n     */\n    chorusSend = 1;\n    \n    /**\n     * Maximum number of voices allowed at once\n     * @type {number}\n     */\n    voiceCap = VOICE_CAP;\n    \n    /**\n     * (-1 to 1)\n     * @type {number}\n     */\n    pan = 0.0;\n    /**\n     * the pan of the left channel\n     * @type {number}\n     */\n    panLeft = 0.5;\n    \n    /**\n     * the pan of the right channel\n     * @type {number}\n     */\n    panRight = 0.5;\n    \n    /**\n     * forces note killing instead of releasing\n     * @type {boolean}\n     */\n    highPerformanceMode = false;\n    \n    /**\n     * Handlese custom key overrides: velocity and preset\n     * @type {KeyModifierManager}\n     */\n    keyModifierManager = new KeyModifierManager();\n    \n    /**\n     * contains all the channels with their voices on the processor size\n     * @type {MidiAudioChannel[]}\n     */\n    midiAudioChannels = [];\n    \n    /**\n     * Controls the bank selection & SysEx\n     * @type {SynthSystem}\n     */\n    system = DEFAULT_SYNTH_MODE;\n    /**\n     * Current total voices amount\n     * @type {number}\n     */\n    totalVoicesAmount = 0;\n    \n    /**\n     * Synth's default (reset) preset\n     * @type {BasicPreset}\n     */\n    defaultPreset;\n    \n    /**\n     * Synth's default (reset) drum preset\n     * @type {BasicPreset}\n     */\n    drumPreset;\n    \n    /**\n     * Controls if the processor is fully initialized\n     * @type {Promise<boolean>}\n     */\n    processorInitialized = stbvorbis.isInitialized;\n    \n    /**\n     * Current audio time\n     * @type {number}\n     */\n    currentSynthTime = 0;\n    \n    /**\n     * in hertz\n     * @type {number}\n     */\n    sampleRate;\n    \n    /**\n     * Sample time in seconds\n     * @type {number}\n     */\n    sampleTime;\n    \n    /**\n     * are the chorus and reverb effects enabled?\n     * @type {boolean}\n     */\n    effectsEnabled;\n    \n    \n    /**\n     * for applying the snapshot after an override sound bank too\n     * @type {SynthesizerSnapshot}\n     * @private\n     */\n    _snapshot;\n    \n    /**\n     * Calls when an event occurs.\n     * @type {function}\n     * @param {EventTypes} eventType - the event type.\n     * @param {EventCallbackData} eventData - the event data.\n     */\n    onEventCall;\n    \n    /**\n     * Calls when a channel property is changed.\n     * @type {function}\n     * @param {ChannelProperty} property - the updated property.\n     * @param {number} channelNumber - the channel number of the said property.\n     */\n    onChannelPropertyChange;\n    \n    /**\n     * Calls when a master parameter is changed.\n     * @type {function}\n     * @param {masterParameterType} parameter - the parameter type\n     * @param {number|string} value - the new value.\n     */\n    onMasterParameterChange;\n    \n    \n    /**\n     * Creates a new synthesizer engine.\n     * @param sampleRate {number} - sample rate, in Hertz.\n     * @param options {SynthProcessorOptions} - the processor's options.\n     */\n    constructor(sampleRate,\n                options = DEFAULT_SYNTH_OPTIONS)\n    {\n        options = fillWithDefaults(options, DEFAULT_SYNTH_OPTIONS);\n        /**\n         * Midi output count\n         * @type {number}\n         */\n        this.midiOutputsCount = options.midiChannels;\n        this.effectsEnabled = options.effectsEnabled;\n        this.enableEventSystem = options.enableEventSystem;\n        this.currentSynthTime = options.initialTime;\n        this.sampleTime = 1 / sampleRate;\n        this.sampleRate = sampleRate;\n        \n        // these smoothing factors were tested on 44,100 Hz, adjust them to target sample rate here\n        this.volumeEnvelopeSmoothingFactor = VOLUME_ENVELOPE_SMOOTHING_FACTOR * (44100 / sampleRate);\n        this.panSmoothingFactor = PAN_SMOOTHING_FACTOR * (44100 / sampleRate);\n        this.filterSmoothingFactor = FILTER_SMOOTHING_FACTOR * (44100 / sampleRate);\n        \n        \n        for (let i = 0; i < 128; i++)\n        {\n            this.tunings.push([]);\n        }\n        \n        for (let i = 0; i < this.midiOutputsCount; i++)\n        {\n            this.createMidiChannel(false);\n        }\n        this.processorInitialized.then(() =>\n        {\n            SpessaSynthInfo(\"%cSpessaSynth is ready!\", consoleColors.recognized);\n        });\n    }\n    \n    /**\n     * @returns {number}\n     */\n    get currentGain()\n    {\n        return this.masterGain * this.midiVolume;\n    }\n    \n    getDefaultPresets()\n    {\n        // override this to XG, to set the default preset to NOT be XG drums!\n        const sys = this.system;\n        this.system = \"xg\";\n        this.defaultPreset = this.getPreset(0, 0);\n        this.system = sys;\n        this.drumPreset = this.getPreset(128, 0);\n    }\n    \n    /**\n     * @param value {SynthSystem}\n     */\n    setSystem(value)\n    {\n        this.system = value;\n        this?.onMasterParameterChange?.(masterParameterType.midiSystem, this.system);\n    }\n    \n    /**\n     * @param bank {number}\n     * @param program {number}\n     * @param midiNote {number}\n     * @param velocity {number}\n     * @returns {Voice[]|undefined}\n     */\n    getCachedVoice(bank, program, midiNote, velocity)\n    {\n        return this.cachedVoices?.[bank]?.[program]?.[midiNote]?.[velocity];\n    }\n    \n    /**\n     * @param bank {number}\n     * @param program {number}\n     * @param midiNote {number}\n     * @param velocity {number}\n     * @param voices {Voice[]}\n     */\n    setCachedVoice(bank, program, midiNote, velocity, voices)\n    {\n        // make sure that it exists\n        if (!this.cachedVoices[bank])\n        {\n            this.cachedVoices[bank] = [];\n        }\n        if (!this.cachedVoices[bank][program])\n        {\n            this.cachedVoices[bank][program] = [];\n        }\n        if (!this.cachedVoices[bank][program][midiNote])\n        {\n            this.cachedVoices[bank][program][midiNote] = [];\n        }\n        \n        // cache\n        this.cachedVoices[bank][program][midiNote][velocity] = voices;\n    }\n    \n    // noinspection JSUnusedGlobalSymbols\n    /**\n     * Renders float32 audio data to stereo outputs; buffer size of 128 is recommended\n     * All float arrays must have the same length\n     * @param outputs {Float32Array[]} output stereo channels (L, R)\n     * @param reverb {Float32Array[]} reverb stereo channels (L, R)\n     * @param chorus {Float32Array[]} chorus stereo channels (L, R)\n     * @param startIndex {number} start offset of the passed arrays, rendering starts at this index, defaults to 0\n     * @param sampleCount {number} the length of the rendered buffer, defaults to float32array length - startOffset\n     */\n    renderAudio(outputs,\n                reverb,\n                chorus,\n                startIndex = 0,\n                sampleCount = 0\n    )\n    {\n        this.renderAudioSplit(reverb, chorus, Array(16).fill(outputs), startIndex, sampleCount);\n    }\n    \n    /**\n     * Renders the float32 audio data of each channel; buffer size of 128 is recommended\n     * All float arrays must have the same length\n     * @param reverbChannels {Float32Array[]} reverb stereo channels (L, R)\n     * @param chorusChannels {Float32Array[]} chorus stereo channels (L, R)\n     * @param separateChannels {Float32Array[][]} a total of 16 stereo pairs (L, R) for each MIDI channel\n     * @param startIndex {number} start offset of the passed arrays, rendering starts at this index, defaults to 0\n     * @param sampleCount {number} the length of the rendered buffer, defaults to float32array length - startOffset\n     */\n    renderAudioSplit(reverbChannels,\n                     chorusChannels,\n                     separateChannels,\n                     startIndex = 0,\n                     sampleCount = 0\n    )\n    {\n        // process event queue\n        const time = this.currentSynthTime;\n        while (this.eventQueue[0]?.time <= time)\n        {\n            this.eventQueue.shift().callback();\n        }\n        const revL = reverbChannels[0];\n        const revR = reverbChannels[1];\n        const chrL = chorusChannels[0];\n        const chrR = chorusChannels[1];\n        \n        // validate\n        startIndex = Math.max(startIndex, 0);\n        const quantumSize = sampleCount || separateChannels[0][0].length - startIndex;\n        \n        // for every channel\n        this.totalVoicesAmount = 0;\n        this.midiAudioChannels.forEach((channel, index) =>\n        {\n            if (channel.voices.length < 1 || channel.isMuted)\n            {\n                // there's nothing to do!\n                return;\n            }\n            let voiceCount = channel.voices.length;\n            const ch = index % 16;\n            \n            // render to the appropriate output\n            channel.renderAudio(\n                separateChannels[ch][0], separateChannels[ch][1],\n                revL, revR,\n                chrL, chrR,\n                startIndex, quantumSize\n            );\n            \n            this.totalVoicesAmount += channel.voices.length;\n            // if voice count changed, update voice amount\n            if (channel.voices.length !== voiceCount)\n            {\n                channel.sendChannelProperty();\n            }\n        });\n        \n        // advance the time appropriately\n        this.currentSynthTime += quantumSize * this.sampleTime;\n    }\n    \n    // noinspection JSUnusedGlobalSymbols\n    destroySynthProcessor()\n    {\n        this.midiAudioChannels.forEach(c =>\n        {\n            delete c.midiControllers;\n            delete c.voices;\n            delete c.sustainedVoices;\n            delete c.lockedControllers;\n            delete c.preset;\n            delete c.customControllers;\n        });\n        delete this.cachedVoices;\n        delete this.midiAudioChannels;\n        this.soundfontManager.destroyManager();\n        delete this.soundfontManager;\n    }\n    \n    /**\n     * @param channel {number}\n     * @param controllerNumber {number}\n     * @param controllerValue {number}\n     * @param force {boolean}\n     */\n    controllerChange(channel, controllerNumber, controllerValue, force = false)\n    {\n        this.midiAudioChannels[channel].controllerChange(controllerNumber, controllerValue, force);\n    }\n    \n    /**\n     * @param channel {number}\n     * @param midiNote {number}\n     * @param velocity {number}\n     */\n    noteOn(channel, midiNote, velocity)\n    {\n        this.midiAudioChannels[channel].noteOn(midiNote, velocity);\n    }\n    \n    /**\n     * @param channel {number}\n     * @param midiNote {number}\n     */\n    noteOff(channel, midiNote)\n    {\n        this.midiAudioChannels[channel].noteOff(midiNote);\n    }\n    \n    /**\n     * @param channel {number}\n     * @param midiNote {number}\n     * @param pressure {number}\n     */\n    polyPressure(channel, midiNote, pressure)\n    {\n        this.midiAudioChannels[channel].polyPressure(midiNote, pressure);\n    }\n    \n    /**\n     * @param channel {number}\n     * @param pressure {number}\n     */\n    channelPressure(channel, pressure)\n    {\n        this.midiAudioChannels[channel].channelPressure(pressure);\n    }\n    \n    /**\n     * @param channel {number}\n     * @param MSB {number}\n     * @param LSB {number}\n     */\n    pitchWheel(channel, MSB, LSB)\n    {\n        this.midiAudioChannels[channel].pitchWheel(MSB, LSB);\n    }\n    \n    /**\n     * @param channel {number}\n     * @param programNumber {number}\n     */\n    programChange(channel, programNumber)\n    {\n        this.midiAudioChannels[channel].programChange(programNumber);\n    }\n    \n    // noinspection JSUnusedGlobalSymbols\n    /**\n     * Processes a MIDI message\n     * @param message {Uint8Array} - the message to process\n     * @param channelOffset {number} - channel offset for the message\n     * @param force {boolean} cool stuff\n     * @param options {SynthMethodOptions} - additional options for scheduling the message\n     */\n    processMessage(message, channelOffset = 0, force = false, options = DEFAULT_SYNTH_METHOD_OPTIONS)\n    {\n        const call = () =>\n        {\n            const statusByteData = getEvent(message[0]);\n            \n            const channel = statusByteData.channel + channelOffset;\n            // process the event\n            switch (statusByteData.status)\n            {\n                case messageTypes.noteOn:\n                    const velocity = message[2];\n                    if (velocity > 0)\n                    {\n                        this.noteOn(channel, message[1], velocity);\n                    }\n                    else\n                    {\n                        this.noteOff(channel, message[1]);\n                    }\n                    break;\n                \n                case messageTypes.noteOff:\n                    if (force)\n                    {\n                        this.midiAudioChannels[channel].killNote(message[1]);\n                    }\n                    else\n                    {\n                        this.noteOff(channel, message[1]);\n                    }\n                    break;\n                \n                case messageTypes.pitchBend:\n                    this.pitchWheel(channel, message[2], message[1]);\n                    break;\n                \n                case messageTypes.controllerChange:\n                    this.controllerChange(channel, message[1], message[2], force);\n                    break;\n                \n                case messageTypes.programChange:\n                    this.programChange(channel, message[1]);\n                    break;\n                \n                case messageTypes.polyPressure:\n                    this.polyPressure(channel, message[0], message[1]);\n                    break;\n                \n                case messageTypes.channelPressure:\n                    this.channelPressure(channel, message[1]);\n                    break;\n                \n                case messageTypes.systemExclusive:\n                    this.systemExclusive(new IndexedByteArray(message.slice(1)), channelOffset);\n                    break;\n                \n                case messageTypes.reset:\n                    this.stopAllChannels(true);\n                    this.resetAllControllers();\n                    break;\n                \n                default:\n                    break;\n            }\n        };\n        \n        const time = options.time;\n        if (time > this.currentSynthTime)\n        {\n            this.eventQueue.push({\n                callback: call.bind(this),\n                time: time\n            });\n            this.eventQueue.sort((e1, e2) => e1.time - e2.time);\n        }\n        else\n        {\n            call();\n        }\n    }\n    \n    /**\n     * @param volume {number} 0 to 1\n     */\n    setMIDIVolume(volume)\n    {\n        // GM2 specification, section 4.1: volume is squared.\n        // though, according to my own testing, Math.E seems like a better choice\n        this.midiVolume = Math.pow(volume, Math.E);\n        this.setMasterParameter(masterParameterType.masterPan, this.pan);\n    }\n    \n    /**\n     * Calls synth event\n     * @param eventName {EventTypes} the event name\n     * @param eventData {EventCallbackData}\n     * @this {SpessaSynthProcessor}\n     */\n    callEvent(eventName, eventData)\n    {\n        this?.onEventCall?.(eventName, eventData);\n    }\n    \n    clearCache()\n    {\n        this.cachedVoices = [];\n    }\n    \n    /**\n     * @param program {number}\n     * @param bank {number}\n     * @returns {BasicPreset}\n     */\n    getPreset(bank, program)\n    {\n        return this.soundfontManager.getPreset(bank, program, isSystemXG(this.system)).preset;\n    }\n}\n\n// include other methods\n// voice related\nSpessaSynthProcessor.prototype.voiceKilling = voiceKilling;\nSpessaSynthProcessor.prototype.getVoicesForPreset = getVoicesForPreset;\nSpessaSynthProcessor.prototype.getVoices = getVoices;\n\n// system-exclusive related\nSpessaSynthProcessor.prototype.systemExclusive = systemExclusive;\n\n// channel related\nSpessaSynthProcessor.prototype.stopAllChannels = stopAllChannels;\nSpessaSynthProcessor.prototype.createMidiChannel = createMidiChannel;\nSpessaSynthProcessor.prototype.resetAllControllers = resetAllControllers;\n\n// master parameter related\nSpessaSynthProcessor.prototype.setMasterParameter = setMasterParameter;\n\n// tuning related\nSpessaSynthProcessor.prototype.transposeAllChannels = transposeAllChannels;\nSpessaSynthProcessor.prototype.setMasterTuning = setMasterTuning;\n\n// program related\nSpessaSynthProcessor.prototype.clearEmbeddedBank = clearEmbeddedBank;\nSpessaSynthProcessor.prototype.setEmbeddedSoundFont = setEmbeddedSoundFont;\nSpessaSynthProcessor.prototype.updatePresetList = updatePresetList;\n\n// snapshot related\nSpessaSynthProcessor.prototype.applySynthesizerSnapshot = applySynthesizerSnapshot;\n\nexport { SpessaSynthProcessor };", "/**\n * Reads as Big endian\n * @param dataArray {IndexedByteArray}\n * @param bytesAmount {number}\n * @returns {number}\n */\nexport function readBytesAsUintBigEndian(dataArray, bytesAmount)\n{\n    let out = 0;\n    for (let i = 8 * (bytesAmount - 1); i >= 0; i -= 8)\n    {\n        out |= (dataArray[dataArray.currentIndex++] << i);\n    }\n    return out >>> 0;\n}\n\n/**\n * @param number {number}\n * @param bytesAmount {number}\n * @returns {number[]}\n */\nexport function writeBytesAsUintBigEndian(number, bytesAmount)\n{\n    const bytes = new Array(bytesAmount).fill(0);\n    for (let i = bytesAmount - 1; i >= 0; i--)\n    {\n        bytes[i] = number & 0xFF;\n        number >>= 8;\n    }\n    \n    return bytes;\n}", "import { getEvent, messageTypes } from \"../midi/midi_message.js\";\nimport { consoleColors } from \"../utils/other.js\";\nimport { SpessaSynthWarn } from \"../utils/loggin.js\";\nimport { readBytesAsUintBigEndian } from \"../utils/byte_functions/big_endian.js\";\n\n/**\n * Processes a single event\n * @param event {MIDIMessage}\n * @param trackIndex {number}\n * @this {SpessaSynthSequencer}\n * @private\n */\nexport function _processEvent(event, trackIndex)\n{\n    if (this.sendMIDIMessages)\n    {\n        if (event.messageStatusByte >= 0x80)\n        {\n            this.sendMIDIMessage([event.messageStatusByte, ...event.messageData]);\n            return;\n        }\n    }\n    const statusByteData = getEvent(event.messageStatusByte);\n    const offset = this.midiPortChannelOffsets[this.midiPorts[trackIndex]] || 0;\n    statusByteData.channel += offset;\n    // process the event\n    switch (statusByteData.status)\n    {\n        case messageTypes.noteOn:\n            const velocity = event.messageData[1];\n            if (velocity > 0)\n            {\n                this.synth.noteOn(statusByteData.channel, event.messageData[0], velocity);\n                this.playingNotes.push({\n                    midiNote: event.messageData[0],\n                    channel: statusByteData.channel,\n                    velocity: velocity\n                });\n            }\n            else\n            {\n                this.synth.noteOff(statusByteData.channel, event.messageData[0]);\n                const toDelete = this.playingNotes.findIndex(n =>\n                    n.midiNote === event.messageData[0] && n.channel === statusByteData.channel);\n                if (toDelete !== -1)\n                {\n                    this.playingNotes.splice(toDelete, 1);\n                }\n            }\n            break;\n        \n        case messageTypes.noteOff:\n            this.synth.noteOff(statusByteData.channel, event.messageData[0]);\n            const toDelete = this.playingNotes.findIndex(n =>\n                n.midiNote === event.messageData[0] && n.channel === statusByteData.channel);\n            if (toDelete !== -1)\n            {\n                this.playingNotes.splice(toDelete, 1);\n            }\n            break;\n        \n        case messageTypes.pitchBend:\n            this.synth.pitchWheel(statusByteData.channel, event.messageData[1], event.messageData[0]);\n            break;\n        \n        case messageTypes.controllerChange:\n            // empty tracks cannot cc change\n            if (this.midiData.isMultiPort && this.midiData.usedChannelsOnTrack[trackIndex].size === 0)\n            {\n                return;\n            }\n            this.synth.controllerChange(statusByteData.channel, event.messageData[0], event.messageData[1]);\n            break;\n        \n        case messageTypes.programChange:\n            // empty tracks cannot program change\n            if (this.midiData.isMultiPort && this.midiData.usedChannelsOnTrack[trackIndex].size === 0)\n            {\n                return;\n            }\n            this.synth.programChange(statusByteData.channel, event.messageData[0]);\n            break;\n        \n        case messageTypes.polyPressure:\n            this.synth.polyPressure(statusByteData.channel, event.messageData[0], event.messageData[1]);\n            break;\n        \n        case messageTypes.channelPressure:\n            this.synth.channelPressure(statusByteData.channel, event.messageData[0]);\n            break;\n        \n        case messageTypes.systemExclusive:\n            this.synth.systemExclusive(event.messageData, offset);\n            break;\n        \n        case messageTypes.setTempo:\n            event.messageData.currentIndex = 0;\n            let tempoBPM = 60000000 / readBytesAsUintBigEndian(event.messageData, 3);\n            this.oneTickToSeconds = 60 / (tempoBPM * this.midiData.timeDivision);\n            if (this.oneTickToSeconds === 0)\n            {\n                this.oneTickToSeconds = 60 / (120 * this.midiData.timeDivision);\n                SpessaSynthWarn(\"invalid tempo! falling back to 120 BPM\");\n                tempoBPM = 120;\n            }\n            break;\n        \n        // recognized but ignored\n        case messageTypes.timeSignature:\n        case messageTypes.endOfTrack:\n        case messageTypes.midiChannelPrefix:\n        case messageTypes.songPosition:\n        case messageTypes.activeSensing:\n        case messageTypes.keySignature:\n        case messageTypes.sequenceNumber:\n        case messageTypes.sequenceSpecific:\n        case messageTypes.text:\n        case messageTypes.lyric:\n        case messageTypes.copyright:\n        case messageTypes.trackName:\n        case messageTypes.marker:\n        case messageTypes.cuePoint:\n        case messageTypes.instrumentName:\n        case messageTypes.programName:\n            break;\n        \n        \n        case messageTypes.midiPort:\n            this.assignMIDIPort(trackIndex, event.messageData[0]);\n            break;\n        \n        case messageTypes.reset:\n            this.synth.stopAllChannels();\n            this.synth.resetAllControllers();\n            break;\n        \n        default:\n            SpessaSynthWarn(\n                `%cUnrecognized Event: %c${event.messageStatusByte}%c status byte: %c${Object.keys(\n                    messageTypes).find(k => messageTypes[k] === statusByteData.status)}`,\n                consoleColors.warn,\n                consoleColors.unrecognized,\n                consoleColors.warn,\n                consoleColors.value\n            );\n            break;\n    }\n    if (statusByteData.status >= 0 && statusByteData.status < 0x80)\n    {\n        this?.onMetaEvent?.(event, trackIndex);\n    }\n}\n\n/**\n * Adds 16 channels to the synth\n * @this {SpessaSynthSequencer}\n * @private\n */\nexport function _addNewMidiPort()\n{\n    for (let i = 0; i < 16; i++)\n    {\n        this.synth.createMidiChannel(true);\n    }\n}", "/**\n * Processes a single tick\n * @this {SpessaSynthSequencer}\n */\nexport function processTick()\n{\n    if (!this.isActive)\n    {\n        return;\n    }\n    let current = this.currentTime;\n    while (this.playedTime < current)\n    {\n        // find the next event\n        let trackIndex = this._findFirstEventIndex();\n        let event = this.tracks[trackIndex][this.eventIndex[trackIndex]];\n        this._processEvent(event, trackIndex);\n        \n        this.eventIndex[trackIndex]++;\n        \n        // find the next event\n        trackIndex = this._findFirstEventIndex();\n        if (this.tracks[trackIndex].length <= this.eventIndex[trackIndex])\n        {\n            // the song has ended\n            if (this.loop)\n            {\n                this.setTimeTicks(this.midiData.loop.start);\n                return;\n            }\n            this.eventIndex[trackIndex]--;\n            this.pause(true);\n            if (this.songs.length > 1)\n            {\n                this.nextSong();\n            }\n            return;\n        }\n        let eventNext = this.tracks[trackIndex][this.eventIndex[trackIndex]];\n        this.playedTime += this.oneTickToSeconds * (eventNext.ticks - event.ticks);\n        \n        const canLoop = this.loop && (this.loopCount > 0 || this.loopCount === -1);\n        \n        // if we reached loop.end\n        if ((this.midiData.loop.end <= event.ticks) && canLoop)\n        {\n            // loop\n            if (this.loopCount !== Infinity)\n            {\n                this.loopCount--;\n                this?.onLoopCountChange?.(this.loopCount);\n            }\n            this.setTimeTicks(this.midiData.loop.start);\n            return;\n        }\n        // if the song has ended\n        else if (current >= this.duration)\n        {\n            if (canLoop)\n            {\n                // loop\n                if (this.loopCount !== Infinity)\n                {\n                    this.loopCount--;\n                    this?.onLoopCountChange?.(this.loopCount);\n                }\n                this.setTimeTicks(this.midiData.loop.start);\n                return;\n            }\n            // stop the playback\n            this.eventIndex[trackIndex]--;\n            this.pause(true);\n            if (this.songs.length > 1)\n            {\n                this.nextSong();\n            }\n            return;\n        }\n    }\n}\n\n\n/**\n * @returns {number} the index of the first to the current played time\n * @this {SpessaSynthSequencer}\n */\nexport function _findFirstEventIndex()\n{\n    let index = 0;\n    let ticks = Infinity;\n    this.tracks.forEach((track, i) =>\n    {\n        if (this.eventIndex[i] >= track.length)\n        {\n            return;\n        }\n        if (track[this.eventIndex[i]].ticks < ticks)\n        {\n            index = i;\n            ticks = track[this.eventIndex[i]].ticks;\n        }\n    });\n    return index;\n}", "import { IndexedByteArray } from \"../utils/indexed_array.js\";\n\n/**\n * This is the base type for MIDI files. It contains all the \"metadata\" and information.\n * It extends to:\n * - BasicMIDI, which contains the actual track data of the MIDI file. Essentially the MIDI file itself.\n * - MIDIData, which contains all properties that MIDI does, except for tracks and the embedded soundfont.\n * MIDIData is the \"shell\" of the file which is available on the main thread at all times, containing the metadata.\n */\nclass MIDISequenceData\n{\n    /**\n     * The time division of the sequence, representing the number of ticks per beat.\n     * @type {number}\n     */\n    timeDivision = 0;\n    \n    /**\n     * The duration of the sequence, in seconds.\n     * @type {number}\n     */\n    duration = 0;\n    \n    /**\n     * The tempo changes in the sequence, ordered from the last change to the first.\n     * Each change is represented by an object with a tick position and a tempo value in beats per minute.\n     * @type {{ticks: number, tempo: number}[]}\n     */\n    tempoChanges = [{ ticks: 0, tempo: 120 }];\n    \n    /**\n     * A string containing the copyright information for the MIDI sequence if detected.\n     * @type {string}\n     */\n    copyright = \"\";\n    \n    /**\n     * The number of tracks in the MIDI sequence.\n     * @type {number}\n     */\n    tracksAmount = 0;\n    \n    /**\n     * The track names in the MIDI file, an empty string if not set.\n     * @type {string[]}\n     */\n    trackNames = [];\n    \n    /**\n     * An array containing the lyrics of the sequence, stored as binary chunks (Uint8Array).\n     * @type {Uint8Array[]}\n     */\n    lyrics = [];\n    \n    /**\n     * An array of tick positions where lyrics events occur in the sequence.\n     * @type {number[]}\n     */\n    lyricsTicks = [];\n    \n    /**\n     * The tick position of the first note-on event in the MIDI sequence.\n     * @type {number}\n     */\n    firstNoteOn = 0;\n    \n    /**\n     * The MIDI key range used in the sequence, represented by a minimum and maximum note value.\n     * @type {{min: number, max: number}}\n     */\n    keyRange = { min: 0, max: 127 };\n    \n    /**\n     * The tick position of the last voice event (such as note-on, note-off, or control change) in the sequence.\n     * @type {number}\n     */\n    lastVoiceEventTick = 0;\n    \n    /**\n     * An array of MIDI port numbers used by each track in the sequence.\n     * @type {number[]}\n     */\n    midiPorts = [0];\n    \n    /**\n     * An array of channel offsets for each MIDI port, using the SpessaSynth method.\n     * @type {number[]}\n     */\n    midiPortChannelOffsets = [0];\n    \n    /**\n     * A list of sets, where each set contains the MIDI channels used by each track in the sequence.\n     * @type {Set<number>[]}\n     */\n    usedChannelsOnTrack = [];\n    \n    /**\n     * The loop points (in ticks) of the sequence, including both start and end points.\n     * @type {{start: number, end: number}}\n     */\n    loop = { start: 0, end: 0 };\n    \n    /**\n     * The name of the MIDI sequence.\n     * @type {string}\n     */\n    midiName = \"\";\n    \n    /**\n     * A boolean indicating if the sequence's name is the same as the file name.\n     * @type {boolean}\n     */\n    midiNameUsesFileName = false;\n    \n    /**\n     * The file name of the MIDI sequence, if provided during parsing.\n     * @type {string}\n     */\n    fileName = \"\";\n    \n    /**\n     * The raw, encoded MIDI name, represented as a Uint8Array.\n     * Useful when the MIDI file uses a different code page.\n     * @type {Uint8Array}\n     */\n    rawMidiName;\n    \n    /**\n     * The format of the MIDI file, which can be 0, 1, or 2, indicating the type of the MIDI file.\n     * @type {number}\n     */\n    format = 0;\n    \n    /**\n     * The RMID (Resource-Interchangeable MIDI) info data, if the file is RMID formatted.\n     * Otherwise, this field is undefined.\n     * Chunk type (e.g. \"INAM\"): Chunk data as a binary array.\n     * @type {Record<string, IndexedByteArray>}\n     */\n    RMIDInfo = {};\n    \n    /**\n     * The bank offset used for RMID files.\n     * @type {number}\n     */\n    bankOffset = 0;\n    \n    /**\n     * If the MIDI file is a Soft Karaoke file (.kar), this flag is set to true.\n     * https://www.mixagesoftware.com/en/midikit/help/HTML/karaoke_formats.html\n     * @type {boolean}\n     */\n    isKaraokeFile = false;\n    \n    /**\n     * Indicates if this file is a Multi-Port MIDI file.\n     * @type {boolean}\n     */\n    isMultiPort = false;\n    \n    /**\n     * Converts ticks to time in seconds\n     * @param ticks {number} time in MIDI ticks\n     * @returns {number} time in seconds\n     */\n    MIDIticksToSeconds(ticks)\n    {\n        let totalSeconds = 0;\n        \n        while (ticks > 0)\n        {\n            // tempo changes are reversed, so the first element is the last tempo change\n            // and the last element is the first tempo change\n            // (always at tick 0 and tempo 120)\n            // find the last tempo change that has occurred\n            let tempo = this.tempoChanges.find(v => v.ticks < ticks);\n            \n            // calculate the difference and tempo time\n            let timeSinceLastTempo = ticks - tempo.ticks;\n            totalSeconds += (timeSinceLastTempo * 60) / (tempo.tempo * this.timeDivision);\n            ticks -= timeSinceLastTempo;\n        }\n        \n        return totalSeconds;\n    }\n    \n    /**\n     * INTERNAL USE ONLY!\n     * @param sequence {MIDISequenceData}\n     * @protected\n     */\n    _copyFromSequence(sequence)\n    {\n        // properties can be assigned\n        this.midiName = sequence.midiName;\n        this.midiNameUsesFileName = sequence.midiNameUsesFileName;\n        this.fileName = sequence.fileName;\n        this.timeDivision = sequence.timeDivision;\n        this.duration = sequence.duration;\n        this.copyright = sequence.copyright;\n        this.tracksAmount = sequence.tracksAmount;\n        this.firstNoteOn = sequence.firstNoteOn;\n        this.lastVoiceEventTick = sequence.lastVoiceEventTick;\n        this.format = sequence.format;\n        this.bankOffset = sequence.bankOffset;\n        this.isKaraokeFile = sequence.isKaraokeFile;\n        this.isMultiPort = sequence.isMultiPort;\n        \n        // copying arrays\n        this.tempoChanges = [...sequence.tempoChanges];\n        this.lyrics = sequence.lyrics.map(arr => new Uint8Array(arr));\n        this.lyricsTicks = [...sequence.lyricsTicks];\n        this.midiPorts = [...sequence.midiPorts];\n        this.trackNames = [...sequence.trackNames];\n        this.midiPortChannelOffsets = [...sequence.midiPortChannelOffsets];\n        this.usedChannelsOnTrack = sequence.usedChannelsOnTrack.map(set => new Set(set));\n        this.rawMidiName = sequence.rawMidiName ? new Uint8Array(sequence.rawMidiName) : undefined;\n        \n        // copying objects\n        this.loop = { ...sequence.loop };\n        this.keyRange = { ...sequence.keyRange };\n        this.RMIDInfo = {};\n        for (const [key, value] of Object.entries(sequence.RMIDInfo))\n        {\n            this.RMIDInfo[key] = new IndexedByteArray(value);\n        }\n    }\n}\n\nexport { MIDISequenceData };", "/**\n * Reads VLQ From a MIDI byte array\n * @param MIDIbyteArray {IndexedByteArray}\n * @returns {number}\n */\nexport function readVariableLengthQuantity(MIDIbyteArray)\n{\n    let out = 0;\n    while (MIDIbyteArray)\n    {\n        const byte = MIDIbyteArray[MIDIbyteArray.currentIndex++];\n        // extract the first 7 bytes\n        out = (out << 7) | (byte & 127);\n        \n        // if the last byte isn't 1, stop reading\n        if ((byte >> 7) !== 1)\n        {\n            break;\n        }\n    }\n    return out;\n}\n\n/**\n * Write a VLQ from a number to a byte array\n * @param number {number}\n * @returns {number[]}\n */\nexport function writeVariableLengthQuantity(number)\n{\n    // Add the first byte\n    let bytes = [number & 127];\n    number >>= 7;\n    \n    // Continue processing the remaining bytes\n    while (number > 0)\n    {\n        bytes.unshift((number & 127) | 128);\n        number >>= 7;\n    }\n    return bytes;\n}", "import { messageTypes } from \"../midi_message.js\";\nimport { writeVariableLengthQuantity } from \"../../utils/byte_functions/variable_length_quantity.js\";\nimport { writeBytesAsUintBigEndian } from \"../../utils/byte_functions/big_endian.js\";\n\n/**\n * Exports the midi as a standard MIDI file\n * @this {BasicMIDI}\n */\nexport function writeMIDI()\n{\n    const midi = this;\n    if (!midi.tracks)\n    {\n        throw new Error(\"MIDI has no tracks!\");\n    }\n    /**\n     * @type {Uint8Array[]}\n     */\n    const binaryTrackData = [];\n    for (const track of midi.tracks)\n    {\n        const binaryTrack = [];\n        let currentTick = 0;\n        let runningByte = undefined;\n        for (const event of track)\n        {\n            // Ticks stored in MIDI are absolute, but SMF wants relative. Convert them here.\n            const deltaTicks = event.ticks - currentTick;\n            /**\n             * @type {number[]}\n             */\n            let messageData;\n            // determine the message\n            if (event.messageStatusByte <= messageTypes.sequenceSpecific)\n            {\n                // this is a meta-message\n                // syntax is FF<type><length><data>\n                messageData = [0xff, event.messageStatusByte, ...writeVariableLengthQuantity(event.messageData.length), ...event.messageData];\n                // RP-001:\n                // Sysex events and meta-events cancel any running status which was in effect.\n                runningByte = undefined;\n            }\n            else if (event.messageStatusByte === messageTypes.systemExclusive)\n            {\n                // this is a system exclusive message\n                // syntax is F0<length><data>\n                messageData = [0xf0, ...writeVariableLengthQuantity(event.messageData.length), ...event.messageData];\n                // RP-001:\n                // Sysex events and meta-events cancel any running status which was in effect.\n                runningByte = undefined;\n            }\n            else\n            {\n                // this is a midi message\n                messageData = [];\n                if (runningByte !== event.messageStatusByte)\n                {\n                    // Running byte was not the byte we want. Add the byte here.\n                    runningByte = event.messageStatusByte;\n                    // add the status byte to the midi\n                    messageData.push(event.messageStatusByte);\n                }\n                // add the data\n                messageData.push(...event.messageData);\n            }\n            // write VLQ\n            binaryTrack.push(...writeVariableLengthQuantity(deltaTicks));\n            // write the message\n            binaryTrack.push(...messageData);\n            currentTick += deltaTicks;\n        }\n        binaryTrackData.push(new Uint8Array(binaryTrack));\n    }\n    \n    /**\n     * @param text {string}\n     * @param arr {number[]}\n     */\n    function writeText(text, arr)\n    {\n        for (let i = 0; i < text.length; i++)\n        {\n            arr.push(text.charCodeAt(i));\n        }\n    }\n    \n    // write the file\n    const binaryData = [];\n    // write header\n    writeText(\"MThd\", binaryData); // MThd\n    binaryData.push(...writeBytesAsUintBigEndian(6, 4)); // length\n    binaryData.push(0, midi.format); // format\n    binaryData.push(...writeBytesAsUintBigEndian(midi.tracksAmount, 2)); // num tracks\n    binaryData.push(...writeBytesAsUintBigEndian(midi.timeDivision, 2)); // time division\n    \n    // write tracks\n    for (const track of binaryTrackData)\n    {\n        // write track header\n        writeText(\"MTrk\", binaryData); // MTrk\n        binaryData.push(...writeBytesAsUintBigEndian(track.length, 4)); // length\n        binaryData.push(...track); // write data\n    }\n    return new Uint8Array(binaryData);\n}", "/**\n * @param e {MIDIMessage}\n * @returns boolean\n */\nexport function isXGOn(e)\n{\n    return e.messageData[0] === 0x43 && // Yamaha\n        e.messageData[2] === 0x4C &&    // XG ON\n        e.messageData[5] === 0x7E &&\n        e.messageData[6] === 0x00;\n}\n\n/**\n * @param e {MIDIMessage}\n * @returns boolean\n */\nexport function isGSDrumsOn(e)\n{\n    return e.messageData[0] === 0x41 &&     // roland\n        e.messageData[2] === 0x42 &&        // GS\n        e.messageData[3] === 0x12 &&        // GS\n        e.messageData[4] === 0x40 &&        // system parameter\n        (e.messageData[5] & 0x10) !== 0 &&  // part parameter\n        e.messageData[6] === 0x15;          // drum pars\n}\n\n/**\n * @param e {MIDIMessage}\n * @returns boolean\n */\nexport function isGSOn(e)\n{\n    return e.messageData[0] === 0x41  // roland\n        && e.messageData[2] === 0x42  // GS\n        && e.messageData[6] === 0x7F; // Mode set\n}\n\n/**\n * @param e {MIDIMessage}\n * @returns boolean\n */\nexport function isGMOn(e)\n{\n    return e.messageData[0] === 0x7E  // non realtime\n        && e.messageData[2] === 0x09  // gm system\n        && e.messageData[3] === 0x01; // gm1\n}\n\n/**\n * @param e {MIDIMessage}\n * @returns boolean\n */\nexport function isGM2On(e)\n{\n    return e.messageData[0] === 0x7E  // non realtime\n        && e.messageData[2] === 0x09  // gm system\n        && e.messageData[3] === 0x03; // gm2\n}", "import { messageTypes, midiControllers, MIDIMessage } from \"../midi_message.js\";\nimport { IndexedByteArray } from \"../../utils/indexed_array.js\";\nimport { SpessaSynthGroupCollapsed, SpessaSynthGroupEnd, SpessaSynthInfo } from \"../../utils/loggin.js\";\nimport { consoleColors } from \"../../utils/other.js\";\n\nimport { customControllers } from \"../../synthetizer/audio_engine/engine_components/controller_tables.js\";\nimport { DEFAULT_PERCUSSION } from \"../../synthetizer/synth_constants.js\";\nimport { isGM2On, isGMOn, isGSOn, isXGOn } from \"../../utils/sysex_detector.js\";\nimport { isSystemXG, isXGDrums, XG_SFX_VOICE } from \"../../utils/xg_hacks.js\";\n\n/**\n * @param ticks {number}\n * @returns {MIDIMessage}\n */\nexport function getGsOn(ticks)\n{\n    return new MIDIMessage(\n        ticks,\n        messageTypes.systemExclusive,\n        new IndexedByteArray([\n            0x41, // Roland\n            0x10, // Device ID (defaults to 16 on roland)\n            0x42, // GS\n            0x12, // Command ID (DT1) (whatever that means...)\n            0x40, // System parameter - Address\n            0x00, // Global parameter -  Address\n            0x7F, // GS Change - Address\n            0x00, // turn on - Data\n            0x41, // checksum\n            0xF7 // end of exclusive\n        ])\n    );\n}\n\n/**\n * @param channel {number}\n * @param cc {number}\n * @param value {number}\n * @param ticks {number}\n * @returns {MIDIMessage}\n */\nfunction getControllerChange(channel, cc, value, ticks)\n{\n    return new MIDIMessage(\n        ticks,\n        messageTypes.controllerChange | (channel % 16),\n        new IndexedByteArray([cc, value])\n    );\n}\n\n/**\n * @param channel {number}\n * @param ticks {number}\n * @returns {MIDIMessage}\n */\nfunction getDrumChange(channel, ticks)\n{\n    const chanAddress = 0x10 | [1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11, 12, 13, 14, 15][channel % 16];\n    // excluding manufacturerID DeviceID and ModelID (and F7)\n    const sysexData = [\n        0x41, // Roland\n        0x10, // Device ID (defaults to 16 on roland)\n        0x42, // GS\n        0x12, // Command ID (DT1) (whatever that means...)\n        0x40, // System parameter           }\n        chanAddress, // Channel parameter   } Address\n        0x15, // Drum change                }\n        0x01 // Is Drums                    } Data\n    ];\n    // calculate checksum\n    // https://cdn.roland.com/assets/media/pdf/F-20_MIDI_Imple_e01_W.pdf section 4\n    const sum = 0x40 + chanAddress + 0x15 + 0x01;\n    const checksum = 128 - (sum % 128);\n    // add system exclusive to enable drums\n    return new MIDIMessage(\n        ticks,\n        messageTypes.systemExclusive,\n        new IndexedByteArray([\n            ...sysexData,\n            checksum,\n            0xF7\n        ])\n    );\n}\n\n/**\n * @typedef {Object} DesiredProgramChange\n * @property {number} channel - The channel number.\n * @property {number} program - The program number.\n * @property {number} bank - The bank number.\n * @property {boolean} isDrum - Indicates if the channel is a drum channel.\n * If it is, then the bank number is ignored.\n */\n\n/**\n * @typedef {Object} DesiredControllerChange\n * @property {number} channel - The channel number.\n * @property {number} controllerNumber - The MIDI controller number.\n * @property {number} controllerValue - The new controller value.\n */\n\n/**\n * @typedef {Object} DesiredChanneltranspose\n * @property {number} channel - The channel number.\n * @property {number} keyShift - The number of semitones to transpose.\n * Note that this can use floating point numbers,\n * which will be used to fine-tune the pitch in cents using RPN.\n */\n\n\n/**\n * Allows easy editing of the file by removing channels, changing programs,\n * changing controllers and transposing channels. Note that this modifies the MIDI in-place.\n *\n * @this {BasicMIDI}\n * @param {DesiredProgramChange[]} desiredProgramChanges - The programs to set on given channels.\n * @param {DesiredControllerChange[]} desiredControllerChanges - The controllers to set on given channels.\n * @param {number[]} desiredChannelsToClear - The channels to remove from the sequence.\n * @param {DesiredChanneltranspose[]} desiredChannelsToTranspose - The channels to transpose.\n */\nexport function modifyMIDI(\n    desiredProgramChanges = [],\n    desiredControllerChanges = [],\n    desiredChannelsToClear = [],\n    desiredChannelsToTranspose = []\n)\n{\n    const midi = this;\n    SpessaSynthGroupCollapsed(\"%cApplying changes to the MIDI file...\", consoleColors.info);\n    \n    SpessaSynthInfo(\"Desired program changes:\", desiredProgramChanges);\n    SpessaSynthInfo(\"Desired CC changes:\", desiredControllerChanges);\n    SpessaSynthInfo(\"Desired channels to clear:\", desiredChannelsToClear);\n    SpessaSynthInfo(\"Desired channels to transpose:\", desiredChannelsToTranspose);\n    \n    /**\n     * @type {Set<number>}\n     */\n    const channelsToChangeProgram = new Set();\n    desiredProgramChanges.forEach(c =>\n    {\n        channelsToChangeProgram.add(c.channel);\n    });\n    \n    \n    // go through all events one by one\n    let system = \"gs\";\n    let addedGs = false;\n    /**\n     * indexes for tracks\n     * @type {number[]}\n     */\n    const eventIndexes = Array(midi.tracks.length).fill(0);\n    let remainingTracks = midi.tracks.length;\n    \n    function findFirstEventIndex()\n    {\n        let index = 0;\n        let ticks = Infinity;\n        midi.tracks.forEach((track, i) =>\n        {\n            if (eventIndexes[i] >= track.length)\n            {\n                return;\n            }\n            if (track[eventIndexes[i]].ticks < ticks)\n            {\n                index = i;\n                ticks = track[eventIndexes[i]].ticks;\n            }\n        });\n        return index;\n    }\n    \n    // it copies midiPorts everywhere else, but here 0 works so DO NOT CHANGE!\n    /**\n     * midi port number for the corresponding track\n     * @type {number[]}\n     */\n    const midiPorts = midi.midiPorts.slice();\n    /**\n     * midi port: channel offset\n     * @type {Record<number, number>}\n     */\n    const midiPortChannelOffsets = {};\n    let midiPortChannelOffset = 0;\n    \n    function assignMIDIPort(trackNum, port)\n    {\n        // do not assign ports to empty tracks\n        if (midi.usedChannelsOnTrack[trackNum].size === 0)\n        {\n            return;\n        }\n        \n        // assign new 16 channels if the port is not occupied yet\n        if (midiPortChannelOffset === 0)\n        {\n            midiPortChannelOffset += 16;\n            midiPortChannelOffsets[port] = 0;\n        }\n        \n        if (midiPortChannelOffsets[port] === undefined)\n        {\n            midiPortChannelOffsets[port] = midiPortChannelOffset;\n            midiPortChannelOffset += 16;\n        }\n        \n        midiPorts[trackNum] = port;\n    }\n    \n    // assign port offsets\n    midi.midiPorts.forEach((port, trackIndex) =>\n    {\n        assignMIDIPort(trackIndex, port);\n    });\n    \n    const channelsAmount = midiPortChannelOffset;\n    /**\n     * Tracks if the channel already had its first note on\n     * @type {boolean[]}\n     */\n    const isFirstNoteOn = Array(channelsAmount).fill(true);\n    \n    /**\n     * MIDI key transpose\n     * @type {number[]}\n     */\n    const coarseTranspose = Array(channelsAmount).fill(0);\n    /**\n     * RPN fine transpose\n     * @type {number[]}\n     */\n    const fineTranspose = Array(channelsAmount).fill(0);\n    desiredChannelsToTranspose.forEach(transpose =>\n    {\n        const coarse = Math.trunc(transpose.keyShift);\n        const fine = transpose.keyShift - coarse;\n        coarseTranspose[transpose.channel] = coarse;\n        fineTranspose[transpose.channel] = fine;\n    });\n    \n    while (remainingTracks > 0)\n    {\n        let trackNum = findFirstEventIndex();\n        const track = midi.tracks[trackNum];\n        if (eventIndexes[trackNum] >= track.length)\n        {\n            remainingTracks--;\n            continue;\n        }\n        const index = eventIndexes[trackNum]++;\n        const e = track[index];\n        \n        const deleteThisEvent = () =>\n        {\n            track.splice(index, 1);\n            eventIndexes[trackNum]--;\n        };\n        \n        /**\n         * @param e {MIDIMessage}\n         * @param offset{number}\n         */\n        const addEventBefore = (e, offset = 0) =>\n        {\n            track.splice(index + offset, 0, e);\n            eventIndexes[trackNum]++;\n        };\n        \n        \n        let portOffset = midiPortChannelOffsets[midiPorts[trackNum]] || 0;\n        if (e.messageStatusByte === messageTypes.midiPort)\n        {\n            assignMIDIPort(trackNum, e.messageData[0]);\n            continue;\n        }\n        // don't clear meta\n        if (e.messageStatusByte <= messageTypes.sequenceSpecific && e.messageStatusByte >= messageTypes.sequenceNumber)\n        {\n            continue;\n        }\n        const status = e.messageStatusByte & 0xF0;\n        const midiChannel = e.messageStatusByte & 0xF;\n        const channel = midiChannel + portOffset;\n        // clear channel?\n        if (desiredChannelsToClear.indexOf(channel) !== -1)\n        {\n            deleteThisEvent();\n            continue;\n        }\n        switch (status)\n        {\n            case messageTypes.noteOn:\n                // is it first?\n                if (isFirstNoteOn[channel])\n                {\n                    isFirstNoteOn[channel] = false;\n                    // all right, so this is the first note on\n                    // first: controllers\n                    // because FSMP does not like program changes after cc changes in embedded midis\n                    // and since we use splice,\n                    // controllers get added first, then programs before them\n                    // now add controllers\n                    desiredControllerChanges.filter(c => c.channel === channel).forEach(change =>\n                    {\n                        const ccChange = getControllerChange(\n                            midiChannel,\n                            change.controllerNumber,\n                            change.controllerValue,\n                            e.ticks\n                        );\n                        addEventBefore(ccChange);\n                    });\n                    const fineTune = fineTranspose[channel];\n                    \n                    if (fineTune !== 0)\n                    {\n                        // add rpn\n                        // 64 is the center, 96 = 50 cents up\n                        const centsCoarse = (fineTune * 64) + 64;\n                        const rpnCoarse = getControllerChange(midiChannel, midiControllers.RPNMsb, 0, e.ticks);\n                        const rpnFine = getControllerChange(midiChannel, midiControllers.RPNLsb, 1, e.ticks);\n                        const dataEntryCoarse = getControllerChange(\n                            channel,\n                            midiControllers.dataEntryMsb,\n                            centsCoarse,\n                            e.ticks\n                        );\n                        const dataEntryFine = getControllerChange(\n                            midiChannel,\n                            midiControllers.lsbForControl6DataEntry,\n                            0,\n                            e.ticks\n                        );\n                        addEventBefore(dataEntryFine);\n                        addEventBefore(dataEntryCoarse);\n                        addEventBefore(rpnFine);\n                        addEventBefore(rpnCoarse);\n                        \n                    }\n                    \n                    if (channelsToChangeProgram.has(channel))\n                    {\n                        const change = desiredProgramChanges.find(c => c.channel === channel);\n                        let desiredBank = Math.max(0, Math.min(change.bank, 127));\n                        const desiredProgram = change.program;\n                        SpessaSynthInfo(\n                            `%cSetting %c${change.channel}%c to %c${desiredBank}:${desiredProgram}%c. Track num: %c${trackNum}`,\n                            consoleColors.info,\n                            consoleColors.recognized,\n                            consoleColors.info,\n                            consoleColors.recognized,\n                            consoleColors.info,\n                            consoleColors.recognized\n                        );\n                        \n                        // note: this is in reverse.\n                        // the output event order is: drums -> lsb -> msb -> program change\n                        \n                        // add program change\n                        const programChange = new MIDIMessage(\n                            e.ticks,\n                            messageTypes.programChange | midiChannel,\n                            new IndexedByteArray([\n                                desiredProgram\n                            ])\n                        );\n                        addEventBefore(programChange);\n                        \n                        const addBank = (isLSB, v) =>\n                        {\n                            const bankChange = getControllerChange(\n                                midiChannel,\n                                isLSB ? midiControllers.lsbForControl0BankSelect : midiControllers.bankSelect,\n                                v,\n                                e.ticks\n                            );\n                            addEventBefore(bankChange);\n                        };\n                        \n                        // on xg, add lsb\n                        if (isSystemXG(system))\n                        {\n                            // xg drums: msb can be 120, 126 or 127\n                            if (change.isDrum)\n                            {\n                                SpessaSynthInfo(\n                                    `%cAdding XG Drum change on track %c${trackNum}`,\n                                    consoleColors.recognized,\n                                    consoleColors.value\n                                );\n                                addBank(false, isXGDrums(desiredBank) ? desiredBank : 127);\n                                addBank(true, 0);\n                            }\n                            else\n                            {\n                                // sfx voice is set via MSB\n                                if (desiredBank === XG_SFX_VOICE)\n                                {\n                                    addBank(false, XG_SFX_VOICE);\n                                    addBank(true, 0);\n                                }\n                                else\n                                {\n                                    // add variation as LSB\n                                    addBank(false, 0);\n                                    addBank(true, desiredBank);\n                                }\n                            }\n                        }\n                        else\n                        {\n                            // add just msb\n                            addBank(false, desiredBank);\n                            \n                            if (change.isDrum && midiChannel !== DEFAULT_PERCUSSION)\n                            {\n                                // add gs drum change\n                                SpessaSynthInfo(\n                                    `%cAdding GS Drum change on track %c${trackNum}`,\n                                    consoleColors.recognized,\n                                    consoleColors.value\n                                );\n                                addEventBefore(getDrumChange(midiChannel, e.ticks));\n                            }\n                        }\n                    }\n                }\n                // transpose key (for zero it won't change anyway)\n                e.messageData[0] += coarseTranspose[channel];\n                break;\n            \n            case messageTypes.noteOff:\n                e.messageData[0] += coarseTranspose[channel];\n                break;\n            \n            case messageTypes.programChange:\n                // do we delete it?\n                if (channelsToChangeProgram.has(channel))\n                {\n                    // this channel has program change. BEGONE!\n                    deleteThisEvent();\n                    continue;\n                }\n                break;\n            \n            case messageTypes.controllerChange:\n                const ccNum = e.messageData[0];\n                const changes = desiredControllerChanges.find(c => c.channel === channel && ccNum === c.controllerNumber);\n                if (changes !== undefined)\n                {\n                    // this controller is locked, BEGONE CHANGE!\n                    deleteThisEvent();\n                    continue;\n                }\n                // bank maybe?\n                if (ccNum === midiControllers.bankSelect || ccNum === midiControllers.lsbForControl0BankSelect)\n                {\n                    if (channelsToChangeProgram.has(channel))\n                    {\n                        // BEGONE!\n                        deleteThisEvent();\n                        continue;\n                    }\n                }\n                break;\n            \n            case messageTypes.systemExclusive:\n                // check for xg on\n                if (isXGOn(e))\n                {\n                    SpessaSynthInfo(\"%cXG system on detected\", consoleColors.info);\n                    system = \"xg\";\n                    addedGs = true; // flag as true so gs won't get added\n                }\n                else\n                    // check for xg program change\n                if (\n                    e.messageData[0] === 0x43 // yamaha\n                    && e.messageData[2] === 0x4C // XG\n                    && e.messageData[3] === 0x08 // part parameter\n                    && e.messageData[5] === 0x03 // program change\n                )\n                {\n                    // do we delete it?\n                    if (channelsToChangeProgram.has(e.messageData[4] + portOffset))\n                    {\n                        // this channel has program change. BEGONE!\n                        deleteThisEvent();\n                    }\n                }\n                else\n                    // check for GS on\n                if (isGSOn(e))\n                {\n                    // that's a GS on, we're done here\n                    addedGs = true;\n                    SpessaSynthInfo(\n                        \"%cGS on detected!\",\n                        consoleColors.recognized\n                    );\n                    break;\n                }\n                else\n                    // check for GM/2 on\n                if (isGMOn(e) || isGM2On(e))\n                {\n                    // that's a GM1 system change, remove it!\n                    SpessaSynthInfo(\n                        \"%cGM/2 on detected, removing!\",\n                        consoleColors.info\n                    );\n                    deleteThisEvent();\n                    addedGs = false;\n                }\n        }\n    }\n    // check for gs\n    if (!addedGs && desiredProgramChanges.length > 0)\n    {\n        // gs is not on, add it on the first track at index 0 (or 1 if track name is first)\n        let index = 0;\n        if (midi.tracks[0][0].messageStatusByte === messageTypes.trackName)\n        {\n            index++;\n        }\n        midi.tracks[0].splice(index, 0, getGsOn(0));\n        SpessaSynthInfo(\"%cGS on not detected. Adding it.\", consoleColors.info);\n    }\n    this.flush();\n    SpessaSynthGroupEnd();\n}\n\n/**\n * Modifies the sequence according to the locked presets and controllers in the given snapshot\n * @this {BasicMIDI}\n * @param snapshot {SynthesizerSnapshot}\n */\nexport function applySnapshotToMIDI(snapshot)\n{\n    /**\n     * @type {{\n     *     channel: number,\n     *     keyShift: number\n     * }[]}\n     */\n    const channelsToTranspose = [];\n    /**\n     * @type {number[]}\n     */\n    const channelsToClear = [];\n    /**\n     * @type {{\n     *     channel: number,\n     *     program: number,\n     *     bank: number,\n     *     isDrum: boolean\n     * }[]}\n     */\n    const programChanges = [];\n    /**\n     *\n     * @type {{\n     *     channel: number,\n     *     controllerNumber: number,\n     *     controllerValue: number\n     * }[]}\n     */\n    const controllerChanges = [];\n    snapshot.channelSnapshots.forEach((channel, channelNumber) =>\n    {\n        if (channel.isMuted)\n        {\n            channelsToClear.push(channelNumber);\n            return;\n        }\n        const transposeFloat = channel.channelTransposeKeyShift + channel.customControllers[customControllers.channelTransposeFine] / 100;\n        if (transposeFloat !== 0)\n        {\n            channelsToTranspose.push({\n                channel: channelNumber,\n                keyShift: transposeFloat\n            });\n        }\n        if (channel.lockPreset)\n        {\n            programChanges.push({\n                channel: channelNumber,\n                program: channel.program,\n                bank: channel.bank,\n                isDrum: channel.drumChannel\n            });\n        }\n        // check for locked controllers and change them appropriately\n        channel.lockedControllers.forEach((l, ccNumber) =>\n        {\n            if (!l || ccNumber > 127 || ccNumber === midiControllers.bankSelect)\n            {\n                return;\n            }\n            const targetValue = channel.midiControllers[ccNumber] >> 7; // channel controllers are stored as 14 bit values\n            controllerChanges.push({\n                channel: channelNumber,\n                controllerNumber: ccNumber,\n                controllerValue: targetValue\n            });\n        });\n    });\n    this.modifyMIDI(programChanges, controllerChanges, channelsToClear, channelsToTranspose);\n}", "import { IndexedByteArray } from \"../../utils/indexed_array.js\";\nimport { writeRIFFChunkParts, writeRIFFChunkRaw } from \"../../soundfont/basic_soundfont/riff_chunk.js\";\nimport { getStringBytes } from \"../../utils/byte_functions/string.js\";\nimport { messageTypes, midiControllers, MIDIMessage } from \"../midi_message.js\";\nimport { getGsOn } from \"./midi_editor.js\";\nimport { SpessaSynthGroup, SpessaSynthGroupEnd, SpessaSynthInfo } from \"../../utils/loggin.js\";\nimport { consoleColors } from \"../../utils/other.js\";\nimport { writeLittleEndian } from \"../../utils/byte_functions/little_endian.js\";\nimport { DEFAULT_PERCUSSION } from \"../../synthetizer/synth_constants.js\";\nimport { chooseBank, isSystemXG, parseBankSelect } from \"../../utils/xg_hacks.js\";\nimport { isGM2On, isGMOn, isGSDrumsOn, isGSOn, isXGOn } from \"../../utils/sysex_detector.js\";\n\n/**\n * @enum {string}\n */\nexport const RMIDINFOChunks = {\n    name: \"INAM\",\n    album: \"IPRD\",\n    album2: \"IALB\",\n    artist: \"IART\",\n    genre: \"IGNR\",\n    picture: \"IPIC\",\n    copyright: \"ICOP\",\n    creationDate: \"ICRD\",\n    comment: \"ICMT\",\n    engineer: \"IENG\",\n    software: \"ISFT\",\n    encoding: \"IENC\",\n    midiEncoding: \"MENC\",\n    bankOffset: \"DBNK\"\n};\n\nconst FORCED_ENCODING = \"utf-8\";\nconst DEFAULT_COPYRIGHT = \"Created using SpessaSynth\";\n\n/**\n * @typedef {Object} RMIDMetadata\n * @property {string} name - the name of the file\n * @property {string} engineer - the engineer who worked on the file\n * @property {string} artist - the artist\n * @property {string} album - the album\n * @property {string} genre - the genre of the song\n * @property {ArrayBuffer} picture - the image for the file (album cover)\n * @property {string} comment - the coment of the file\n * @property {string} creationDate - the creation date of the file\n * @property {string} copyright - the copyright of the file\n * @property {string} midiEncoding - the encoding of the inner MIDI file\n */\n\n/**\n * Writes an RMIDI file. Note that this method modifies the MIDI file in-place.\n * @this {BasicMIDI}\n * @param soundfontBinary {Uint8Array}\n * @param soundfont {BasicSoundBank}\n * @param bankOffset {number} the bank offset for RMIDI\n * @param encoding {string} the encoding of the RMIDI info chunk\n * @param metadata {Partial<RMIDMetadata>} the metadata of the file. Optional. If provided, the encoding is forced to utf-8/\n * @param correctBankOffset {boolean}\n * @returns {IndexedByteArray}\n */\nexport function writeRMIDI(\n    soundfontBinary,\n    soundfont,\n    bankOffset = 0,\n    encoding = \"Shift_JIS\",\n    metadata = {},\n    correctBankOffset = true\n)\n{\n    const mid = this;\n    SpessaSynthGroup(\"%cWriting the RMIDI File...\", consoleColors.info);\n    SpessaSynthInfo(\n        `%cConfiguration: Bank offset: %c${bankOffset}%c, encoding: %c${encoding}`,\n        consoleColors.info,\n        consoleColors.value,\n        consoleColors.info,\n        consoleColors.value\n    );\n    SpessaSynthInfo(\"metadata\", metadata);\n    SpessaSynthInfo(\"Initial bank offset\", mid.bankOffset);\n    if (correctBankOffset)\n    {\n        // Add the offset to the bank.\n        // See https://github.com/spessasus/sf2-rmidi-specification#readme\n        // also fix presets that don't exist\n        // since midi player6 doesn't seem to default to 0 when non-existent...\n        let system = \"gm\";\n        /**\n         * The unwanted system messages such as gm/gm2 on\n         * @type {{tNum: number, e: MIDIMessage}[]}\n         */\n        let unwantedSystems = [];\n        /**\n         * indexes for tracks\n         * @type {number[]}\n         */\n        const eventIndexes = Array(mid.tracks.length).fill(0);\n        let remainingTracks = mid.tracks.length;\n        \n        function findFirstEventIndex()\n        {\n            let index = 0;\n            let ticks = Infinity;\n            mid.tracks.forEach((track, i) =>\n            {\n                if (eventIndexes[i] >= track.length)\n                {\n                    return;\n                }\n                if (track[eventIndexes[i]].ticks < ticks)\n                {\n                    index = i;\n                    ticks = track[eventIndexes[i]].ticks;\n                }\n            });\n            return index;\n        }\n        \n        // it copies midiPorts everywhere else, but here 0 works so DO NOT CHANGE!\n        const ports = Array(mid.tracks.length).fill(0);\n        const channelsAmount = 16 + mid.midiPortChannelOffsets.reduce((max, cur) => cur > max ? cur : max);\n        /**\n         * @type {{\n         *     program: number,\n         *     drums: boolean,\n         *     lastBank: MIDIMessage,\n         *     lastBankLSB: MIDIMessage,\n         *     hasBankSelect: boolean\n         * }[]}\n         */\n        const channelsInfo = [];\n        for (let i = 0; i < channelsAmount; i++)\n        {\n            channelsInfo.push({\n                program: 0,\n                drums: i % 16 === DEFAULT_PERCUSSION, // drums appear on 9 every 16 channels,\n                lastBank: undefined,\n                lastBankLSB: undefined,\n                hasBankSelect: false\n            });\n        }\n        while (remainingTracks > 0)\n        {\n            let trackNum = findFirstEventIndex();\n            const track = mid.tracks[trackNum];\n            if (eventIndexes[trackNum] >= track.length)\n            {\n                remainingTracks--;\n                continue;\n            }\n            const e = track[eventIndexes[trackNum]];\n            eventIndexes[trackNum]++;\n            \n            let portOffset = mid.midiPortChannelOffsets[ports[trackNum]];\n            if (e.messageStatusByte === messageTypes.midiPort)\n            {\n                ports[trackNum] = e.messageData[0];\n                continue;\n            }\n            const status = e.messageStatusByte & 0xF0;\n            if (\n                status !== messageTypes.controllerChange &&\n                status !== messageTypes.programChange &&\n                status !== messageTypes.systemExclusive\n            )\n            {\n                continue;\n            }\n            \n            if (status === messageTypes.systemExclusive)\n            {\n                // check for drum sysex\n                if (!isGSDrumsOn(e))\n                {\n                    // check for XG\n                    if (isXGOn(e))\n                    {\n                        system = \"xg\";\n                    }\n                    else if (isGSOn(e))\n                    {\n                        system = \"gs\";\n                    }\n                    else if (isGMOn(e))\n                    {\n                        // we do not want gm1\n                        system = \"gm\";\n                        unwantedSystems.push({\n                            tNum: trackNum,\n                            e: e\n                        });\n                    }\n                    else if (isGM2On(e))\n                    {\n                        system = \"gm2\";\n                    }\n                    continue;\n                }\n                const sysexChannel = [9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15][e.messageData[5] & 0x0F] + portOffset;\n                channelsInfo[sysexChannel].drums = !!(e.messageData[7] > 0 && e.messageData[5] >> 4);\n                continue;\n            }\n            \n            // program change\n            const chNum = (e.messageStatusByte & 0xF) + portOffset;\n            /**\n             * @type {{program: number, drums: boolean, lastBank: MIDIMessage, lastBankLSB: MIDIMessage, hasBankSelect: boolean}}\n             */\n            const channel = channelsInfo[chNum];\n            if (status === messageTypes.programChange)\n            {\n                const isXG = isSystemXG(system);\n                // check if the preset for this program exists\n                const initialProgram = e.messageData[0];\n                if (channel.drums)\n                {\n                    if (soundfont.presets.findIndex(p => p.program === initialProgram && p.isDrumPreset(\n                        isXG,\n                        true\n                    )) === -1)\n                    {\n                        // doesn't exist. pick any preset that has bank 128.\n                        e.messageData[0] = soundfont.presets.find(p => p.isDrumPreset(isXG))?.program || 0;\n                        SpessaSynthInfo(\n                            `%cNo drum preset %c${initialProgram}%c. Channel %c${chNum}%c. Changing program to ${e.messageData[0]}.`,\n                            consoleColors.info,\n                            consoleColors.unrecognized,\n                            consoleColors.info,\n                            consoleColors.recognized,\n                            consoleColors.info\n                        );\n                    }\n                }\n                else\n                {\n                    if (soundfont.presets.findIndex(p => p.program === initialProgram && !p.isDrumPreset(isXG)) === -1)\n                    {\n                        // doesn't exist. pick any preset that does not have bank 128.\n                        e.messageData[0] = soundfont.presets.find(p => !p.isDrumPreset(isXG))?.program || 0;\n                        SpessaSynthInfo(\n                            `%cNo preset %c${initialProgram}%c. Channel %c${chNum}%c. Changing program to ${e.messageData[0]}.`,\n                            consoleColors.info,\n                            consoleColors.unrecognized,\n                            consoleColors.info,\n                            consoleColors.recognized,\n                            consoleColors.info\n                        );\n                    }\n                }\n                channel.program = e.messageData[0];\n                // check if this preset exists for program and bank\n                const realBank = Math.max(0, channel.lastBank?.messageData[1] - mid.bankOffset); // make sure to take the previous bank offset into account\n                const bankLSB = (channel?.lastBankLSB?.messageData[1] - mid.bankOffset) || 0;\n                if (channel.lastBank === undefined)\n                {\n                    continue;\n                }\n                // adjust bank for XG\n                let bank = chooseBank(realBank, bankLSB, channel.drums, isXG);\n                if (soundfont.presets.findIndex(p => p.bank === bank && p.program === e.messageData[0]) === -1)\n                {\n                    // no preset with this bank. find this program with any bank\n                    const targetBank = (soundfont.presets.find(p => p.program === e.messageData[0])?.bank + bankOffset) || bankOffset;\n                    channel.lastBank.messageData[1] = targetBank;\n                    if (channel?.lastBankLSB?.messageData)\n                    {\n                        channel.lastBankLSB.messageData[1] = targetBank;\n                    }\n                    SpessaSynthInfo(\n                        `%cNo preset %c${bank}:${e.messageData[0]}%c. Channel %c${chNum}%c. Changing bank to ${targetBank}.`,\n                        consoleColors.info,\n                        consoleColors.unrecognized,\n                        consoleColors.info,\n                        consoleColors.recognized,\n                        consoleColors.info\n                    );\n                }\n                else\n                {\n                    // There is a preset with this bank. Add offset. For drums add the normal offset.\n                    let drumBank = bank;\n                    if (isSystemXG(system) && bank === 128)\n                    {\n                        bank = 127;\n                    }\n                    const newBank = (bank === 128 ? 128 : drumBank) + bankOffset;\n                    channel.lastBank.messageData[1] = newBank;\n                    if (channel?.lastBankLSB?.messageData && !channel.drums)\n                    {\n                        channel.lastBankLSB.messageData[1] = channel.lastBankLSB.messageData[1] - mid.bankOffset + bankOffset;\n                    }\n                    SpessaSynthInfo(\n                        `%cPreset %c${bank}:${e.messageData[0]}%c exists. Channel %c${chNum}%c.  Changing bank to ${newBank}.`,\n                        consoleColors.info,\n                        consoleColors.recognized,\n                        consoleColors.info,\n                        consoleColors.recognized,\n                        consoleColors.info\n                    );\n                }\n                continue;\n            }\n            \n            // controller change\n            // we only care about bank-selects\n            const isLSB = e.messageData[0] === midiControllers.lsbForControl0BankSelect;\n            if (e.messageData[0] !== midiControllers.bankSelect && !isLSB)\n            {\n                continue;\n            }\n            // bank select\n            channel.hasBankSelect = true;\n            const bankNumber = e.messageData[1];\n            // interpret\n            const intepretation = parseBankSelect(\n                channel?.lastBank?.messageData[1] || 0,\n                bankNumber,\n                system,\n                isLSB,\n                channel.drums,\n                chNum\n            );\n            if (intepretation.drumsStatus === 2)\n            {\n                channel.drums = true;\n            }\n            else if (intepretation.drumsStatus === 1)\n            {\n                channel.drums = false;\n            }\n            if (isLSB)\n            {\n                channel.lastBankLSB = e;\n            }\n            else\n            {\n                channel.lastBank = e;\n            }\n        }\n        \n        // add missing bank selects\n        // add all bank selects that are missing for this track\n        channelsInfo.forEach((has, ch) =>\n        {\n            if (has.hasBankSelect === true)\n            {\n                return;\n            }\n            // find the first program change (for the given channel)\n            const midiChannel = ch % 16;\n            const status = messageTypes.programChange | midiChannel;\n            // find track with this channel being used\n            const portOffset = Math.floor(ch / 16) * 16;\n            const port = mid.midiPortChannelOffsets.indexOf(portOffset);\n            const track = mid.tracks.find((t, tNum) => mid.midiPorts[tNum] === port && mid.usedChannelsOnTrack[tNum].has(\n                midiChannel));\n            if (track === undefined)\n            {\n                // this channel is not used at all\n                return;\n            }\n            let indexToAdd = track.findIndex(e => e.messageStatusByte === status);\n            if (indexToAdd === -1)\n            {\n                // no program change...\n                // add programs if they are missing from the track\n                // (need them to activate bank 1 for the embedded sfont)\n                const programIndex = track.findIndex(e => (e.messageStatusByte > 0x80 && e.messageStatusByte < 0xF0) && (e.messageStatusByte & 0xF) === midiChannel);\n                if (programIndex === -1)\n                {\n                    // no voices??? skip\n                    return;\n                }\n                const programTicks = track[programIndex].ticks;\n                const targetProgram = soundfont.getPreset(0, 0).program;\n                track.splice(programIndex, 0, new MIDIMessage(\n                    programTicks,\n                    messageTypes.programChange | midiChannel,\n                    new IndexedByteArray([targetProgram])\n                ));\n                indexToAdd = programIndex;\n            }\n            SpessaSynthInfo(\n                `%cAdding bank select for %c${ch}`,\n                consoleColors.info,\n                consoleColors.recognized\n            );\n            const ticks = track[indexToAdd].ticks;\n            const targetBank = (soundfont.getPreset(\n                0,\n                has.program,\n                isSystemXG(system)\n            )?.bank + bankOffset) || bankOffset;\n            track.splice(indexToAdd, 0, new MIDIMessage(\n                ticks,\n                messageTypes.controllerChange | midiChannel,\n                new IndexedByteArray([midiControllers.bankSelect, targetBank])\n            ));\n        });\n        \n        // make sure to put xg if gm\n        if (system !== \"gs\" && !isSystemXG(system))\n        {\n            for (const m of unwantedSystems)\n            {\n                mid.tracks[m.tNum].splice(mid.tracks[m.tNum].indexOf(m.e), 1);\n            }\n            let index = 0;\n            if (mid.tracks[0][0].messageStatusByte === messageTypes.trackName)\n            {\n                index++;\n            }\n            mid.tracks[0].splice(index, 0, getGsOn(0));\n        }\n    }\n    const newMid = new IndexedByteArray(mid.writeMIDI().buffer);\n    \n    // info data for RMID\n    /**\n     * @type {Uint8Array[]}\n     */\n    const infoContent = [];\n    const encoder = new TextEncoder();\n    // software (SpessaSynth)\n    infoContent.push(\n        writeRIFFChunkRaw(RMIDINFOChunks.software, encoder.encode(\"SpessaSynth\"), true)\n    );\n    // name\n    if (metadata.name !== undefined)\n    {\n        \n        infoContent.push(\n            writeRIFFChunkRaw(RMIDINFOChunks.name, encoder.encode(metadata.name), true)\n        );\n        encoding = FORCED_ENCODING;\n    }\n    else\n    {\n        infoContent.push(\n            writeRIFFChunkRaw(RMIDINFOChunks.name, mid.rawMidiName, true)\n        );\n    }\n    // creation date\n    if (metadata.creationDate !== undefined)\n    {\n        encoding = FORCED_ENCODING;\n        infoContent.push(\n            writeRIFFChunkRaw(RMIDINFOChunks.creationDate, encoder.encode(metadata.creationDate), true)\n        );\n    }\n    else\n    {\n        const today = new Date().toLocaleString(undefined, {\n            weekday: \"long\",\n            year: \"numeric\",\n            month: \"long\",\n            day: \"numeric\",\n            hour: \"numeric\",\n            minute: \"numeric\"\n        });\n        infoContent.push(\n            writeRIFFChunkRaw(RMIDINFOChunks.creationDate, getStringBytes(today, true), true)\n        );\n    }\n    // comment\n    if (metadata.comment !== undefined)\n    {\n        encoding = FORCED_ENCODING;\n        infoContent.push(\n            writeRIFFChunkRaw(RMIDINFOChunks.comment, encoder.encode(metadata.comment))\n        );\n    }\n    // engineer\n    if (metadata.engineer !== undefined)\n    {\n        infoContent.push(\n            writeRIFFChunkRaw(RMIDINFOChunks.engineer, encoder.encode(metadata.engineer), true)\n        );\n    }\n    // album\n    if (metadata.album !== undefined)\n    {\n        // note that there are two album chunks: IPRD and IALB\n        encoding = FORCED_ENCODING;\n        infoContent.push(\n            writeRIFFChunkRaw(RMIDINFOChunks.album, encoder.encode(metadata.album), true)\n        );\n        infoContent.push(\n            writeRIFFChunkRaw(RMIDINFOChunks.album2, encoder.encode(metadata.album), true)\n        );\n    }\n    // artist\n    if (metadata.artist !== undefined)\n    {\n        encoding = FORCED_ENCODING;\n        infoContent.push(\n            writeRIFFChunkRaw(RMIDINFOChunks.artist, encoder.encode(metadata.artist), true)\n        );\n    }\n    // genre\n    if (metadata.genre !== undefined)\n    {\n        encoding = FORCED_ENCODING;\n        infoContent.push(\n            writeRIFFChunkRaw(RMIDINFOChunks.genre, encoder.encode(metadata.genre), true)\n        );\n    }\n    // picture\n    if (metadata.picture !== undefined)\n    {\n        infoContent.push(\n            writeRIFFChunkRaw(RMIDINFOChunks.picture, new Uint8Array(metadata.picture))\n        );\n    }\n    // copyright\n    if (metadata.copyright !== undefined)\n    {\n        encoding = FORCED_ENCODING;\n        infoContent.push(\n            writeRIFFChunkRaw(RMIDINFOChunks.copyright, encoder.encode(metadata.copyright), true)\n        );\n    }\n    else\n    {\n        // use midi copyright if possible\n        const copyright = mid.copyright.length > 0 ? mid.copyright : DEFAULT_COPYRIGHT;\n        infoContent.push(\n            writeRIFFChunkRaw(RMIDINFOChunks.copyright, getStringBytes(copyright, true))\n        );\n    }\n    \n    // bank offset\n    const DBNK = new IndexedByteArray(2);\n    writeLittleEndian(DBNK, bankOffset, 2);\n    infoContent.push(writeRIFFChunkRaw(RMIDINFOChunks.bankOffset, DBNK));\n    // midi encoding\n    if (metadata.midiEncoding !== undefined)\n    {\n        infoContent.push(\n            writeRIFFChunkRaw(RMIDINFOChunks.midiEncoding, encoder.encode(metadata.midiEncoding))\n        );\n        encoding = FORCED_ENCODING;\n    }\n    // encoding\n    infoContent.push(writeRIFFChunkRaw(RMIDINFOChunks.encoding, getStringBytes(encoding, true)));\n    \n    // combine and write out\n    SpessaSynthInfo(\"%cFinished!\", consoleColors.info);\n    SpessaSynthGroupEnd();\n    return writeRIFFChunkParts(\n        \"RIFF\",\n        [\n            getStringBytes(\"RMID\"),\n            writeRIFFChunkRaw(\n                \"data\",\n                newMid\n            ),\n            writeRIFFChunkParts(\n                \"INFO\",\n                infoContent,\n                true\n            ),\n            soundfontBinary\n        ]\n    );\n}", "import { SpessaSynthGroupCollapsed, SpessaSynthGroupEnd, SpessaSynthInfo } from \"../../utils/loggin.js\";\nimport { consoleColors } from \"../../utils/other.js\";\nimport { messageTypes, midiControllers } from \"../midi_message.js\";\nimport { DEFAULT_PERCUSSION } from \"../../synthetizer/synth_constants.js\";\nimport { chooseBank, isSystemXG, parseBankSelect } from \"../../utils/xg_hacks.js\";\nimport { isGSDrumsOn, isXGOn } from \"../../utils/sysex_detector.js\";\nimport { SoundFontManager } from \"../../synthetizer/audio_engine/engine_components/soundfont_manager.js\";\n\n/**\n * Gets the used programs and keys for this MIDI file with a given sound bank\n * @this {BasicMIDI}\n * @param soundfont {SoundFontManager|BasicSoundBank} - the sound bank\n * @returns {Record<string, Set<string>>} Record<bank:program, Set<key-velocity>>\n */\nexport function getUsedProgramsAndKeys(soundfont)\n{\n    const mid = this;\n    SpessaSynthGroupCollapsed(\n        \"%cSearching for all used programs and keys...\",\n        consoleColors.info\n    );\n    // Find every bank:program combo and every key:velocity for each. Make sure to care about ports and drums\n    const channelsAmount = 16 + mid.midiPortChannelOffsets.reduce((max, cur) => cur > max ? cur : max);\n    /**\n     * @type {{program: number, bank: number, bankLSB: number, drums: boolean, string: string, actualBank: number}[]}\n     */\n    const channelPresets = [];\n    for (let i = 0; i < channelsAmount; i++)\n    {\n        const bank = i % 16 === DEFAULT_PERCUSSION ? 128 : 0;\n        channelPresets.push({\n            program: 0,\n            bank: bank,\n            bankLSB: 0,\n            actualBank: bank,\n            drums: i % 16 === DEFAULT_PERCUSSION, // drums appear on 9 every 16 channels,\n            string: `${bank}:0`\n        });\n    }\n    \n    // check for xg\n    let system = \"gs\";\n    \n    function updateString(ch)\n    {\n        const bank = chooseBank(ch.bank, ch.bankLSB, ch.drums, isSystemXG(system));\n        // check if this exists in the soundfont\n        let existsBank, existsProgram;\n        if (soundfont instanceof SoundFontManager)\n        {\n            /**\n             * @type {{preset: BasicPreset, bankOffset: number}}\n             */\n            let exists = soundfont.getPreset(bank, ch.program, isSystemXG(system));\n            existsBank = exists.preset.bank + exists.bankOffset;\n            existsProgram = exists.preset.program;\n        }\n        else\n        {\n            /**\n             * @type {BasicPreset}\n             */\n            let exists = soundfont.getPreset(bank, ch.program, isSystemXG(system));\n            existsBank = exists.bank;\n            existsProgram = exists.program;\n        }\n        ch.actualBank = existsBank;\n        ch.program = existsProgram;\n        ch.string = ch.actualBank + \":\" + ch.program;\n        if (!usedProgramsAndKeys[ch.string])\n        {\n            SpessaSynthInfo(\n                `%cDetected a new preset: %c${ch.string}`,\n                consoleColors.info,\n                consoleColors.recognized\n            );\n            usedProgramsAndKeys[ch.string] = new Set();\n        }\n    }\n    \n    /**\n     * find all programs used and key-velocity combos in them\n     * bank:program each has a set of midiNote-velocity\n     * @type {Record<string, Set<string>>}\n     */\n    const usedProgramsAndKeys = {};\n    \n    /**\n     * indexes for tracks\n     * @type {number[]}\n     */\n    const eventIndexes = Array(mid.tracks.length).fill(0);\n    let remainingTracks = mid.tracks.length;\n    \n    function findFirstEventIndex()\n    {\n        let index = 0;\n        let ticks = Infinity;\n        mid.tracks.forEach((track, i) =>\n        {\n            if (eventIndexes[i] >= track.length)\n            {\n                return;\n            }\n            if (track[eventIndexes[i]].ticks < ticks)\n            {\n                index = i;\n                ticks = track[eventIndexes[i]].ticks;\n            }\n        });\n        return index;\n    }\n    \n    const ports = mid.midiPorts.slice();\n    // initialize\n    channelPresets.forEach(c =>\n    {\n        updateString(c);\n    });\n    while (remainingTracks > 0)\n    {\n        let trackNum = findFirstEventIndex();\n        const track = mid.tracks[trackNum];\n        if (eventIndexes[trackNum] >= track.length)\n        {\n            remainingTracks--;\n            continue;\n        }\n        const event = track[eventIndexes[trackNum]];\n        eventIndexes[trackNum]++;\n        \n        if (event.messageStatusByte === messageTypes.midiPort)\n        {\n            ports[trackNum] = event.messageData[0];\n            continue;\n        }\n        const status = event.messageStatusByte & 0xF0;\n        if (\n            status !== messageTypes.noteOn &&\n            status !== messageTypes.controllerChange &&\n            status !== messageTypes.programChange &&\n            status !== messageTypes.systemExclusive\n        )\n        {\n            continue;\n        }\n        const channel = (event.messageStatusByte & 0xF) + mid.midiPortChannelOffsets[ports[trackNum]] || 0;\n        let ch = channelPresets[channel];\n        switch (status)\n        {\n            case messageTypes.programChange:\n                ch.program = event.messageData[0];\n                updateString(ch);\n                break;\n            \n            case messageTypes.controllerChange:\n                const isLSB = event.messageData[0] === midiControllers.lsbForControl0BankSelect;\n                if (event.messageData[0] !== midiControllers.bankSelect && !isLSB)\n                {\n                    // we only care about bank select\n                    continue;\n                }\n                if (system === \"gs\" && ch.drums)\n                {\n                    // gs drums get changed via sysex, ignore here\n                    continue;\n                }\n                const bank = event.messageData[1];\n                if (isLSB)\n                {\n                    ch.bankLSB = bank;\n                }\n                else\n                {\n                    ch.bank = bank;\n                }\n                // interpret the bank\n                const intepretation = parseBankSelect(\n                    ch.bank,\n                    bank,\n                    system,\n                    isLSB,\n                    ch.drums,\n                    channel\n                );\n                switch (intepretation.drumsStatus)\n                {\n                    case 0:\n                        // no change\n                        break;\n                    \n                    case 1:\n                        // drums changed to off\n                        // drum change is a program change\n                        ch.drums = false;\n                        updateString(ch);\n                        break;\n                    \n                    case 2:\n                        // drums changed to on\n                        // drum change is a program change\n                        ch.drums = true;\n                        updateString(ch);\n                        break;\n                }\n                // do not update the data, bank change doesn't change the preset\n                break;\n            \n            case messageTypes.noteOn:\n                if (event.messageData[1] === 0)\n                {\n                    // that's a note off\n                    continue;\n                }\n                usedProgramsAndKeys[ch.string].add(`${event.messageData[0]}-${event.messageData[1]}`);\n                break;\n            \n            case messageTypes.systemExclusive:\n                // check for drum sysex\n                if (!isGSDrumsOn(event))\n                {\n                    // check for XG\n                    if (isXGOn(event))\n                    {\n                        system = \"xg\";\n                        SpessaSynthInfo(\n                            \"%cXG on detected!\",\n                            consoleColors.recognized\n                        );\n                    }\n                    continue;\n                }\n                const sysexChannel = [9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15][event.messageData[5] & 0x0F] + mid.midiPortChannelOffsets[ports[trackNum]];\n                const isDrum = !!(event.messageData[7] > 0 && event.messageData[5] >> 4);\n                ch = channelPresets[sysexChannel];\n                ch.drums = isDrum;\n                updateString(ch);\n                break;\n            \n        }\n    }\n    for (const key of Object.keys(usedProgramsAndKeys))\n    {\n        if (usedProgramsAndKeys[key].size === 0)\n        {\n            SpessaSynthInfo(\n                `%cDetected change but no keys for %c${key}`,\n                consoleColors.info,\n                consoleColors.value\n            );\n            delete usedProgramsAndKeys[key];\n        }\n    }\n    SpessaSynthGroupEnd();\n    return usedProgramsAndKeys;\n}", "import { IndexedByteArray } from \"../../utils/indexed_array.js\";\nimport { readBytesAsUintBigEndian } from \"../../utils/byte_functions/big_endian.js\";\nimport { DEFAULT_PERCUSSION } from \"../../synthetizer/synth_constants.js\";\n\n/**\n * Calculates all note times in seconds.\n * @this {BasicMIDI}\n * @param minDrumLength {number} the shortest a drum note (channel 10) can be, in seconds.\n * @returns {{\n *          midiNote: number,\n *          start: number,\n *          length: number,\n *          velocity: number,\n *      }[][]} an array of 16 channels, each channel containing its notes,\n *      with their key number, velocity, absolute start time and length in seconds.\n */\nexport function getNoteTimes(minDrumLength = 0)\n{\n    \n    /**\n     * gets tempo from the midi message\n     * @param event {MIDIMessage}\n     * @return {number} the tempo in bpm\n     */\n    function getTempo(event)\n    {\n        // simulate IndexedByteArray\n        event.messageData = new IndexedByteArray(event.messageData.buffer);\n        event.messageData.currentIndex = 0;\n        return 60000000 / readBytesAsUintBigEndian(event.messageData, 3);\n    }\n    \n    /**\n     * an array of 16 arrays (channels)\n     * @type {{\n     *          midiNote: number,\n     *          start: number,\n     *          length: number,\n     *          velocity: number,\n     *      }[][]}\n     */\n    const noteTimes = [];\n    // flatten and sort by ticks\n    const trackData = this.tracks;\n    let events = trackData.flat();\n    events.sort((e1, e2) => e1.ticks - e2.ticks);\n    \n    for (let i = 0; i < 16; i++)\n    {\n        noteTimes.push([]);\n    }\n    let elapsedTime = 0;\n    let oneTickToSeconds = 60 / (120 * this.timeDivision);\n    let eventIndex = 0;\n    let unfinished = 0;\n    /**\n     * @type {{\n     *          midiNote: number,\n     *          start: number,\n     *          length: number,\n     *          velocity: number,\n     *      }[][]}\n     */\n    const unfinishedNotes = [];\n    for (let i = 0; i < 16; i++)\n    {\n        unfinishedNotes.push([]);\n    }\n    const noteOff = (midiNote, channel) =>\n    {\n        const noteIndex = unfinishedNotes[channel].findIndex(n => n.midiNote === midiNote);\n        const note = unfinishedNotes[channel][noteIndex];\n        if (note)\n        {\n            const time = elapsedTime - note.start;\n            note.length = time;\n            if (channel === DEFAULT_PERCUSSION)\n            {\n                note.length = time < minDrumLength ? minDrumLength : time;\n            }\n            // delete from unfinished\n            unfinishedNotes[channel].splice(noteIndex, 1);\n        }\n        unfinished--;\n    };\n    while (eventIndex < events.length)\n    {\n        const event = events[eventIndex];\n        \n        const status = event.messageStatusByte >> 4;\n        const channel = event.messageStatusByte & 0x0F;\n        \n        // note off\n        if (status === 0x8)\n        {\n            noteOff(event.messageData[0], channel);\n        }\n        // note on\n        else if (status === 0x9)\n        {\n            if (event.messageData[1] === 0)\n            {\n                // never mind, its note off\n                noteOff(event.messageData[0], channel);\n            }\n            else\n            {\n                // stop previous\n                noteOff(event.messageData[0], channel);\n                const noteTime = {\n                    midiNote: event.messageData[0],\n                    start: elapsedTime,\n                    length: -1,\n                    velocity: event.messageData[1] / 127\n                };\n                noteTimes[channel].push(noteTime);\n                unfinishedNotes[channel].push(noteTime);\n                unfinished++;\n                \n            }\n        }\n        // set tempo\n        else if (event.messageStatusByte === 0x51)\n        {\n            oneTickToSeconds = 60 / (getTempo(event) * this.timeDivision);\n        }\n        \n        if (++eventIndex >= events.length)\n        {\n            break;\n        }\n        \n        elapsedTime += oneTickToSeconds * (events[eventIndex].ticks - event.ticks);\n    }\n    \n    // finish the unfinished notes\n    if (unfinished > 0)\n    {\n        // for every channel, for every note that is unfinished (has -1 length)\n        unfinishedNotes.forEach((channelNotes, channel) =>\n        {\n            channelNotes.forEach(note =>\n            {\n                const time = elapsedTime - note.start;\n                note.length = time;\n                if (channel === DEFAULT_PERCUSSION)\n                {\n                    note.length = time < minDrumLength ? minDrumLength : time;\n                }\n            });\n        });\n    }\n    return noteTimes;\n}", "// noinspection JSUnusedGlobalSymbols\n\nimport { MIDISequenceData } from \"./midi_sequence.js\";\nimport { getStringBytes, readBytesAsString } from \"../utils/byte_functions/string.js\";\nimport { messageTypes, MIDIMessage } from \"./midi_message.js\";\nimport { readBytesAsUintBigEndian } from \"../utils/byte_functions/big_endian.js\";\nimport { SpessaSynthGroup, SpessaSynthGroupEnd, SpessaSynthInfo } from \"../utils/loggin.js\";\nimport { consoleColors, formatTitle, sanitizeKarLyrics } from \"../utils/other.js\";\nimport { writeMIDI } from \"./midi_tools/midi_writer.js\";\nimport { applySnapshotToMIDI, modifyMIDI } from \"./midi_tools/midi_editor.js\";\nimport { writeRMIDI } from \"./midi_tools/rmidi_writer.js\";\nimport { getUsedProgramsAndKeys } from \"./midi_tools/used_keys_loaded.js\";\nimport { IndexedByteArray } from \"../utils/indexed_array.js\";\nimport { getNoteTimes } from \"./midi_tools/get_note_times.js\";\n\n/**\n * BasicMIDI is the base of a complete MIDI file, used by the sequencer internally.\n * BasicMIDI is not available on the main thread, as it contains the actual track data which can be large.\n * It can be accessed by calling getMIDI() on the Sequencer.\n */\nclass BasicMIDI extends MIDISequenceData\n{\n    \n    /**\n     * The embedded soundfont in the MIDI file, represented as an ArrayBuffer, if available.\n     * @type {ArrayBuffer|undefined}\n     */\n    embeddedSoundFont = undefined;\n    \n    /**\n     * The actual track data of the MIDI file, represented as an array of tracks.\n     * Tracks are arrays of MIDIMessage objects.\n     * @type {MIDIMessage[][]}\n     */\n    tracks = [];\n    \n    /**\n     * If the MIDI file is a DLS RMIDI file.\n     * @type {boolean}\n     */\n    isDLSRMIDI = false;\n    \n    /**\n     * Copies a MIDI (tracks are shallowly copied!)\n     * @param mid {BasicMIDI}\n     * @returns {BasicMIDI}\n     */\n    static copyFrom(mid)\n    {\n        const m = new BasicMIDI();\n        m._copyFromSequence(mid);\n        \n        m.isDLSRMIDI = mid.isDLSRMIDI;\n        m.embeddedSoundFont = mid?.embeddedSoundFont ? mid.embeddedSoundFont : undefined; // Shallow copy\n        m.tracks = mid.tracks.map(track => [...track]); // Shallow copy of each track array\n        return m;\n    }\n    \n    /**\n     * Copies a MIDI with deep copy\n     * @param mid {BasicMIDI}\n     * @returns {BasicMIDI}\n     */\n    static copyFromDeep(mid)\n    {\n        const m = new BasicMIDI();\n        m._copyFromSequence(mid);\n        m.isDLSRMIDI = mid.isDLSRMIDI;\n        m.embeddedSoundFont = mid.embeddedSoundFont ? mid.embeddedSoundFont.slice(0) : undefined; // Deep copy\n        m.tracks = mid.tracks.map(track => track.map(event => new MIDIMessage(\n            event.ticks,\n            event.messageStatusByte,\n            event.messageData\n        ))); // Deep copy\n        return m;\n    }\n    \n    /**\n     * Parses internal MIDI values\n     * @protected\n     */\n    _parseInternal()\n    {\n        SpessaSynthGroup(\n            \"%cInterpreting MIDI events...\",\n            consoleColors.info\n        );\n        /**\n         * For karaoke files, text events starting with @T are considered titles,\n         * usually the first one is the title, and the latter is things such as \"sequenced by\" etc.\n         * @type {boolean}\n         */\n        let karaokeHasTitle = false;\n        \n        this.keyRange = { max: 0, min: 127 };\n        \n        /**\n         * Will be joined with \"\\n\" to form the final string\n         * @type {string[]}\n         */\n        let copyrightComponents = [];\n        let copyrightDetected = false;\n        if (typeof this.RMIDInfo[\"ICOP\"] !== \"undefined\")\n        {\n            // if RMIDI has copyright info, don't try to detect one.\n            copyrightDetected = true;\n        }\n        \n        \n        let nameDetected = false;\n        if (typeof this.RMIDInfo[\"INAM\"] !== \"undefined\")\n        {\n            // same as with copyright\n            nameDetected = true;\n        }\n        \n        // loop tracking\n        let loopStart = null;\n        let loopEnd = null;\n        \n        for (let i = 0; i < this.tracks.length; i++)\n        {\n            /**\n             * @type {MIDIMessage[]}\n             */\n            const track = this.tracks[i];\n            const usedChannels = new Set();\n            let trackHasVoiceMessages = false;\n            \n            for (const e of track)\n            {\n                // check if it's a voice message\n                if (e.messageStatusByte >= 0x80 && e.messageStatusByte < 0xF0)\n                {\n                    trackHasVoiceMessages = true;\n                    // voice messages are 7-bit always\n                    for (let j = 0; j < e.messageData.length; j++)\n                    {\n                        e.messageData[j] = Math.min(127, e.messageData[j]);\n                    }\n                    // last voice event tick\n                    if (e.ticks > this.lastVoiceEventTick)\n                    {\n                        this.lastVoiceEventTick = e.ticks;\n                    }\n                    \n                    // interpret the voice message\n                    switch (e.messageStatusByte & 0xF0)\n                    {\n                        // cc change: loop points\n                        case messageTypes.controllerChange:\n                            switch (e.messageData[0])\n                            {\n                                case 2:\n                                case 116:\n                                    loopStart = e.ticks;\n                                    break;\n                                \n                                case 4:\n                                case 117:\n                                    if (loopEnd === null)\n                                    {\n                                        loopEnd = e.ticks;\n                                    }\n                                    else\n                                    {\n                                        // this controller has occurred more than once;\n                                        // this means\n                                        // that it doesn't indicate the loop\n                                        loopEnd = 0;\n                                    }\n                                    break;\n                                \n                                case 0:\n                                    // check RMID\n                                    if (this.isDLSRMIDI && e.messageData[1] !== 0 && e.messageData[1] !== 127)\n                                    {\n                                        SpessaSynthInfo(\n                                            \"%cDLS RMIDI with offset 1 detected!\",\n                                            consoleColors.recognized\n                                        );\n                                        this.bankOffset = 1;\n                                    }\n                            }\n                            break;\n                        \n                        // note on: used notes tracking and key range\n                        case messageTypes.noteOn:\n                            usedChannels.add(e.messageStatusByte & 0x0F);\n                            const note = e.messageData[0];\n                            this.keyRange.min = Math.min(this.keyRange.min, note);\n                            this.keyRange.max = Math.max(this.keyRange.max, note);\n                            break;\n                    }\n                }\n                e.messageData.currentIndex = 0;\n                const eventText = readBytesAsString(e.messageData, e.messageData.length);\n                e.messageData.currentIndex = 0;\n                // interpret the message\n                switch (e.messageStatusByte)\n                {\n                    case messageTypes.setTempo:\n                        // add the tempo change\n                        e.messageData.currentIndex = 0;\n                        this.tempoChanges.push({\n                            ticks: e.ticks,\n                            tempo: 60000000 / readBytesAsUintBigEndian(e.messageData, 3)\n                        });\n                        e.messageData.currentIndex = 0;\n                        break;\n                    \n                    case messageTypes.marker:\n                        // check for loop markers\n                        const text = eventText.trim().toLowerCase();\n                        switch (text)\n                        {\n                            default:\n                                break;\n                            \n                            case \"start\":\n                            case \"loopstart\":\n                                loopStart = e.ticks;\n                                break;\n                            \n                            case \"loopend\":\n                                loopEnd = e.ticks;\n                        }\n                        e.messageData.currentIndex = 0;\n                        break;\n                    \n                    case messageTypes.copyright:\n                        if (!copyrightDetected)\n                        {\n                            e.messageData.currentIndex = 0;\n                            copyrightComponents.push(readBytesAsString(\n                                e.messageData,\n                                e.messageData.length,\n                                false\n                            ));\n                            e.messageData.currentIndex = 0;\n                        }\n                        break;\n                    \n                    case messageTypes.lyric:\n                        // note here: .kar files sometimes just use...\n                        // lyrics instead of text because why not (of course)\n                        // perform the same check for @KMIDI KARAOKE FILE\n                        if (eventText.trim().startsWith(\"@KMIDI KARAOKE FILE\"))\n                        {\n                            this.isKaraokeFile = true;\n                            SpessaSynthInfo(\"%cKaraoke MIDI detected!\", consoleColors.recognized);\n                        }\n                        \n                        if (this.isKaraokeFile)\n                        {\n                            // replace the type of the message with text\n                            e.messageStatusByte = messageTypes.text;\n                        }\n                        else\n                        {\n                            // add lyrics like a regular midi file\n                            this.lyrics.push(e.messageData);\n                            this.lyricsTicks.push(e.ticks);\n                            break;\n                        }\n                    \n                    // kar: treat the same as text\n                    // fallthrough\n                    case messageTypes.text:\n                        // possibly Soft Karaoke MIDI file\n                        // it has a text event at the start of the file\n                        // \"@KMIDI KARAOKE FILE\"\n                        const checkedText = eventText.trim();\n                        if (checkedText.startsWith(\"@KMIDI KARAOKE FILE\"))\n                        {\n                            this.isKaraokeFile = true;\n                            \n                            SpessaSynthInfo(\"%cKaraoke MIDI detected!\", consoleColors.recognized);\n                        }\n                        else if (this.isKaraokeFile)\n                        {\n                            // check for @T (title)\n                            // or @A because it is a title too sometimes?\n                            // IDK it's strange\n                            if (checkedText.startsWith(\"@T\") || checkedText.startsWith(\"@A\"))\n                            {\n                                if (!karaokeHasTitle)\n                                {\n                                    this.midiName = checkedText.substring(2).trim();\n                                    karaokeHasTitle = true;\n                                    nameDetected = true;\n                                    // encode to rawMidiName\n                                    this.rawMidiName = getStringBytes(this.midiName);\n                                }\n                                else\n                                {\n                                    // append to copyright\n                                    copyrightComponents.push(checkedText.substring(2).trim());\n                                }\n                            }\n                            else if (checkedText[0] !== \"@\")\n                            {\n                                // non @: the lyrics\n                                this.lyrics.push(sanitizeKarLyrics(e.messageData));\n                                this.lyricsTicks.push(e.ticks);\n                            }\n                        }\n                        break;\n                    \n                    case messageTypes.trackName:\n                        break;\n                }\n            }\n            // add used channels\n            this.usedChannelsOnTrack.push(usedChannels);\n            \n            // track name\n            this.trackNames[i] = \"\";\n            const trackName = track.find(e => e.messageStatusByte === messageTypes.trackName);\n            if (trackName)\n            {\n                trackName.messageData.currentIndex = 0;\n                const name = readBytesAsString(trackName.messageData, trackName.messageData.length);\n                this.trackNames[i] = name;\n                // If the track has no voice messages, its \"track name\" event (if it has any)\n                // is some metadata.\n                // Add it to copyright\n                if (!trackHasVoiceMessages)\n                {\n                    copyrightComponents.push(name);\n                }\n            }\n        }\n        \n        // reverse the tempo changes\n        this.tempoChanges.reverse();\n        \n        SpessaSynthInfo(\n            `%cCorrecting loops, ports and detecting notes...`,\n            consoleColors.info\n        );\n        \n        const firstNoteOns = [];\n        for (const t of this.tracks)\n        {\n            const firstNoteOn = t.find(e => (e.messageStatusByte & 0xF0) === messageTypes.noteOn);\n            if (firstNoteOn)\n            {\n                firstNoteOns.push(firstNoteOn.ticks);\n            }\n        }\n        this.firstNoteOn = Math.min(...firstNoteOns);\n        \n        SpessaSynthInfo(\n            `%cFirst note-on detected at: %c${this.firstNoteOn}%c ticks!`,\n            consoleColors.info,\n            consoleColors.recognized,\n            consoleColors.info\n        );\n        \n        \n        if (loopStart !== null && loopEnd === null)\n        {\n            // not a loop\n            loopStart = this.firstNoteOn;\n            loopEnd = this.lastVoiceEventTick;\n        }\n        else\n        {\n            if (loopStart === null)\n            {\n                loopStart = this.firstNoteOn;\n            }\n            \n            if (loopEnd === null || loopEnd === 0)\n            {\n                loopEnd = this.lastVoiceEventTick;\n            }\n        }\n        \n        /**\n         *\n         * @type {{start: number, end: number}}\n         */\n        this.loop = { start: loopStart, end: loopEnd };\n        \n        SpessaSynthInfo(\n            `%cLoop points: start: %c${this.loop.start}%c end: %c${this.loop.end}`,\n            consoleColors.info,\n            consoleColors.recognized,\n            consoleColors.info,\n            consoleColors.recognized\n        );\n        \n        // determine ports\n        let portOffset = 0;\n        this.midiPorts = [];\n        this.midiPortChannelOffsets = [];\n        for (let trackNum = 0; trackNum < this.tracks.length; trackNum++)\n        {\n            this.midiPorts.push(-1);\n            if (this.usedChannelsOnTrack[trackNum].size === 0)\n            {\n                continue;\n            }\n            for (const e of this.tracks[trackNum])\n            {\n                if (e.messageStatusByte !== messageTypes.midiPort)\n                {\n                    continue;\n                }\n                const port = e.messageData[0];\n                this.midiPorts[trackNum] = port;\n                if (this.midiPortChannelOffsets[port] === undefined)\n                {\n                    this.midiPortChannelOffsets[port] = portOffset;\n                    portOffset += 16;\n                }\n            }\n        }\n        \n        // fix empty port channel offsets (do a copy to turn empty slots into undefined so the map goes over them)\n        this.midiPortChannelOffsets = [...this.midiPortChannelOffsets].map(o => o ?? 0);\n        \n        // fix midi ports:\n        // midi tracks without ports will have a value of -1\n        // if all ports have a value of -1, set it to 0,\n        // otherwise take the first midi port and replace all -1 with it,\n        // why would we do this?\n        // some midis (for some reason) specify all channels to port 1 or else,\n        // but leave the conductor track with no port pref.\n        // this spessasynth to reserve the first 16 channels for the conductor track\n        // (which doesn't play anything) and use the additional 16 for the actual ports.\n        let defaultPort = Infinity;\n        for (let port of this.midiPorts)\n        {\n            if (port !== -1)\n            {\n                if (defaultPort > port)\n                {\n                    defaultPort = port;\n                }\n            }\n        }\n        if (defaultPort === Infinity)\n        {\n            defaultPort = 0;\n        }\n        this.midiPorts = this.midiPorts.map(port => port === -1 || port === undefined ? defaultPort : port);\n        // add fake port if empty\n        if (this.midiPortChannelOffsets.length === 0)\n        {\n            this.midiPortChannelOffsets = [0];\n        }\n        if (this.midiPortChannelOffsets.length < 2)\n        {\n            SpessaSynthInfo(`%cNo additional MIDI Ports detected.`, consoleColors.info);\n        }\n        else\n        {\n            this.isMultiPort = true;\n            SpessaSynthInfo(`%cMIDI Ports detected!`, consoleColors.recognized);\n        }\n        \n        // midi name\n        if (!nameDetected)\n        {\n            if (this.tracks.length > 1)\n            {\n                // if more than 1 track and the first track has no notes,\n                // just find the first trackName in the first track.\n                if (\n                    this.tracks[0].find(\n                        message => message.messageStatusByte >= messageTypes.noteOn\n                            &&\n                            message.messageStatusByte < messageTypes.polyPressure\n                    ) === undefined\n                )\n                {\n                    \n                    let name = this.tracks[0].find(message => message.messageStatusByte === messageTypes.trackName);\n                    if (name)\n                    {\n                        this.rawMidiName = name.messageData;\n                        name.messageData.currentIndex = 0;\n                        this.midiName = readBytesAsString(name.messageData, name.messageData.length, false);\n                    }\n                }\n            }\n            else\n            {\n                // if only 1 track, find the first \"track name\" event\n                let name = this.tracks[0].find(message => message.messageStatusByte === messageTypes.trackName);\n                if (name)\n                {\n                    this.rawMidiName = name.messageData;\n                    name.messageData.currentIndex = 0;\n                    this.midiName = readBytesAsString(name.messageData, name.messageData.length, false);\n                }\n            }\n        }\n        \n        if (!copyrightDetected)\n        {\n            this.copyright = copyrightComponents\n                // trim and group newlines into one\n                .map(c => c.trim().replace(/(\\r?\\n)+/g, \"\\n\"))\n                // remove empty strings\n                .filter(c => c.length > 0)\n                // join with newlines\n                .join(\"\\n\") || \"\";\n        }\n        \n        this.midiName = this.midiName.trim();\n        this.midiNameUsesFileName = false;\n        // if midiName is \"\", use the file name\n        if (this.midiName.length === 0)\n        {\n            SpessaSynthInfo(\n                `%cNo name detected. Using the alt name!`,\n                consoleColors.info\n            );\n            this.midiName = formatTitle(this.fileName);\n            this.midiNameUsesFileName = true;\n            // encode it too\n            this.rawMidiName = new Uint8Array(this.midiName.length);\n            for (let i = 0; i < this.midiName.length; i++)\n            {\n                this.rawMidiName[i] = this.midiName.charCodeAt(i);\n            }\n        }\n        else\n        {\n            SpessaSynthInfo(\n                `%cMIDI Name detected! %c\"${this.midiName}\"`,\n                consoleColors.info,\n                consoleColors.recognized\n            );\n        }\n        \n        // if the first event is not at 0 ticks, add a track name\n        // https://github.com/spessasus/SpessaSynth/issues/145\n        if (!this.tracks.some(t => t[0].ticks === 0))\n        {\n            const track = this.tracks[0];\n            // can copy\n            track.unshift(new MIDIMessage(\n                0,\n                messageTypes.trackName,\n                new IndexedByteArray(this.rawMidiName.buffer)\n            ));\n        }\n        \n        \n        /**\n         * The total playback time, in seconds\n         * @type {number}\n         */\n        this.duration = this.MIDIticksToSeconds(this.lastVoiceEventTick);\n        \n        SpessaSynthInfo(\"%cSuccess!\", consoleColors.recognized);\n        SpessaSynthGroupEnd();\n    }\n    \n    /**\n     * Updates all internal values\n     */\n    flush()\n    {\n        \n        for (const t of this.tracks)\n        {\n            // sort the track by ticks\n            t.sort((e1, e2) => e1.ticks - e2.ticks);\n        }\n        this._parseInternal();\n    }\n}\n\nBasicMIDI.prototype.writeMIDI = writeMIDI;\nBasicMIDI.prototype.modifyMIDI = modifyMIDI;\nBasicMIDI.prototype.applySnapshotToMIDI = applySnapshotToMIDI;\nBasicMIDI.prototype.writeRMIDI = writeRMIDI;\nBasicMIDI.prototype.getUsedProgramsAndKeys = getUsedProgramsAndKeys;\nBasicMIDI.prototype.getNoteTimes = getNoteTimes;\n\nexport { BasicMIDI };", "import { consoleColors, formatTime } from \"../utils/other.js\";\nimport { SpessaSynthGroupCollapsed, SpessaSynthGroupEnd, SpessaSynthInfo, SpessaSynthWarn } from \"../utils/loggin.js\";\nimport { BasicMIDI } from \"../midi/basic_midi.js\";\n\n/**\n * @param trackNum {number}\n * @param port {number}\n * @this {SpessaSynthSequencer}\n */\nexport function assignMIDIPort(trackNum, port)\n{\n    // do not assign ports to empty tracks\n    if (this.midiData.usedChannelsOnTrack[trackNum].size === 0)\n    {\n        return;\n    }\n    \n    // assign new 16 channels if the port is not occupied yet\n    if (this.midiPortChannelOffset === 0)\n    {\n        this.midiPortChannelOffset += 16;\n        this.midiPortChannelOffsets[port] = 0;\n    }\n    \n    if (this.midiPortChannelOffsets[port] === undefined)\n    {\n        if (this.synth.midiAudioChannels.length < this.midiPortChannelOffset + 15)\n        {\n            this._addNewMidiPort();\n        }\n        this.midiPortChannelOffsets[port] = this.midiPortChannelOffset;\n        this.midiPortChannelOffset += 16;\n    }\n    \n    this.midiPorts[trackNum] = port;\n}\n\n/**\n * Loads a new sequence\n * @param parsedMidi {BasicMIDI}\n * @param autoPlay {boolean}\n * @this {SpessaSynthSequencer}\n * @private\n */\nexport function loadNewSequence(parsedMidi, autoPlay = true)\n{\n    this.stop();\n    if (!parsedMidi.tracks)\n    {\n        throw new Error(\"This MIDI has no tracks!\");\n    }\n    \n    this.oneTickToSeconds = 60 / (120 * parsedMidi.timeDivision);\n    \n    /**\n     * @type {BasicMIDI}\n     */\n    this.midiData = parsedMidi;\n    \n    // clear old embedded bank if exists\n    this.synth.clearEmbeddedBank();\n    \n    // check for embedded soundfont\n    if (this.midiData.embeddedSoundFont !== undefined)\n    {\n        SpessaSynthInfo(\"%cEmbedded soundfont detected! Using it.\", consoleColors.recognized);\n        this.synth.setEmbeddedSoundFont(this.midiData.embeddedSoundFont, this.midiData.bankOffset);\n    }\n    \n    SpessaSynthGroupCollapsed(\"%cPreloading samples...\", consoleColors.info);\n    // smart preloading: load only samples used in the midi!\n    const used = this.midiData.getUsedProgramsAndKeys(this.synth.soundfontManager);\n    for (const [programBank, combos] of Object.entries(used))\n    {\n        const [bank, program] = programBank.split(\":\").map(Number);\n        const preset = this.synth.getPreset(bank, program);\n        SpessaSynthInfo(\n            `%cPreloading used samples on %c${preset.presetName}%c...`,\n            consoleColors.info,\n            consoleColors.recognized,\n            consoleColors.info\n        );\n        for (const combo of combos)\n        {\n            const [midiNote, velocity] = combo.split(\"-\").map(Number);\n            this.synth.getVoicesForPreset(preset, bank, program, midiNote, velocity, midiNote);\n        }\n    }\n    SpessaSynthGroupEnd();\n    \n    /**\n     * the midi track data\n     * @type {MIDIMessage[][]}\n     */\n    this.tracks = this.midiData.tracks;\n    \n    // copy over the port data\n    this.midiPorts = this.midiData.midiPorts.slice();\n    \n    // clear last port data\n    this.midiPortChannelOffset = 0;\n    this.midiPortChannelOffsets = {};\n    // assign port offsets\n    this.midiData.midiPorts.forEach((port, trackIndex) =>\n    {\n        this.assignMIDIPort(trackIndex, port);\n    });\n    \n    /**\n     * Same as \"audio.duration\" property (seconds)\n     * @type {number}\n     */\n    this.duration = this.midiData.duration;\n    this.firstNoteTime = this.midiData.MIDIticksToSeconds(this.midiData.firstNoteOn);\n    SpessaSynthInfo(`%cTotal song time: ${formatTime(Math.ceil(this.duration)).time}`, consoleColors.recognized);\n    this?.onSongChange?.(this.songIndex, autoPlay);\n    \n    if (this.duration <= 1)\n    {\n        SpessaSynthWarn(\n            `%cVery short song: (${formatTime(Math.round(this.duration)).time}). Disabling loop!`,\n            consoleColors.warn\n        );\n        this.loop = false;\n    }\n    if (autoPlay)\n    {\n        this.play(true);\n    }\n    else\n    {\n        // this shall not play: play to the first note and then wait\n        const targetTime = this.skipToFirstNoteOn ? this.midiData.firstNoteOn - 1 : 0;\n        this.setTimeTicks(targetTime);\n        this.pause();\n    }\n}\n\n/**\n * @param midiBuffers {BasicMIDI[]}\n * @param autoPlay {boolean}\n * @this {SpessaSynthSequencer}\n */\nexport function loadNewSongList(midiBuffers, autoPlay = true)\n{\n    /**\n     * parse the MIDIs (only the array buffers, MIDI is unchanged)\n     * @type {BasicMIDI[]}\n     */\n    this.songs = midiBuffers;\n    if (this.songs.length < 1)\n    {\n        return;\n    }\n    this.songIndex = 0;\n    if (this.songs.length > 1)\n    {\n        this.loop = false;\n    }\n    this.shuffleSongIndexes();\n    this?.onSongListChange?.(this.songs);\n    this.loadCurrentSong(autoPlay);\n}\n\n/**\n * @this {SpessaSynthSequencer}\n */\nexport function nextSong()\n{\n    if (this.songs.length === 1)\n    {\n        this.currentTime = 0;\n        return;\n    }\n    this.songIndex++;\n    this.songIndex %= this.songs.length;\n    this.loadCurrentSong();\n}\n\n/**\n * @this {SpessaSynthSequencer}\n */\nexport function previousSong()\n{\n    if (this.songs.length === 1)\n    {\n        this.currentTime = 0;\n        return;\n    }\n    this.songIndex--;\n    if (this.songIndex < 0)\n    {\n        this.songIndex = this.songs.length - 1;\n    }\n    this.loadCurrentSong();\n}", "import { getEvent, messageTypes, midiControllers } from \"../midi/midi_message.js\";\nimport { resetArray } from \"../synthetizer/audio_engine/engine_components/controller_tables.js\";\nimport { nonResetableCCs } from \"../synthetizer/audio_engine/engine_methods/controller_control/reset_controllers.js\";\n\n\n// an array with preset default values\nconst defaultControllerArray = resetArray.slice(0, 128);\n\n/**\n * plays from start to the target time, excluding note messages (to get the synth to the correct state)\n * @private\n * @param time {number} in seconds\n * @param ticks {number} optional MIDI ticks, when given is used instead of time\n * @returns {boolean} true if the midi file is not finished\n * @this {SpessaSynthSequencer}\n */\nexport function _playTo(time, ticks = undefined)\n{\n    this.oneTickToSeconds = 60 / (120 * this.midiData.timeDivision);\n    // reset\n    this.synth.resetAllControllers();\n    this.sendMIDIReset();\n    this._resetTimers();\n    \n    const channelsToSave = this.synth.midiAudioChannels.length;\n    /**\n     * save pitch bends here and send them only after\n     * @type {number[]}\n     */\n    const pitchBends = Array(channelsToSave).fill(8192);\n    \n    /**\n     * Save programs here and send them only after\n     * @type {{program: number, bank: number, actualBank: number}[]}\n     */\n    const programs = [];\n    for (let i = 0; i < channelsToSave; i++)\n    {\n        programs.push({\n            program: -1,\n            bank: 0,\n            actualBank: 0\n        });\n    }\n    \n    const isCCNonSkippable = controllerNumber => (\n        controllerNumber === midiControllers.dataDecrement ||\n        controllerNumber === midiControllers.dataIncrement ||\n        controllerNumber === midiControllers.dataEntryMsb ||\n        controllerNumber === midiControllers.dataDecrement ||\n        controllerNumber === midiControllers.lsbForControl6DataEntry ||\n        controllerNumber === midiControllers.RPNLsb ||\n        controllerNumber === midiControllers.RPNMsb ||\n        controllerNumber === midiControllers.NRPNLsb ||\n        controllerNumber === midiControllers.NRPNMsb ||\n        controllerNumber === midiControllers.bankSelect ||\n        controllerNumber === midiControllers.lsbForControl0BankSelect ||\n        controllerNumber === midiControllers.resetAllControllers\n    );\n    \n    /**\n     * Save controllers here and send them only after\n     * @type {number[][]}\n     */\n    const savedControllers = [];\n    for (let i = 0; i < channelsToSave; i++)\n    {\n        savedControllers.push(Array.from(defaultControllerArray));\n    }\n    \n    /**\n     * RP-15 compliant reset\n     * https://amei.or.jp/midistandardcommittee/Recommended_Practice/e/rp15.pdf\n     * @param chan {number}\n     */\n    function resetAllControlllers(chan)\n    {\n        // reset pitch bend\n        pitchBends[chan] = 8192;\n        if (savedControllers?.[chan] === undefined)\n        {\n            return;\n        }\n        for (let i = 0; i < defaultControllerArray.length; i++)\n        {\n            if (!nonResetableCCs.has(i))\n            {\n                savedControllers[chan][i] = defaultControllerArray[i];\n            }\n        }\n    }\n    \n    while (true)\n    {\n        // find the next event\n        let trackIndex = this._findFirstEventIndex();\n        let event = this.tracks[trackIndex][this.eventIndex[trackIndex]];\n        if (ticks !== undefined)\n        {\n            if (event.ticks >= ticks)\n            {\n                break;\n            }\n        }\n        else\n        {\n            if (this.playedTime >= time)\n            {\n                break;\n            }\n        }\n        \n        // skip note ons\n        const info = getEvent(event.messageStatusByte);\n        // Keep in mind midi ports to determine the channel!\n        const channel = info.channel + (this.midiPortChannelOffsets[this.midiPorts[trackIndex]] || 0);\n        switch (info.status)\n        {\n            // skip note messages\n            case messageTypes.noteOn:\n                // track portamento control as last note\n                if (savedControllers[channel] === undefined)\n                {\n                    savedControllers[channel] = Array.from(defaultControllerArray);\n                }\n                savedControllers[channel][midiControllers.portamentoControl] = event.messageData[0];\n                break;\n            \n            case messageTypes.noteOff:\n                break;\n            \n            // skip pitch bend\n            case messageTypes.pitchBend:\n                pitchBends[channel] = event.messageData[1] << 7 | event.messageData[0];\n                break;\n            \n            case messageTypes.programChange:\n                // empty tracks cannot program change\n                if (this.midiData.isMultiPort && this.midiData.usedChannelsOnTrack[trackIndex].size === 0)\n                {\n                    break;\n                }\n                const p = programs[channel];\n                p.program = event.messageData[0];\n                p.actualBank = p.bank;\n                break;\n            \n            case messageTypes.controllerChange:\n                // empty tracks cannot controller change\n                if (this.midiData.isMultiPort && this.midiData.usedChannelsOnTrack[trackIndex].size === 0)\n                {\n                    break;\n                }\n                // do not skip data entries\n                const controllerNumber = event.messageData[0];\n                if (isCCNonSkippable(controllerNumber))\n                {\n                    let ccV = event.messageData[1];\n                    if (controllerNumber === midiControllers.bankSelect)\n                    {\n                        // add the bank to be saved\n                        programs[channel].bank = ccV;\n                        break;\n                    }\n                    else if (controllerNumber === midiControllers.resetAllControllers)\n                    {\n                        resetAllControlllers(channel);\n                    }\n                    if (this.sendMIDIMessages)\n                    {\n                        this.sendMIDICC(channel, controllerNumber, ccV);\n                    }\n                    else\n                    {\n                        this.synth.controllerChange(channel, controllerNumber, ccV);\n                    }\n                }\n                else\n                {\n                    if (savedControllers[channel] === undefined)\n                    {\n                        savedControllers[channel] = Array.from(defaultControllerArray);\n                    }\n                    savedControllers[channel][controllerNumber] = event.messageData[1];\n                }\n                break;\n            \n            default:\n                this._processEvent(event, trackIndex);\n                break;\n        }\n        \n        this.eventIndex[trackIndex]++;\n        // find the next event\n        trackIndex = this._findFirstEventIndex();\n        let nextEvent = this.tracks[trackIndex][this.eventIndex[trackIndex]];\n        if (nextEvent === undefined)\n        {\n            this.stop();\n            return false;\n        }\n        this.playedTime += this.oneTickToSeconds * (nextEvent.ticks - event.ticks);\n    }\n    \n    // restoring saved controllers\n    if (this.sendMIDIMessages)\n    {\n        for (let channelNumber = 0; channelNumber < channelsToSave; channelNumber++)\n        {\n            // restore pitch bends\n            if (pitchBends[channelNumber] !== undefined)\n            {\n                this.sendMIDIPitchWheel(\n                    channelNumber,\n                    pitchBends[channelNumber] >> 7,\n                    pitchBends[channelNumber] & 0x7F\n                );\n            }\n            if (savedControllers[channelNumber] !== undefined)\n            {\n                // every controller that has changed\n                savedControllers[channelNumber].forEach((value, index) =>\n                {\n                    if (value !== defaultControllerArray[index] && !isCCNonSkippable(\n                        index))\n                    {\n                        this.sendMIDICC(channelNumber, index, value);\n                    }\n                });\n            }\n            // restore programs\n            if (programs[channelNumber].program >= 0 && programs[channelNumber].actualBank >= 0)\n            {\n                const bank = programs[channelNumber].actualBank;\n                this.sendMIDICC(channelNumber, midiControllers.bankSelect, bank);\n                this.sendMIDIProgramChange(channelNumber, programs[channelNumber].program);\n            }\n        }\n    }\n    else\n    {\n        // for all synth channels\n        for (let channelNumber = 0; channelNumber < channelsToSave; channelNumber++)\n        {\n            // restore pitch bends\n            if (pitchBends[channelNumber] !== undefined)\n            {\n                this.synth.pitchWheel(channelNumber, pitchBends[channelNumber] >> 7, pitchBends[channelNumber] & 0x7F);\n            }\n            if (savedControllers[channelNumber] !== undefined)\n            {\n                // every controller that has changed\n                savedControllers[channelNumber].forEach((value, index) =>\n                {\n                    if (value !== defaultControllerArray[index] && !isCCNonSkippable(\n                        index))\n                    {\n                        this.synth.controllerChange(\n                            channelNumber,\n                            index,\n                            value\n                        );\n                    }\n                });\n            }\n            // restore programs\n            if (programs[channelNumber].actualBank >= 0)\n            {\n                const p = programs[channelNumber];\n                if (p.program !== -1)\n                {\n                    // a program change has occurred, apply the actual bank when program change was executed\n                    this.synth.controllerChange(channelNumber, midiControllers.bankSelect, p.actualBank);\n                    this.synth.programChange(channelNumber, p.program);\n                }\n                else\n                {\n                    // no program change, apply the current bank select\n                    this.synth.controllerChange(channelNumber, midiControllers.bankSelect, p.bank);\n                }\n            }\n        }\n    }\n    return true;\n}\n\n/**\n * Starts the playback\n * @param resetTime {boolean} If true, time is set to 0 s\n * @this {SpessaSynthSequencer}\n */\nexport function play(resetTime = false)\n{\n    if (this.midiData === undefined)\n    {\n        return;\n    }\n    \n    // reset the time if necessary\n    if (resetTime)\n    {\n        this.pausedTime = undefined;\n        this.currentTime = 0;\n        return;\n    }\n    \n    if (this.currentTime >= this.duration)\n    {\n        this.pausedTime = undefined;\n        this.currentTime = 0;\n        return;\n    }\n    \n    // unpause if paused\n    if (this.paused)\n    {\n        // adjust the start time\n        this._recalculateStartTime(this.pausedTime);\n        this.pausedTime = undefined;\n    }\n    if (!this.sendMIDIMessages)\n    {\n        this.playingNotes.forEach(n =>\n        {\n            this.synth.noteOn(n.channel, n.midiNote, n.velocity);\n        });\n    }\n    this.setProcessHandler();\n}\n\n/**\n * @this {SpessaSynthSequencer}\n * @param ticks {number}\n */\nexport function setTimeTicks(ticks)\n{\n    if (!this.midiData)\n    {\n        return;\n    }\n    this.stop();\n    this.playingNotes = [];\n    this.pausedTime = undefined;\n    this?.onTimeChange?.(this.midiData.MIDIticksToSeconds(ticks));\n    const isNotFinished = this._playTo(0, ticks);\n    this._recalculateStartTime(this.playedTime);\n    if (!isNotFinished)\n    {\n        return;\n    }\n    this.play();\n}\n\n/**\n * @param time\n * @private\n * @this {SpessaSynthSequencer}\n */\nexport function _recalculateStartTime(time)\n{\n    this.absoluteStartTime = this.synth.currentSynthTime - time / this._playbackRate;\n}", "import { messageTypes, midiControllers } from \"../midi/midi_message.js\";\n\nimport { MIDI_CHANNEL_COUNT } from \"../synthetizer/synth_constants.js\";\n\n/**\n * @param message {number[]}\n * @this {SpessaSynthSequencer}\n */\nexport function sendMIDIMessage(message)\n{\n    if (!this.sendMIDIMessages)\n    {\n        return;\n    }\n    this?.onMIDIMessage?.(message);\n}\n\n/**\n * @this {SpessaSynthSequencer}\n * @param channel {number}\n * @param type {number}\n * @param value {number}\n */\nexport function sendMIDICC(channel, type, value)\n{\n    channel %= 16;\n    if (!this.sendMIDIMessages)\n    {\n        return;\n    }\n    this.sendMIDIMessage([messageTypes.controllerChange | channel, type, value]);\n}\n\n/**\n * @this {SpessaSynthSequencer}\n * @param channel {number}\n * @param program {number}\n */\nexport function sendMIDIProgramChange(channel, program)\n{\n    channel %= 16;\n    if (!this.sendMIDIMessages)\n    {\n        return;\n    }\n    this.sendMIDIMessage([messageTypes.programChange | channel, program]);\n}\n\n/**\n * Sets the pitch of the given channel\n * @this {SpessaSynthSequencer}\n * @param channel {number} usually 0-15: the channel to change pitch\n * @param MSB {number} SECOND byte of the MIDI pitchWheel message\n * @param LSB {number} FIRST byte of the MIDI pitchWheel message\n */\nexport function sendMIDIPitchWheel(channel, MSB, LSB)\n{\n    channel %= 16;\n    if (!this.sendMIDIMessages)\n    {\n        return;\n    }\n    this.sendMIDIMessage([messageTypes.pitchBend | channel, LSB, MSB]);\n}\n\n/**\n * @this {SpessaSynthSequencer}\n */\nexport function sendMIDIReset()\n{\n    if (!this.sendMIDIMessages)\n    {\n        return;\n    }\n    this.sendMIDIMessage([messageTypes.reset]);\n    for (let ch = 0; ch < MIDI_CHANNEL_COUNT; ch++)\n    {\n        this.sendMIDIMessage([messageTypes.controllerChange | ch, midiControllers.allSoundOff, 0]);\n        this.sendMIDIMessage([messageTypes.controllerChange | ch, midiControllers.resetAllControllers, 0]);\n    }\n}", "import { _addNewMidiPort, _processEvent } from \"./process_event.js\";\nimport { _findFirstEventIndex, processTick } from \"./process_tick.js\";\nimport { assignMIDIPort, loadNewSequence, loadNewSongList, nextSong, previousSong } from \"./song_control.js\";\nimport { _playTo, _recalculateStartTime, play, setTimeTicks } from \"./play.js\";\nimport { messageTypes, midiControllers } from \"../midi/midi_message.js\";\nimport { sendMIDICC, sendMIDIMessage, sendMIDIPitchWheel, sendMIDIProgramChange, sendMIDIReset } from \"./events.js\";\nimport { SpessaSynthWarn } from \"../utils/loggin.js\";\n\nimport { MIDI_CHANNEL_COUNT } from \"../synthetizer/synth_constants.js\";\n\nclass SpessaSynthSequencer\n{\n    /**\n     * All the sequencer's songs\n     * @type {BasicMIDI[]}\n     */\n    songs = [];\n    \n    /**\n     * Current song index\n     * @type {number}\n     */\n    songIndex = 0;\n    \n    /**\n     * shuffled song indexes\n     * @type {number[]}\n     */\n    shuffledSongIndexes = [];\n    \n    /**\n     * the synth to use\n     * @type {SpessaSynthProcessor}\n     */\n    synth;\n    \n    /**\n     * if the sequencer is active\n     * @type {boolean}\n     */\n    isActive = false;\n    \n    /**\n     * If the event should instead be sent back to the main thread instead of synth\n     * @type {boolean}\n     */\n    sendMIDIMessages = false;\n    \n    /**\n     * sequencer's loop count\n     * @type {number}\n     */\n    loopCount = Infinity;\n    \n    /**\n     * event's number in this.events\n     * @type {number[]}\n     */\n    eventIndex = [];\n    \n    /**\n     * tracks the time that has already been played\n     * @type {number}\n     */\n    playedTime = 0;\n    \n    /**\n     * The (relative) time when the sequencer was paused. If it's not paused, then it's undefined.\n     * @type {number}\n     */\n    pausedTime = undefined;\n    \n    /**\n     * Absolute playback startTime, bases on the synth's time\n     * @type {number}\n     */\n    absoluteStartTime = 0;\n    /**\n     * Currently playing notes (for pausing and resuming)\n     * @type {{\n     *     midiNote: number,\n     *     channel: number,\n     *     velocity: number\n     * }[]}\n     */\n    playingNotes = [];\n    \n    /**\n     * controls if the sequencer loops (defaults to true)\n     * @type {boolean}\n     */\n    loop = true;\n    \n    /**\n     * controls if the songs are ordered randomly\n     * @type {boolean}\n     */\n    shuffleMode = false;\n    \n    /**\n     * the current track data\n     * @type {BasicMIDI}\n     */\n    midiData = undefined;\n    \n    /**\n     * midi port number for the corresponding track\n     * @type {number[]}\n     */\n    midiPorts = [];\n    midiPortChannelOffset = 0;\n    /**\n     * stored as:\n     * Record<midi port, channel offset>\n     * @type {Record<number, number>}\n     */\n    midiPortChannelOffsets = {};\n    \n    /**\n     * @type {boolean}\n     */\n    skipToFirstNoteOn = true;\n    \n    /**\n     * If true, seq will stay paused when seeking or changing the playback rate\n     * @type {boolean}\n     */\n    preservePlaybackState = false;\n    \n    /**\n     * Called on a MIDI message if sending MIDI messages is enabled\n     * @type {function(message: number[])}\n     */\n    onMIDIMessage;\n    \n    /**\n     * Called when the time changes\n     * @type {function(newTime: number)}\n     */\n    onTimeChange;\n    \n    /**\n     * Calls when sequencer stops the playback\n     * @type {function(isFinished: boolean)}\n     */\n    onPlaybackStop;\n    \n    /**\n     * Calls after the songs have been processed but before the playback begins\n     * @type {function(newSongList: BasicMIDI[])}\n     */\n    onSongListChange;\n    \n    /**\n     * Calls when the song is changed (for example, in a playlist)\n     * @type {function(songIndex: number, autoPlay: boolean)}\n     */\n    onSongChange;\n    \n    /**\n     * Calls when a meta-event occurs\n     * @type {function(e: MIDIMessage, trackIndex: number)}\n     */\n    onMetaEvent;\n    \n    /**\n     * Calls when the loop count changes (usually decreases)\n     * @type {function(count: number)}\n     */\n    onLoopCountChange;\n    \n    /**\n     * @param spessasynthProcessor {SpessaSynthProcessor}\n     */\n    constructor(spessasynthProcessor)\n    {\n        this.synth = spessasynthProcessor;\n        this.absoluteStartTime = this.synth.currentSynthTime;\n    }\n    \n    /**\n     * Controls the playback's rate\n     * @type {number}\n     * @private\n     */\n    _playbackRate = 1;\n    \n    // noinspection JSUnusedGlobalSymbols\n    /**\n     * @param value {number}\n     */\n    set playbackRate(value)\n    {\n        const time = this.currentTime;\n        this._playbackRate = value;\n        this.currentTime = time;\n    }\n    \n    get currentTime()\n    {\n        // return the paused time if it's set to something other than undefined\n        if (this.pausedTime !== undefined)\n        {\n            return this.pausedTime;\n        }\n        \n        return (this.synth.currentSynthTime - this.absoluteStartTime) * this._playbackRate;\n    }\n    \n    set currentTime(time)\n    {\n        if (!this.midiData)\n        {\n            return;\n        }\n        if (time > this.duration || time < 0)\n        {\n            // time is 0\n            if (this.skipToFirstNoteOn)\n            {\n                this.setTimeTicks(this.midiData.firstNoteOn - 1);\n            }\n            else\n            {\n                this.setTimeTicks(0);\n            }\n            return;\n        }\n        if (this.skipToFirstNoteOn)\n        {\n            if (time < this.firstNoteTime)\n            {\n                this.setTimeTicks(this.midiData.firstNoteOn - 1);\n                return;\n            }\n        }\n        this.stop();\n        this.playingNotes = [];\n        const wasPaused = this.paused && this.preservePlaybackState;\n        this.pausedTime = undefined;\n        this?.onTimeChange?.(time);\n        if (this.midiData.duration === 0)\n        {\n            SpessaSynthWarn(\"No duration!\");\n            this?.onPlaybackStop?.(true);\n            return;\n        }\n        this._playTo(time);\n        this._recalculateStartTime(time);\n        if (wasPaused)\n        {\n            this.pause();\n        }\n        else\n        {\n            this.play();\n        }\n    }\n    \n    /**\n     * true if paused, false if playing or stopped\n     * @returns {boolean}\n     */\n    get paused()\n    {\n        return this.pausedTime !== undefined;\n    }\n    \n    /**\n     * Pauses the playback\n     * @param isFinished {boolean}\n     */\n    pause(isFinished = false)\n    {\n        if (this.paused)\n        {\n            SpessaSynthWarn(\"Already paused\");\n            return;\n        }\n        this.pausedTime = this.currentTime;\n        this.stop();\n        this?.onPlaybackStop?.(isFinished);\n    }\n    \n    /**\n     * Stops the playback\n     */\n    stop()\n    {\n        this.clearProcessHandler();\n        // disable sustain\n        for (let i = 0; i < 16; i++)\n        {\n            this.synth.controllerChange(i, midiControllers.sustainPedal, 0);\n        }\n        this.synth.stopAllChannels();\n        if (this.sendMIDIMessages)\n        {\n            for (let note of this.playingNotes)\n            {\n                this.sendMIDIMessage([messageTypes.noteOff | (note.channel % 16), note.midiNote]);\n            }\n            for (let c = 0; c < MIDI_CHANNEL_COUNT; c++)\n            {\n                this.sendMIDICC(c, midiControllers.allNotesOff, 0);\n            }\n        }\n    }\n    \n    loadCurrentSong(autoPlay = true)\n    {\n        let index = this.songIndex;\n        if (this.shuffleMode)\n        {\n            index = this.shuffledSongIndexes[this.songIndex];\n        }\n        this.loadNewSequence(this.songs[index], autoPlay);\n    }\n    \n    _resetTimers()\n    {\n        this.playedTime = 0;\n        this.eventIndex = Array(this.tracks.length).fill(0);\n    }\n    \n    setProcessHandler()\n    {\n        this.isActive = true;\n    }\n    \n    clearProcessHandler()\n    {\n        this.isActive = false;\n    }\n    \n    shuffleSongIndexes()\n    {\n        const indexes = this.songs.map((_, i) => i);\n        this.shuffledSongIndexes = [];\n        while (indexes.length > 0)\n        {\n            const index = indexes[Math.floor(Math.random() * indexes.length)];\n            this.shuffledSongIndexes.push(index);\n            indexes.splice(indexes.indexOf(index), 1);\n        }\n    }\n}\n\n// Web MIDI sending\nSpessaSynthSequencer.prototype.sendMIDIMessage = sendMIDIMessage;\nSpessaSynthSequencer.prototype.sendMIDIReset = sendMIDIReset;\nSpessaSynthSequencer.prototype.sendMIDICC = sendMIDICC;\nSpessaSynthSequencer.prototype.sendMIDIProgramChange = sendMIDIProgramChange;\nSpessaSynthSequencer.prototype.sendMIDIPitchWheel = sendMIDIPitchWheel;\nSpessaSynthSequencer.prototype.assignMIDIPort = assignMIDIPort;\n\nSpessaSynthSequencer.prototype._processEvent = _processEvent;\nSpessaSynthSequencer.prototype._addNewMidiPort = _addNewMidiPort;\nSpessaSynthSequencer.prototype.processTick = processTick;\nSpessaSynthSequencer.prototype._findFirstEventIndex = _findFirstEventIndex;\n\nSpessaSynthSequencer.prototype.loadNewSequence = loadNewSequence;\nSpessaSynthSequencer.prototype.loadNewSongList = loadNewSongList;\nSpessaSynthSequencer.prototype.nextSong = nextSong;\nSpessaSynthSequencer.prototype.previousSong = previousSong;\n\nSpessaSynthSequencer.prototype.play = play;\nSpessaSynthSequencer.prototype._playTo = _playTo;\nSpessaSynthSequencer.prototype.setTimeTicks = setTimeTicks;\nSpessaSynthSequencer.prototype._recalculateStartTime = _recalculateStartTime;\n\nexport { SpessaSynthSequencer };", "let tr;(()=>{var l=Uint8Array,T=Uint16Array,ur=Int32Array,W=new l([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),X=new l([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),wr=new l([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),Y=function(r,a){for(var e=new T(31),f=0;f<31;++f)e[f]=a+=1<<r[f-1];for(var v=new ur(e[30]),f=1;f<30;++f)for(var g=e[f];g<e[f+1];++g)v[g]=g-e[f]<<5|f;return{b:e,r:v}},Z=Y(W,2),$=Z.b,cr=Z.r;$[28]=258,cr[258]=28;var j=Y(X,0),hr=j.b,Fr=j.r,_=new T(32768);for(i=0;i<32768;++i)c=(i&43690)>>1|(i&21845)<<1,c=(c&52428)>>2|(c&13107)<<2,c=(c&61680)>>4|(c&3855)<<4,_[i]=((c&65280)>>8|(c&255)<<8)>>1;var c,i,A=function(r,a,e){for(var f=r.length,v=0,g=new T(a);v<f;++v)r[v]&&++g[r[v]-1];var k=new T(a);for(v=1;v<a;++v)k[v]=k[v-1]+g[v-1]<<1;var b;if(e){b=new T(1<<a);var m=15-a;for(v=0;v<f;++v)if(r[v])for(var U=v<<4|r[v],x=a-r[v],n=k[r[v]-1]++<<x,o=n|(1<<x)-1;n<=o;++n)b[_[n]>>m]=U}else for(b=new T(f),v=0;v<f;++v)r[v]&&(b[v]=_[k[r[v]-1]++]>>15-r[v]);return b},M=new l(288);for(i=0;i<144;++i)M[i]=8;var i;for(i=144;i<256;++i)M[i]=9;var i;for(i=256;i<280;++i)M[i]=7;var i;for(i=280;i<288;++i)M[i]=8;var i,L=new l(32);for(i=0;i<32;++i)L[i]=5;var i,gr=A(M,9,1),br=A(L,5,1),q=function(r){for(var a=r[0],e=1;e<r.length;++e)r[e]>a&&(a=r[e]);return a},u=function(r,a,e){var f=a/8|0;return(r[f]|r[f+1]<<8)>>(a&7)&e},C=function(r,a){var e=a/8|0;return(r[e]|r[e+1]<<8|r[e+2]<<16)>>(a&7)},kr=function(r){return(r+7)/8|0},xr=function(r,a,e){return(a==null||a<0)&&(a=0),(e==null||e>r.length)&&(e=r.length),new l(r.subarray(a,e))},yr=[\"unexpected EOF\",\"invalid block type\",\"invalid length/literal\",\"invalid distance\",\"stream finished\",\"no stream handler\",,\"no callback\",\"invalid UTF-8 data\",\"extra field too long\",\"date not in range 1980-2099\",\"filename too long\",\"stream finishing\",\"invalid zip data\"],h=function(r,a,e){var f=new Error(a||yr[r]);if(f.code=r,Error.captureStackTrace&&Error.captureStackTrace(f,h),!e)throw f;return f},Sr=function(r,a,e,f){var v=r.length,g=f?f.length:0;if(!v||a.f&&!a.l)return e||new l(0);var k=!e,b=k||a.i!=2,m=a.i;k&&(e=new l(v*3));var U=function(fr){var or=e.length;if(fr>or){var lr=new l(Math.max(or*2,fr));lr.set(e),e=lr}},x=a.f||0,n=a.p||0,o=a.b||0,S=a.l,I=a.d,z=a.m,D=a.n,G=v*8;do{if(!S){x=u(r,n,1);var H=u(r,n+1,3);if(n+=3,H)if(H==1)S=gr,I=br,z=9,D=5;else if(H==2){var N=u(r,n,31)+257,s=u(r,n+10,15)+4,d=N+u(r,n+5,31)+1;n+=14;for(var F=new l(d),P=new l(19),t=0;t<s;++t)P[wr[t]]=u(r,n+t*3,7);n+=s*3;for(var rr=q(P),Ar=(1<<rr)-1,Mr=A(P,rr,1),t=0;t<d;){var ar=Mr[u(r,n,Ar)];n+=ar&15;var w=ar>>4;if(w<16)F[t++]=w;else{var E=0,O=0;for(w==16?(O=3+u(r,n,3),n+=2,E=F[t-1]):w==17?(O=3+u(r,n,7),n+=3):w==18&&(O=11+u(r,n,127),n+=7);O--;)F[t++]=E}}var er=F.subarray(0,N),y=F.subarray(N);z=q(er),D=q(y),S=A(er,z,1),I=A(y,D,1)}else h(1);else{var w=kr(n)+4,J=r[w-4]|r[w-3]<<8,K=w+J;if(K>v){m&&h(0);break}b&&U(o+J),e.set(r.subarray(w,K),o),a.b=o+=J,a.p=n=K*8,a.f=x;continue}if(n>G){m&&h(0);break}}b&&U(o+131072);for(var Ur=(1<<z)-1,zr=(1<<D)-1,Q=n;;Q=n){var E=S[C(r,n)&Ur],p=E>>4;if(n+=E&15,n>G){m&&h(0);break}if(E||h(2),p<256)e[o++]=p;else if(p==256){Q=n,S=null;break}else{var nr=p-254;if(p>264){var t=p-257,B=W[t];nr=u(r,n,(1<<B)-1)+$[t],n+=B}var R=I[C(r,n)&zr],V=R>>4;R||h(3),n+=R&15;var y=hr[V];if(V>3){var B=X[V];y+=C(r,n)&(1<<B)-1,n+=B}if(n>G){m&&h(0);break}b&&U(o+131072);var vr=o+nr;if(o<y){var ir=g-y,Dr=Math.min(y,vr);for(ir+o<0&&h(3);o<Dr;++o)e[o]=f[ir+o]}for(;o<vr;++o)e[o]=e[o-y]}}a.l=S,a.p=Q,a.b=o,a.f=x,S&&(x=1,a.m=z,a.d=I,a.n=D)}while(!x);return o!=e.length&&k?xr(e,0,o):e.subarray(0,o)},Tr=new l(0);function mr(r,a){return Sr(r,{i:2},a&&a.out,a&&a.dictionary)}var Er=typeof TextDecoder<\"u\"&&new TextDecoder,pr=0;try{Er.decode(Tr,{stream:!0}),pr=1}catch{}tr=mr})();export{tr as inflateSync};\n", "/**\n * @typedef {Object} WaveMetadata\n * @property {string} title - the song's title\n * @property {string} artist - the song's artist\n * @property {string} album - the song's album\n * @property {string} genre - the song's genre\n */\n\nimport { IndexedByteArray } from \"./indexed_array.js\";\nimport { writeStringAsBytes } from \"./byte_functions/string.js\";\nimport { writeRIFFChunkParts, writeRIFFChunkRaw } from \"../soundfont/basic_soundfont/riff_chunk.js\";\nimport { writeLittleEndian } from \"./byte_functions/little_endian.js\";\n\n/**\n *\n * @param audioData {Float32Array[]} channels\n * @param sampleRate {number}\n * @param normalizeAudio {boolean} find the max sample point and set it to 1, and scale others with it\n * @param metadata {Partial<WaveMetadata>}\n * @param loop {{start: number, end: number}} loop start and end points in seconds. Undefined if no loop\n * @returns {ArrayBuffer}\n */\nexport function audioToWav(audioData, sampleRate, normalizeAudio = true, metadata = {}, loop = undefined)\n{\n    const length = audioData[0].length;\n    const numChannels = audioData.length;\n    \n    const bytesPerSample = 2; // 16-bit PCM\n    \n    // prepare INFO chunk\n    let infoChunk = new IndexedByteArray(0);\n    const infoOn = Object.keys(metadata).length > 0;\n    // INFO chunk\n    if (infoOn)\n    {\n        const encoder = new TextEncoder();\n        const infoChunks = [\n            writeRIFFChunkRaw(\"ICMT\", encoder.encode(\"Created with SpessaSynth\"), true)\n        ];\n        if (metadata.artist)\n        {\n            infoChunks.push(\n                writeRIFFChunkRaw(\"IART\", encoder.encode(metadata.artist), true)\n            );\n        }\n        if (metadata.album)\n        {\n            infoChunks.push(\n                writeRIFFChunkRaw(\"IPRD\", encoder.encode(metadata.album), true)\n            );\n        }\n        if (metadata.genre)\n        {\n            infoChunks.push(\n                writeRIFFChunkRaw(\"IGNR\", encoder.encode(metadata.genre), true)\n            );\n        }\n        if (metadata.title)\n        {\n            infoChunks.push(\n                writeRIFFChunkRaw(\"INAM\", encoder.encode(metadata.title), true)\n            );\n        }\n        infoChunk = writeRIFFChunkParts(\"INFO\", infoChunks, true);\n    }\n    \n    // prepare CUE chunk\n    let cueChunk = new IndexedByteArray(0);\n    const cueOn = loop?.end !== undefined && loop?.start !== undefined;\n    if (cueOn)\n    {\n        const loopStartSamples = Math.floor(loop.start * sampleRate);\n        const loopEndSamples = Math.floor(loop.end * sampleRate);\n        \n        const cueStart = new IndexedByteArray(24);\n        writeLittleEndian(cueStart, 0, 4); // dwIdentifier\n        writeLittleEndian(cueStart, 0, 4); // dwPosition\n        writeStringAsBytes(cueStart, \"data\"); // cue point ID\n        writeLittleEndian(cueStart, 0, 4); // chunkStart, always 0\n        writeLittleEndian(cueStart, 0, 4); // BlockStart, always 0\n        writeLittleEndian(cueStart, loopStartSamples, 4); // sampleOffset\n        \n        const cueEnd = new IndexedByteArray(24);\n        writeLittleEndian(cueEnd, 1, 4); // dwIdentifier\n        writeLittleEndian(cueEnd, 0, 4); // dwPosition\n        writeStringAsBytes(cueEnd, \"data\"); // cue point ID\n        writeLittleEndian(cueEnd, 0, 4); // chunkStart, always 0\n        writeLittleEndian(cueEnd, 0, 4); // BlockStart, always 0\n        writeLittleEndian(cueEnd, loopEndSamples, 4); // sampleOffset\n        \n        cueChunk = writeRIFFChunkParts(\"cue \", [\n            new IndexedByteArray([2, 0, 0, 0]), // cue points count\n            cueStart,\n            cueEnd]);\n    }\n    \n    // Prepare the header\n    const headerSize = 44;\n    const dataSize = length * numChannels * bytesPerSample; // 16-bit per channel\n    const fileSize = headerSize + dataSize + infoChunk.length + cueChunk.length - 8; // total file size minus the first 8 bytes\n    const header = new Uint8Array(headerSize);\n    \n    // 'RIFF'\n    header.set([82, 73, 70, 70], 0);\n    // file length\n    header.set(\n        new Uint8Array([fileSize & 0xff, (fileSize >> 8) & 0xff, (fileSize >> 16) & 0xff, (fileSize >> 24) & 0xff]),\n        4\n    );\n    // 'WAVE'\n    header.set([87, 65, 86, 69], 8);\n    // 'fmt '\n    header.set([102, 109, 116, 32], 12);\n    // fmt chunk length\n    header.set([16, 0, 0, 0], 16); // 16 for PCM\n    // audio format (PCM)\n    header.set([1, 0], 20);\n    // number of channels (2)\n    header.set([numChannels & 255, numChannels >> 8], 22);\n    // sample rate\n    header.set(\n        new Uint8Array([sampleRate & 0xff, (sampleRate >> 8) & 0xff, (sampleRate >> 16) & 0xff, (sampleRate >> 24) & 0xff]),\n        24\n    );\n    // byte rate (sample rate * block align)\n    const byteRate = sampleRate * numChannels * bytesPerSample; // 16-bit per channel\n    header.set(\n        new Uint8Array([byteRate & 0xff, (byteRate >> 8) & 0xff, (byteRate >> 16) & 0xff, (byteRate >> 24) & 0xff]),\n        28\n    );\n    // block align (channels * bytes per sample)\n    header.set([numChannels * bytesPerSample, 0], 32); // n channels * 16-bit per channel / 8\n    // bits per sample\n    header.set([16, 0], 34); // 16-bit\n    \n    // data chunk identifier 'data'\n    header.set([100, 97, 116, 97], 36);\n    // data chunk length\n    header.set(\n        new Uint8Array([dataSize & 0xff, (dataSize >> 8) & 0xff, (dataSize >> 16) & 0xff, (dataSize >> 24) & 0xff]),\n        40\n    );\n    \n    let wavData = new Uint8Array(fileSize + 8);\n    let offset = headerSize;\n    wavData.set(header, 0);\n    \n    // Interleave audio data (combine channels)\n    let multiplier = 32767;\n    if (normalizeAudio)\n    {\n        // find min and max values to prevent clipping when converting to 16 bits\n        const numSamples = audioData[0].length;\n        \n        let maxAbsValue = 0;\n        \n        for (let ch = 0; ch < numChannels; ch++)\n        {\n            const data = audioData[ch];\n            for (let i = 0; i < numSamples; i++)\n            {\n                const sample = Math.abs(data[i]);\n                if (sample > maxAbsValue)\n                {\n                    maxAbsValue = sample;\n                }\n            }\n        }\n        \n        multiplier = maxAbsValue > 0 ? (32767 / maxAbsValue) : 1;\n    }\n    for (let i = 0; i < length; i++)\n    {\n        // interleave both channels\n        audioData.forEach(d =>\n        {\n            const sample = Math.min(32767, Math.max(-32768, d[i] * multiplier));\n            // convert to 16-bit\n            wavData[offset++] = sample & 0xff;\n            wavData[offset++] = (sample >> 8) & 0xff;\n            \n        });\n        \n    }\n    \n    if (infoOn)\n    {\n        wavData.set(infoChunk, offset);\n        offset += infoChunk.length;\n    }\n    if (cueOn)\n    {\n        wavData.set(cueChunk, offset);\n    }\n    \n    return wavData.buffer;\n}\n", "// noinspection JSUnusedGlobalSymbols\n\nimport { SpessaSynthProcessor } from \"./src/synthetizer/audio_engine/main_processor.js\";\nimport { SpessaSynthSequencer } from \"./src/sequencer/sequencer_engine.js\";\nimport {\n    ALL_CHANNELS_OR_DIFFERENT_ACTION,\n    DEFAULT_PERCUSSION,\n    DEFAULT_SYNTH_MODE,\n    MIDI_CHANNEL_COUNT,\n    VOICE_CAP\n} from \"./src/synthetizer/synth_constants.js\";\nimport {\n    channelConfiguration,\n    NON_CC_INDEX_OFFSET\n} from \"./src/synthetizer/audio_engine/engine_components/controller_tables.js\";\nimport { KeyModifier } from \"./src/synthetizer/audio_engine/engine_components/key_modifier_manager.js\";\nimport {\n    masterParameterType\n} from \"./src/synthetizer/audio_engine/engine_methods/controller_control/master_parameters.js\";\nimport { SynthesizerSnapshot } from \"./src/synthetizer/audio_engine/snapshot/synthesizer_snapshot.js\";\nimport { ChannelSnapshot } from \"./src/synthetizer/audio_engine/snapshot/channel_snapshot.js\";\n\nimport { BasicSoundBank } from \"./src/soundfont/basic_soundfont/basic_soundbank.js\";\nimport { BasicSample, CreatedSample, sampleTypes } from \"./src/soundfont/basic_soundfont/basic_sample.js\";\nimport { BasicPresetZone } from \"./src/soundfont/basic_soundfont/basic_preset_zone.js\";\nimport { BasicInstrument } from \"./src/soundfont/basic_soundfont/basic_instrument.js\";\nimport { BasicPreset } from \"./src/soundfont/basic_soundfont/basic_preset.js\";\nimport { Generator } from \"./src/soundfont/basic_soundfont/generator.js\";\nimport { Modulator, modulatorCurveTypes, modulatorSources } from \"./src/soundfont/basic_soundfont/modulator.js\";\nimport { BasicZone } from \"./src/soundfont/basic_soundfont/basic_zone.js\";\nimport { BasicGlobalZone } from \"./src/soundfont/basic_soundfont/basic_global_zone.js\";\nimport { loadSoundFont } from \"./src/soundfont/load_soundfont.js\";\n\nimport { MIDI } from \"./src/midi/midi_loader.js\";\nimport { BasicMIDI } from \"./src/midi/basic_midi.js\";\nimport { MIDISequenceData } from \"./src/midi/midi_sequence.js\";\nimport { MIDIBuilder } from \"./src/midi/midi_builder.js\";\nimport { messageTypes, midiControllers, MIDIMessage } from \"./src/midi/midi_message.js\";\nimport { interpolationTypes, synthDisplayTypes } from \"./src/synthetizer/audio_engine/engine_components/enums.js\";\nimport { RMIDINFOChunks } from \"./src/midi/midi_tools/rmidi_writer.js\";\nimport { IndexedByteArray } from \"./src/utils/indexed_array.js\";\nimport { audioToWav } from \"./src/utils/buffer_to_wav.js\";\nimport {\n    SpessaSynthGroupCollapsed,\n    SpessaSynthGroupEnd,\n    SpessaSynthInfo,\n    SpessaSynthLogging,\n    SpessaSynthWarn\n} from \"./src/utils/loggin.js\";\nimport { readBytesAsUintBigEndian } from \"./src/utils/byte_functions/big_endian.js\";\nimport { readLittleEndian } from \"./src/utils/byte_functions/little_endian.js\";\nimport { readBytesAsString } from \"./src/utils/byte_functions/string.js\";\nimport { readVariableLengthQuantity } from \"./src/utils/byte_functions/variable_length_quantity.js\";\nimport { consoleColors } from \"./src/utils/other.js\";\nimport { inflateSync } from \"./src/externals/fflate/fflate.min.js\";\nimport { DLSDestinations } from \"./src/soundfont/dls/dls_destinations.js\";\nimport { DLSSources } from \"./src/soundfont/dls/dls_sources.js\";\nimport { generatorTypes } from \"./src/soundfont/basic_soundfont/generator_types.js\";\nimport { BasicInstrumentZone } from \"./src/soundfont/basic_soundfont/basic_instrument_zone.js\";\n// you shouldn't use these...\nconst SpessaSynthCoreUtils = {\n    consoleColors,\n    SpessaSynthInfo,\n    SpessaSynthWarn,\n    SpessaSynthGroupCollapsed,\n    SpessaSynthGroupEnd,\n    readBytesAsUintBigEndian,\n    readLittleEndian,\n    readBytesAsString,\n    readVariableLengthQuantity,\n    inflateSync\n};\n\n// see All-NPN-Exports.md in the wiki\nexport {\n    // synth and seq\n    SpessaSynthSequencer,\n    SpessaSynthProcessor,\n    SynthesizerSnapshot,\n    ChannelSnapshot,\n    KeyModifier,\n    \n    masterParameterType,\n    channelConfiguration,\n    interpolationTypes,\n    synthDisplayTypes,\n    DEFAULT_PERCUSSION,\n    VOICE_CAP,\n    ALL_CHANNELS_OR_DIFFERENT_ACTION,\n    NON_CC_INDEX_OFFSET,\n    DEFAULT_SYNTH_MODE,\n    MIDI_CHANNEL_COUNT,\n    \n    // sound banks\n    loadSoundFont,\n    Generator,\n    Modulator,\n    BasicZone,\n    BasicGlobalZone,\n    BasicSample,\n    CreatedSample,\n    BasicInstrumentZone,\n    BasicInstrument,\n    BasicPreset,\n    BasicPresetZone,\n    BasicSoundBank,\n    \n    modulatorSources,\n    modulatorCurveTypes,\n    generatorTypes,\n    DLSSources,\n    DLSDestinations,\n    sampleTypes,\n    \n    \n    // MIDI\n    MIDI,\n    MIDISequenceData,\n    BasicMIDI,\n    MIDIBuilder,\n    MIDIMessage,\n    \n    RMIDINFOChunks,\n    midiControllers,\n    messageTypes,\n    \n    // utils\n    IndexedByteArray,\n    audioToWav,\n    SpessaSynthLogging,\n    SpessaSynthCoreUtils\n};", "// noinspection RegExpRedundantEscape,JSDeprecatedSymbols,RegExpSingleCharAlternation\n\nfunction checkMobile()\n{\n    let check = false;\n    (function(a)\n    {\n        if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(\n            a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(\n            a.substr(0, 4)))\n        {\n            check = true;\n        }\n    })(navigator.userAgent || navigator.vendor || window.opera);\n    return check;\n}\n\nexport const isMobile = checkMobile();", "import { isMobile } from \"../utils/is_mobile.js\";\n\n/**\n * @this {MidiKeyboard}\n * @private\n */\nexport function _handlePointers()\n{\n    // POINTER HANDLING\n    const userNoteOff = note =>\n    {\n        this.pressedKeys.delete(note);\n        this.releaseNote(note, this.channel);\n        this.synth.noteOff(this.channel, note);\n    };\n    \n    /**\n     * @param note {number}\n     * @param touch {Touch|MouseEvent}\n     */\n    const userNoteOn = (note, touch) =>\n    {\n        // user note on\n        let velocity;\n        if (isMobile)\n        {\n            // ignore precise key velocity on mobile (keys are too small anyway)\n            velocity = 127;\n        }\n        else\n        {\n            // determine velocity. lower = more velocity\n            const keyElement = this.keys[0]; // all keys have the same top\n            const rect = keyElement.getBoundingClientRect();\n            if (this.keyboard.classList.contains(\"sideways\"))\n            {\n                const relativeMouseX = touch.clientX - rect.left;\n                const keyWidth = rect.width;\n                velocity = Math.floor((keyWidth - relativeMouseX) / keyWidth * 127);\n            }\n            else\n            {\n                // Handle both mouse and touch events\n                const relativeMouseY = touch.clientY - rect.top;\n                const keyHeight = rect.height;\n                velocity = Math.floor(relativeMouseY / keyHeight * 127);\n            }\n        }\n        if (this.onNotePressed)\n        {\n            this.onNotePressed(note, velocity);\n        }\n        this.synth.noteOn(this.channel, note, velocity);\n    };\n    \n    /**\n     * @param e {MouseEvent|TouchEvent}\n     */\n    const moveHandler = e =>\n    {\n        // all currently pressed keys are stored in this.pressedKeys\n        /**\n         * @type {Touch[]|MouseEvent[]}\n         */\n        const touches = e.touches ? Array.from(e.touches) : [e];\n        /**\n         * @type {Set<number>}\n         */\n        const currentlyTouchedKeys = new Set();\n        touches.forEach(touch =>\n        {\n            const targetKey = document.elementFromPoint(touch.clientX, touch.clientY);\n            const midiNote = parseInt(targetKey.id.replace(\"note\", \"\"));\n            currentlyTouchedKeys.add(midiNote);\n            if (isNaN(midiNote) || midiNote < 0 || this.pressedKeys.has(midiNote))\n            {\n                // pressed outside of bounds or already pressed\n                return;\n            }\n            this.pressedKeys.add(midiNote);\n            userNoteOn(midiNote, touch);\n        });\n        this.pressedKeys.forEach(key =>\n        {\n            if (!currentlyTouchedKeys.has(key))\n            {\n                userNoteOff(key);\n            }\n        });\n    };\n    \n    // mouse\n    if (!isMobile)\n    {\n        document.addEventListener(\"mousedown\", e =>\n        {\n            this.mouseHeld = true;\n            moveHandler(e);\n        });\n        document.addEventListener(\"mouseup\", () =>\n        {\n            this.mouseHeld = false;\n            this.pressedKeys.forEach(key =>\n            {\n                userNoteOff(key);\n            });\n        });\n        this.keyboard.onmousemove = e =>\n        {\n            if (this.mouseHeld)\n            {\n                moveHandler(e);\n            }\n        };\n        this.keyboard.onmouseleave = () =>\n        {\n            this.pressedKeys.forEach(key =>\n            {\n                userNoteOff(key);\n            });\n        };\n    }\n    \n    // touch\n    this.keyboard.ontouchstart = moveHandler.bind(this);\n    this.keyboard.ontouchend = moveHandler.bind(this);\n    // some fingers may still be pressed so we move handler here\n    this.keyboard.ontouchmove = moveHandler.bind(this);\n}", "import { midiControllers } from \"spessasynth_core\";\nimport { _handlePointers } from \"./pointer_handling.js\";\nimport { ANIMATION_REFLOW_TIME } from \"../utils/animation_utils.js\";\n\n/**\n * midi_keyboard.js\n * purpose: creates and manages the on-screen virtual keyboard\n */\n\nconst GLOW_PX = 20;\n\nclass MidiKeyboard\n{\n    /**\n     * @type {function}\n     * @param midiNote {number} the MIDI note number that was pressed\n     * @param velocity {number} the velocity that was used\n     */\n    onNotePressed = undefined;\n    \n    /**\n     * Creates a new midi keyboard(keyboard)\n     * @param channelColors {Array<string>}\n     * @param synth {CustomSynth}\n     */\n    constructor(channelColors, synth)\n    {\n        this.mouseHeld = false;\n        /**\n         * @type {Set<number>}\n         */\n        this.pressedKeys = new Set();\n        /**\n         * @type {\"light\"|\"dark\"}\n         */\n        this.mode = \"light\";\n        this.sizeChangeAnimationId = -1;\n        this.modeChangeAnimationId = -1;\n        \n        /**\n         * @type {{min: number, max: number}}\n         * @private\n         */\n        this._keyRange = {\n            min: 0,\n            max: 127\n        };\n        \n        this.synth = synth;\n        this.channel = 0;\n        \n        this.channelColors = channelColors;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._shown = true;\n        \n        this._createKeyboard();\n        \n        // connect the synth to keyboard\n        this.synth.eventHandler.addEvent(\"noteon\", \"keyboard-note-on\", e =>\n        {\n            const noteShift = Math.trunc(this.synth.channelProperties[e.channel].transposition);\n            this.pressNote(e.midiNote + noteShift, e.channel, e.velocity);\n        });\n        \n        this.synth.eventHandler.addEvent(\"noteoff\", \"keyboard-note-off\", e =>\n        {\n            const noteShift = Math.trunc(this.synth.channelProperties[e.channel].transposition);\n            this.releaseNote(e.midiNote + noteShift, e.channel);\n        });\n        \n        this.synth.eventHandler.addEvent(\"stopall\", \"keyboard-stop-all\", () =>\n        {\n            this.clearNotes();\n        });\n        \n        this.synth.eventHandler.addEvent(\"mutechannel\", \"keyboard-mute-channel\", e =>\n        {\n            if (e.isMuted)\n            {\n                for (let i = 0; i < 128; i++)\n                {\n                    this.releaseNote(i, e.channel);\n                }\n            }\n        });\n        \n        this.synth.eventHandler.addEvent(\"controllerchange\", \"keyboard-cc-change\", e =>\n        {\n            if (e.controllerNumber !== midiControllers.allNotesOff)\n            {\n                return;\n            }\n            this.clearNotes();\n        });\n    }\n    \n    get shown()\n    {\n        return this._shown;\n    }\n    \n    /**\n     * @param val {boolean}\n     */\n    set shown(val)\n    {\n        if (val === true)\n        {\n            this.keyboard.style.display = \"\";\n        }\n        else\n        {\n            this.keyboard.style.display = \"none\";\n        }\n        this._shown = val;\n    }\n    \n    /**\n     * The range of displayed MIDI keys\n     * @returns {{min: number, max: number}}\n     */\n    get keyRange()\n    {\n        return this._keyRange;\n    }\n    \n    /**\n     * The range of displayed MIDI keys\n     * @param value {{min: number, max: number}}\n     */\n    set keyRange(value)\n    {\n        if (value.max === undefined || value.min === undefined)\n        {\n            throw new TypeError(\"No min or max property!\");\n        }\n        if (value.min > value.max)\n        {\n            let temp = value.min;\n            value.min = value.max;\n            value.max = temp;\n        }\n        value.min = Math.max(0, value.min);\n        value.max = Math.min(127, value.max);\n        this.setKeyRange(value, true);\n        \n    }\n    \n    /**\n     * @param down {boolean}\n     */\n    setHoldPedal(down)\n    {\n        if (down)\n        {\n            this.synth.controllerChange(this.channel, midiControllers.sustainPedal, 127);\n            this.keyboard.style.filter = \"brightness(0.5)\";\n        }\n        else\n        {\n            this.synth.controllerChange(this.channel, midiControllers.sustainPedal, 0);\n            this.keyboard.style.filter = \"\";\n        }\n    }\n    \n    /**\n     * @private\n     */\n    _createKeyboard()\n    {\n        /**\n         * @type {HTMLDivElement}\n         */\n        this.keyboard = document.getElementById(\"keyboard\");\n        this.keyboard.innerHTML = \"\";\n        \n        /**\n         *\n         * @type {HTMLDivElement[]}\n         */\n        this.keys = [];\n        \n        /**\n         * @type {string[][]}\n         */\n        this.keyColors = [];\n        // create keyboard\n        for (let midiNote = this._keyRange.min; midiNote < this._keyRange.max + 1; midiNote++)\n        {\n            \n            const keyElement = this._createKey(midiNote);\n            this.keyColors.push([]);\n            this.keyboard.appendChild(keyElement);\n            this.keys.push(keyElement);\n        }\n        \n        this._handlePointers();\n        \n        if (this.mode === \"dark\")\n        {\n            this.mode = \"light\";\n            this.toggleMode(false);\n        }\n    }\n    \n    /**\n     * @param midiNote {number}\n     * @returns {HTMLDivElement}\n     * @private\n     */\n    _createKey(midiNote)\n    {\n        function isBlackNoteNumber(noteNumber)\n        {\n            let pitchClass = noteNumber % 12;\n            return pitchClass === 1 || pitchClass === 3 || pitchClass === 6 || pitchClass === 8 || pitchClass === 10;\n        }\n        \n        let keyElement = document.createElement(\"div\");\n        keyElement.classList.add(\"key\");\n        keyElement.id = `note${midiNote}`;\n        \n        \n        let isBlack = isBlackNoteNumber(midiNote);\n        if (isBlack)\n        {\n            // short note\n            keyElement.classList.add(\"sharp_key\");\n        }\n        else\n        {\n            // long note\n            keyElement.classList.add(\"flat_key\");\n            let blackNoteLeft = false;\n            let blackNoteRight = false;\n            if (midiNote >= 0)\n            {\n                blackNoteLeft = isBlackNoteNumber(midiNote - 1);\n            }\n            if (midiNote < 127)\n            {\n                blackNoteRight = isBlackNoteNumber(midiNote + 1);\n            }\n            \n            if (blackNoteRight && blackNoteLeft)\n            {\n                keyElement.classList.add(\"between_sharps\");\n            }\n            else if (blackNoteLeft)\n            {\n                keyElement.classList.add(\"left_sharp\");\n            }\n            else if (blackNoteRight)\n            {\n                keyElement.classList.add(\"right_sharp\");\n            }\n            \n            \n        }\n        return keyElement;\n    }\n    \n    toggleMode(animate = true)\n    {\n        if (this.mode === \"light\")\n        {\n            this.mode = \"dark\";\n        }\n        else\n        {\n            this.mode = \"light\";\n        }\n        if (!animate)\n        {\n            this.keys.forEach(k =>\n            {\n                if (k.classList.contains(\"flat_key\"))\n                {\n                    k.classList.toggle(\"flat_dark_key\");\n                }\n            });\n            return;\n        }\n        if (this.modeChangeAnimationId)\n        {\n            clearTimeout(this.modeChangeAnimationId);\n        }\n        this.keyboard.classList.add(\"mode_transform\");\n        const disableScroll = document.body.scrollHeight <= window.innerHeight;\n        if (disableScroll)\n        {\n            document.body.classList.add(\"no_scroll\");\n        }\n        this.modeChangeAnimationId = setTimeout(() =>\n        {\n            this.keys.forEach(k =>\n            {\n                if (k.classList.contains(\"flat_key\"))\n                {\n                    k.classList.toggle(\"flat_dark_key\");\n                }\n            });\n            this.keyboard.classList.remove(\"mode_transform\");\n            // restore scrolling\n            setTimeout(() => document.body.classList.remove(\"no_scroll\"), 500);\n        }, 500);\n    }\n    \n    /**\n     * @param range {{min: number, max: number}}\n     * @param animate {boolean}\n     */\n    setKeyRange(range, animate = true)\n    {\n        const diff = Math.abs(range.max - range.min);\n        if (diff < 12)\n        {\n            range.min -= 6;\n            range.max = range.min + 12;\n        }\n        // adjust height\n        // according to my testing, this function seems to calculate the height well:\n        // 900 / (keys + 5)\n        const newHeight = 900 / ((range.max - range.min) + 5);\n        const rules = document.styleSheets[0].cssRules;\n        /**\n         * adjust key pressing skew (hacky!!!)\n         * @type {CSSStyleRule}\n         */\n        let keyRule;\n        for (const rule of rules)\n        {\n            if (rule.selectorText === \"#keyboard .key\")\n            {\n                keyRule = rule;\n                break;\n            }\n        }\n        keyRule.style.setProperty(\"--pressed-transform-skew\", `${0.0008 / (newHeight / 7)}`);\n        if (animate)\n        {\n            if (this.sizeChangeAnimationId)\n            {\n                clearTimeout(this.sizeChangeAnimationId);\n            }\n            // do a cool animation here.\n            // get the height ratio for animation\n            const computedStyle = getComputedStyle(this.keyboard);\n            const currentHeight = parseFloat(computedStyle.getPropertyValue(\"--current-min-height\")\n                .replace(/[^\\d.]+/g, \"\"));\n            const currentHeightPx = this.keyboard.getBoundingClientRect().height;\n            const heightRatio = newHeight / currentHeight;\n            const heightDifferencePx = currentHeightPx * heightRatio - currentHeightPx;\n            \n            // get the key shift ratio for animation\n            const currentCenterKey = (this._keyRange.min + this._keyRange.max) / 2;\n            const newCenterKey = (range.min + range.max) / 2;\n            \n            this._keyRange = range;\n            \n            // get key width for calculation\n            const keyWidth = this.keys.find(k => k.classList.contains(\"sharp_key\")).getBoundingClientRect().width;\n            const pixelShift = (currentCenterKey - newCenterKey) * keyWidth;\n            \n            // get the new border radius\n            const currentBorderRadius = parseFloat(\n                computedStyle\n                    .getPropertyValue(\"--key-border-radius\")\n                    .replace(/[^\\d.]+/g, \"\")\n            );\n            // add margin so the keyboard takes up the new amount of space\n            this.keyboard.style.marginTop = `${heightDifferencePx}px`;\n            this.keyboard.style.transition = \"\";\n            \n            // being the transition\n            this.keyboard.style.transform = `scale(${heightRatio}) translateX(${pixelShift}px)`;\n            this.keyboard.style.setProperty(\"--key-border-radius\", `${currentBorderRadius / heightRatio}vmin`);\n            \n            // animation end\n            this.sizeChangeAnimationId = setTimeout(() =>\n            {\n                this.keyboard.style.setProperty(\n                    \"--current-min-height\",\n                    `${newHeight}`\n                );\n                // restore values and disable transition\n                this.keyboard.style.transition = \"none\";\n                this.keyboard.style.transform = \"\";\n                this.keyboard.style.marginTop = \"\";\n                this.keyboard.style.setProperty(\"--key-border-radius\", \"\");\n                // update size\n                this._createKeyboard();\n                // restore transition\n                setTimeout(\n                    () => this.keyboard.style.transition = \"\",\n                    ANIMATION_REFLOW_TIME\n                );\n            }, 500);\n        }\n        else\n        {\n            this.keyboard.style.setProperty(\"--current-min-height\", `${newHeight}`);\n            this._keyRange = range;\n            this._createKeyboard();\n        }\n    }\n    \n    /**\n     * Selects the channel from synth\n     * @param channel {number} 0-15\n     */\n    selectChannel(channel)\n    {\n        this.channel = channel;\n    }\n    \n    /**\n     * presses a midi note visually\n     * @param midiNote {number} 0-127\n     * @param channel {number} 0-15     * @param volume {number} 0-1\n     * @param velocity {number} 0-127\n     */\n    pressNote(midiNote, channel, velocity)\n    {\n        let key = this.keys[midiNote - this._keyRange.min];\n        if (key === undefined)\n        {\n            return;\n        }\n        key.classList.add(\"pressed\");\n        \n        let isSharp = key.classList.contains(\"sharp_key\");\n        let brightness = velocity / 127;\n        let rgbaValues = this.channelColors[channel % 16].match(/\\d+(\\.\\d+)?/g).map(parseFloat);\n        \n        // multiply the rgb values by brightness\n        let color;\n        if (!isSharp && this.mode === \"light\")\n        {\n            // multiply the rgb values\n            let newRGBValues = rgbaValues.slice(0, 3).map(value => 255 - (255 - value) * brightness);\n            \n            // create the new color\n            color = `rgba(${newRGBValues.join(\", \")}, ${rgbaValues[3]})`;\n        }\n        else\n        {\n            // multiply the rgb values\n            let newRGBValues = rgbaValues.slice(0, 3).map(value => value * brightness);\n            \n            // create the new color\n            color = `rgba(${newRGBValues.join(\", \")}, ${rgbaValues[3]})`;\n        }\n        key.style.background = color;\n        if (this.mode === \"dark\")\n        {\n            const spread = GLOW_PX * brightness;\n            key.style.boxShadow = `${color} 0px 0px ${spread}px ${spread / 5}px`;\n        }\n        /**\n         * @type {string[]}\n         */\n        this.keyColors[midiNote - this._keyRange.min].push(this.channelColors[channel % 16]);\n    }\n    \n    /**\n     * @param midiNote {number} 0-127\n     * @param channel {number} 0-15\n     */\n    releaseNote(midiNote, channel)\n    {\n        const relativeKey = midiNote - this._keyRange.min;\n        let keyElement = this.keys[relativeKey];\n        if (keyElement === undefined)\n        {\n            return;\n        }\n        \n        channel %= this.channelColors.length;\n        \n        /**\n         * @type {string[]}\n         */\n        let pressedColors = this.keyColors[relativeKey];\n        if (!pressedColors)\n        {\n            return;\n        }\n        const channelColor = this.channelColors[channel];\n        for (let i = 0; i < pressedColors.length; i++)\n        {\n            const color = pressedColors[i];\n            if (color === channelColor)\n            {\n                pressedColors.splice(i, 1);\n                i--;\n            }\n        }\n        const color = pressedColors[pressedColors.length - 1] || \"\";\n        keyElement.style.background = color;\n        if (this.mode === \"dark\" && color !== \"\")\n        {\n            keyElement.style.boxShadow = `0px 0px ${GLOW_PX}px ${color}`;\n        }\n        if (pressedColors.length < 1)\n        {\n            keyElement.classList.remove(\"pressed\");\n            keyElement.style.background = \"\";\n            keyElement.style.boxShadow = \"\";\n        }\n    }\n    \n    clearNotes()\n    {\n        this.keys.forEach((key, index) =>\n        {\n            key.classList.remove(\"pressed\");\n            key.style.background = \"\";\n            key.style.boxShadow = \"\";\n            this.keyColors[index] = [];\n        });\n    }\n}\n\nMidiKeyboard.prototype._handlePointers = _handlePointers;\nexport { MidiKeyboard };", "/**\n * other.js\n * purpose: contains some useful functions that don't belong in any specific category\n */\n\nimport { SpessaSynthCoreUtils } from \"spessasynth_core\";\n\nconst consoleColors = SpessaSynthCoreUtils.consoleColors;\n\nexport { consoleColors };\n\n", "/**\n * fancy_chorus.js\n * purpose: creates a simple chorus effect node\n */\n\n/**\n * @typedef {{\n *     oscillator: OscillatorNode,\n *     oscillatorGain: GainNode,\n *     delay: DelayNode\n * }} ChorusNode\n */\n\n/**\n * @typedef {Object} ChorusConfig\n * @property {number?} nodesAmount - the amount of delay nodes (for each channel) and the corresponding oscillators\n * @property {number?} defaultDelay - the initial delay, in seconds\n * @property {number?} delayVariation - the difference between delays in the delay nodes\n * @property {number?} stereoDifference - the difference of delays between two channels (added to the left channel and subtracted from the right)\n * @property {number?} oscillatorFrequency - the initial delay time oscillator frequency, in Hz.\n * @property {number?} oscillatorFrequencyVariation - the difference between frequencies of oscillators, in Hz\n * @property {number?} oscillatorGain - how much will oscillator alter the delay in delay nodes, in seconds\n */\n\nconst NODES_AMOUNT = 4;\nconst DEFAULT_DELAY = 0.03;\nconst DELAY_VARIATION = 0.01;\nconst STEREO_DIFF = 0.02;\n\nconst OSC_FREQ = 0.2;\nconst OSC_FREQ_VARIATION = 0.05;\nconst OSC_GAIN = 0.003;\n\nexport const DEFAULT_CHORUS_CONFIG = {\n    nodesAmount: NODES_AMOUNT,\n    defaultDelay: DEFAULT_DELAY,\n    delayVariation: DELAY_VARIATION,\n    stereoDifference: STEREO_DIFF,\n    oscillatorFrequency: OSC_FREQ,\n    oscillatorFrequencyVariation: OSC_FREQ_VARIATION,\n    oscillatorGain: OSC_GAIN\n};\n\nexport class FancyChorus\n{\n    /**\n     * Creates a fancy chorus effect\n     * @param output {AudioNode} - the target output node\n     * @param config {ChorusConfig} - the configuration for the chorus\n     */\n    constructor(output, config = DEFAULT_CHORUS_CONFIG)\n    {\n        const context = output.context;\n        \n        this.input = context.createChannelSplitter(2);\n        \n        const merger = context.createChannelMerger(2);\n        \n        /**\n         * @type {ChorusNode[]}\n         */\n        const chorusNodesLeft = [];\n        /**\n         * @type {ChorusNode[]}\n         */\n        const chorusNodesRight = [];\n        let freq = config.oscillatorFrequency;\n        let delay = config.defaultDelay;\n        for (let i = 0; i < config.nodesAmount; i++)\n        {\n            // left node\n            this._createChorusNode(\n                freq,\n                delay - config.stereoDifference,\n                chorusNodesLeft,\n                0,\n                merger,\n                0,\n                context,\n                config\n            );\n            // right node\n            this._createChorusNode(\n                freq,\n                delay + config.stereoDifference,\n                chorusNodesRight,\n                1,\n                merger,\n                1,\n                context,\n                config\n            );\n            freq += config.oscillatorFrequencyVariation;\n            delay += config.delayVariation;\n        }\n        \n        merger.connect(output);\n        this.merger = merger;\n        this.chorusLeft = chorusNodesLeft;\n        this.chorusRight = chorusNodesRight;\n    }\n    \n    /**\n     * Disconnects and deletes the chorus effect\n     */\n    delete()\n    {\n        this.input.disconnect();\n        delete this.input;\n        this.merger.disconnect();\n        delete this.merger;\n        for (const chorusLeftElement of this.chorusLeft)\n        {\n            chorusLeftElement.delay.disconnect();\n            chorusLeftElement.oscillator.disconnect();\n            chorusLeftElement.oscillatorGain.disconnect();\n            delete chorusLeftElement.delay;\n            delete chorusLeftElement.oscillatorGain;\n            delete chorusLeftElement.oscillatorGain;\n        }\n        for (const chorusRightElement of this.chorusRight)\n        {\n            chorusRightElement.delay.disconnect();\n            chorusRightElement.oscillator.disconnect();\n            chorusRightElement.oscillatorGain.disconnect();\n            delete chorusRightElement.delay;\n            delete chorusRightElement.oscillatorGain;\n            delete chorusRightElement.oscillatorGain;\n        }\n    }\n    \n    /**\n     * @param freq {number}\n     * @param delay {number}\n     * @param list {ChorusNode[]}\n     * @param input {number}\n     * @param output {AudioNode}\n     * @param outputNum {number}\n     * @param context {BaseAudioContext}\n     * @param config {ChorusConfig}\n     * @private\n     */\n    _createChorusNode(freq, delay, list, input, output, outputNum, context, config)\n    {\n        const oscillator = context.createOscillator();\n        oscillator.type = \"sine\";\n        oscillator.frequency.value = freq;\n        const gainNode = context.createGain();\n        gainNode.gain.value = config.oscillatorGain;\n        const delayNode = context.createDelay();\n        delayNode.delayTime.value = delay;\n        \n        oscillator.connect(gainNode);\n        gainNode.connect(delayNode.delayTime);\n        oscillator.start(context.currentTime /*+ delay*/);\n        \n        this.input.connect(delayNode, input);\n        delayNode.connect(output, 0, outputNum);\n        \n        list.push({\n            oscillator: oscillator,\n            oscillatorGain: gainNode,\n            delay: delayNode\n        });\n    }\n}\n", "export const rbCompressed = ``", "import { rbCompressed } from \"./rb_compressed.min.js\";\nimport { SpessaSynthCoreUtils } from \"spessasynth_core\";\n\n// convert the base64 string to array buffer\nconst binaryString = atob(rbCompressed);\nconst binary = new Uint8Array(binaryString.length);\nfor (let i = 0; i < binaryString.length; i++)\n{\n    binary[i] = binaryString.charCodeAt(i);\n}\n\n\n/**\n * the reverb is zlib compressed, decompress here\n * @type {ArrayBuffer}\n */\nconst reverbBufferBinary = SpessaSynthCoreUtils.inflateSync(binary).buffer;\nexport { reverbBufferBinary };", "import { reverbBufferBinary } from \"./reverb_as_binary.js\";\n\n/**\n * Creates a reverb processor\n * @param context {BaseAudioContext}\n * @param reverbBuffer {AudioBuffer}\n * @returns {{conv: ConvolverNode, promise: Promise<AudioBuffer>}}\n */\nexport function getReverbProcessor(context, reverbBuffer = undefined)\n{\n    let solve;\n    /**\n     * @type {Promise<AudioBuffer>}\n     */\n    let promise = new Promise(r => solve = r);\n    const convolver = context.createConvolver();\n    if (reverbBuffer)\n    {\n        convolver.buffer = reverbBuffer;\n        solve();\n    }\n    else\n    {\n        // decode\n        promise = context.decodeAudioData(reverbBufferBinary.slice(0));\n        promise.then(b =>\n        {\n            convolver.buffer = b;\n        });\n    }\n    return {\n        conv: convolver,\n        promise: promise\n    };\n}", "import { DEFAULT_CHORUS_CONFIG } from \"./fancy_chorus.js\";\n\n/**\n * @typedef {Object} SynthConfig\n * @property {boolean?} chorusEnabled - indicates if the chorus effect is enabled.\n * @property {ChorusConfig?} chorusConfig - the configuration for chorus. Pass undefined to use defaults\n * @property {boolean?} reverbEnabled - indicates if the reverb effect is enabled.\n * @property {AudioBuffer?} reverbImpulseResponse - the impulse response for the reverb. Pass undefined to use defaults\n * @property {{\n *      worklet: function(context: object, name: string, options?: Object)\n * }?} audioNodeCreators - custom audio node creation functions for Web Audio wrappers.\n */\n\n\n/**\n * @type {SynthConfig}\n */\nexport const DEFAULT_SYNTH_CONFIG = {\n    chorusEnabled: true,\n    chorusConfig: DEFAULT_CHORUS_CONFIG,\n    \n    reverbEnabled: true,\n    reverbImpulseResponse: undefined, // will load the integrated one\n    audioNodeCreators: undefined\n};", "import { BasicMIDI, MIDISequenceData } from \"spessasynth_core\";\n\n/**\n * A simplified version of the MIDI, accessible at all times from the Sequencer.\n * Use getMIDI() to get the actual sequence.\n * This class contains all properties that MIDI does, except for tracks and the embedded soundfont.\n */\nexport class MIDIData extends MIDISequenceData\n{\n    \n    /**\n     * A boolean indicating if the MIDI file contains an embedded soundfont.\n     * If the embedded soundfont is undefined, this will be false.\n     * @type {boolean}\n     */\n    isEmbedded = false;\n    \n    /**\n     * Constructor that copies data from a BasicMIDI instance.\n     * @param {BasicMIDI} midi - The BasicMIDI instance to copy data from.\n     */\n    constructor(midi)\n    {\n        super();\n        this._copyFromSequence(midi);\n        \n        // Set isEmbedded based on the presence of an embeddedSoundFont\n        this.isEmbedded = midi.embeddedSoundFont !== undefined;\n    }\n}\n\n\n/**\n * Temporary MIDI data used when the MIDI is not loaded.\n * @type {MIDIData}\n */\nexport const DUMMY_MIDI_DATA = Object.assign({\n    duration: 99999,\n    firstNoteOn: 0,\n    loop: {\n        start: 0,\n        end: 123456\n    },\n    \n    lastVoiceEventTick: 123456,\n    lyrics: [],\n    lyricsTicks: [],\n    copyright: \"\",\n    midiPorts: [],\n    midiPortChannelOffsets: [],\n    tracksAmount: 0,\n    tempoChanges: [{ ticks: 0, tempo: 120 }],\n    trackNames: [],\n    fileName: \"NOT_LOADED.mid\",\n    midiName: \"Loading...\",\n    rawMidiName: new Uint8Array([76, 111, 97, 100, 105, 110, 103, 46, 46, 46]), // \"Loading...\"\n    usedChannelsOnTrack: [],\n    timeDivision: 0,\n    keyRange: { min: 0, max: 127 },\n    isEmbedded: false,\n    isKaraokeFile: false,\n    isMultiPort: false,\n    RMIDInfo: {},\n    bankOffset: 0,\n    midiNameUsesFileName: false,\n    format: 0\n}, MIDIData.prototype);", "/**\n * @typedef {Object} WaveMetadata\n * @property {string|undefined} title - the song's title\n * @property {string|undefined} artist - the song's artist\n * @property {string|undefined} album - the song's album\n * @property {string|undefined} genre - the song's genre\n */\n\nimport { audioToWav } from \"spessasynth_core\";\n\n// noinspection JSUnusedGlobalSymbols\n/**\n * Converts an audio buffer into a wave file\n * @param audioBuffer {AudioBuffer} variable channels\n * @param normalizeAudio {boolean} find the max sample point and set it to 1, and scale others with it\n * @param channelOffset {number} channel offset and channel offset + 1 get saved\n * @param metadata {WaveMetadata}\n * @param loop {{start: number, end: number}} loop start and end points in seconds. Undefined if no loop\n * @param channelCount {number} the channel count, defaults to all the channels\n * @returns {Blob}\n */\nexport function audioBufferToWav(audioBuffer, normalizeAudio = true, channelOffset = 0, metadata = {}, loop = undefined, channelCount = audioBuffer.numberOfChannels)\n{\n    /**\n     * @type {Float32Array[]}\n     */\n    const channels = [];\n    for (let i = channelOffset; i < audioBuffer.numberOfChannels; i++)\n    {\n        channels.push(audioBuffer.getChannelData(i));\n        if (channels.length >= channelCount)\n        {\n            break;\n        }\n    }\n    return new Blob(\n        [audioToWav(channels, audioBuffer.sampleRate, normalizeAudio, metadata, loop)],\n        { type: \"audio/wav\" }\n    );\n}\n", "import { Synthetizer } from \"../synthetizer/synthetizer.js\";\nimport { SpessaSynthCoreUtils as util } from \"spessasynth_core\";\nimport { consoleColors } from \"../utils/other.js\";\n\n/**\n * midi_handler.js\n * purpose: handles the connection between MIDI devices and synthesizer/sequencer via Web MIDI API\n */\n\nconst NO_INPUT = null;\n\n// noinspection JSUnusedGlobalSymbols\n/**\n * A class for handling MIDI devices\n */\nexport class MIDIDeviceHandler\n{\n    /**\n     * @returns {Promise<boolean>} if succeeded\n     */\n    async createMIDIDeviceHandler()\n    {\n        /**\n         * @type {MIDIInput}\n         */\n        this.selectedInput = NO_INPUT;\n        /**\n         * @type {MIDIOutput}\n         */\n        this.selectedOutput = NO_INPUT;\n        if (navigator.requestMIDIAccess)\n        {\n            // prepare the midi access\n            try\n            {\n                const response = await navigator.requestMIDIAccess({ sysex: true, software: true });\n                this.inputs = response.inputs;\n                this.outputs = response.outputs;\n                util.SpessaSynthInfo(\"%cMIDI handler created!\", consoleColors.recognized);\n                return true;\n            }\n            catch (e)\n            {\n                util.SpessaSynthWarn(`Could not get MIDI Devices:`, e);\n                this.inputs = [];\n                this.outputs = [];\n                return false;\n            }\n        }\n        else\n        {\n            util.SpessaSynthWarn(\"Web MIDI Api not supported!\", consoleColors.unrecognized);\n            this.inputs = [];\n            this.outputs = [];\n            return false;\n        }\n    }\n    \n    /**\n     * Connects the sequencer to a given MIDI output port\n     * @param output {MIDIOutput}\n     * @param seq {Sequencer}\n     */\n    connectMIDIOutputToSeq(output, seq)\n    {\n        this.selectedOutput = output;\n        seq.connectMidiOutput(output);\n        util.SpessaSynthInfo(\n            `%cPlaying MIDI to %c${output.name}`,\n            consoleColors.info,\n            consoleColors.recognized\n        );\n    }\n    \n    /**\n     * Disconnects a midi output port from the sequencer\n     * @param seq {Sequencer}\n     */\n    disconnectSeqFromMIDI(seq)\n    {\n        this.selectedOutput = NO_INPUT;\n        seq.connectMidiOutput(undefined);\n        util.SpessaSynthInfo(\n            \"%cDisconnected from MIDI out.\",\n            consoleColors.info\n        );\n    }\n    \n    /**\n     * Connects a MIDI input to the synthesizer\n     * @param input {MIDIInput}\n     * @param synth {Synthetizer}\n     */\n    connectDeviceToSynth(input, synth)\n    {\n        this.selectedInput = input;\n        input.onmidimessage = event =>\n        {\n            synth.sendMessage(event.data);\n        };\n        util.SpessaSynthInfo(\n            `%cListening for messages on %c${input.name}`,\n            consoleColors.info,\n            consoleColors.recognized\n        );\n    }\n    \n    /**\n     * @param input {MIDIInput}\n     */\n    disconnectDeviceFromSynth(input)\n    {\n        this.selectedInput = NO_INPUT;\n        input.onmidimessage = undefined;\n        util.SpessaSynthInfo(\n            `%cDisconnected from %c${input.name}`,\n            consoleColors.info,\n            consoleColors.recognized\n        );\n    }\n    \n    disconnectAllDevicesFromSynth()\n    {\n        this.selectedInput = NO_INPUT;\n        for (const i of this.inputs)\n        {\n            i[1].onmidimessage = undefined;\n        }\n    }\n}", "import { Synthetizer } from \"../synthetizer/synthetizer.js\";\nimport { consoleColors } from \"../utils/other.js\";\nimport { SpessaSynthCoreUtils } from \"spessasynth_core\";\n\n/**\n * web_midi_link.js\n * purpose: handles the web midi link connection to the synthesizer\n * https://www.g200kg.com/en/docs/webmidilink/\n */\n\nexport class WebMIDILinkHandler\n{\n    /**\n     * @param synth {Synthetizer} the synth to play to\n     */\n    constructor(synth)\n    {\n        \n        window.addEventListener(\"message\", msg =>\n        {\n            if (typeof msg.data !== \"string\")\n            {\n                return;\n            }\n            /**\n             * @type {string[]}\n             */\n            const data = msg.data.split(\",\");\n            if (data[0] !== \"midi\")\n            {\n                return;\n            }\n            \n            data.shift(); // remove MIDI\n            \n            const midiData = data.map(byte => parseInt(byte, 16));\n            \n            synth.sendMessage(midiData);\n        });\n        \n        SpessaSynthCoreUtils.SpessaSynthInfo(\"%cWeb MIDI Link handler created!\", consoleColors.recognized);\n    }\n}", "/**\n * performs the given function on a rgb string and returns a new one\n * @param rgbString {string} the rgb string, ex. \"rgb(255, 0, 00)\"\n * @param operation {function(number): number} the function for calculation\n * @returns {string}\n */\nexport function calculateRGB(rgbString, operation)\n{\n    let rgbValues = rgbString.replace(/[^\\d,]/g, \"\").split(\",\");\n    return `rgb(${operation(parseInt(rgbValues[0]))}, ${operation(parseInt(rgbValues[1]))}, ${operation(parseInt(\n        rgbValues[2]))})`;\n}\n\nexport function RGBAOpacity(rgbString, opacity)\n{\n    let v = rgbString.replace(/[^\\d,]/g, \"\").split(\",\");\n    return `rgba(${v[0]}, ${v[1]}, ${v[2]}, ${opacity})`;\n}", "/**\n * draw_notes.js\n * purpose: renders notes with effects to the canvas\n */\n\nconst STROKE_COLOR = \"#000\";\nconst PRESSED_EFFECT_OPACITY = 0.5;\n\n/**\n * @param notesToDraw {NoteToRender[]}\n * @param drawingContext {CanvasRenderingContext2D}\n * @param sideways {boolean}\n */\nexport function drawNotes(notesToDraw, drawingContext, sideways)\n{\n    // render the pressed effect first\n    notesToDraw.forEach(n =>\n    {\n        if (n.pressedProgress === 0)\n        {\n            return;\n        }\n        drawingContext.fillStyle = n.color;\n        const effectStrength = n.pressedProgress * n.velocity;\n        drawingContext.globalAlpha = PRESSED_EFFECT_OPACITY * effectStrength;\n        if (sideways)\n        {\n            drawingContext.fillRect(\n                n.xPos,\n                n.yPos - n.height * effectStrength,\n                n.width,\n                n.height * (effectStrength * 2 + 1)\n            );\n            drawingContext.globalAlpha = 1;\n            return;\n        }\n        drawingContext.fillRect(\n            n.xPos - n.width * effectStrength,\n            n.yPos,\n            n.width * (effectStrength * 2 + 1),\n            n.height\n        );\n        drawingContext.globalAlpha = 1;\n    });\n    \n    notesToDraw.forEach(n =>\n    {\n        // save and change color\n        drawingContext.fillStyle = n.color;\n        drawingContext.save();\n        \n        // draw the rectangle\n        drawingContext.translate(n.xPos, n.yPos);\n        drawingContext.fillRect(0, 0, n.width, n.height);\n        drawingContext.restore();\n        \n        // draw the outline\n        drawingContext.strokeStyle = STROKE_COLOR;\n        drawingContext.lineWidth = n.stroke;\n        drawingContext.strokeRect(n.xPos, n.yPos, n.width, n.height);\n    });\n}", "import { FONT_SIZE, rendererModes } from \"./renderer.js\";\nimport { drawNotes } from \"./draw_notes.js\";\n\nlet hasRenderedNoVoices = false;\n\n/**\n * Renders a single frame\n * @this {Renderer}\n * @param auto {boolean} if set to false, the renderer won't clear the screen or request an animation frame. Defaults to true.\n * @param force {boolean} ignores nothing to do\n */\nexport function render(auto = true, force = false)\n{\n    let nothingToDo =\n        (this.seq === undefined || this?.seq?.paused === true)\n        && this.synth.voicesAmount === 0\n        && this.rendererMode === rendererModes.waveformsMode\n        && !force;\n    let forceStraight = false;\n    if (!this.renderBool || nothingToDo)\n    {\n        if (hasRenderedNoVoices)\n        {\n            // No frames shall be drawn. Redo!\n            if (auto)\n            {\n                requestAnimationFrame(this.render.bind(this));\n            }\n            return;\n        }\n        else\n        {\n            hasRenderedNoVoices = true;\n            forceStraight = true;\n        }\n    }\n    else\n    {\n        hasRenderedNoVoices = false;\n    }\n    \n    if (auto)\n    {\n        requestAnimationFrame(this.render.bind(this));\n        this.drawingContext.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    }\n    \n    if (this.renderAnalysers && !this.synth.highPerformanceMode)\n    {\n        // draw the individual analyzers\n        this.renderWaveforms(forceStraight);\n    }\n    \n    if (this.renderNotes && this.noteTimes)\n    {\n        /**\n         * Compute positions\n         * @type {NoteToRender[]}\n         */\n        let notesToDraw = this.computeNotePositions(this.synth.highPerformanceMode);\n        \n        // draw the notes from longest to shortest (non-black midi mode)\n        if (!this.synth.highPerformanceMode)\n        {\n            drawNotes(notesToDraw, this.drawingContext, this.sideways);\n        }\n    }\n    \n    // calculate fps\n    let timeSinceLastFrame = performance.now() - this.frameTimeStart;\n    this.frameTimeStart = performance.now();\n    let fps = 1000 / timeSinceLastFrame;\n    \n    // draw note count and fps\n    this.drawingContext.textBaseline = \"hanging\";\n    this.drawingContext.textAlign = \"end\";\n    this.drawingContext.font = `${FONT_SIZE}px monospace`;\n    this.drawingContext.fillStyle = \"white\";\n    this.drawingContext.strokeStyle = \"white\";\n    this.drawingContext.fillText(Math.round(fps).toString() + \" FPS\", this.canvas.width, FONT_SIZE * 2 + 5);\n    this.drawingContext.fillText(this.version, this.canvas.width, 5);\n    this.drawingContext.fillText(`${this.notesOnScreen} notes`, this.canvas.width, FONT_SIZE + 5);\n    \n    // draw time signature and tempo (if note times are available)\n    if (this.noteTimes)\n    {\n        this.drawingContext.textAlign = \"start\";\n        this.drawingContext.fillText(\n            Math.round(this.seq.currentTempo * this.seq.playbackRate * 100) / 100 + \"BPM\",\n            0,\n            5\n        );\n        this.drawingContext.fillText(this.currentTimeSignature, 0, FONT_SIZE + 5);\n    }\n    \n    // show the hold pedal message\n    if (this.showHoldPedal)\n    {\n        this.drawingContext.font = `${FONT_SIZE * 3}px monospace`;\n        this.drawingContext.textAlign = \"center\";\n        this.drawingContext.fillText(this.holdPedalIsDownText, this.canvas.width / 2, this.canvas.height / 4);\n    }\n    \n    \n    if (this.onRender)\n    {\n        this.onRender();\n    }\n}\n", "import { MAX_NOTES, MIN_NOTE_HEIGHT_PX, NOTE_MARGIN, PRESSED_EFFECT_TIME, STROKE_THICKNESS } from \"./renderer.js\";\n\n/**\n * @param renderImmediately {boolean}\n * @returns {NoteToRender[]}\n * @this {Renderer}\n */\nexport function computeNotePositions(renderImmediately = false)\n{\n    // math\n    this.notesOnScreen = 0;\n    \n    const canvasWidth = this.sideways ? this.canvas.height : this.canvas.width;\n    const canvasHeight = this.sideways ? this.canvas.width : this.canvas.height;\n    const keysAmount = this.keyRange.max - this.keyRange.min;\n    const keyStep = canvasWidth / (keysAmount + 1); // add one because it works\n    const noteWidth = keyStep - (NOTE_MARGIN * 2);\n    \n    const fallingTime = this.noteFallingTimeMs / 1000;\n    const afterTime = this.noteAfterTriggerTimeMs / 1000;\n    \n    const currentSeqTime = this.seq.currentHighResolutionTime - this.timeOffset;\n    const currentStartTime = currentSeqTime - afterTime;\n    const fallingTimeSeconds = fallingTime + afterTime;\n    const currentEndTime = currentStartTime + fallingTimeSeconds;\n    const minNoteHeight = MIN_NOTE_HEIGHT_PX / fallingTimeSeconds;\n    /**\n     * compute note pitch bend visual shift (for each channel)\n     * @type {number[]}\n     */\n    const pitchBendXShift = [];\n    this.synth.channelProperties.forEach(channel =>\n    {\n        // pitch range * (bend - 8192) / 8192)) * key width\n        if (this.showVisualPitch)\n        {\n            const bend = channel.pitchBend - 8192 + this.visualPitchBendOffset; // -8192 to 8192\n            const pixelShift = (channel.pitchBendRangeSemitones * ((bend / 8192))) * keyStep;\n            pitchBendXShift.push(pixelShift);\n        }\n        else\n        {\n            pitchBendXShift.push(0);\n        }\n    });\n    /**\n     * @type {number[]}\n     */\n    const transposeNoteShifts = this.synth.channelProperties.map(c => this.showVisualPitch ? c.transposition : 0);\n    /**\n     * @type {NoteToRender[]}\n     */\n    const notesToDraw = [];\n    this.noteTimes.forEach((channel, channelNumder) =>\n    {\n        \n        if (channel.renderStartIndex >= channel.notes.length || !this.renderChannels[channelNumder])\n        {\n            return;\n        }\n        \n        let noteIndex = channel.renderStartIndex;\n        const notes = channel.notes;\n        let note = notes[noteIndex];\n        \n        let firstNoteIndex = -1;\n        // while the note start is in range\n        while (note.start <= currentEndTime)\n        {\n            noteIndex++;\n            // cap notes\n            if (this.notesOnScreen > MAX_NOTES)\n            {\n                break;\n            }\n            \n            const noteSum = note.start + note.length;\n            \n            // if the note is out of range, append the render start index\n            if (noteSum > currentStartTime && note.length > 0)\n            {\n                let noteHeight = ((note.length / fallingTimeSeconds) * canvasHeight) - (NOTE_MARGIN * 2);\n                \n                // height less than that can be omitted (come on)\n                if (this.notesOnScreen < 1000 || noteHeight > minNoteHeight)\n                {\n                    if (firstNoteIndex === -1)\n                    {\n                        firstNoteIndex = noteIndex - 1;\n                    }\n                    const position = (((note.start - currentStartTime) / fallingTimeSeconds) * canvasHeight);\n                    let noteY;\n                    if (this._notesFall)\n                    {\n                        noteY = canvasHeight - noteHeight - position + NOTE_MARGIN;\n                    }\n                    else\n                    {\n                        noteY = position + NOTE_MARGIN;\n                    }\n                    \n                    // if the note out of range, skip\n                    if (note.midiNote < this.keyRange.min || note.midiNote > this.keyRange.max)\n                    {\n                        if (noteIndex >= notes.length)\n                        {\n                            break;\n                        }\n                        note = notes[noteIndex];\n                        continue;\n                    }\n                    const correctedNote = note.midiNote - this.keyRange.min + transposeNoteShifts[channelNumder];\n                    let noteX = keyStep * correctedNote + NOTE_MARGIN;\n                    \n                    \n                    let finalX, finalY, finalWidth, finalHeight;\n                    if (this.sideways)\n                    {\n                        // add noinspection since we want to inverse positions\n                        // noinspection JSSuspiciousNameCombination\n                        finalX = noteY;\n                        // noinspection JSSuspiciousNameCombination\n                        finalY = noteX;\n                        // noinspection JSSuspiciousNameCombination\n                        finalHeight = noteWidth;\n                        // noinspection JSSuspiciousNameCombination\n                        finalWidth = noteHeight;\n                    }\n                    else\n                    {\n                        // sideways: swap x and y coords\n                        finalY = noteY;\n                        finalX = noteX;\n                        finalWidth = noteWidth;\n                        finalHeight = noteHeight;\n                    }\n                    \n                    this.notesOnScreen++;\n                    // draw the notes\n                    if (renderImmediately)\n                    {\n                        // draw the notes right away, we don't care about the order\n                        this.drawingContext.fillStyle = this.plainColors[channelNumder];\n                        this.drawingContext.fillRect(\n                            finalX + STROKE_THICKNESS + NOTE_MARGIN,\n                            finalY + STROKE_THICKNESS,\n                            finalWidth - (STROKE_THICKNESS * 2),\n                            finalHeight - (STROKE_THICKNESS * 2)\n                        );\n                    }\n                    else\n                    {\n                        let color;\n                        // save the notes to draw\n                        // determine if notes are active or not (i.e., currently playing)\n                        // not active notes\n                        if ((note.start > currentSeqTime || noteSum < currentSeqTime))\n                        {\n                            // this note is not pressed\n                            if (this.sideways)\n                            {\n                                if (this.drawActiveNotes)\n                                {\n                                    color = this.sidewaysDarkerColors[channelNumder];\n                                }\n                                else\n                                {\n                                    color = this.sidewaysChannelColors[channelNumder];\n                                }\n                            }\n                            else if (this.drawActiveNotes)\n                            {\n                                color = this.darkerColors[channelNumder];\n                            }\n                            else\n                            {\n                                color = this.channelColors[channelNumder];\n                            }\n                            notesToDraw.push({\n                                xPos: finalX,\n                                yPos: finalY,\n                                height: finalHeight,\n                                width: finalWidth,\n                                stroke: STROKE_THICKNESS,\n                                pressedProgress: 0, // not pressed\n                                velocity: note.velocity, // VELOCITY IS MAPPED FROM 0 TO 1!\n                                // if we ignore drawing active notes, draw those with regular colors\n                                color: color\n                            });\n                        }\n                        else\n                        {\n                            // this note is pressed\n                            if (this.sideways)\n                            {\n                                if (this.showVisualPitch)\n                                {\n                                    finalY += pitchBendXShift[channelNumder];\n                                }\n                                color = this.sidewaysChannelColors[channelNumder];\n                            }\n                            else\n                            {\n                                if (this.showVisualPitch)\n                                {\n                                    finalX += pitchBendXShift[channelNumder];\n                                }\n                                color = this.channelColors[channelNumder];\n                            }\n                            // determine for how long the note has been pressed\n                            let noteProgress;\n                            if (this.drawActiveNotes)\n                            {\n                                noteProgress = 1 + (note.start - currentSeqTime) / (note.length * PRESSED_EFFECT_TIME);\n                            }\n                            else\n                            {\n                                noteProgress = 0;\n                            }\n                            // active notes\n                            notesToDraw.push({\n                                xPos: finalX,\n                                yPos: finalY,\n                                height: finalHeight,\n                                width: finalWidth,\n                                stroke: STROKE_THICKNESS,\n                                pressedProgress: noteProgress,\n                                velocity: note.velocity,\n                                color: color\n                            });\n                        }\n                    }\n                }\n            }\n            \n            if (noteIndex >= notes.length)\n            {\n                break;\n            }\n            \n            note = notes[noteIndex];\n        }\n        if (firstNoteIndex > -1)\n        {\n            channel.renderStartIndex = firstNoteIndex;\n        }\n    });\n    // sort the notes from shortest to longest (draw order)\n    notesToDraw.sort((n1, n2) => n2.height - n1.height);\n    return notesToDraw;\n}", "import { SpessaSynthCoreUtils } from \"spessasynth_core\";\n\nconst consoleColors = SpessaSynthCoreUtils.consoleColors;\n\nexport { consoleColors };", "/**\n * @param progress {number} 0-1\n * @returns {string}\n */\nfunction approxColor(progress)\n{\n    /**\n     * the colors may or may not come from audacity's spectogram view\n     * @type {{t: number, r: number, g: number, b: number}[]}\n     */\n    const samples = [\n        { t: 0.00, r: 0, g: 0, b: 0 },\n        { t: 0.10, r: 0, g: 0, b: 105 },\n        { t: 0.20, r: 0, g: 0, b: 158 },\n        { t: 0.30, r: 9, g: 0, b: 160 },\n        { t: 0.40, r: 33, g: 0, b: 160 },\n        { t: 0.50, r: 62, g: 0, b: 160 },\n        { t: 0.55, r: 98, g: 1, b: 158 },\n        { t: 0.65, r: 159, g: 37, b: 93 },\n        { t: 0.70, r: 192, g: 28, b: 77 },\n        { t: 0.75, r: 225, g: 46, b: 56 },\n        { t: 0.80, r: 240, g: 143, b: 28 },\n        { t: 0.85, r: 255, g: 239, b: 0 },\n        { t: 0.90, r: 255, g: 241, b: 8 },\n        { t: 0.95, r: 255, g: 253, b: 140 },\n        { t: 1.00, r: 255, g: 255, b: 252 }\n    ];\n    \n    for (let i = 0; i < samples.length - 1; i++)\n    {\n        const s1 = samples[i];\n        const s2 = samples[i + 1];\n        if (progress >= s1.t && progress <= s2.t)\n        {\n            const frac = (progress - s1.t) / (s2.t - s1.t);\n            // linear interpolation, because we love linear interpolation\n            const r = Math.round(s1.r + frac * (s2.r - s1.r));\n            const g = Math.round(s1.g + frac * (s2.g - s1.g));\n            const b = Math.round(s1.b + frac * (s2.b - s1.b));\n            return `rgb(${r}, ${g}, ${b})`;\n        }\n    }\n}\n\n// uint8 goes up to 255\nconst intensityColors = [];\nfor (let i = 0; i < 255; i++)\n{\n    intensityColors.push(approxColor(i / 255));\n}\nexport { intensityColors };\n", "import { rendererModes } from \"./renderer.js\";\nimport { intensityColors } from \"./colors.js\";\n\nexport const STABILIZE_WAVEFORMS_FFT_MULTIPLIER = 4;\nconst EXPONENTIAL_GAIN = Math.E;\nconst EXPONENTIAL_AGGRESSIVE = 3;\n\n/**\n * @this {Renderer}\n * @param channelNumber {number}\n * @param waveHeight {number}\n * @param waveWidth {number}\n * @param forceStraightLine {boolean}\n * @param filled {boolean} filled waveform mode\n */\nexport function renderSingleWaveform(channelNumber, forceStraightLine, waveWidth, waveHeight, filled = false)\n{\n    const x = channelNumber % 4;\n    const y = Math.floor(channelNumber / 4);\n    const analyser = this.channelAnalysers[channelNumber];\n    const straightLine = () =>\n    {\n        if (filled)\n        {\n            // no straight line for the filled mode\n            return;\n        }\n        const waveWidth = this.canvas.width / 4;\n        const waveHeight = this.canvas.height / 4;\n        const relativeX = waveWidth * x;\n        const relativeY = waveHeight * y + waveHeight / 2;\n        this.drawingContext.lineWidth = this.lineThickness;\n        this.drawingContext.strokeStyle = this.channelColors[channelNumber];\n        this.drawingContext.beginPath();\n        this.drawingContext.moveTo(relativeX, relativeY);\n        this.drawingContext.lineTo(relativeX + waveWidth, relativeY);\n        this.drawingContext.stroke();\n    };\n    if (forceStraightLine)\n    {\n        straightLine();\n        return;\n    }\n    const waveform = new Float32Array(analyser.frequencyBinCount);\n    analyser.getFloatTimeDomainData(waveform);\n    let voicesPlaying = waveform.some(v => v !== 0);\n    if (!voicesPlaying)\n    {\n        // draw a straight line\n        straightLine();\n        return;\n    }\n    \n    const relativeX = waveWidth * x;\n    const relativeY = waveHeight * y + waveHeight / 2;\n    const multiplier = this.waveMultiplier * waveHeight;\n    \n    // draw\n    this.drawingContext.lineWidth = this.lineThickness;\n    this.drawingContext.strokeStyle = this.plainColors[channelNumber];\n    this.drawingContext.fillStyle = this.plainColors[channelNumber];\n    \n    \n    let triggerPoint = 0;\n    let length = waveform.length;\n    let renderStart = 0;\n    let renderEnd = waveform.length;\n    if (this._stabilizeWaveforms)\n    {\n        // fraction length\n        length = waveform.length / STABILIZE_WAVEFORMS_FFT_MULTIPLIER;\n        if (this.synth.channelProperties[channelNumber].isDrum)\n        {\n            length *= 2;\n        }\n        const halfLength = Math.floor(length / 2);\n        triggerPoint = waveform.length - halfLength;\n        for (let i = triggerPoint; i >= 1; i--)\n        {\n            if (waveform[i - 1] < 0 && waveform[i] >= 0)\n            {\n                triggerPoint = i;\n                break;\n            }\n        }\n        renderStart = Math.max(0, triggerPoint - halfLength);\n        renderEnd = Math.min(triggerPoint + halfLength, waveform.length);\n    }\n    \n    \n    const dataLength = renderEnd - renderStart;\n    const samplesPerPixel = dataLength / waveWidth;\n    \n    if (filled)\n    {\n        const step = waveWidth / length;\n        let xPos = relativeX;\n        this.drawingContext.beginPath();\n        this.drawingContext.moveTo(relativeX, relativeY);\n        for (let i = renderStart; i < renderEnd; i++)\n        {\n            this.drawingContext.lineTo(\n                xPos,\n                relativeY + waveform[i] * multiplier\n            );\n            xPos += step;\n        }\n        this.drawingContext.lineTo(xPos, relativeY);\n        this.drawingContext.fill();\n    }\n    else\n    {\n        this.drawingContext.beginPath();\n        if (samplesPerPixel >= 2)\n        {\n            for (let x = 0; x < waveWidth; x++)\n            {\n                const start = Math.floor(x * samplesPerPixel + renderStart);\n                const end = Math.min(Math.floor(start + samplesPerPixel), renderEnd);\n                \n                let min = 1;\n                let max = -1;\n                \n                for (let i = start; i < end; i++)\n                {\n                    const value = waveform[i];\n                    if (value < min)\n                    {\n                        min = value;\n                    }\n                    if (value > max)\n                    {\n                        max = value;\n                    }\n                }\n                \n                const yMin = min * multiplier + relativeY;\n                const yMax = max * multiplier + relativeY;\n                const xFinal = x + relativeX;\n                this.drawingContext.lineTo(xFinal, yMin);\n                this.drawingContext.lineTo(xFinal, yMax);\n            }\n        }\n        else\n        {\n            const step = waveWidth / length;\n            let xPos = relativeX;\n            for (let i = renderStart; i < renderEnd; i++)\n            {\n                this.drawingContext.lineTo(\n                    xPos,\n                    relativeY + waveform[i] * multiplier\n                );\n                xPos += step;\n            }\n        }\n        this.drawingContext.stroke();\n    }\n    \n    \n}\n\n/**\n * @this {Renderer}\n */\nexport function renderBigFft()\n{\n    const analyser = this.bigAnalyser;\n    const fftSize = analyser.frequencyBinCount;\n    const waveform = new Uint8Array(fftSize);\n    const waveHeight = this.canvas.height;\n    const waveWidth = this.canvas.width;\n    const relativeY = waveHeight;\n    analyser.getByteFrequencyData(waveform);\n    if (!waveform.some(v => v !== 0))\n    {\n        return;\n    }\n    const multiplier = (0.8 + this.waveMultiplier / 10) * -waveHeight;\n    const max = this.dynamicGain ? Math.max.apply(undefined, waveform) : 255;\n    \n    const minNote = this._keyRange.min - 1;\n    const noteRange = this._keyRange.max - minNote + 0.5;\n    \n    let xPos = 0;\n    if (this.logarithmicFrequency)\n    {\n        const maxFrequencyInTable = this.synth.context.sampleRate / 2;\n        let lastHeight = -Infinity;\n        let lastXpos = 0;\n        let width = 0;\n        for (let i = 0; i < waveWidth; i++)\n        {\n            // calculate the MIDI note (from the lowest piano note to the entire MIDI range)\n            const midiNote = minNote + i / waveWidth * noteRange;\n            const targetFrequency = 440 * Math.pow(2, (midiNote - 69) / 12);\n            const fftIndex = Math.floor(targetFrequency / maxFrequencyInTable * fftSize);\n            \n            if (waveform[fftIndex] === lastHeight && lastHeight > 0)\n            {\n                xPos += 1;\n                width += 1;\n                continue;\n            }\n            lastHeight = waveform[fftIndex];\n            const value = lastHeight / max;\n            const height = (this.exponentialGain ? Math.pow(value, EXPONENTIAL_AGGRESSIVE) : value);\n            const valueRemapped = value * max;\n            this.drawingContext.fillStyle = intensityColors[valueRemapped];\n            \n            this.drawingContext.fillRect(lastXpos, relativeY, width, multiplier * height);\n            lastXpos = xPos;\n            width = 0;\n            xPos += 1;\n        }\n    }\n    else\n    {\n        const waveLength = waveform.length / 2;\n        const step = waveWidth / waveLength;\n        for (let i = 0; i < waveLength; i++)\n        {\n            const value = waveform[i] / max;\n            const height = (this.exponentialGain ? Math.pow(value, EXPONENTIAL_AGGRESSIVE) : value);\n            const valueRemapped = value * max;\n            this.drawingContext.fillStyle = intensityColors[valueRemapped];\n            this.drawingContext.fillRect(xPos, relativeY, step, multiplier * height);\n            xPos += step;\n        }\n    }\n}\n\n/**\n * @this {Renderer}\n * @param channelNumber {number} -1 means BIG\n * @param waveHeight {number}\n * @param waveWidth {number}\n */\nexport function renderSingleFft(channelNumber, waveWidth, waveHeight)\n{\n    let analyser = this.channelAnalysers[channelNumber];\n    const fftSize = analyser.frequencyBinCount;\n    const waveform = new Uint8Array(fftSize);\n    analyser.getByteFrequencyData(waveform);\n    if (!waveform.some(v => v !== 0))\n    {\n        return;\n    }\n    \n    \n    let x = channelNumber % 4;\n    let y = Math.floor(channelNumber / 4);\n    let relativeX = waveWidth * x;\n    let relativeY = waveHeight * y + waveHeight;\n    const multiplier = (0.8 + this.waveMultiplier / 10) * -waveHeight;\n    const max = this.dynamicGain ? Math.max.apply(undefined, waveform) : 255;\n    \n    // draw\n    this.drawingContext.fillStyle = this.gradientColors[channelNumber];\n    let xPos = relativeX;\n    this.drawingContext.beginPath();\n    this.drawingContext.moveTo(xPos, relativeY);\n    \n    if (this.logarithmicFrequency)\n    {\n        const minNote = 21;\n        const noteRange = 88;\n        let lastHeight = -Infinity;\n        const maxFrequencyInTable = this.synth.context.sampleRate / 2;\n        for (let i = 0; i < waveWidth; i++)\n        {\n            // calculate the MIDI note (from the lowest piano note to the entire MIDI range)\n            const midiNote = minNote + i / waveWidth * noteRange;\n            const targetFrequency = 440 * Math.pow(2, (midiNote - 69) / 12);\n            const fftIndex = Math.floor(targetFrequency / maxFrequencyInTable * fftSize);\n            \n            if (waveform[fftIndex] === lastHeight && lastHeight > 0)\n            {\n                xPos += 1;\n                continue;\n            }\n            lastHeight = waveform[fftIndex];\n            const value = lastHeight / max;\n            \n            // Normalize and apply the exponential curve\n            if (this.exponentialGain)\n            {\n                this.drawingContext.lineTo(xPos, relativeY + Math.pow(value, EXPONENTIAL_GAIN) * multiplier);\n            }\n            else\n            {\n                this.drawingContext.lineTo(xPos, relativeY + value * multiplier);\n            }\n            \n            xPos += 1;\n        }\n    }\n    else\n    {\n        const step = waveWidth / waveform.length;\n        for (let i = 0; i < waveform.length; i++)\n        {\n            const value = waveform[i] / max;\n            if (this.exponentialGain)\n            {\n                this.drawingContext.lineTo(xPos, relativeY + Math.pow(value, EXPONENTIAL_GAIN) * multiplier);\n            }\n            else\n            {\n                this.drawingContext.lineTo(xPos, relativeY + value * multiplier);\n            }\n            xPos += step;\n        }\n    }\n    this.drawingContext.lineTo(relativeX + waveWidth, relativeY);\n    this.drawingContext.fill();\n}\n\n/**\n * @this {Renderer}\n * @param forceStraightLine {boolean}\n */\nexport function renderWaveforms(forceStraightLine = false)\n{\n    const waveWidth = this.canvas.width / 4;\n    const waveHeight = this.canvas.height / 4;\n    switch (this.rendererMode)\n    {\n        default:\n            break;\n        \n        case rendererModes.filledWaveformsMode:\n        case rendererModes.waveformsMode:\n            for (let i = 0; i < this.channelAnalysers.length; i++)\n            {\n                this.renderSingleWaveform(\n                    i,\n                    forceStraightLine,\n                    waveWidth,\n                    waveHeight,\n                    this.rendererMode === rendererModes.filledWaveformsMode\n                );\n            }\n            break;\n        \n        case rendererModes.spectrumSplitMode:\n            for (let i = 0; i < this.channelAnalysers.length; i++)\n            {\n                this.renderSingleFft(i, waveWidth, waveHeight);\n            }\n            break;\n        \n        case rendererModes.spectrumSingleMode:\n            this.renderBigFft();\n    }\n}", "import { consoleColors } from \"../utils/console_colors.js\";\nimport { STABILIZE_WAVEFORMS_FFT_MULTIPLIER } from \"./render_waveforms.js\";\nimport { ANALYSER_SMOOTHING } from \"./renderer.js\";\n\n/**\n * @param synth {CustomSynth}\n * @this {Renderer}\n */\nexport function createChannelAnalysers(synth)\n{\n    this.bigAnalyser.disconnect();\n    // disconnect the analyzers from earlier\n    for (const analyser of this.channelAnalysers)\n    {\n        analyser.disconnect();\n        this.channelAnalysers.splice(0, 1);\n    }\n    this.channelAnalysers = [];\n    for (let i = 0; i < synth.channelsAmount; i++)\n    {\n        // create the analyzer\n        const analyser = new AnalyserNode(synth.context, {\n            fftSize: this._normalAnalyserFft,\n            smoothingTimeConstant: ANALYSER_SMOOTHING\n        });\n        this.channelAnalysers.push(analyser);\n    }\n    \n    synth.eventHandler.addEvent(\"mutechannel\", \"renderer-mute-channel\", eventData =>\n    {\n        this.renderChannels[eventData.channel] = !eventData.isMuted;\n    });\n    this.updateFftSize();\n}\n\n/**\n * @this {Renderer}\n */\nexport function updateFftSize()\n{\n    for (let i = 0; i < this.channelAnalysers.length; i++)\n    {\n        const drum = this.synth.channelProperties[i].isDrum;\n        const fft = drum ? this._drumAnalyserFft : this._normalAnalyserFft;\n        const mul = drum ? STABILIZE_WAVEFORMS_FFT_MULTIPLIER / 2 : STABILIZE_WAVEFORMS_FFT_MULTIPLIER;\n        this.channelAnalysers[i].fftSize = Math.min(32768, this._stabilizeWaveforms ? fft * mul : fft);\n    }\n    this.bigAnalyser.fftSize = Math.min(32768, this._normalAnalyserFft * STABILIZE_WAVEFORMS_FFT_MULTIPLIER * 2);\n}\n\n/**\n * Connect the 16 channels to their respective analyzers\n * @param synth {CustomSynth}\n * @this {Renderer}\n */\nexport function connectChannelAnalysers(synth)\n{\n    for (let outputNumber = 2; outputNumber < 18; outputNumber++)\n    {\n        // + 2 because chorus and reverb come first!\n        this.synth.worklet.connect(this.channelAnalysers[outputNumber - 2], outputNumber);\n    }\n    synth.target.connect(this.bigAnalyser);\n    // connect for drum change\n    synth.eventHandler.addEvent(\"drumchange\", \"renderer-drum-change\", () =>\n    {\n        setTimeout(this.updateFftSize.bind(this), 100);\n    });\n}\n\n/**\n * @this {Renderer}\n */\nexport function disconnectChannelAnalysers()\n{\n    for (let outputNumber = 2; outputNumber < 18; outputNumber++)\n    {\n        this.synth.worklet.disconnect(this.channelAnalysers[outputNumber - 2], outputNumber);\n    }\n    this.bigAnalyser.disconnect();\n    console.info(\"%cAnalysers disconnected!\", consoleColors.recognized);\n}", "import { messageTypes } from \"spessasynth_core\";\n\n/**\n * @param sequencer {CustomSeq}\n * @this {Renderer}\n */\nexport function connectSequencer(sequencer)\n{\n    /**\n     * @type {CustomSeq}\n     */\n    this.seq = sequencer;\n    this.seq.addOnTimeChangeEvent(() => this.resetIndexes(), \"renderer-time-change\");\n    \n    this.seq.addOnSongChangeEvent(async mid =>\n    {\n        this.calculateNoteTimes(await this.seq.getMIDI());\n        this.resetIndexes();\n        if (mid.RMIDInfo?.[\"IPIC\"] !== undefined)\n        {\n            const blob = new Blob([mid.RMIDInfo?.[\"IPIC\"].buffer]);\n            const url = URL.createObjectURL(blob);\n            const opacity = this.canvas.classList.contains(\"light_mode\") ? 0 : 0.9;\n            this.canvas.style.background = `linear-gradient(rgba(0, 0, 0, ${opacity}), rgba(0, 0, 0, ${opacity})), center center / cover url(\"${url}\")`;\n        }\n        else\n        {\n            this.canvas.style.background = \"\";\n        }\n    }, \"renderer-song-change\");\n    \n    \n    this.seq.addOnMetaEvent(ev =>\n    {\n        const event = ev[0];\n        if (event.messageStatusByte === messageTypes.timeSignature)\n        {\n            this.currentTimeSignature = `${event.messageData[0]}/${Math.pow(2, event.messageData[1])}`;\n        }\n    }, \"renderer-meta-event\");\n}\n\n/**\n * @this {Renderer}\n */\nexport function resetIndexes()\n{\n    if (!this.noteTimes)\n    {\n        return;\n    }\n    \n    this.noteTimes.forEach(n => n.renderStartIndex = 0);\n}", "import { calculateRGB, RGBAOpacity } from \"../utils/calculate_rgb.js\";\nimport { render } from \"./render.js\";\nimport { computeNotePositions } from \"./compute_note_positions.js\";\nimport {\n    connectChannelAnalysers,\n    createChannelAnalysers,\n    disconnectChannelAnalysers,\n    updateFftSize\n} from \"./channel_analysers.js\";\nimport { connectSequencer, resetIndexes } from \"./connect_sequencer.js\";\nimport { renderBigFft, renderSingleFft, renderSingleWaveform, renderWaveforms } from \"./render_waveforms.js\";\nimport { consoleColors } from \"../utils/console_colors.js\";\nimport { BasicMIDI } from \"spessasynth_core\";\n\n\n/**\n * renderer.js\n * purpose: renders midi file and channel waveforms to a canvas\n */\n\n/**\n * @typedef {{\n * xPos: number,\n * yPos: number,\n * height: number,\n * width: number,\n * stroke: number,\n * color: CanvasGradient,\n * pressedProgress: number,\n * velocity: number\n * }}NoteToRender\n */\n\n/**\n * @enum {number}\n */\nexport const rendererModes = {\n    waveformsMode: 0,\n    spectrumSplitMode: 1,\n    spectrumSingleMode: 2,\n    filledWaveformsMode: 4\n};\n\n// analysers\nconst CHANNEL_ANALYSER_FFT = 1024;\nconst DRUMS_ANALYSER_FFT = 4096;\nexport const ANALYSER_SMOOTHING = 0.4;\nconst WAVE_MULTIPLIER = 2;\nconst ANALYSER_STROKE = 2;\n\n// note rendering\nconst DARKER_MULTIPLIER = 0.6;\nconst GRADIENT_DARKEN = 0.5;\nexport const STROKE_THICKNESS = 1;\nexport const NOTE_MARGIN = 1;\nexport const FONT_SIZE = 12;\nexport const PRESSED_EFFECT_TIME = 0.6;\n\n// limits\nexport const MIN_NOTE_HEIGHT_PX = 2;\nexport const MAX_NOTES = 81572;\n\n\nclass Renderer\n{\n    /**\n     * called after a frame is rendered\n     * @type {function}\n     */\n    onRender;\n    \n    /**\n     * Creates a new midi renderer for rendering notes visually.\n     * @param channelColors {Array<string>}\n     * @param synth {CustomSynth}\n     * @param canvas {HTMLCanvasElement}\n     * @param locale {LocaleManager}\n     * @param version {string}\n     */\n    constructor(channelColors, synth, canvas, locale, version = \"\")\n    {\n        // variables\n        /**\n         * falling time in milliseconds\n         * @type {number}\n         */\n        this.noteFallingTimeMs = 1000;\n        this.noteAfterTriggerTimeMs = 0;\n        /**\n         * @type {{min: number, max: number}}\n         * @private\n         */\n        this._keyRange = {\n            min: 0,\n            max: 127\n        };\n        \n        this.version = \"v\" + version;\n        \n        /**\n         * adds this to the synth's visual pitch in position caluclation\n         * @type {number}\n         */\n        this.visualPitchBendOffset = 0;\n        \n        this.lineThickness = ANALYSER_STROKE;\n        this._normalAnalyserFft = CHANNEL_ANALYSER_FFT;\n        this._drumAnalyserFft = DRUMS_ANALYSER_FFT;\n        this.waveMultiplier = WAVE_MULTIPLIER;\n        \n        // will be updated by locale manager\n        this.holdPedalIsDownText = \"\";\n        locale.bindObjectProperty(this, \"holdPedalIsDownText\", \"locale.synthesizerController.holdPedalDown\");\n        this.currentTimeSignature = \"4/4\";\n        \n        /**\n         * @type {rendererModes}\n         */\n        this.rendererMode = rendererModes.waveformsMode;\n        \n        // booleans\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._notesFall = true;\n        this.showHoldPedal = false;\n        this.sideways = false;\n        this._renderBool = true;\n        this.renderAnalysers = true;\n        this.renderNotes = true;\n        this.drawActiveNotes = true;\n        this.showVisualPitch = true;\n        this._stabilizeWaveforms = true;\n        \n        // fft config\n        this.exponentialGain = true;\n        this.logarithmicFrequency = true;\n        this.dynamicGain = false;\n        \n        /**\n         * @type {boolean[]}\n         */\n        this.renderChannels = Array(16).fill(true);\n        \n        /**\n         * canvas\n         * @type {HTMLCanvasElement}\n         */\n        this.canvas = canvas;\n        \n        /**\n         * @type {CanvasRenderingContext2D}\n         */\n        this.drawingContext = this.canvas.getContext(\"2d\");\n        \n        // note colors\n        this.plainColors = channelColors;\n        \n        this.computeColors();\n        \n        // synth and analyzers\n        /**\n         * @type {CustomSynth}\n         */\n        this.synth = synth;\n        this.notesOnScreen = 0;\n        this.timeOffset = 0;\n        \n        /**\n         * @type {AnalyserNode[]}\n         */\n        this.channelAnalysers = [];\n        this.bigAnalyser = new AnalyserNode(synth.context, {\n            fftSize: this._normalAnalyserFft,\n            smoothingTimeConstant: ANALYSER_SMOOTHING\n        });\n        this.createChannelAnalysers(synth);\n        this.connectChannelAnalysers(synth);\n    }\n    \n    get stabilizeWaveforms()\n    {\n        return this._stabilizeWaveforms;\n    }\n    \n    /**\n     *\n     * @param val {boolean}\n     */\n    set stabilizeWaveforms(val)\n    {\n        this._stabilizeWaveforms = val;\n        this.updateFftSize();\n    }\n    \n    // noinspection JSUnusedGlobalSymbols\n    /**\n     * @returns {\"down\"|\"up\"}\n     */\n    get direction()\n    {\n        return this._notesFall ? \"down\" : \"up\";\n    }\n    \n    /**\n     * @param val {\"down\"|\"up\"}\n     */\n    set direction(val)\n    {\n        this._notesFall = val === \"down\";\n    }\n    \n    /**\n     * @returns {number}\n     */\n    get normalAnalyserFft()\n    {\n        return this._normalAnalyserFft;\n    }\n    \n    set normalAnalyserFft(value)\n    {\n        this._normalAnalyserFft = value;\n        this.updateFftSize();\n    }\n    \n    // noinspection JSUnusedGlobalSymbols\n    get drumAnalyserFft()\n    {\n        return this._drumAnalyserFft;\n    }\n    \n    set drumAnalyserFft(value)\n    {\n        this._drumAnalyserFft = value;\n        this.updateFftSize();\n    }\n    \n    get renderBool()\n    {\n        return this._renderBool;\n    }\n    \n    set renderBool(value)\n    {\n        this._renderBool = value;\n        if (value === true)\n        {\n            this.connectChannelAnalysers(this.synth);\n        }\n        else\n        {\n            this.disconnectChannelAnalysers();\n        }\n    }\n    \n    /**\n     * The range of displayed MIDI keys\n     * @returns {{min: number, max: number}}\n     */\n    get keyRange()\n    {\n        return this._keyRange;\n    }\n    \n    /**\n     * The range of displayed MIDI keys\n     * @param value {{min: number, max: number}}\n     */\n    set keyRange(value)\n    {\n        if (value.max === undefined || value.min === undefined)\n        {\n            throw new TypeError(\"No min or max property!\");\n        }\n        if (value.min > value.max)\n        {\n            let temp = value.min;\n            value.min = value.max;\n            value.max = temp;\n        }\n        value.min = Math.max(0, value.min);\n        value.max = Math.min(127, value.max);\n        this._keyRange = value;\n        setTimeout(this.updateSize.bind(this), 100);\n    }\n    \n    /**\n     * @param mode {rendererModes|number}\n     */\n    setRendererMode(mode)\n    {\n        this.rendererMode = mode;\n        this.updateFftSize();\n    }\n    \n    updateSize()\n    {\n        this.canvas.width = this.canvas.clientWidth * window.devicePixelRatio;\n        this.canvas.height = this.canvas.clientHeight * window.devicePixelRatio;\n        this.computeColors();\n        this.updateFftSize();\n        this.render(false, true);\n    }\n    \n    toggleDarkMode()\n    {\n        this.canvas.classList.toggle(\"light_mode\");\n    }\n    \n    /**\n     * @param mid {BasicMIDI}\n     */\n    calculateNoteTimes(mid)\n    {\n        const MIN_NOTE_TIME = 0.02;\n        const times = mid.getNoteTimes(MIN_NOTE_TIME);\n        // special and cool case (triangle.mid)\n        times.forEach(t =>\n        {\n            if (t.length === 1)\n            {\n                const n = t[0];\n                if (n.length === -1)\n                {\n                    n.length = mid.duration;\n                }\n            }\n        });\n        /**\n         * @type {{notes: {midiNote: number, start: number, length: number, velocity: number}[], rendererStartIndex: number}[]}\n         */\n        this.noteTimes = times.map(t =>\n        {\n            return {\n                notes: t,\n                rendererStartIndex: 0\n            };\n        });\n        console.info(`%cFinished loading note times and ready to render the sequence!`, consoleColors.info);\n    }\n    \n    computeColors()\n    {\n        this.channelColors = this.plainColors.map(c =>\n        {\n            const gradient = this.drawingContext.createLinearGradient(\n                0,\n                0,\n                this.canvas.width / 128,\n                0\n            );\n            gradient.addColorStop(\n                0,\n                calculateRGB(c, v => v * GRADIENT_DARKEN)\n            ); // darker color\n            gradient.addColorStop(1, c); // brighter color\n            return gradient;\n        });\n        this.darkerColors = this.plainColors.map(c =>\n        {\n            const gradient = this.drawingContext.createLinearGradient(\n                0,\n                0,\n                this.canvas.width / 128,\n                0\n            );\n            \n            gradient.addColorStop(\n                0,\n                calculateRGB(\n                    c,\n                    v => v * GRADIENT_DARKEN * DARKER_MULTIPLIER\n                )\n            ); // darker color\n            gradient.addColorStop(\n                1,\n                calculateRGB(c, v => v * DARKER_MULTIPLIER)\n            ); // brighter color\n            return gradient;\n        });\n        \n        /**\n         * @type {CanvasGradient[]}\n         */\n        this.gradientColors = this.plainColors.map((c, channelNumber) =>\n        {\n            const x = channelNumber % 4;\n            const y = Math.floor(channelNumber / 4);\n            const waveWidth = this.canvas.width / 4;\n            const waveHeight = this.canvas.height / 4;\n            const relativeX = waveWidth * x;\n            const relativeY = waveHeight * y + waveHeight;\n            const gradient = this.drawingContext.createLinearGradient(\n                relativeX, relativeY - waveHeight,\n                relativeX, relativeY + waveHeight * 0.5\n            );\n            gradient.addColorStop(0, this.plainColors[channelNumber]);\n            gradient.addColorStop(1, RGBAOpacity(this.plainColors[channelNumber], 0));\n            return gradient;\n        });\n        \n        /**\n         * @type {CanvasGradient[]}\n         */\n        this.sidewaysChannelColors = this.plainColors.map(c =>\n        {\n            const gradient = this.drawingContext.createLinearGradient(\n                0,\n                0,\n                0,\n                this.canvas.width / 128\n            );\n            gradient.addColorStop(\n                0,\n                calculateRGB(\n                    c,\n                    v => v * GRADIENT_DARKEN\n                )\n            ); // darker color\n            gradient.addColorStop(1, c); // brighter color\n            return gradient;\n        });\n        this.sidewaysDarkerColors = this.plainColors.map(c =>\n        {\n            const gradient = this.drawingContext.createLinearGradient(\n                0,\n                0,\n                0,\n                this.canvas.width / 128\n            );\n            \n            gradient.addColorStop(\n                0,\n                calculateRGB(\n                    c,\n                    v => v * GRADIENT_DARKEN * DARKER_MULTIPLIER\n                )\n            ); // darker color\n            gradient.addColorStop(\n                1,\n                calculateRGB(\n                    c,\n                    v => v * DARKER_MULTIPLIER\n                )\n            ); // brighter color\n            return gradient;\n        });\n    }\n}\n\nRenderer.prototype.render = render;\nRenderer.prototype.computeNotePositions = computeNotePositions;\n\nRenderer.prototype.createChannelAnalysers = createChannelAnalysers;\nRenderer.prototype.updateFftSize = updateFftSize;\nRenderer.prototype.connectChannelAnalysers = connectChannelAnalysers;\nRenderer.prototype.disconnectChannelAnalysers = disconnectChannelAnalysers;\n\nRenderer.prototype.connectSequencer = connectSequencer;\nRenderer.prototype.resetIndexes = resetIndexes;\n\nRenderer.prototype.renderWaveforms = renderWaveforms;\nRenderer.prototype.renderSingleWaveform = renderSingleWaveform;\nRenderer.prototype.renderSingleFft = renderSingleFft;\nRenderer.prototype.renderBigFft = renderBigFft;\n\nexport { Renderer };", "/**\n * Formats the given seconds to nice readable time\n * @param totalSeconds {number} time in seconds\n * @return {{seconds: number, minutes: number, time: string}}\n */\nexport function formatTime(totalSeconds)\n{\n    totalSeconds = Math.floor(totalSeconds);\n    let minutes = Math.floor(totalSeconds / 60);\n    let seconds = Math.round(totalSeconds - (minutes * 60));\n    return {\n        \"minutes\": minutes,\n        \"seconds\": seconds,\n        \"time\": `${minutes.toString().padStart(2, \"0\")}:${seconds.toString().padStart(2, \"0\")}`\n    };\n}\n\n/**\n * @param fileName {string}\n * @returns {string}\n */\nexport function formatTitle(fileName)\n{\n    const extensions = [\n        \".midi\", \".smf\", \".mid\", \".kar\",\n        \".rmi\", \".xmf\", \".mxmf\"\n    ];\n    \n    // loop through extensions and remove them, case-insensitive\n    extensions.forEach(ext =>\n    {\n        const regex = new RegExp(`${ext}$`, \"i\");\n        fileName = fileName.replace(regex, \"\");\n    });\n    \n    // replace underscores with spaces\n    fileName = fileName.replace(/_/g, \" \").trim();\n    \n    return fileName;\n}\n\n\n", "/**\n * @type {string[]}\n */\nexport const supportedEncodings = [\n    \"Shift_JIS\",\n    \"windows-1250\",\n    \"utf-8\",\n    \"utf-16\",\n    \"utf-16le\",\n    \"utf-16be\",\n    \"latin1\",\n    \"ISO-8859-1\",\n    \"ISO-8859-2\",\n    \"ISO-8859-3\",\n    \"ISO-8859-4\",\n    \"ISO-8859-5\",\n    \"ISO-8859-6\",\n    \"ISO-8859-7\",\n    \"ISO-8859-8\",\n    \"ISO-8859-9\",\n    \"ISO-8859-10\",\n    \"ISO-8859-11\",\n    \"ISO-8859-13\",\n    \"ISO-8859-14\",\n    \"ISO-8859-15\",\n    \"ISO-8859-16\",\n    \"windows-1251\",\n    \"windows-1252\",\n    \"windows-1253\",\n    \"windows-1254\",\n    \"windows-1255\",\n    \"windows-1256\",\n    \"windows-1257\",\n    \"windows-1258\",\n    \"EUC-JP\",\n    \"ISO-2022-JP\",\n    \"EUC-KR\",\n    \"Big5\",\n    \"GB18030\"\n];", "/**\n * icons.js\n * purpose: contains all icons used in the spessasynth app\n * note: mostly from bootstrap-icons\n */\n\n/**\n * @param size {number}\n * @returns {string}\n */\nexport function getPlaySvg(size)\n{\n    return `<svg xmlns='http://www.w3.org/2000/svg' width='${size}' height='${size}' fill='currentColor' viewBox='0 0 16 16'>\n        <path d='m11.596 8.697-6.363 3.692c-.54.313-1.233-.066-1.233-.697V4.308c0-.63.692-1.01 1.233-.696l6.363 3.692a.802.802 0 0 1 0 1.393z'/>\n    </svg>`;\n}\n\n/**\n * @param size {number}\n * @returns {string}\n */\nexport function getPauseSvg(size)\n{\n    return `<svg xmlns='http://www.w3.org/2000/svg' width='${size}' height='${size}' fill='currentColor'  viewBox='0 0 16 16'>\n        <path d='M5.5 3.5A1.5 1.5 0 0 1 7 5v6a1.5 1.5 0 0 1-3 0V5a1.5 1.5 0 0 1 1.5-1.5zm5 0A1.5 1.5 0 0 1 12 5v6a1.5 1.5 0 0 1-3 0V5a1.5 1.5 0 0 1 1.5-1.5z'/>\n    </svg>`;\n}\n\n/**\n * @param size {number}\n * @returns {string}\n */\nexport function getLoopSvg(size)\n{\n    return `<svg fill='currentColor' xmlns='http://www.w3.org/2000/svg' width='${size}' height='${size}' viewBox='0 0 100 100'>\n\t<path d='M83.729,23.57c-0.007-0.562-0.32-1.084-0.825-1.337c-0.503-0.259-1.107-0.212-1.568,0.114l-5.944,4.262l-0.468,0.336\n\t\tc-6.405-6.391-15.196-10.389-24.938-10.389c-13.284,0-24.878,7.354-30.941,18.201l0.024,0.013\n\t\tc-0.548,1.183-0.124,2.607,1.026,3.271c0.001,0,0.001,0,0.002,0.001l8.136,4.697c1.218,0.704,2.777,0.287,3.48-0.932\n\t\tc0.006-0.011,0.009-0.023,0.015-0.034c3.591-6.404,10.438-10.747,18.289-10.747c4.879,0,9.352,1.696,12.914,4.5l-1.001,0.719\n\t\tl-5.948,4.262c-0.455,0.327-0.696,0.89-0.611,1.447c0.081,0.558,0.471,1.028,1.008,1.208l25.447,8.669\n\t\tc0.461,0.162,0.966,0.084,1.367-0.203c0.399-0.29,0.629-0.746,0.627-1.23L83.729,23.57z'/>\n\t<path d='M79.904,61.958c0,0-0.001,0-0.002-0.001l-8.136-4.697c-1.218-0.704-2.777-0.287-3.48,0.932\n\t\tc-0.006,0.011-0.009,0.023-0.015,0.034c-3.591,6.404-10.438,10.747-18.289,10.747c-4.879,0-9.352-1.696-12.914-4.5l1.001-0.719\n\t\tl5.948-4.262c0.455-0.327,0.696-0.89,0.611-1.447c-0.081-0.558-0.471-1.028-1.008-1.208l-25.447-8.669\n\t\tc-0.461-0.162-0.966-0.084-1.367,0.203c-0.399,0.29-0.629,0.746-0.627,1.23l0.092,26.828c0.007,0.562,0.32,1.084,0.825,1.337\n\t\tc0.503,0.259,1.107,0.212,1.568-0.114l5.944-4.262l0.468-0.336c6.405,6.391,15.196,10.389,24.938,10.389\n\t\tc13.284,0,24.878-7.354,30.941-18.201L80.93,65.23C81.478,64.046,81.055,62.623,79.904,61.958z'/>\n</svg>`;\n}\n\n/**\n * @param size {number}\n * @returns {string}\n */\nexport function getTextSvg(size)\n{\n    return `<svg xmlns='http://www.w3.org/2000/svg' width='${size}' height='${size}' fill='currentColor' class='bi bi-text-center' viewBox='0 0 16 16'>\n  <path fill-rule='evenodd' d='M4 12.5a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7a.5.5 0 0 1-.5-.5zm-2-3a.5.5 0 0 1 .5-.5h11a.5.5 0 0 1 0 1h-11a.5.5 0 0 1-.5-.5zm2-3a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7a.5.5 0 0 1-.5-.5zm-2-3a.5.5 0 0 1 .5-.5h11a.5.5 0 0 1 0 1h-11a.5.5 0 0 1-.5-.5z'/>\n</svg>`;\n}\n\nexport function getForwardSvg(size)\n{\n    return `<svg xmlns='http://www.w3.org/2000/svg' width='${size}' height='${size}' fill='currentColor' class='bi bi-skip-end-fill' viewBox='0 0 16 16'>\n  <path d='M12.5 4a.5.5 0 0 0-1 0v3.248L5.233 3.612C4.693 3.3 4 3.678 4 4.308v7.384c0 .63.692 1.01 1.233.697L11.5 8.753V12a.5.5 0 0 0 1 0V4z'/>\n</svg>`;\n}\n\nexport function getBackwardSvg(size)\n{\n    return `<svg xmlns='http://www.w3.org/2000/svg' width='${size}' height='${size}' fill='currentColor' class='bi bi-skip-start-fill' viewBox='0 0 16 16'>\n  <path d='M4 4a.5.5 0 0 1 1 0v3.248l6.267-3.636c.54-.313 1.232.066 1.232.696v7.384c0 .63-.692 1.01-1.232.697L5 8.753V12a.5.5 0 0 1-1 0V4z'/>\n</svg>`;\n}\n\nexport function getVolumeSvg(size)\n{\n    return `<svg xmlns='http://www.w3.org/2000/svg' width='${size}' height='${size}' fill='currentColor' class='bi bi-volume-up-fill' viewBox='0 0 16 16'>\n  <path d='M11.536 14.01A8.473 8.473 0 0 0 14.026 8a8.473 8.473 0 0 0-2.49-6.01l-.708.707A7.476 7.476 0 0 1 13.025 8c0 2.071-.84 3.946-2.197 5.303l.708.707z'/>\n  <path d='M10.121 12.596A6.48 6.48 0 0 0 12.025 8a6.48 6.48 0 0 0-1.904-4.596l-.707.707A5.483 5.483 0 0 1 11.025 8a5.483 5.483 0 0 1-1.61 3.89l.706.706z'/>\n  <path d='M8.707 11.182A4.486 4.486 0 0 0 10.025 8a4.486 4.486 0 0 0-1.318-3.182L8 5.525A3.489 3.489 0 0 1 9.025 8 3.49 3.49 0 0 1 8 10.475l.707.707zM6.717 3.55A.5.5 0 0 1 7 4v8a.5.5 0 0 1-.812.39L3.825 10.5H1.5A.5.5 0 0 1 1 10V6a.5.5 0 0 1 .5-.5h2.325l2.363-1.89a.5.5 0 0 1 .529-.06z'/>\n</svg>`;\n}\n\nexport function getEmptyMicSvg(size)\n{\n    return `<svg xmlns='http://www.w3.org/2000/svg' width='${size * 0.8}' height='${size * 0.8}' fill='currentColor' class='bi bi-mic' viewBox='0 0 16 16'>\n  <path d='M3.5 6.5A.5.5 0 0 1 4 7v1a4 4 0 0 0 8 0V7a.5.5 0 0 1 1 0v1a5 5 0 0 1-4.5 4.975V15h3a.5.5 0 0 1 0 1h-7a.5.5 0 0 1 0-1h3v-2.025A5 5 0 0 1 3 8V7a.5.5 0 0 1 .5-.5'/>\n  <path d='M10 8a2 2 0 1 1-4 0V3a2 2 0 1 1 4 0zM8 0a3 3 0 0 0-3 3v5a3 3 0 0 0 6 0V3a3 3 0 0 0-3-3'/>\n</svg>`;\n}\n\nexport function getMicSvg(size)\n{\n    return `<svg xmlns='http://www.w3.org/2000/svg' width='${size * 0.9}' height='${size * 0.9}' fill='currentColor' class='bi bi-mic-fill' viewBox='0 0 16 16'>\n  <path d='M5 3a3 3 0 0 1 6 0v5a3 3 0 0 1-6 0z'/>\n  <path d='M3.5 6.5A.5.5 0 0 1 4 7v1a4 4 0 0 0 8 0V7a.5.5 0 0 1 1 0v1a5 5 0 0 1-4.5 4.975V15h3a.5.5 0 0 1 0 1h-7a.5.5 0 0 1 0-1h3v-2.025A5 5 0 0 1 3 8V7a.5.5 0 0 1 .5-.5'/>\n</svg>`;\n}\n\nexport function getMuteSvg(size)\n{\n    return `<svg xmlns='http://www.w3.org/2000/svg' width='${size}' height='${size}' style='color: red;' class='bi bi-volume-mute-fill' viewBox='0 0 16 16'>\n  <path style='color: red;' fill='currentColor' d='M6.717 3.55A.5.5 0 0 1 7 4v8a.5.5 0 0 1-.812.39L3.825 10.5H1.5A.5.5 0 0 1 1 10V6a.5.5 0 0 1 .5-.5h2.325l2.363-1.89a.5.5 0 0 1 .529-.06zm7.137 2.096a.5.5 0 0 1 0 .708L12.207 8l1.647 1.646a.5.5 0 0 1-.708.708L11.5 8.707l-1.646 1.647a.5.5 0 0 1-.708-.708L10.793 8 9.146 6.354a.5.5 0 1 1 .708-.708L11.5 7.293l1.646-1.647a.5.5 0 0 1 .708 0z'/>\n</svg>`;\n}\n\nexport function getDrumsSvg(size)\n{\n    return `<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 512 512' width='${size}' height='${size}' class='bi bi-drum-fill' fill='currentColor'>\n    <path d='M494,12L258.3,123.8c-6.8-4.6-15.1-7.3-24-7.3c-23.6,0-42.6,19.1-42.6,42.6s19.1,42.6,42.6,42.6\n    \\t\\tc22.4,0,40.9-17.3,42.6-39.3l129.2-61.3c38.7,16.3,62.6,37.6,62.6,57.9c0,40.2-91.1,85.2-213.1,85.2s-213.1-45-213.1-85.2\n    \\t\\ts91.1-85.2,213.1-85.2c3.7,0,7-0.1,10.7,0l75.2-35.3c-26.7-4.5-55.3-7.3-85.9-7.3C109.9,31.3,0,86.2,0,159.1v213.1\n    \\t\\tc0,21.1,9.5,40.4,24,55.9c14.5,15.6,34.2,28.1,57.3,38.6c46.1,21,107.1,33.3,174.4,33.3s128.3-12.3,174.4-33.3\n    \\t\\tc23.1-10.5,42.8-23.1,57.3-38.6c14.5-15.6,24-34.9,24-55.9V159.1c0-31.5-20.8-59.4-55.9-81.2L512,50.6L494,12z M42.6,231.7\n    \\t\\tc21.6,16.3,50.7,29.7,85.2,39.3v168.4c-10.7-3.3-20.4-7.2-29.3-11.3c-19.3-8.8-34-19.4-43.3-29.3c-9.2-9.9-12.7-18.2-12.7-26.6\n    \\t\\tV231.7z M468.7,231.7v140.5c0,8.4-3.4,16.7-12.7,26.6c-9.2,9.9-24,20.5-43.3,29.3c-8.9,4.1-18.6,8-29.3,11.3V271\n    \\t\\tC418,261.4,447.1,248,468.7,231.7z M170.4,280.3c26.5,4.4,55,6.7,85.2,6.7s58.8-2.2,85.2-6.7v169.1c-26.2,4.9-54.9,8-85.2,8\n    \\t\\ts-59-3.1-85.2-8V280.3z'/>\n   </svg>`;\n}\n\nexport function getNoteSvg(size)\n{\n    return `<svg xmlns='http://www.w3.org/2000/svg' width='${size}' height='${size}' fill='currentColor' class='bi bi-music-note' viewBox='0 0 16 16'>\n  <path d='M9 13c0 1.105-1.12 2-2.5 2S4 14.105 4 13s1.12-2 2.5-2 2.5.895 2.5 2z'/>\n  <path fill-rule='evenodd' d='M9 3v10H8V3h1z'/>\n  <path d='M8 2.82a1 1 0 0 1 .804-.98l3-.6A1 1 0 0 1 13 2.22V4L8 5V2.82z'/>\n</svg>`;\n}\n\nexport function getGearSvg(size)\n{\n    return `<svg xmlns='http://www.w3.org/2000/svg' width='${size}' height='${size}' fill='currentColor' class='bi bi-gear-fill' viewBox='0 0 16 16'>\n  <path d='M9.405 1.05c-.413-1.4-2.397-1.4-2.81 0l-.1.34a1.464 1.464 0 0 1-2.105.872l-.31-.17c-1.283-.698-2.686.705-1.987 1.987l.169.311c.446.82.023 1.841-.872 2.105l-.34.1c-1.4.413-1.4 2.397 0 2.81l.34.1a1.464 1.464 0 0 1 .872 2.105l-.17.31c-.698 1.283.705 2.686 1.987 1.987l.311-.169a1.464 1.464 0 0 1 2.105.872l.1.34c.413 1.4 2.397 1.4 2.81 0l.1-.34a1.464 1.464 0 0 1 2.105-.872l.31.17c1.283.698 2.686-.705 1.987-1.987l-.169-.311a1.464 1.464 0 0 1 .872-2.105l.34-.1c1.4-.413 1.4-2.397 0-2.81l-.34-.1a1.464 1.464 0 0 1-.872-2.105l.17-.31c.698-1.283-.705-2.686-1.987-1.987l-.311.169a1.464 1.464 0 0 1-2.105-.872zM8 10.93a2.929 2.929 0 1 1 0-5.86 2.929 2.929 0 0 1 0 5.858z'/>\n</svg>`;\n}\n\nexport function getDoubleNoteSvg(size)\n{\n    return `<svg xmlns='http://www.w3.org/2000/svg' width='${size}' height='${size}' fill='currentColor' class='bi bi-music-note-beamed' viewBox='0 0 16 16'>\n  <path d='M6 13c0 1.105-1.12 2-2.5 2S1 14.105 1 13s1.12-2 2.5-2 2.5.896 2.5 2m9-2c0 1.105-1.12 2-2.5 2s-2.5-.895-2.5-2 1.12-2 2.5-2 2.5.895 2.5 2'/>\n  <path fill-rule='evenodd' d='M14 11V2h1v9zM6 3v10H5V3z'/>\n  <path d='M5 2.905a1 1 0 0 1 .9-.995l8-.8a1 1 0 0 1 1.1.995V3L5 4z'/>\n</svg>`;\n}\n\nexport function getDownArrowSvg(size)\n{\n    return `<svg xmlns='http://www.w3.org/2000/svg' width='${size}' height='${size}' fill='currentColor' class='bi bi-chevron-down' viewBox='0 0 16 16'>\n  <path fill-rule='evenodd' d='M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708'/>\n</svg>`;\n}\n\nexport function getLockSVG(size)\n{\n    return `<svg xmlns='http://www.w3.org/2000/svg' width='${size * 0.8}' height='${size * 0.8}' fill='currentColor' class='bi bi-lock-fill' viewBox='0 0 16 16'>\n  <path d='M8 1a2 2 0 0 1 2 2v4H6V3a2 2 0 0 1 2-2m3 6V3a3 3 0 0 0-6 0v4a2 2 0 0 0-2 2v5a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2'/>\n</svg>`;\n}\n\nexport function getUnlockSVG(size)\n{\n    return `<svg xmlns='http://www.w3.org/2000/svg' width='${size * 0.8}' height='${size * 0.8}' fill='currentColor' class='bi bi-unlock-fill' viewBox='0 0 16 16'>\n  <path d='M11 1a2 2 0 0 0-2 2v4a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V9a2 2 0 0 1 2-2h5V3a3 3 0 0 1 6 0v4a.5.5 0 0 1-1 0V3a2 2 0 0 0-2-2'/>\n</svg>`;\n}\n\nexport function getHourglassSvg(size)\n{\n    return `<svg xmlns='http://www.w3.org/2000/svg' width='${size}' height='${size}' fill='currentColor' class='bi bi-hourglass' viewBox='0 0 16 16'>\n      <path d='M2 1.5a.5.5 0 0 1 .5-.5h11a.5.5 0 0 1 0 1h-1v1a4.5 4.5 0 0 1-2.557 4.06c-.29.139-.443.377-.443.59v.7c0 .213.154.451.443.59A4.5 4.5 0 0 1 12.5 13v1h1a.5.5 0 0 1 0 1h-11a.5.5 0 1 1 0-1h1v-1a4.5 4.5 0 0 1 2.557-4.06c.29-.139.443-.377.443-.59v-.7c0-.213-.154-.451-.443-.59A4.5 4.5 0 0 1 3.5 3V2h-1a.5.5 0 0 1-.5-.5m2.5.5v1a3.5 3.5 0 0 0 1.989 3.158c.533.256 1.011.791 1.011 1.491v.702c0 .7-.478 1.235-1.011 1.491A3.5 3.5 0 0 0 4.5 13v1h7v-1a3.5 3.5 0 0 0-1.989-3.158C8.978 9.586 8.5 9.052 8.5 8.351v-.702c0-.7.478-1.235 1.011-1.491A3.5 3.5 0 0 0 11.5 3V2z'/>\n    </svg>`;\n}\n\nexport function getExclamationSvg(size)\n{\n    return `<svg xmlns='http://www.w3.org/2000/svg' width='${size}' height='${size}' fill='currentColor' class='bi bi-exclamation-triangle' viewBox='0 0 16 16'>\n  <path d='M7.938 2.016A.13.13 0 0 1 8.002 2a.13.13 0 0 1 .063.016.15.15 0 0 1 .054.057l6.857 11.667c.036.06.035.124.002.183a.2.2 0 0 1-.054.06.1.1 0 0 1-.066.017H1.146a.1.1 0 0 1-.066-.017.2.2 0 0 1-.054-.06.18.18 0 0 1 .002-.183L7.884 2.073a.15.15 0 0 1 .054-.057m1.044-.45a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767z'/>\n  <path d='M7.002 12a1 1 0 1 1 2 0 1 1 0 0 1-2 0M7.1 5.995a.905.905 0 1 1 1.8 0l-.35 3.507a.552.552 0 0 1-1.1 0z'/>\n</svg>`;\n}\n\nexport function getCheckSvg(size)\n{\n    return `<svg xmlns='http://www.w3.org/2000/svg' width='${size}' height='${size}' fill='currentColor' class='bi bi-check2' viewBox='0 0 16 16'>\n  <path d='M13.854 3.646a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708 0l-3.5-3.5a.5.5 0 1 1 .708-.708L6.5 10.293l6.646-6.647a.5.5 0 0 1 .708 0'/>\n</svg>`;\n}\n\nexport function getShuffleSvg(size)\n{\n    return `<svg xmlns='http://www.w3.org/2000/svg' width='${size}' height='${size}' fill='none' class='bi bi-shuffle' viewBox='-3 -3 22 22'>\n    <path d='M0 3.5A.5.5 0 0 1 .5 3H1c2.202 0 3.827 1.24 4.874 2.418.49.552.865 1.102 1.126 1.532.26-.43.636-.98 1.126-1.532C9.173 4.24 10.798 3 13 3v1c-1.798 0-3.173 1.01-4.126 2.082A9.6 9.6 0 0 0 7.556 8a9.6 9.6 0 0 0 1.317 1.918C9.828 10.99 11.204 12 13 12v1c-2.202 0-3.827-1.24-4.874-2.418A10.6 10.6 0 0 1 7 9.05c-.26.43-.636.98-1.126 1.532C4.827 11.76 3.202 13 1 13H.5a.5.5 0 0 1 0-1H1c1.798 0 3.173-1.01 4.126-2.082A9.6 9.6 0 0 0 6.444 8a9.6 9.6 0 0 0-1.317-1.918C4.172 5.01 2.796 4 1 4H.5a.5.5 0 0 1-.5-.5' stroke-width='1.5' stroke-linecap='round' stroke-linejoin='round'/>\n    <path d='M13 5.466V1.534a.25.25 0 0 1 .41-.192l2.36 1.966c.12.1.12.284 0 .384l-2.36 1.966a.25.25 0 0 1-.41-.192m0 9v-3.932a.25.25 0 0 1 .41-.192l2.36 1.966c.12.1.12.284 0 .384l-2.36 1.966a.25.25 0 0 1-.41-.192' stroke-width='1.7' stroke-linecap='round' stroke-linejoin='round'/></svg>\n`;\n}\n\nexport function getSpeedSvg(size)\n{\n    return `<svg xmlns='http://www.w3.org/2000/svg' width='${size}' height='${size}' fill='currentColor' class='bi bi-speedometer' viewBox='-1 -1 18 18'>\n  <path d='M8 2a.5.5 0 0 1 .5.5V4a.5.5 0 0 1-1 0V2.5A.5.5 0 0 1 8 2M3.732 3.732a.5.5 0 0 1 .707 0l.915.914a.5.5 0 1 1-.708.708l-.914-.915a.5.5 0 0 1 0-.707M2 8a.5.5 0 0 1 .5-.5h1.586a.5.5 0 0 1 0 1H2.5A.5.5 0 0 1 2 8m9.5 0a.5.5 0 0 1 .5-.5h1.5a.5.5 0 0 1 0 1H12a.5.5 0 0 1-.5-.5m.754-4.246a.39.39 0 0 0-.527-.02L7.547 7.31A.91.91 0 1 0 8.85 8.569l3.434-4.297a.39.39 0 0 0-.029-.518z'/>\n  <path fill-rule='evenodd' d='M6.664 15.889A8 8 0 1 1 9.336.11a8 8 0 0 1-2.672 15.78zm-4.665-4.283A11.95 11.95 0 0 1 8 10c2.186 0 4.236.585 6.001 1.606a7 7 0 1 0-12.002 0'/>\n</svg>`;\n}", "/**\n * sequi_button.js\n * purpose: formats a basic button for the sequencer_ui.js\n */\n\n/**\n * @param title {string}\n * @param html {string} use carefully!\n * @returns {HTMLDivElement}\n */\nexport function getSeqUIButton(title, html)\n{\n    const button = document.createElement(\"div\");\n    button.classList.add(\"control_buttons\");\n    button.title = title;\n    button.innerHTML = html;\n    return button;\n}", "/**\n * @enum {string}\n */\nexport const keybinds = {\n    synthesizerUIShow: \"s\",\n    settingsShow: \"r\",\n    \n    blackMidiMode: \"b\",\n    midiPanic: \"backspace\",\n    \n    playPause: \" \",\n    toggleLoop: \"l\",\n    toggleLyrics: \"t\",\n    seekBackwards: \"arrowleft\",\n    seekForwards: \"arrowright\",\n    previousSong: \"[\",\n    nextSong: \"]\",\n    toggleSubtitles: \"escape\",\n    sustainPedal: \"shift\",\n    \n    videoMode: \"v\"\n};", "import { formatTitle } from \"../utils/other.js\";\n\n/**\n * @this {SequencerUI}\n */\nexport function createNavigatorHandler()\n{\n    if (!navigator.mediaSession)\n    {\n        return;\n    }\n    \n    navigator.mediaSession.metadata = new MediaMetadata({\n        title: this.currentSongTitle,\n        artist: \"SpessaSynth\"\n    });\n    \n    navigator.mediaSession.setActionHandler(\"play\", () =>\n    {\n        this.seqPlay();\n    });\n    navigator.mediaSession.setActionHandler(\"pause\", () =>\n    {\n        this.seqPause();\n    });\n    navigator.mediaSession.setActionHandler(\"stop\", () =>\n    {\n        this.seq.currentTime = 0;\n        this.seqPause();\n    });\n    navigator.mediaSession.setActionHandler(\"seekbackward\", e =>\n    {\n        this.seq.currentTime -= e.seekOffset || 10;\n    });\n    navigator.mediaSession.setActionHandler(\"seekforward\", e =>\n    {\n        this.seq.currentTime += e.seekOffset || 10;\n    });\n    navigator.mediaSession.setActionHandler(\"seekto\", e =>\n    {\n        this.seq.currentTime = e.seekTime;\n    });\n    navigator.mediaSession.setActionHandler(\"previoustrack\", () =>\n    {\n        this.switchToPreviousSong();\n    });\n    navigator.mediaSession.setActionHandler(\"nexttrack\", () =>\n    {\n        this.switchToNextSong();\n    });\n    \n    navigator.mediaSession.playbackState = \"playing\";\n}\n\n/**\n * @this {SequencerUI}\n * @param cleanOtherTextEvents {boolean}\n */\nexport function updateTitleAndMediaStatus(cleanOtherTextEvents = true)\n{\n    if (this.seq?.hasDummyData === true)\n    {\n        this.currentSongTitle = this.locale.getLocaleString(\"locale.synthInit.genericLoading\");\n    }\n    else\n    {\n        if (this.seq.midiData.midiNameUsesFileName)\n        {\n            this.currentSongTitle = formatTitle(this.seq.midiData.fileName);\n        }\n        else\n        {\n            const text = this.infoDecoder.decode(this.seq.midiData.rawMidiName.buffer).replace(/\\0$/, \"\");\n            this.currentSongTitle = formatTitle(text);\n        }\n    }\n    if (this.seq.midiData)\n    {\n        this.loadLyricData();\n        this.setLyricsText(this.lyricsIndex);\n        if (cleanOtherTextEvents)\n        {\n            this.rawOtherTextEvents = [];\n        }\n    }\n    if (this.synthDisplayMode.enabled === false)\n    {\n        this.mainTitleMessageDisplay.innerText = this.currentSongTitle;\n    }\n    else\n    {\n        this.mainTitleMessageDisplay.innerText = this.decodeTextFix(this.synthDisplayMode.currentEncodedText.buffer);\n    }\n    document.title = this.currentSongTitle + \" - SpessaSynth\";\n    this.musicModeUI.setTitle(this.currentSongTitle);\n    \n    if (!navigator.mediaSession)\n    {\n        return;\n    }\n    try\n    {\n        navigator.mediaSession.setPositionState({\n            duration: this.seq.duration,\n            playbackRate: this.seq.playbackRate,\n            position: this.seq.currentTime\n        });\n    }\n    catch (e)\n    {\n    }\n}", "function splitByCurlyBraces(input)\n{\n    const result = [];\n    let current = \"\";\n    let insideBraces = false;\n    \n    for (let i = 0; i < input.length; i++)\n    {\n        const char = input[i];\n        \n        if (char === \"{\")\n        {\n            if (current)\n            {\n                result.push(current);\n                current = \"\";\n            }\n            insideBraces = true;\n            current += char;\n        }\n        else if (char === \"}\")\n        {\n            current += char;\n            result.push(current);\n            current = \"\";\n            insideBraces = false;\n        }\n        else\n        {\n            current += char;\n        }\n    }\n    \n    if (current)\n    {\n        result.push(current);\n    }\n    \n    return result;\n}\n\n/**\n * @param colorString {string}\n * @returns {string}\n */\nfunction ASSColorToRgba(colorString)\n{\n    const stringSanitized = colorString.slice(2);\n    // Note that colors are BGR (not RGB as normally) and the alpha component is inverted,\n    // so 255 in completely transparent and 0 is no transparency.\n    // color: &HAABBGGRR\n    const colorAlpha = 255 - parseInt(stringSanitized.slice(0, 2), 16);\n    const colorBlue = parseInt(stringSanitized.slice(2, 4), 16);\n    const colorGreen = parseInt(stringSanitized.slice(4, 6), 16);\n    const colorRed = parseInt(stringSanitized.slice(6), 16);\n    return `rgba(${colorRed}, ${colorGreen}, ${colorBlue}, ${colorAlpha / 255})`;\n}\n\nexport class DialogueEvent\n{\n    /**\n     * @type {string[]}\n     */\n    text = [];\n    \n    /**\n     * @type {string}\n     */\n    textClean = \"\";\n    \n    /**\n     * @type {number}\n     */\n    layer = 0;\n    \n    /**\n     * @type {number}\n     */\n    startSeconds = 0;\n    \n    /**\n     * @type {number}\n     */\n    endSeconds = 0;\n    \n    /**\n     * @type {string}\n     */\n    styleName = \"\";\n    \n    /**\n     * @type {Object<string, string>}\n     */\n    styleData = {};\n    \n    /**\n     * @type {number}\n     */\n    marginLeft = 0;\n    \n    /**\n     * @type {number}\n     */\n    marginRight = 0;\n    \n    /**\n     * @type {number}\n     */\n    marginVertical = 0;\n    \n    /**\n     * @type {?HTMLDivElement}\n     */\n    element = undefined;\n    \n    /**\n     * @type {string}\n     */\n    primaryColor;\n    \n    /**\n     * @type {string}\n     */\n    secondaryColor;\n    \n    \n    /**\n     * @param text {string}\n     * @param layer {number}\n     * @param startSeconds {number}\n     * @param endSeconds {number}\n     * @param styleName {string}\n     * @param marginLeft {number}\n     * @param marginRight {number}\n     * @param marginVertical {number}\n     * @param styles {Object<string, string>[]}\n     */\n    constructor(text, layer, startSeconds, endSeconds, styleName, marginLeft, marginRight, marginVertical, styles)\n    {\n        this.text = splitByCurlyBraces(text);\n        const textCleanSplit = [];\n        this.text.forEach(t =>\n        {\n            if (!t.startsWith(\"{\"))\n            {\n                textCleanSplit.push(t);\n            }\n        });\n        this.textClean = textCleanSplit.join(\"\");\n        this.startSeconds = startSeconds;\n        this.endSeconds = endSeconds;\n        this.styleName = styleName;\n        this.styleData = styles.find(s => s[\"Name\"] === this.styleName);\n        this.marginLeft = marginLeft || parseInt(this.styleData[\"MarginL\"]);\n        this.marginRight = marginRight || parseInt(this.styleData[\"MarginR\"]);\n        this.marginVertical = marginVertical || parseInt(this.styleData[\"MarginV\"]);\n        this.primaryColor = ASSColorToRgba(this.styleData[\"PrimaryColour\"]);\n        this.secondaryColor = ASSColorToRgba(this.styleData[\"SecondaryColour\"]);\n    }\n    \n    hide()\n    {\n        if (this.element !== undefined)\n        {\n            this.element.remove();\n        }\n        this.element = undefined;\n    }\n    \n    /**\n     * @param currentVideoTime {number}\n     */\n    updateHighlights(currentVideoTime)\n    {\n        // the text is split up into chunks, separated by \"{\\k<duration in 1/100th of a second>}\"\n        // note that the time is not a delay, it's how long the karaoke gets highlighted for before moving onto the next one\n        // IE: [\"start\", \"{\\k50}\", \"test\", \"{\\k100\"}, \"test2\"]\n        // \"start\" is instant, test is also instant and \"test2\" gets highligthed after 0.5 seconds.\n        // Then, if something is after test2, it will get highlighted after 1 second.\n        \n        let currentDelay = 0;\n        let lastKaraokeDuration = 0;\n        let currentIndex = 0;\n        const timeSinceShown = currentVideoTime - this.startSeconds;\n        let isNextSpanAnimated = false;\n        let animationDuration = 0;\n        for (const chunk of this.text)\n        {\n            if (chunk.startsWith(\"{\"))\n            {\n                // check if karakoe tag\n                const karaokeAnimation = chunk.startsWith(\"{\\\\K\") || chunk.startsWith(\"{\\\\kf\");\n                if (!karaokeAnimation && !chunk.startsWith(\"{\\\\k\"))\n                {\n                    continue;\n                }\n                const duration = parseInt(chunk.slice(3, -1)) / 100;\n                if (karaokeAnimation)\n                {\n                    animationDuration = duration;\n                    isNextSpanAnimated = true;\n                }\n                else\n                {\n                    currentDelay += duration;\n                }\n                lastKaraokeDuration = duration;\n            }\n            else\n            {\n                const span = this.textChunks[currentIndex];\n                if (isNextSpanAnimated)\n                {\n                    isNextSpanAnimated = false;\n                    if (currentDelay > timeSinceShown)\n                    {\n                        span.style.cssText = \"\";\n                        span.style.backgroundImage = \"\";\n                        span.style.backgroundClip = \"\";\n                        span.style.color = this.secondaryColor;\n                    }\n                    else\n                    {\n                        const elapsed = timeSinceShown - currentDelay;\n                        // calculate how much percent needs to be filled\n                        const percent = Math.min(100, (elapsed / animationDuration) * 100);\n                        // fill text with color from left to right smoothly\n                        span.style.color = \"transparent\";\n                        span.style.backgroundImage = `linear-gradient(90deg, ${this.primaryColor} 50%, ${this.secondaryColor} 50%)`;\n                        span.style.backgroundPosition = `${100 - percent}%`;\n                        span.style.backgroundSize = \"200% 100%\";\n                        span.style.backgroundClip = \"text\";\n                    }\n                    currentDelay += animationDuration;\n                }\n                else\n                {\n                    // minus because highlight starts instantly and the next line is delayed\n                    span.style.backgroundImage = \"\";\n                    span.style.backgroundClip = \"\";\n                    if (currentDelay - lastKaraokeDuration > timeSinceShown)\n                    {\n                        span.style.color = this.secondaryColor;\n                    }\n                    else\n                    {\n                        span.style.color = this.primaryColor;\n                    }\n                }\n                currentIndex++;\n            }\n        }\n    }\n    \n    /**\n     * @param resX {number}\n     * @param resY {number}\n     * @param parent {HTMLDivElement}\n     * @param currentVideoTime {number}\n     * @param embeddedFontName {string}\n     */\n    show(resX, resY, parent, currentVideoTime, embeddedFontName)\n    {\n        if (this.element !== undefined)\n        {\n            this.updateHighlights(currentVideoTime);\n            return;\n        }\n        this.element = document.createElement(\"div\");\n        this.element.classList.add(\"ass_renderer_element\");\n        // Spec: Alignment:\n        // This sets how the text is \"justified\" within the Left/Right onscreen margins, and also the vertical placing.\n        // Values may be 1=Left, 2=Centered, 3=Right.\n        // Add 4 to the value for a \"Toptitle\".\n        // Add 8 to the value for a \"Midtitle\".\n        // E.g., 5 = left-justified toptitle.\n        // Think of numpad and a 3x3 grid\n        let alignment = parseInt(this.styleData[\"Alignment\"]);\n        \n        // alignment override \\an<alignment> as the first text chunk or \\a<alignment>\n        if (this.text[0].startsWith(\"{\\\\an\"))\n        {\n            alignment = parseInt(this.text[0][4]);\n        }\n        else if (this.text[0].startsWith(\"{\\\\a\"))\n        {\n            /*\n            legacy \\a uses different alignment:\n            1: Bottom left\n            2: Bottom center\n            3: Bottom right\n            5: Top left\n            6: Top center\n            7: Top right\n            9: Middle left\n            10: Middle center\n            11: Middle right\n            translate to an:\n             */\n            const legacyAlignment = parseInt(this.text[0][3]);\n            switch (legacyAlignment)\n            {\n                case 1:\n                    alignment = 1;\n                    break;\n                case 2:\n                    alignment = 2;\n                    break;\n                case 3:\n                    alignment = 3;\n                    break;\n                case 5:\n                    alignment = 7;\n                    break;\n                case 6:\n                    alignment = 8;\n                    break;\n                case 7:\n                    alignment = 9;\n                    break;\n                case 9:\n                    alignment = 4;\n                    break;\n                case 10:\n                    alignment = 5;\n                    break;\n                case 11:\n                    alignment = 6;\n                    break;\n                default:\n                    alignment = 5;\n                    break;\n            }\n        }\n        \n        const marginLeftPercent = (this.marginLeft / resX) * 100;\n        const marginRightPercent = (this.marginRight / resX) * 100;\n        const marginVerticalPercent = (this.marginVertical / resY) * 100;\n        \n        \n        switch (alignment)\n        {\n            case 1:\n                // bottom left\n                this.element.style.left = `${marginLeftPercent}%`;\n                this.element.style.bottom = `${marginVerticalPercent}%`;\n                break;\n            case 2:\n                // bottom center\n                this.element.style.left = `calc(50% + ${marginLeftPercent}% - ${marginRightPercent}%)`;\n                this.element.style.bottom = `${marginVerticalPercent}%`;\n                this.element.style.transform = \"translateX(-50%)\";\n                break;\n            case 3:\n                // bottom right\n                this.element.style.right = `${marginRightPercent}%`;\n                this.element.style.bottom = `${marginVerticalPercent}%`;\n                break;\n            case 4:\n                // middle left\n                this.element.style.left = `${marginLeftPercent}%`;\n                this.element.style.top = `calc(50% + ${marginVerticalPercent}% - ${marginVerticalPercent}%)`;\n                this.element.style.transform = \"translateY(-50%)\";\n                break;\n            case 5:\n                // middle center\n                this.element.style.left = `calc(50% + ${marginLeftPercent}% - ${marginRightPercent}%)`;\n                this.element.style.top = `calc(50% + ${marginVerticalPercent}% - ${marginVerticalPercent}%)`;\n                this.element.style.transform = \"translate(-50%, -50%)\";\n                break;\n            case 6:\n                // middle right\n                this.element.style.right = `${marginRightPercent}%`;\n                this.element.style.top = `calc(50% + ${marginVerticalPercent}% - ${marginVerticalPercent}%)`;\n                this.element.style.transform = \"translateY(-50%)\";\n                break;\n            case 7:\n                // top left\n                this.element.style.left = `${marginLeftPercent}%`;\n                this.element.style.top = `${marginVerticalPercent}%`;\n                break;\n            case 8:\n                // top center\n                this.element.style.left = `calc(50% + ${marginLeftPercent}% - ${marginRightPercent}%)`;\n                this.element.style.top = `${marginVerticalPercent}%`;\n                this.element.style.transform = \"translateX(-50%)\";\n                break;\n            case 9:\n                // top right\n                this.element.style.right = `${marginRightPercent}%`;\n                this.element.style.top = `${marginVerticalPercent}%`;\n                break;\n            default:\n                // default alignment\n                this.element.style.left = `${marginLeftPercent}%`;\n                this.element.style.bottom = `${marginVerticalPercent}%`;\n                break;\n        }\n        \n        // apply the style: formats are as follows:\n        // Name, Fontname, Fontsize, PrimaryColour, SecondaryColour,\n        // OutlineColour, BackColour, Bold, Italic, Underline,\n        // StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle,\n        // Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding\n        // font color\n        this.element.style.color = this.secondaryColor;\n        this.element.style.zIndex = (this.layer + 99999).toString();\n        // font family and size\n        const fontFamily = `${this.styleData[\"Fontname\"]}, \"${embeddedFontName}\", sans-serif`;\n        let fontSize = this.styleData[\"Fontsize\"];\n        // font size override tag (\"\\fs<font size>\")\n        if (this.text[0].startsWith(\"{\\\\fs\"))\n        {\n            fontSize = this.text[0].slice(4, -1);\n        }\n        this.element.style.fontFamily = fontFamily;\n        // fontSize. Scale px with resX and resY\n        this.element.style.fontSize = `${(parseFloat(fontSize) / resY) * 0.8 * window.screen.height}px`;\n        // bold, italic, underline, strikeout\n        if (this.styleData[\"Bold\"] === \"1\")\n        {\n            this.element.style.fontWeight = \"bold\";\n        }\n        if (this.styleData[\"Italic\"] === \"1\")\n        {\n            this.element.style.fontStyle = \"italic\";\n        }\n        if (this.styleData[\"Underline\"] === \"1\")\n        {\n            this.element.style.textDecoration = \"underline\";\n        }\n        if (this.styleData[\"StrikeOut\"] === \"1\")\n        {\n            this.element.style.textDecoration = \"line-through\";\n        }\n        \n        /**\n         * @type {HTMLSpanElement[]}\n         */\n        this.textChunks = [];\n        for (const chunk of this.text)\n        {\n            if (!chunk.startsWith(\"{\"))\n            {\n                const span = document.createElement(\"span\");\n                span.textContent = chunk\n                    .replaceAll(\"\\\\N\", \"\\n\")\n                    .replaceAll(\"\\\\h\", \" \")\n                    .replaceAll(\"\\\\n\", \"\\n\");\n                span.style.color = this.secondaryColor;\n                this.element.appendChild(span);\n                this.textChunks.push(span);\n            }\n        }\n        \n        parent.appendChild(this.element);\n        \n        // update highlights\n        this.updateHighlights(currentVideoTime);\n        \n        // force reflow\n        void this.element.offsetHeight;\n        \n        // finally, check for colliding subtitles in parent and move down if needed\n        // if no space below, move up\n        const thisRect = this.element.getBoundingClientRect();\n        for (const subtitle of parent.children)\n        {\n            if (subtitle === this.element)\n            {\n                continue;\n            }\n            const subtitleRect = subtitle.getBoundingClientRect();\n            const parentRect = parent.getBoundingClientRect();\n            // check for collision\n            if (thisRect.top < subtitleRect.bottom && thisRect.bottom > subtitleRect.top)\n            {\n                // check if this.element can fit between parentRect.top and subtitleRect.top\n                if (subtitleRect.top - parentRect.top > thisRect.height)\n                {\n                    // move up\n                    this.element.style.top = \"\";\n                    this.element.style.bottom = `${parentRect.bottom - subtitleRect.top}px`;\n                }\n                else\n                {\n                    // move down\n                    this.element.style.top = `${subtitleRect.top + subtitleRect.height}px`;\n                    this.element.style.bottom = \"\";\n                }\n            }\n        }\n    }\n}", "/**\n *                    __  __\n *      /\\           |  \\/  |\n *     /  \\   ___ ___| \\  / | __ _ _ __   __ _  __ _  ___ _ __\n *    / /\\ \\ / __/ __| |\\/| |/ _` | '_ \\ / _` |/ _` |/ _ \\ '__|\n *   / ____ \\\\__ \\__ \\ |  | | (_| | | | | (_| | (_| |  __/ |\n *  /_/    \\_\\___/___/_|  |_|\\__,_|_| |_|\\__,_|\\__, |\\___|_|\n *                                              __/ |\n *                                             |___/\n * Advanced SubStation manager.\n * That's that ASS stands for.\n * Nothing suspicious here.\n * (.ass subtitle renderer)\n */\nimport { DialogueEvent } from \"./dialogue_event.js\";\nimport { keybinds } from \"../keybinds.js\";\n\nconst DEFAULT_RES_X = 384;\nconst DEFAULT_RES_Y = 288;\n\nfunction ASStimeToFloat(timeString)\n{\n    const [hours, minutes, seconds] = timeString.split(\":\");\n    const [sec, hundredths] = seconds.split(\".\");\n    return (parseInt(hours) * 3600) + (parseInt(minutes) * 60) + parseInt(sec) + (parseInt(hundredths) / 100);\n}\n\nexport class SubContent\n{\n    /**\n     * For example, \"Dialogue\"\n     * @type {string}\n     */\n    type;\n    /**\n     * for example, \"0,0:00:01.00,0:00:03.00,Default,,0,0,0,,Normal text.\"\n     * @type {string}\n     */\n    data;\n}\n\nexport class SubSection\n{\n    /**\n     * The section type, like [Events]\n     * @type {string}\n     */\n    type;\n    \n    /**\n     * The section contents\n     * @type {SubContent[]}\n     */\n    contents = [];\n    \n    /**\n     * @param type {string}\n     * @param contents {SubContent[]}\n     */\n    constructor(type, contents)\n    {\n        this.type = type;\n        this.contents = contents;\n    }\n    \n    /**\n     * @param type {string}\n     * @param fallback {string}\n     * @return {string}\n     */\n    getContent(type, fallback = \"\")\n    {\n        return this.contents.find(c => c.type === type)?.data || fallback;\n    }\n}\n\nexport class AssManager\n{\n    /**\n     * @type boolean\n     */\n    visible;\n    /**\n     * @type {SubSection[]}\n     */\n    subData = [];\n    \n    /**\n     * @type {number}\n     */\n    resolutionX = DEFAULT_RES_X;\n    /**\n     * @type {number}\n     */\n    resolutionY = DEFAULT_RES_Y;\n    /**\n     * @type {boolean}\n     */\n    kerning = true;\n    /**\n     * @type {Object<string, string>[]}\n     */\n    styles = [];\n    /**\n     * @type {DialogueEvent[]}\n     */\n    events = [];\n    \n    /**\n     * @type {{\n     *     name: string,\n     *     data: string,\n     *     dataDecoded: Uint8Array\n     * }[]}\n     */\n    fonts = [];\n    \n    /**\n     * Multiplier: 1 is normal speed\n     * @type {number}\n     */\n    timer = 1;\n    \n    /**\n     * Creates a new subtitle manager\n     * @param seq {CustomSeq}\n     * @param screen {HTMLDivElement}\n     * @param renderer {Renderer}\n     */\n    constructor(seq, screen, renderer)\n    {\n        this.seq = seq;\n        this.screen = screen;\n        this.init();\n        renderer.onRender = this.tick.bind(this);\n        \n        document.addEventListener(\"keydown\", e =>\n        {\n            if (e.key.toLowerCase() === keybinds.toggleSubtitles)\n            {\n                this.setVisibility(!this.visible);\n            }\n        });\n    }\n    \n    tick()\n    {\n        if (!this.visible)\n        {\n            for (const event of this.events)\n            {\n                event.hide();\n            }\n            return;\n        }\n        const time = this.seq.currentTime * this.timer;\n        \n        // go through all texts and render\n        // first hide\n        for (const event of this.events)\n        {\n            if (event.startSeconds > time || event.endSeconds <= time)\n            {\n                event.hide();\n            }\n        }\n        // force reflow\n        void this.screen.offsetHeight;\n        // then show\n        for (const event of this.events)\n        {\n            if (event.startSeconds <= time && event.endSeconds > time)\n            {\n                event.show(this.resolutionX, this.resolutionY, this.screen, time, this.firstEmbeddedFontName);\n            }\n        }\n    }\n    \n    init()\n    {\n        this.visible = false;\n        this.subData = [];\n        this.resolutionX = DEFAULT_RES_X;\n        this.resolutionY = DEFAULT_RES_Y;\n        this.kerning = true;\n        this.styles = [];\n        this.events = [];\n        this.fonts = [];\n        this.screen.innerHTML = \"\";\n    }\n    \n    /**\n     * @param visible {boolean}\n     */\n    setVisibility(visible)\n    {\n        this.visible = visible;\n        this.tick();\n        // for good measure, re-render in 10 ms\n        setTimeout(() => this.tick(), 10);\n    }\n    \n    /**\n     * @param type {string}\n     * @param errorOut {boolean}\n     * @private\n     * @returns {SubSection|undefined}\n     */\n    _getSection(type, errorOut = false)\n    {\n        const t = type.toLowerCase();\n        const result = this.subData.find(s => s.type.toLowerCase() === t);\n        if (!result && errorOut)\n        {\n            throw new Error(`Section ${type} not found!`);\n        }\n        return result;\n    }\n    \n    /**\n     * Loads Advanced SubStation (.ass) subtitles\n     * @param assString {string}\n     */\n    loadASSSubtitles(assString)\n    {\n        // reset all data\n        this.init();\n        // time to parse!\n        const lines = assString.replaceAll(\"\\r\\n\", \"\\n\").split(\"\\n\");\n        let isSection = false;\n        let sectionName = \"\";\n        let currentFontName = \"\";\n        /**\n         * @type {SubContent[]}\n         */\n        let sectionContents = [];\n        for (const line of lines)\n        {\n            if (line.startsWith(\"[\") && !isSection)\n            {\n                sectionName = line;\n                isSection = true;\n            }\n            else if (line.length === 0 && isSection)\n            {\n                isSection = false;\n                this.subData.push(new SubSection(sectionName, sectionContents));\n                sectionContents = [];\n            }\n            // for fonts, load up the section as one big name\n            else if (sectionName === \"[Fonts]\")\n            {\n                \n                if (!line.startsWith(\"fontname: \"))\n                {\n                    this.fonts.find(f => f.name === currentFontName).data += line;\n                }\n                else\n                {\n                    const name = line.split(/: (.*)/s)[1];\n                    this.fonts.push({ name: name, data: \"\", dataDecoded: undefined });\n                    currentFontName = name;\n                }\n            }\n            else if (!line.startsWith(\"!\") && !line.startsWith(\";\"))\n            {\n                // split only the first colon\n                const data = line.split(/: (.*)/s);\n                const content = new SubContent();\n                content.type = data[0];\n                content.data = data[1];\n                sectionContents.push(content);\n            }\n        }\n        if (isSection)\n        {\n            this.subData.push(new SubSection(sectionName, sectionContents));\n        }\n        \n        // find the resolution\n        const scriptInfo = this._getSection(\"[Script Info]\", true);\n        \n        this.resolutionX = parseInt(scriptInfo.getContent(\"PlayResX\", DEFAULT_RES_X.toString()));\n        this.resolutionY = parseInt(scriptInfo.getContent(\"PlayResY\", DEFAULT_RES_Y.toString()));\n        this.kerning = scriptInfo.getContent(\"Kerning\", \"yes\") === \"yes\";\n        this.timer = parseFloat(scriptInfo.getContent(\"Timer\", \"100\")) / 100;\n        \n        // load styles\n        const styles = this._getSection(\"[V4+ Styles]\", true);\n        const styleFormats = styles.getContent(\"Format\", \"\").split(\", \");\n        for (const style of styles.contents)\n        {\n            if (style.type !== \"Style\")\n            {\n                continue;\n            }\n            const data = style.data.split(\",\");\n            if (data.length !== styleFormats.length)\n            {\n                throw new Error(`Format and style data counts do not match. Expected ${styleFormats.length} got ${data.length}`);\n            }\n            const newStyle = {};\n            for (let i = 0; i < data.length; i++)\n            {\n                newStyle[styleFormats[i]] = data[i];\n            }\n            this.styles.push(newStyle);\n        }\n        \n        // load events\n        const events = this._getSection(\"[Events]\", true);\n        const eventFormats = events.getContent(\"Format\", \"\").split(\", \");\n        for (const event of events.contents)\n        {\n            if (event.type !== \"Dialogue\")\n            {\n                continue;\n            }\n            /**\n             * @type {string[]}\n             */\n            const data = [];\n            // split event.data with comma eventFormats.length times and keep the rest as an entire string (note, comma without space)\n            let rest = event.data;\n            for (let i = 0; i < eventFormats.length - 1; i++)\n            {\n                const index = rest.indexOf(\",\");\n                data.push(rest.substring(0, index));\n                rest = rest.substring(index + 1);\n            }\n            data.push(rest);\n            if (data.length !== eventFormats.length)\n            {\n                throw new Error(`Format and dialogue data counts do not match. Expected ${eventFormats.length} got ${data.length}`);\n            }\n            const eventData = {};\n            for (let i = 0; i < data.length; i++)\n            {\n                eventData[eventFormats[i]] = data[i];\n            }\n            const newEvent = new DialogueEvent(\n                eventData[\"Text\"] || \"\",\n                parseInt(eventData[\"Layer\"]) || 0,\n                eventData[\"Start\"] ? ASStimeToFloat(eventData[\"Start\"]) : 0,\n                eventData[\"End\"] ? ASStimeToFloat(eventData[\"End\"]) : 0,\n                eventData[\"Style\"] || \"\",\n                parseInt(eventData[\"MarginL\"]) || 0,\n                parseInt(eventData[\"MarginR\"]) || 0,\n                parseInt(eventData[\"MarginV\"]) || 0,\n                this.styles\n            );\n            \n            this.events.push(newEvent);\n        }\n        \n        /*\n        Decode fonts:\n        ASS/SSA uses a custom encoding to turn arbitrary binary data into uppercase letters and non-alphabetic,\n        non-space symbols.\n        Binary input data is processed in chunks of 3 bytes.\n        Those bytes are split into four 6-bit chunks such that most-significant bits are processed first.\n        To each chunk value 33 is added, and then they are written out as UTF-8/ASCII text.\n        After writing exactly 80 bytes, a single linebreak must be inserted.\n        Only the last line may be shorter than 80 characters if the end of the source file is reached.\n        If at the end of the file only fewer than 3 bytes remain,\n        pad the data beyond the file end with zeros before splitting into 6-bit chunks,\n        but only write out chunks containing actual file data.\n         */\n        for (const font of this.fonts)\n        {\n            const dataString = font.data;\n            const decodedData = [];\n            for (let i = 0; i < dataString.length; i += 4)\n            {\n                // get chunk\n                const chunk = dataString.slice(i, i + 4);\n                // decode chunk\n                const bytes = chunk.split(\"\").map(c => c.charCodeAt(0) - 33);\n                // decode bytes\n                const byte1 = (bytes[0] << 2) | (bytes[1] >> 4);\n                const byte2 = ((bytes[1] & 15) << 4) | (bytes[2] >> 2);\n                const byte3 = ((bytes[2] & 3) << 6) | bytes[3];\n                if (i + 1 < dataString.length)\n                {\n                    decodedData.push(byte1);\n                }\n                if (i + 2 < dataString.length)\n                {\n                    decodedData.push(byte2);\n                }\n                if (i + 3 < dataString.length)\n                {\n                    decodedData.push(byte3);\n                }\n            }\n            font.dataDecoded = new Uint8Array(decodedData);\n            // add the font with CSS\n            const fontBlob = new Blob([font.dataDecoded]);\n            const fontUrl = URL.createObjectURL(fontBlob);\n            const styleElement = document.createElement(\"style\");\n            styleElement.innerHTML = `@font-face {\n                font-family: \"${font.name}\";\n                src: url(\"${fontUrl}\");\n            }`;\n            document.head.appendChild(styleElement);\n        }\n        \n        this.firstEmbeddedFontName = this.fonts[0]?.name || \"sans-serif\";\n        \n        console.info(\n            \"Subtitles:\",\n            this.styles, this.events, this.fonts\n        );\n        // kerning\n        this.screen.style.fontKerning = this.kerning ? \"normal\" : \"none\";\n    }\n    \n}", "import { supportedEncodings } from \"../utils/encodings.js\";\nimport { messageTypes } from \"spessasynth_core\";\nimport { AssManager } from \"../utils/ass_manager/ass_manager.js\";\n\n/**\n * @this {SequencerUI}\n */\nexport function createLyrics()\n{\n    /**\n     * @type {{\n     *     mainButton: HTMLDivElement,\n     *     mainDiv: HTMLDivElement,\n     *     titleWrapper: HTMLDivElement,\n     *     title: HTMLHeadingElement,\n     *     text: {\n     *         main: HTMLParagraphElement\n     *         other: HTMLDivElement,\n     *         separateLyrics: HTMLSpanElement[]\n     *     },\n     *     selector: HTMLSelectElement\n     * }}\n     */\n    this.lyricsElement = {};\n    // main div\n    const mainLyricsDiv = document.createElement(\"div\");\n    mainLyricsDiv.classList.add(\"lyrics\");\n    \n    // title wrapper\n    const titleWrapper = document.createElement(\"div\");\n    titleWrapper.classList.add(\"lyrics_title_wrapper\");\n    mainLyricsDiv.append(titleWrapper);\n    this.lyricsElement.titleWrapper = titleWrapper;\n    \n    // title\n    const lyricsTitle = document.createElement(\"h2\");\n    this.locale.bindObjectProperty(lyricsTitle, \"textContent\", \"locale.sequencerController.lyrics.title\");\n    lyricsTitle.classList.add(\"lyrics_title\");\n    titleWrapper.appendChild(lyricsTitle);\n    this.lyricsElement.title = lyricsTitle;\n    \n    // encoding selector\n    const encodingSelector = document.createElement(\"select\");\n    supportedEncodings.forEach(encoding =>\n    {\n        const option = document.createElement(\"option\");\n        option.innerText = encoding;\n        option.value = encoding;\n        encodingSelector.appendChild(option);\n    });\n    encodingSelector.value = this.encoding;\n    encodingSelector.onchange = () => this.changeEncoding(encodingSelector.value);\n    encodingSelector.classList.add(\"lyrics_selector\");\n    this.encodingSelector = encodingSelector;\n    titleWrapper.appendChild(encodingSelector);\n    \n    // the actual text\n    const text = document.createElement(\"p\");\n    text.classList.add(\"lyrics_text\");\n    mainLyricsDiv.appendChild(text);\n    \n    // display for other texts\n    const otherTextWrapper = document.createElement(\"details\");\n    const sum = document.createElement(\"summary\");\n    this.locale.bindObjectProperty(sum, \"textContent\", \"locale.sequencerController.lyrics.otherText.title\");\n    otherTextWrapper.appendChild(sum);\n    const otherText = document.createElement(\"div\");\n    otherText.innerText = \"\";\n    otherTextWrapper.appendChild(otherText);\n    mainLyricsDiv.appendChild(otherTextWrapper);\n    \n    // subtitle upload\n    this.subtitleManager = new AssManager(\n        this.seq,\n        document.getElementsByClassName(\"ass_renderer_field\")[0],\n        this.renderer\n    );\n    const input = document.createElement(\"input\");\n    input.type = \"file\";\n    input.accept = \".ass\";\n    input.id = \"subtitle_upload\";\n    input.classList.add(\"hidden\");\n    mainLyricsDiv.appendChild(input);\n    input.onchange = async () =>\n    {\n        if (input.files[0] === undefined)\n        {\n            return;\n        }\n        const file = input.files[0];\n        this.subtitleManager.loadASSSubtitles(await file.text());\n        this.subtitleManager.setVisibility(true);\n        this.toggleLyrics();\n    };\n    \n    const subtitleUpload = document.createElement(\"label\");\n    subtitleUpload.htmlFor = \"subtitle_upload\";\n    subtitleUpload.classList.add(\"general_button\");\n    this.locale.bindObjectProperty(subtitleUpload, \"textContent\", \"locale.sequencerController.lyrics.subtitles.title\");\n    this.locale.bindObjectProperty(subtitleUpload, \"title\", \"locale.sequencerController.lyrics.subtitles.description\");\n    mainLyricsDiv.appendChild(subtitleUpload);\n    \n    \n    this.lyricsElement.text = {\n        main: text,\n        other: otherText,\n        subtitleButton: subtitleUpload,\n        separateLyrics: []\n    };\n    this.lyricsElement.mainDiv = mainLyricsDiv;\n    this.lyricsElement.selector = encodingSelector;\n    this.controls.appendChild(mainLyricsDiv);\n    this.requiresTextUpdate = true;\n}\n\n/**\n * @this {SequencerUI}\n * @param {number} index\n */\nexport function setLyricsText(index)\n{\n    // if there are no lyrics, there's one element:\n    // [\"No lyrics available\"]\n    if (this.currentLyricsString.length < 1 || index < 0 || index > this.currentLyricsString.length)\n    {\n        return;\n    }\n    this.lyricsIndex = index;\n    for (let i = 0; i <= index; i++)\n    {\n        this.lyricsElement.text.separateLyrics[i].classList.remove(\"lyrics_text_gray\");\n        this.lyricsElement.text.separateLyrics[i].classList.add(\"lyrics_text_highlight\");\n    }\n    if (index < this.currentLyricsString.length)\n    {\n        for (let i = index + 1; i < this.lyricsElement.text.separateLyrics.length; i++)\n        {\n            this.lyricsElement.text.separateLyrics[i].classList.remove(\"lyrics_text_highlight\");\n            this.lyricsElement.text.separateLyrics[i].classList.add(\"lyrics_text_gray\");\n        }\n        // scroll to the last element\n        this.lyricsElement.text.separateLyrics[index].scrollIntoView({\n            behavior: \"smooth\",\n            block: \"center\",\n            inline: \"center\"\n        });\n    }\n}\n\n/**\n * @this {SequencerUI}\n */\nexport function updateOtherTextEvents()\n{\n    let text = \"\";\n    for (const raw of this.rawOtherTextEvents)\n    {\n        text += `<span><pre>${Object.keys(messageTypes)\n            .find(k => messageTypes[k] === raw.type)\n            .replace(\n                /([a-z])([A-Z])/g,\n                \"$1 $2\"\n            )}:</pre> <i>${this.decodeTextFix(raw.data.buffer)}</i></span><br>`;\n    }\n    this.lyricsElement.text.other.innerHTML = text;\n}", "/**\n * @param element {HTMLInputElement}\n * @returns {HTMLSpanElement}\n */\nexport function getSpan(element)\n{\n    return element.parentElement.nextElementSibling;\n}\n\n/**\n * @param div {HTMLDivElement}\n */\nexport function handleSliders(div)\n{\n    /**\n     * @type {HTMLCollectionOf<Element>}\n     */\n    const inputs = div.getElementsByTagName(\"spessarange\");\n    for (const input of inputs)\n    {\n        input.parentElement.insertBefore(createSlider(input, true), input);\n    }\n    while (inputs.length > 0)\n    {\n        inputs[0].parentNode.removeChild(inputs[0]);\n    }\n}\n\n/**\n * @param input {HTMLInputElement}\n * @param showSpan {boolean}\n * @returns {HTMLDivElement}\n */\nexport function createSlider(input, showSpan = true)\n{\n    // main wrapper wraps the visual wrapper and span\n    const mainWrapper = document.createElement(\"div\");\n    mainWrapper.classList.add(\"settings_slider_wrapper\");\n    // copy over values to the actual input\n    const min = input.getAttribute(\"min\");\n    const max = input.getAttribute(\"max\");\n    const current = input.value;\n    const units = input.getAttribute(\"units\");\n    const id = input.getAttribute(\"input_id\");\n    const htmlInput = document.createElement(\"input\");\n    htmlInput.classList.add(\"settings_slider\");\n    htmlInput.type = \"range\";\n    htmlInput.id = id;\n    htmlInput.min = min;\n    htmlInput.max = max;\n    htmlInput.value = current;\n    \n    \n    let span;\n    if (showSpan)\n    {\n        span = document.createElement(\"span\");\n        span.textContent = current + units;\n    }\n    \n    // visual wrapper wraps the input, thumb and progress\n    const visualWrapper = document.createElement(\"div\");\n    visualWrapper.classList.add(\"settings_visual_wrapper\");\n    \n    const progressBar = document.createElement(\"div\");\n    progressBar.classList.add(\"settings_slider_progress\");\n    visualWrapper.appendChild(progressBar);\n    \n    const thumb = document.createElement(\"div\");\n    thumb.classList.add(\"settings_slider_thumb\");\n    visualWrapper.appendChild(thumb);\n    visualWrapper.appendChild(htmlInput);\n    \n    htmlInput.addEventListener(\"input\", () =>\n    {\n        // calculate the difference between values, if larger than 5%, enable transition\n        const val = parseInt(visualWrapper.style.getPropertyValue(\"--visual-width\").replace(\"%\", \"\"));\n        const newVal = Math.round((htmlInput.value - htmlInput.min) / (htmlInput.max - htmlInput.min) * 100);\n        if (Math.abs((val - newVal) / 100) > 0.05)\n        {\n            visualWrapper.classList.add(\"settings_slider_transition\");\n        }\n        else\n        {\n            visualWrapper.classList.remove(\"settings_slider_transition\");\n        }\n        // apply the width\n        visualWrapper.style.setProperty(\"--visual-width\", `${newVal}%`);\n    });\n    visualWrapper.style.setProperty(\n        \"--visual-width\",\n        `${(htmlInput.value - htmlInput.min) / (htmlInput.max - htmlInput.min) * 100}%`\n    );\n    mainWrapper.appendChild(visualWrapper);\n    if (showSpan)\n    {\n        mainWrapper.appendChild(span);\n    }\n    return mainWrapper;\n}", "import { formatTime } from \"../utils/other.js\";\nimport { supportedEncodings } from \"../utils/encodings.js\";\nimport {\n    getBackwardSvg,\n    getForwardSvg,\n    getLoopSvg,\n    getPauseSvg,\n    getPlaySvg,\n    getShuffleSvg,\n    getSpeedSvg,\n    getTextSvg\n} from \"../utils/icons.js\";\nimport { messageTypes, RMIDINFOChunks } from \"spessasynth_core\";\nimport { getSeqUIButton } from \"./sequi_button.js\";\nimport { keybinds } from \"../utils/keybinds.js\";\nimport { createNavigatorHandler, updateTitleAndMediaStatus } from \"./title_and_media_status.js\";\nimport { createLyrics, setLyricsText, updateOtherTextEvents } from \"./lyrics.js\";\nimport { createSlider } from \"../settings_ui/sliders.js\";\n\n/**\n * sequencer_ui.js\n * purpose: manages the GUI for the sequencer class, adding buttons for pause/play, lyrics, next, previous etc.\n */\n\nconst ICON_SIZE = 32;\n\nconst ICON_COLOR = \"#ccc\";\nconst ICON_DISABLED_COLOR = \"#555\";\n\nconst ICON_COLOR_L = \"#333\";\nconst ICON_DISABLED_COLOR_L = \"#ddd\";\n\nconst DEFAULT_ENCODING = \"Shift_JIS\";\n\n// zero width space\nconst ZWSP = \"\\u200b\";\n\nclass SequencerUI\n{\n    \n    /**\n     * @type {WakeLockSentinel}\n     */\n    wakeLock;\n    \n    /**\n     * Creates a new User Interface for the given MidiSequencer\n     * @param element {HTMLElement} the element to create sequi in\n     * @param locale {LocaleManager}\n     * @param musicMode {MusicModeUI}\n     * @param renderer {Renderer}\n     */\n    constructor(element, locale, musicMode, renderer)\n    {\n        this.iconColor = ICON_COLOR;\n        this.iconDisabledColor = ICON_DISABLED_COLOR;\n        this.controls = element;\n        this.encoding = DEFAULT_ENCODING;\n        this.decoder = new TextDecoder(this.encoding);\n        this.infoDecoder = new TextDecoder(this.encoding);\n        this.hasInfoDecoding = false;\n        /**\n         * the currently displayed (highlighted) lyrics event index.\n         * -1 means no lyrics displayed (an event before the first lyric is \"highlighted\")\n         * @type {number}\n         */\n        this.lyricsIndex = -1;\n        this.requiresTextUpdate = false;\n        this.lastTimeUpdate = 0;\n        /**\n         * @type {{type: messageTypes, data: Uint8Array}[]}\n         */\n        this.rawOtherTextEvents = [];\n        this.mode = \"dark\";\n        this.locale = locale;\n        this.currentSongTitle = \"\";\n        /**\n         * @type {Uint8Array[]}\n         */\n        this.currentLyrics = [];\n        /**\n         * Current lyrics decoded as strings\n         * @type {string[]}\n         */\n        this.currentLyricsString = [];\n        this.musicModeUI = musicMode;\n        this.renderer = renderer;\n        \n        this.mainTitleMessageDisplay = document.getElementById(\"title\");\n        this.synthDisplayMode = {\n            enabled: false,\n            currentEncodedText: new Uint8Array(0)\n        };\n        \n        // set up synth display event\n        let displayTimeoutId = null;\n        renderer.synth.eventHandler.addEvent(\"synthdisplay\", \"sequi-synth-display\", data =>\n        {\n            if (data.displayType === 0 || data.displayType === 1)\n            {\n                // clear styles and apply monospace\n                this.mainTitleMessageDisplay.classList.add(\"sysex_display\");\n                this.mainTitleMessageDisplay.classList.remove(\"xg_sysex_display\");\n                let textData = data.displayData;\n                // remove \"Display Letters\" byte before decoding for XG display\n                if (data.displayType === 1)\n                {\n                    textData = textData.slice(1);\n                }\n                // decode the text\n                let text = this.decodeTextFix(textData.buffer);\n                \n                // XG is type 1, apply some fixes to it.\n                // XG Displays have a special behavior, we try to mimic it here\n                // reference video:\n                // https://www.youtube.com/watch?v=_mR7DV1E4KE\n                // first, extract the \"Display Letters\" byte\n                if (data.displayType === 1)\n                {\n                    const displayLetters = data.displayData[0];\n                    // XG Display Letters:\n                    // the screen is monospace,\n                    // two rows, 16 characters each (max)\n                    // since this is XG data, apply the XG display style\n                    this.mainTitleMessageDisplay.classList.add(\"xg_sysex_display\");\n                    \n                    // 0x0c where c are the number of spaces prepended\n                    const spaces = displayLetters & 0x0F;\n                    for (let i = 0; i < spaces; i++)\n                    {\n                        text = \" \" + text;\n                    }\n                    \n                    // at 16 characters, add a newline\n                    if (text.length >= 16)\n                    {\n                        text = text.slice(0, 16) + \"\\n\" + text.slice(16);\n                    }\n                    \n                    // if type is 0x1x, add a newline\n                    if ((displayLetters & 0x10) > 1)\n                    {\n                        text = \"\\n\" + text;\n                    }\n                    \n                }\n                \n                \n                if (text.trim().length === 0)\n                {\n                    // set the text to invisible character to keep the height\n                    this.mainTitleMessageDisplay.innerText = \"\u200E \";\n                }\n                else\n                {\n                    // set the display to an invisible character to keep the height\n                    this.mainTitleMessageDisplay.innerText = text;\n                }\n                \n                this.synthDisplayMode.enabled = true;\n                this.synthDisplayMode.currentEncodedText = textData;\n                if (displayTimeoutId !== null)\n                {\n                    clearTimeout(displayTimeoutId);\n                }\n                displayTimeoutId = setTimeout(() =>\n                {\n                    this.synthDisplayMode.enabled = false;\n                    this.restoreDisplay();\n                }, 5000);\n                \n            }\n        });\n    }\n    \n    toggleDarkMode()\n    {\n        if (this.mode === \"dark\")\n        {\n            this.mode = \"light\";\n            this.iconColor = ICON_COLOR_L;\n            this.iconDisabledColor = ICON_DISABLED_COLOR_L;\n        }\n        else\n        {\n            this.mode = \"dark\";\n            this.iconColor = ICON_COLOR;\n            this.iconDisabledColor = ICON_DISABLED_COLOR;\n        }\n        if (!this.seq)\n        {\n            this.requiresThemeUpdate = true;\n            return;\n        }\n        this.progressBar.classList.toggle(\"note_progress_light\");\n        this.progressBarBackground.classList.toggle(\"note_progress_background_light\");\n        this.lyricsElement.mainDiv.classList.toggle(\"lyrics_light\");\n        this.lyricsElement.titleWrapper.classList.toggle(\"lyrics_light\");\n        this.lyricsElement.selector.classList.toggle(\"lyrics_light\");\n    }\n    \n    setWakeLock()\n    {\n        try\n        {\n            navigator.wakeLock.request(\"screen\").then(r =>\n            {\n                this.wakeLock = r;\n            });\n        }\n        catch (e)\n        {\n            console.warn(`Could not get wakelock:`, e);\n        }\n    }\n    \n    releaseWakeLock()\n    {\n        if (this.wakeLock)\n        {\n            this.wakeLock.release().then(() =>\n            {\n                this.wakeLock = undefined;\n            });\n        }\n    }\n    \n    seqPlay(sendPlay = true)\n    {\n        if (sendPlay)\n        {\n            this.seq.play();\n        }\n        this.setWakeLock();\n        this.playPause.innerHTML = getPauseSvg(ICON_SIZE);\n        this.createNavigatorHandler();\n        this.updateTitleAndMediaStatus();\n        if (!navigator.mediaSession)\n        {\n            return;\n        }\n        navigator.mediaSession.playbackState = \"playing\";\n    }\n    \n    seqPause(sendPause = true)\n    {\n        if (sendPause)\n        {\n            this.seq.pause();\n        }\n        this.releaseWakeLock();\n        this.playPause.innerHTML = getPlaySvg(ICON_SIZE);\n        this.createNavigatorHandler();\n        if (!navigator.mediaSession)\n        {\n            return;\n        }\n        navigator.mediaSession.playbackState = \"paused\";\n    }\n    \n    switchToNextSong()\n    {\n        this.seq.nextSong();\n        this.createNavigatorHandler();\n        this.updateTitleAndMediaStatus();\n    }\n    \n    switchToPreviousSong()\n    {\n        this.seq.previousSong();\n        this.createNavigatorHandler();\n        this.updateTitleAndMediaStatus();\n    }\n    \n    /**\n     * @param text {ArrayBuffer}\n     * @returns {string}\n     */\n    decodeTextFix(text)\n    {\n        let encodingIndex = 0;\n        while (true)\n        {\n            try\n            {\n                return this.decoder.decode(text);\n            }\n            catch (e)\n            {\n                encodingIndex++;\n                this.changeEncoding(supportedEncodings[encodingIndex]);\n                this.encodingSelector.value = supportedEncodings[encodingIndex];\n            }\n        }\n    }\n    \n    /**\n     *\n     * @param sequencer {CustomSeq} the sequencer to be used\n     */\n    connectSequencer(sequencer)\n    {\n        /**\n         * @type {CustomSeq}\n         */\n        this.seq = sequencer;\n        this.createControls();\n        this.setSliderInterval();\n        this.createNavigatorHandler();\n        this.updateTitleAndMediaStatus();\n        \n        this.seq.onTextEvent = (data, type, lyricsIndex) =>\n        {\n            switch (type)\n            {\n                default:\n                    return;\n                \n                case messageTypes.text:\n                case messageTypes.copyright:\n                case messageTypes.cuePoint:\n                case messageTypes.trackName:\n                case messageTypes.instrumentName:\n                case messageTypes.programName:\n                case messageTypes.marker:\n                    this.rawOtherTextEvents.push({ type: type, data: data });\n                    this.requiresTextUpdate = true;\n                    return;\n                \n                case messageTypes.lyric:\n                    this.setLyricsText(lyricsIndex);\n                    break;\n            }\n        };\n        \n        this.seq.addOnTimeChangeEvent(() =>\n        {\n            this.lyricsIndex = -1;\n            this.seqPlay(false);\n        }, \"sequi-time-change\");\n        \n        this.seq.addOnSongChangeEvent(data =>\n        {\n            this.synthDisplayMode.enabled = false;\n            this.lyricsIndex = -1;\n            this.createNavigatorHandler();\n            this.updateTitleAndMediaStatus();\n            this.seqPlay(false);\n            // disable loop if more than 1 song\n            if (this.seq.songsAmount > 1)\n            {\n                this.seq.loop = false;\n                this.loopButton.firstElementChild.setAttribute(\n                    \"fill\",\n                    this.iconDisabledColor\n                );\n            }\n            this.restoreDisplay();\n            \n            // use encoding suggested by the rmidi if available\n            this.hasInfoDecoding = this.seq.midiData.RMIDInfo?.[RMIDINFOChunks.encoding] !== undefined;\n            if (data.isEmbedded)\n            {\n                /**\n                 * @param type {string}\n                 * @param def {string}\n                 * @param decoder {TextDecoder}\n                 * @param prepend {string}\n                 * @return {string}\n                 */\n                const verifyDecode = (type, def, decoder, prepend = \"\") =>\n                {\n                    return this.seq.midiData.RMIDInfo?.[type] === undefined ? def : prepend + decoder.decode(\n                        this.seq.midiData.RMIDInfo?.[type]?.buffer).replace(/\\0$/, \"\");\n                };\n                const dec = new TextDecoder();\n                const midiEncoding = verifyDecode(\n                    RMIDINFOChunks.midiEncoding,\n                    this.encoding,\n                    dec\n                );\n                const infoEncoding = verifyDecode(RMIDINFOChunks.encoding, \"utf-8\", dec);\n                this.infoDecoder = new TextDecoder(infoEncoding);\n                this.changeEncoding(midiEncoding);\n            }\n        }, \"sequi-song-change\");\n        \n        if (this.requiresThemeUpdate)\n        {\n            if (this.mode === \"light\")\n            {\n                // change to dark and then switch\n                this.mode = \"dark\";\n                this.toggleDarkMode();\n            }\n            // otherwise, we're already dark\n        }\n    }\n    \n    /**\n     * Restores the display to the current song title and removes the SysEx display styles\n     */\n    restoreDisplay()\n    {\n        let textToShow = this.currentSongTitle;\n        if (!this.seq)\n        {\n            // set to default title\n            textToShow = this.locale.getLocaleString(\"locale.titleMessage\");\n        }\n        this.mainTitleMessageDisplay.innerText = textToShow;\n        this.mainTitleMessageDisplay.classList.remove(\"sysex_display\");\n        this.mainTitleMessageDisplay.classList.remove(\"xg_sysex_display\");\n    }\n    \n    changeEncoding(encoding)\n    {\n        this.encoding = encoding;\n        this.decoder = new TextDecoder(encoding);\n        if (!this.hasInfoDecoding)\n        {\n            this.infoDecoder = new TextDecoder(encoding);\n        }\n        this.updateOtherTextEvents();\n        this.decodeLyricData();\n        // update all spans with the new encoding\n        this.lyricsElement.text.separateLyrics.forEach((span, index) =>\n        {\n            if (this.currentLyricsString[index] === undefined)\n            {\n                return;\n            }\n            span.innerText = this.currentLyricsString[index];\n        });\n        this.lyricsElement.selector.value = encoding;\n        this.updateTitleAndMediaStatus(false);\n        this.setLyricsText(this.lyricsIndex);\n    }\n    \n    createControls()\n    {\n        // time\n        this.progressTime = document.createElement(\"p\");\n        this.progressTime.id = \"note_time\";\n        // it'll always be on top\n        this.progressTime.onclick = event =>\n        {\n            event.preventDefault();\n            const barPosition = progressBarBg.getBoundingClientRect();\n            const x = event.clientX - barPosition.left;\n            const width = barPosition.width;\n            \n            this.seq.currentTime = (x / width) * this.seq.duration;\n            playPauseButton.innerHTML = getPauseSvg(ICON_SIZE);\n        };\n        \n        this.createLyrics();\n        \n        \n        // background bar\n        const progressBarBg = document.createElement(\"div\");\n        progressBarBg.id = \"note_progress_background\";\n        this.progressBarBackground = progressBarBg;\n        \n        \n        // foreground bar\n        this.progressBar = document.createElement(\"div\");\n        this.progressBar.id = \"note_progress\";\n        this.progressBar.min = (0).toString();\n        this.progressBar.max = this.seq.duration.toString();\n        \n        \n        // control buttons\n        const controlsDiv = document.createElement(\"div\");\n        controlsDiv.classList.add(\"control_buttons_wrapper\");\n        \n        \n        // play pause\n        const playPauseButton = getSeqUIButton(\n            \"Play/Pause\",\n            getPauseSvg(ICON_SIZE)\n        );\n        this.playPause = playPauseButton;\n        this.locale.bindObjectProperty(playPauseButton, \"title\", \"locale.sequencerController.playPause\");\n        const togglePlayback = () =>\n        {\n            if (this.seq.paused)\n            {\n                this.seqPlay();\n            }\n            else\n            {\n                this.seqPause();\n            }\n        };\n        playPauseButton.onclick = togglePlayback;\n        \n        \n        // previous song button\n        const previousSongButton = getSeqUIButton(\n            \"Previous song\",\n            getBackwardSvg(ICON_SIZE)\n        );\n        this.locale.bindObjectProperty(previousSongButton, \"title\", \"locale.sequencerController.previousSong\");\n        previousSongButton.onclick = () => this.switchToPreviousSong();\n        \n        // next song button\n        const nextSongButton = getSeqUIButton(\n            \"Next song\",\n            getForwardSvg(ICON_SIZE)\n        );\n        this.locale.bindObjectProperty(nextSongButton, \"title\", \"locale.sequencerController.nextSong\");\n        nextSongButton.onclick = () => this.switchToNextSong();\n        \n        // loop button\n        const loopButton = getSeqUIButton(\n            \"Loop this\",\n            getLoopSvg(ICON_SIZE)\n        );\n        this.locale.bindObjectProperty(loopButton, \"title\", \"locale.sequencerController.loopThis\");\n        const toggleLoop = () =>\n        {\n            if (this.seq.loop)\n            {\n                this.seq.loop = false;\n            }\n            else\n            {\n                this.seq.loop = true;\n                if (this.seq.currentTime >= this.seq.duration)\n                {\n                    this.seq.currentTime = 0;\n                }\n            }\n            loopButton.firstElementChild.setAttribute(\n                \"fill\",\n                (this.seq.loop ? this.iconColor : this.iconDisabledColor)\n            );\n        };\n        loopButton.onclick = toggleLoop;\n        this.loopButton = loopButton;\n        \n        // shuffle button\n        const shuffleButton = getSeqUIButton(\n            \"Shuffle songs\",\n            getShuffleSvg(ICON_SIZE)\n        );\n        this.locale.bindObjectProperty(shuffleButton, \"title\", \"locale.sequencerController.shuffle\");\n        shuffleButton.onclick = () =>\n        {\n            this.seq.shuffleSongs = !this.seq.shuffleSongs;\n            shuffleButton.firstElementChild.setAttribute(\n                \"fill\",\n                (this.seq.shuffleSongs ? this.iconColor : this.iconDisabledColor)\n            );\n            shuffleButton.firstElementChild.setAttribute(\n                \"stroke\",\n                (this.seq.shuffleSongs ? this.iconColor : this.iconDisabledColor)\n            );\n        };\n        shuffleButton.firstElementChild.setAttribute(\"fill\", this.iconDisabledColor);\n        shuffleButton.firstElementChild.setAttribute(\"stroke\", this.iconDisabledColor);\n        \n        // playback rate button\n        const playbackRateButton = getSeqUIButton(\n            \"Playback speed\",\n            getSpeedSvg(ICON_SIZE)\n        );\n        this.locale.bindObjectProperty(playbackRateButton, \"title\", \"locale.sequencerController.playbackRate\");\n        \n        const input = document.createElement(\"input\");\n        input.type = \"number\";\n        input.id = \"playback_rate_slider\";\n        const minSlider = 1;\n        const maxSlider = 60;\n        input.min = minSlider.toString();\n        input.max = maxSlider.toString();\n        input.value = \"20\"; // note about these: 100% and below are incremented by five,\n        // while above 100 is incremented by 10\n        const playbackRateSlider = createSlider(input, true);\n        const playbackRateSliderWrapper = document.createElement(\"div\");\n        playbackRateSliderWrapper.classList.add(\"playback_rate_slider_wrapper\");\n        playbackRateSliderWrapper.appendChild(playbackRateSlider);\n        /**\n         * @type {HTMLInputElement}\n         */\n        const actualInput = playbackRateSlider.firstElementChild.lastElementChild;\n        /**\n         * @type {HTMLSpanElement}\n         */\n        const displaySpan = playbackRateSlider.lastElementChild;\n        displaySpan.contentEditable = \"true\";\n        displaySpan.textContent = `${this.seq.playbackRate * 100}%`;\n        actualInput.oninput = () =>\n        {\n            const value = parseInt(actualInput.value);\n            const playbackPercent = value > 20 ? (value - 20) * 10 + 100 : value * 5;\n            this.seq.playbackRate = playbackPercent / 100;\n            displaySpan.textContent = `${Math.round(playbackPercent)}%`;\n        };\n        displaySpan.onkeydown = e =>\n        {\n            e.stopPropagation();\n            e.stopImmediatePropagation();\n        };\n        displaySpan.oninput = e =>\n        {\n            e.stopImmediatePropagation();\n            const num = parseInt(displaySpan.textContent);\n            \n            let percent = isNaN(num) ? 100 : num;\n            if (percent < 1)\n            {\n                percent = 100;\n            }\n            this.seq.playbackRate = percent / 100;\n            \n            // get the value that the input would have\n            const inputValue = Math.max(minSlider, Math.min(\n                maxSlider,\n                percent > 100 ? (percent - 100) / 10 + 20 : percent / 5\n            ));\n            actualInput.value = inputValue.toString();\n            \n            playbackRateSlider.querySelector(\".settings_visual_wrapper\").style.setProperty(\n                \"--visual-width\",\n                `${(inputValue - minSlider) / (maxSlider - minSlider) * 100}%`\n            );\n        };\n        displaySpan.onblur = () =>\n        {\n            displaySpan.textContent = `${Math.round(this.seq.playbackRate * 100)}%`;\n        };\n        playbackRateSliderWrapper.classList.add(\"hidden\");\n        let sliderShown = false;\n        playbackRateButton.onclick = () =>\n        {\n            sliderShown = !sliderShown;\n            playbackRateSliderWrapper.classList.toggle(\"hidden\");\n            playbackRateButton.firstElementChild.setAttribute(\n                \"fill\",\n                (sliderShown ? this.iconColor : this.iconDisabledColor)\n            );\n        };\n        playbackRateButton.firstElementChild.setAttribute(\n            \"fill\",\n            this.iconDisabledColor\n        );\n        \n        \n        // show text button\n        const textButton = getSeqUIButton(\n            \"Show lyrics\",\n            getTextSvg(ICON_SIZE)\n        );\n        this.locale.bindObjectProperty(textButton, \"title\", \"locale.sequencerController.lyrics.show\");\n        textButton.firstElementChild.setAttribute(\"fill\", this.iconDisabledColor); // defaults to disabled\n        const toggleLyrics = () =>\n        {\n            this.lyricsElement.mainDiv.classList.toggle(\"lyrics_show\");\n            textButton.firstElementChild.setAttribute(\n                \"fill\",\n                (this.lyricsElement.mainDiv.classList.contains(\"lyrics_show\") ? this.iconColor : this.iconDisabledColor)\n            );\n        };\n        this.toggleLyrics = toggleLyrics;\n        textButton.onclick = toggleLyrics;\n        \n        // add everything\n        controlsDiv.appendChild(previousSongButton); // |<\n        controlsDiv.appendChild(loopButton);         // ()\n        controlsDiv.appendChild(shuffleButton);      // ><\n        controlsDiv.appendChild(playPauseButton);    // ||\n        controlsDiv.appendChild(textButton);         // ==\n        controlsDiv.appendChild(playbackRateButton); // >>\n        controlsDiv.appendChild(nextSongButton);     // >|\n        \n        this.controls.appendChild(progressBarBg);\n        progressBarBg.appendChild(this.progressBar);\n        this.controls.appendChild(this.progressTime);\n        this.controls.appendChild(playbackRateSliderWrapper);\n        this.controls.appendChild(controlsDiv);\n        \n        \n        // keyboard control\n        document.addEventListener(\"keydown\", e =>\n        {\n            switch (e.key.toLowerCase())\n            {\n                case keybinds.playPause:\n                    e.preventDefault();\n                    togglePlayback();\n                    break;\n                \n                case keybinds.toggleLoop:\n                    e.preventDefault();\n                    toggleLoop();\n                    break;\n                \n                case keybinds.toggleLyrics:\n                    e.preventDefault();\n                    toggleLyrics();\n                    break;\n                \n                case keybinds.seekBackwards:\n                    e.preventDefault();\n                    this.seq.currentTime -= 5;\n                    playPauseButton.innerHTML = getPauseSvg(ICON_SIZE);\n                    break;\n                \n                case keybinds.seekForwards:\n                    e.preventDefault();\n                    this.seq.currentTime += 5;\n                    playPauseButton.innerHTML = getPauseSvg(ICON_SIZE);\n                    break;\n                \n                case keybinds.previousSong:\n                    this.switchToPreviousSong();\n                    break;\n                \n                case keybinds.nextSong:\n                    this.switchToNextSong();\n                    break;\n                \n                default:\n                    if (!isNaN(parseFloat(e.key)))\n                    {\n                        e.preventDefault();\n                        const num = parseInt(e.key);\n                        if (0 <= num && num <= 9)\n                        {\n                            this.seq.currentTime = this.seq.duration * (num / 10);\n                            playPauseButton.innerHTML = getPauseSvg(ICON_SIZE);\n                        }\n                    }\n                    break;\n            }\n        });\n    }\n    \n    _updateInterval()\n    {\n        const seqTime = this.seq.currentTime;\n        if (this.lastTimeUpdate === seqTime)\n        {\n            return;\n        }\n        this.lastTimeUpdate = seqTime;\n        if (this.seq.hasDummyData)\n        {\n            this.progressBar.style.width = \"0%\";\n            this.progressTime.innerText = \"--:-- / --:--\";\n        }\n        else\n        {\n            this.progressBar.style.width = `${(seqTime / this.seq.duration) * 100}%`;\n            const time = formatTime(seqTime);\n            const total = formatTime(this.seq.duration);\n            this.progressTime.innerText = `${time.time} / ${total.time}`;\n        }\n        if (this.requiresTextUpdate)\n        {\n            this.updateOtherTextEvents();\n            this.requiresTextUpdate = false;\n        }\n    }\n    \n    setSliderInterval()\n    {\n        setInterval(this._updateInterval.bind(this), 100);\n    }\n    \n    decodeLyricData()\n    {\n        this.currentLyricsString = this.currentLyrics.map(l => this.decodeTextFix(l.buffer));\n        if (this.currentLyrics.length === 0)\n        {\n            this.currentLyricsString = [this.locale.getLocaleString(\"locale.sequencerController.lyrics.noLyrics\")];\n        }\n        else\n        {\n            if (this.currentLyricsString.length > 2)\n            {\n                // perform a check for double lyrics:\n                // for example in some midi's, every lyric event is duplicated:\n                // \"He's \" turns into two \"He's \" and another \"He's \" event\n                // if that's the case for all events in the current lyrics, set duplicates to \"\" to avoid index errors\n                let isDoubleLyrics = true;\n                // note: the first lyrics is usually a control character\n                for (let i = 1; i < this.currentLyricsString.length - 1; i += 2)\n                {\n                    const first = this.currentLyricsString[i];\n                    const second = this.currentLyricsString[i + 1];\n                    // note: newline should be skipped\n                    if (first.trim() === \"\" || second.trim() === \"\")\n                    {\n                        i -= 1;\n                        continue;\n                    }\n                    if (first.trim() !== second.trim())\n                    {\n                        isDoubleLyrics = false;\n                        break;\n                    }\n                }\n                if (isDoubleLyrics)\n                {\n                    for (let i = 0; i < this.currentLyricsString.length; i += 2)\n                    {\n                        // note: newline should be skipped\n                        if (this.currentLyricsString[i] === \"\\n\")\n                        {\n                            i -= 1;\n                            continue;\n                        }\n                        this.currentLyricsString[i] = \"\";\n                    }\n                    \n                }\n            }\n            // perform a lilypond fix\n            // see https://github.com/spessasus/SpessaSynth/issues/141\n            let containsZWSP = this.currentLyricsString.some(s => s.includes(ZWSP));\n            if (containsZWSP)\n            {\n                for (let i = 0; i < this.currentLyricsString.length; i++)\n                {\n                    let string = this.currentLyricsString[i];\n                    if (string[0] === ZWSP)\n                    {\n                        // When adding ZWSP in front of a word: consider it as the start of a newline\n                        string = \" \\n\" + string.substring(1);\n                    }\n                    if (string[string.length - 1] === ZWSP)\n                    {\n                        // When appending a ZWSP at the end of a word, consider it as a syllable\n                        // remove ZWSP\n                        string = string.substring(0, string.length - 1);\n                    }\n                    else\n                    {\n                        // Otherwise it's a word. Add a space\n                        string = string + \" \";\n                    }\n                    this.currentLyricsString[i] = string;\n                }\n            }\n            \n        }\n        // lyrics fix:\n        // sometimes, all lyrics events lack spaces at the start or end of the lyric\n        // then, and only then, add space at the end of each lyric\n        // space ASCII is 32\n        let lacksSpaces = true;\n        for (const lyric of this.currentLyricsString)\n        {\n            if (lyric[0] === \" \" || lyric[lyric.length - 1] === \" \")\n            {\n                lacksSpaces = false;\n                break;\n            }\n        }\n        \n        if (lacksSpaces)\n        {\n            this.currentLyricsString = this.currentLyricsString.map(lyric =>\n            {\n                // One exception: hyphens at the end. Don't add a space to them\n                if (lyric[lyric.length - 1] === \"-\")\n                {\n                    return lyric;\n                }\n                return lyric + \" \";\n            });\n        }\n        // sanitize lyrics, as in replacement \"/\" with newline\n        this.currentLyricsString = this.currentLyricsString.map(l => l.replace(\"/\", \"\\n\"));\n    }\n    \n    loadLyricData()\n    {\n        // load lyrics\n        this.currentLyrics = this.seq.midiData.lyrics;\n        this.decodeLyricData();\n        // create lyrics as separate spans\n        // clear previous lyrics\n        this.lyricsElement.text.main.innerHTML = \"\";\n        this.lyricsElement.text.separateLyrics = [];\n        for (const lyric of this.currentLyricsString)\n        {\n            const span = document.createElement(\"span\");\n            span.innerText = lyric;\n            // gray (not highlighted) text\n            span.classList.add(\"lyrics_text_gray\");\n            this.lyricsElement.text.main.appendChild(span);\n            this.lyricsElement.text.separateLyrics.push(span);\n        }\n        \n    }\n}\n\nSequencerUI.prototype.createNavigatorHandler = createNavigatorHandler;\nSequencerUI.prototype.updateTitleAndMediaStatus = updateTitleAndMediaStatus;\n\nSequencerUI.prototype.createLyrics = createLyrics;\nSequencerUI.prototype.setLyricsText = setLyricsText;\nSequencerUI.prototype.updateOtherTextEvents = updateOtherTextEvents;\n\nexport { SequencerUI };", "/**\n * @this {SynthetizerUI}\n */\nexport function hideControllers()\n{\n    this.controllers.forEach(c =>\n    {\n        c.voiceMeter.hide();\n        c.pitchWheel.hide();\n        for (const meter of Object.values(c.controllerMeters))\n        {\n            meter.hide();\n        }\n        c.transpose.hide();\n    });\n}\n\n/**\n * @this {SynthetizerUI}\n */\nexport function showControllers()\n{\n    this.controllers.forEach(c =>\n    {\n        c.voiceMeter.show();\n        c.pitchWheel.show();\n        for (const meter of Object.values(c.controllerMeters))\n        {\n            meter.show();\n        }\n        c.transpose.show();\n    });\n}", "/**\n * @this {SynthetizerUI}\n */\nexport function toggleDarkMode()\n{\n    this.mainControllerDiv.classList.toggle(\"synthui_controller_light\");\n    this.mainButtons.forEach(b =>\n    {\n        b.classList.toggle(\"synthui_button\");\n        b.classList.toggle(\"synthui_button_light\");\n    });\n    \n    this.mainMeters.forEach(meter =>\n    {\n        meter.toggleMode(true);\n    });\n    \n    this.controllers.forEach(controller =>\n    {\n        controller.voiceMeter.toggleMode();\n        controller.pitchWheel.toggleMode();\n        Object.values(controller.controllerMeters).forEach(c =>\n        {\n            c.toggleMode();\n        });\n        controller.preset.toggleMode();\n        controller.drumsToggle.classList.toggle(\"mute_button_light\");\n        controller.muteButton.classList.toggle(\"mute_button_light\");\n    });\n}", "/**\n * synthui_meter.js\n * purpose: manages a single visualization meter, handles user changing the value if set to do so\n */\n\nimport { isMobile } from \"../../utils/is_mobile.js\";\n\n/**\n * @typedef {Function} MeterCallbackFunction\n * @param clickedValue {number} the value, calculated with min and max values\n */\nexport class Meter\n{\n    /**\n     * Creates a new meter\n     * @param color {string} the color in css\n     * @param localePath {string} locale path, will add .title and .description to it\n     * @param locale {LocaleManager}\n     * @param localeArgs {string|number[]} args for description\n     * @param max {number}\n     * @param min {number}\n     * @param initialAndDefault {number}\n     * @param editable {boolean} if the meter should be editable with mouse\n     * @param editCallback {MeterCallbackFunction}\n     * @param lockCallback {function}\n     * @param unlockCallback {function}\n     * @param activeChangeCallback {function(boolean)} - when the isActive state changes\n     */\n    constructor(color = \"none\",\n                localePath,\n                locale,\n                localeArgs,\n                min = 0,\n                max = 100,\n                initialAndDefault,\n                editable = false,\n                editCallback = undefined,\n                lockCallback = undefined,\n                unlockCallback = undefined,\n                activeChangeCallback = undefined)\n    {\n        this.meterText = \"\";\n        locale.bindObjectProperty(this, \"meterText\", localePath + \".title\");\n        this.min = min;\n        this.max = max;\n        this.currentValue = -1;\n        this.isShown = true;\n        this.isVisualValueSet = true;\n        this.isLocked = false;\n        this.lockCallback = lockCallback;\n        this.unlockCallback = unlockCallback;\n        this.defaultValue = initialAndDefault;\n        \n        /**\n         * @type {HTMLDivElement}\n         */\n        this.div = document.createElement(\"div\");\n        this.div.classList.add(\"voice_meter\");\n        this.div.classList.add(\"controller_element\");\n        if (color !== \"none\" && color !== \"\")\n        {\n            this.div.style.borderColor = color;\n        }\n        locale.bindObjectProperty(this.div, \"title\", localePath + \".description\", localeArgs);\n        \n        /**\n         * @type {HTMLDivElement}\n         */\n        this.bar = document.createElement(\"div\");\n        this.bar.classList.add(\"voice_meter_bar\");\n        this.bar.style.background = color;\n        this.div.appendChild(this.bar);\n        \n        /**\n         * @type {HTMLParagraphElement}\n         */\n        this.text = document.createElement(\"p\");\n        this.text.classList.add(\"voice_meter_text\");\n        this.div.appendChild(this.text);\n        \n        this.isActive = false;\n        \n        if (editable)\n        {\n            if (editCallback === undefined)\n            {\n                throw new Error(\"No editable function given!\");\n            }\n            this.div.onmousedown = e =>\n            {\n                e.preventDefault();\n                if (e.button === 0)\n                {\n                    // left mouse button: adjust value\n                    this.isActive = true;\n                    if (activeChangeCallback)\n                    {\n                        activeChangeCallback(true);\n                    }\n                }\n                else\n                {\n                    // other, lock it\n                    this.toggleLock();\n                }\n            };\n            this.div.onmousemove = e =>\n            {\n                if (!this.isActive)\n                {\n                    return;\n                }\n                const bounds = e.currentTarget.getBoundingClientRect();\n                const relativeLeft = bounds.left;\n                const width = bounds.width;\n                const relative = e.clientX - relativeLeft;\n                const percentage = Math.max(0, Math.min(1, relative / width));\n                if (!this.isLocked || isMobile)\n                {\n                    this.toggleLock();\n                }\n                editCallback(percentage * (max - min) + min);\n            };\n            this.div.onmouseup = () =>\n            {\n                this.isActive = false;\n                if (activeChangeCallback)\n                {\n                    activeChangeCallback(false);\n                }\n            };\n            this.div.onmouseleave = e =>\n            {\n                this.div.onmousemove(e);\n                this.isActive = false;\n                if (activeChangeCallback)\n                {\n                    activeChangeCallback(false);\n                }\n            };\n            \n            // QoL\n            this.text.oncontextmenu = e =>\n            {\n                e.preventDefault();\n            };\n            \n            // add mobile\n            this.div.onclick = e =>\n            {\n                e.preventDefault();\n                this.isActive = true;\n                this.div.onmousemove(e);\n                this.isActive = false;\n            };\n            this.div.classList.add(\"editable\");\n        }\n        this.update(initialAndDefault);\n    }\n    \n    toggleLock()\n    {\n        if (this.lockCallback === undefined)\n        {\n            // no callback, it can't be locked\n            return;\n        }\n        if (this.isLocked)\n        {\n            this.div.classList.remove(\"locked_meter\");\n            this.unlockCallback();\n        }\n        else\n        {\n            this.div.classList.add(\"locked_meter\");\n            this.lockCallback();\n        }\n        this.isLocked = !this.isLocked;\n    }\n    \n    toggleMode(updateColor = false)\n    {\n        if (updateColor)\n        {\n            this.bar.classList.toggle(\"voice_meter_light_color\");\n            this.div.classList.toggle(\"voice_meter_light_color\");\n        }\n        this.text.classList.toggle(\"voice_meter_text_light\");\n    }\n    \n    show()\n    {\n        this.isShown = true;\n        if (!this.isVisualValueSet)\n        {\n            const percentage = Math.max(0, Math.min((this.currentValue - this.min) / (this.max - this.min), 1));\n            this.bar.style.width = `${percentage * 100}%`;\n            this.text.textContent = this.meterText + (Math.round(this.currentValue * 100) / 100).toString();\n            this.isVisualValueSet = true;\n        }\n    }\n    \n    hide()\n    {\n        this.isShown = false;\n    }\n    \n    \n    /**\n     * Updates a given meter to a given value\n     * @param value {number}\n     * @param force {boolean}\n     */\n    update(value, force = false)\n    {\n        if (value === this.currentValue && force === false)\n        {\n            return;\n        }\n        this.currentValue = value;\n        if (this.isShown)\n        {\n            const percentage = Math.max(0, Math.min((value - this.min) / (this.max - this.min), 1));\n            this.bar.style.width = `${percentage * 100}%`;\n            this.text.textContent = this.meterText + (Math.round(value * 100) / 100).toString();\n            this.isVisualValueSet = true;\n        }\n        else\n        {\n            this.isVisualValueSet = false;\n        }\n    }\n}", "export const midiPatchNames = [\n    \"Acoustic Grand Piano\",\n    \"Bright Acoustic Piano\",\n    \"Electric Grand Piano\",\n    \"Honky-tonk Piano\",\n    \"Electric Piano 1\",\n    \"Electric Piano 2\",\n    \"Harpsichord\",\n    \"Clavi\",\n    \"Celesta\",\n    \"Glockenspiel\",\n    \"Music Box\",\n    \"Vibraphone\",\n    \"Marimba\",\n    \"Xylophone\",\n    \"Tubular Bells\",\n    \"Dulcimer\",\n    \"Drawbar Organ\",\n    \"Percussive Organ\",\n    \"Rock Organ\",\n    \"Church Organ\",\n    \"Reed Organ\",\n    \"Accordion\",\n    \"Harmonica\",\n    \"Tango Accordion\",\n    \"Acoustic Guitar (nylon)\",\n    \"Acoustic Guitar (steel)\",\n    \"Electric Guitar (jazz)\",\n    \"Electric Guitar (clean)\",\n    \"Electric Guitar (muted)\",\n    \"Overdriven Guitar\",\n    \"Distortion Guitar\",\n    \"Guitar Harmonics\",\n    \"Acoustic Bass\",\n    \"Electric Bass (finger)\",\n    \"Electric Bass (pick)\",\n    \"Fretless Bass\",\n    \"Slap Bass 1\",\n    \"Slap Bass 2\",\n    \"Synth Bass 1\",\n    \"Synth Bass 2\",\n    \"Violin\",\n    \"Viola\",\n    \"Cello\",\n    \"Contrabass\",\n    \"Tremolo Strings\",\n    \"Pizzicato Strings\",\n    \"Orchestral Harp\",\n    \"Timpani\",\n    \"String Ensemble 1\",\n    \"String Ensemble 2\",\n    \"Synth Strings 1\",\n    \"Synth Strings 2\",\n    \"Choir Aahs\",\n    \"VoiceGroup Oohs\",\n    \"Synth Choir\",\n    \"Orchestra Hit\",\n    \"Trumpet\",\n    \"Trombone\",\n    \"Tuba\",\n    \"Muted Trumpet\",\n    \"French Horn\",\n    \"Brass Section\",\n    \"Synth Brass 1\",\n    \"Synth Brass 2\",\n    \"Soprano Sax\",\n    \"Alto Sax\",\n    \"Tenor Sax\",\n    \"Baritone Sax\",\n    \"Oboe\",\n    \"English Horn\",\n    \"Bassoon\",\n    \"Clarinet\",\n    \"Piccolo\",\n    \"Flute\",\n    \"Recorder\",\n    \"Pan Flute\",\n    \"Blown Bottle\",\n    \"Shakuhachi\",\n    \"Whistle\",\n    \"Ocarina\",\n    \"Lead 1 (square)\",\n    \"Lead 2 (sawtooth)\",\n    \"Lead 3 (calliope)\",\n    \"Lead 4 (chiff)\",\n    \"Lead 5 (charang)\",\n    \"Lead 6 (voice)\",\n    \"Lead 7 (fifths)\",\n    \"Lead 8 (bass + lead)\",\n    \"Pad 1 (new age)\",\n    \"Pad 2 (warm)\",\n    \"Pad 3 (polysynth)\",\n    \"Pad 4 (choir)\",\n    \"Pad 5 (bowed)\",\n    \"Pad 6 (metallic)\",\n    \"Pad 7 (halo)\",\n    \"Pad 8 (sweep)\",\n    \"FX 1 (rain)\",\n    \"FX 2 (soundtrack)\",\n    \"FX 3 (crystal)\",\n    \"FX 4 (atmosphere)\",\n    \"FX 5 (brightness)\",\n    \"FX 6 (goblins)\",\n    \"FX 7 (echoes)\",\n    \"FX 8 (sci-fi)\",\n    \"Sitar\",\n    \"Banjo\",\n    \"Shamisen\",\n    \"Koto\",\n    \"Kalimba\",\n    \"Bagpipe\",\n    \"Fiddle\",\n    \"Shanai\",\n    \"Tinkle Bell\",\n    \"Agogo\",\n    \"Steel Drums\",\n    \"Woodblock\",\n    \"Taiko Drum\",\n    \"Melodic Tom\",\n    \"Synth Drum\",\n    \"Reverse Cymbal\",\n    \"Guitar Fret Noise\",\n    \"Breath Noise\",\n    \"Seashore\",\n    \"Bird Tweet\",\n    \"Telephone Ring\",\n    \"Attack Helicopter\",\n    \"Applause\",\n    \"Gunshot\"\n];", "import { midiPatchNames } from \"../../utils/patch_names.js\";\nimport { getLockSVG, getUnlockSVG } from \"../../utils/icons.js\";\nimport { LOCALE_PATH } from \"../synthetizer_ui.js\";\nimport { ICON_SIZE } from \"./create_channel_controller.js\";\nimport { isMobile } from \"../../utils/is_mobile.js\";\n\n/**\n * syntui_selector.js\n * purpose: manages a single selector element for selecting the presets\n */\n\nexport class Selector\n{\n    /**\n     * Creates a new selector\n     * @param elements  {{name: string, program: number, bank: number}[]}\n     * @param locale {LocaleManager}\n     * @param descriptionPath {string} locale path\n     * @param descriptionArgs {string|number[]}\n     * @param editCallback {function(string)}\n     * @param lockCallback {function(boolean)}\n     */\n    constructor(elements,\n                locale,\n                descriptionPath,\n                descriptionArgs,\n                editCallback = undefined,\n                lockCallback = undefined)\n    {\n        /**\n         * @type {{name: string, program: number, bank: number, stringified: string}[]}\n         */\n        this.elements = elements.map(e =>\n        {\n            return {\n                name: e.name,\n                program: e.program,\n                bank: e.bank,\n                stringified: `${e.bank.toString().padStart(3, \"0\")}:${e.program.toString()\n                    .padStart(\n                        3,\n                        \"0\"\n                    )} ${e.name}`\n            };\n        });\n        if (this.elements.length > 0)\n        {\n            this.value = `${this.elements[0].bank}:${this.elements[0].program}`;\n        }\n        else\n        {\n            this.value = \"\";\n        }\n        \n        /**\n         * @type {HTMLButtonElement}\n         */\n        this.mainButton = document.createElement(\"button\");\n        this.mainButton.classList.add(\"voice_selector\");\n        this.mainButton.classList.add(\"controller_element\");\n        locale.bindObjectProperty(this.mainButton, \"title\", descriptionPath + \".description\", descriptionArgs);\n        this.locale = locale;\n        this.localePath = descriptionPath;\n        this.localeArgs = descriptionArgs;\n        \n        this.reload();\n        \n        this.mainButton.onclick = () =>\n        {\n            this.showSelectionMenu();\n        };\n        \n        this.editCallback = editCallback;\n        \n        this.selectionMenu = undefined;\n        this.lockCallback = lockCallback;\n        this.locked = false;\n        this.isWindowShown = false;\n    }\n    \n    showSelectionMenu()\n    {\n        /**\n         * create the wrapper\n         * @type {HTMLDivElement}\n         */\n        this.selectionMenu = document.createElement(\"div\");\n        this.selectionMenu.classList.add(\"voice_selector_wrapper\");\n        document.getElementsByClassName(\"spessasynth_main\")[0].appendChild(this.selectionMenu);\n        const selectionWindow = document.createElement(\"div\");\n        selectionWindow.classList.add(\"voice_selector_window\");\n        \n        // add title\n        const selectionTitle = document.createElement(\"h2\");\n        this.locale.bindObjectProperty(\n            selectionTitle,\n            \"textContent\",\n            this.localePath + \".selectionPrompt\",\n            this.localeArgs\n        );\n        selectionWindow.appendChild(selectionTitle);\n        \n        // add search wrapper\n        const searchWrapper = document.createElement(\"div\");\n        searchWrapper.classList.add(\"voice_selector_search_wrapper\");\n        selectionWindow.appendChild(searchWrapper);\n        \n        // search input\n        const searchInput = document.createElement(\"input\");\n        searchInput.type = \"text\";\n        this.locale.bindObjectProperty(searchInput, \"placeholder\", this.localePath + \".searchPrompt\");\n        searchWrapper.appendChild(searchInput);\n        searchInput.onkeydown = e => e.stopPropagation();\n        \n        // preset lock button\n        const presetLock = document.createElement(\"div\");\n        presetLock.innerHTML = this.locked ? getLockSVG(ICON_SIZE) : getUnlockSVG(ICON_SIZE);\n        this.locale.bindObjectProperty(\n            presetLock,\n            \"title\",\n            LOCALE_PATH + \"channelController.presetReset.description\",\n            this.localeArgs\n        );\n        presetLock.classList.add(\"voice_reset\");\n        if (this.mainButton.classList.contains(\"voice_selector_light\"))\n        {\n            presetLock.classList.add(\"voice_reset_light\");\n        }\n        presetLock.onclick = () =>\n        {\n            this.locked = !this.locked;\n            this.lockCallback(this.locked);\n            this.mainButton.classList.toggle(\"locked_selector\");\n            if (this.locked)\n            {\n                presetLock.innerHTML = getLockSVG(ICON_SIZE);\n            }\n            else\n            {\n                presetLock.innerHTML = getUnlockSVG(ICON_SIZE);\n            }\n        };\n        searchWrapper.appendChild(presetLock);\n        this.presetLock = presetLock;\n        \n        // add the table, wrapper first\n        const tableWrapper = document.createElement(\"div\");\n        tableWrapper.classList.add(\"voice_selector_table_wrapper\");\n        selectionWindow.appendChild(tableWrapper);\n        \n        // add the table\n        const table = this.generateTable(tableWrapper, this.elements);\n        \n        /**\n         * add search function\n         * @type {HTMLElement}\n         */\n        let selectedProgram = table.querySelector(\".voice_selector_selected\");\n        searchInput.oninput = e =>\n        {\n            e.stopPropagation();\n            const text = searchInput.value;\n            const filtered = this.elements.filter(e => e.stringified.search(new RegExp(text, \"i\")) >= 0);\n            if (filtered.length === this.elements.length || filtered.length === 0)\n            {\n                return;\n            }\n            tableWrapper.replaceChildren();\n            const filteredTable = this.generateTable(tableWrapper, filtered);\n            // if the already selected preset is not on the new list, select the first one\n            const alreadySelected = filteredTable.querySelector(\".voice_selector_selected\");\n            if (alreadySelected)\n            {\n                selectedProgram = alreadySelected;\n                return;\n            }\n            const firstFiltered = filteredTable.querySelector(\".voice_selector_option\");\n            firstFiltered.classList.add(\"voice_selector_selected\");\n            selectedProgram = firstFiltered;\n        };\n        \n        // add basic key navigation\n        searchInput.addEventListener(\"keydown\", e =>\n        {\n            switch (e.key)\n            {\n                // when enter pressed, select the selected preset\n                case \"Enter\":\n                    const bank = selectedProgram.getAttribute(\"bank\");\n                    const program = selectedProgram.getAttribute(\"program\");\n                    const newVal = `${bank}:${program}`;\n                    if (this.value === newVal)\n                    {\n                        this.hideSelectionMenu();\n                        return;\n                    }\n                    this.editCallback(newVal);\n                    this.locked = true;\n                    this.presetLock.innerHTML = getLockSVG(ICON_SIZE);\n                    this.hideSelectionMenu();\n                    break;\n                \n                case \"ArrowDown\":\n                    let nextEl = selectedProgram.nextElementSibling;\n                    while (nextEl)\n                    {\n                        if (nextEl.classList.contains(\"voice_selector_option\"))\n                        {\n                            selectedProgram.classList.remove(\"voice_selector_selected\");\n                            nextEl.classList.add(\"voice_selector_selected\");\n                            selectedProgram = nextEl;\n                            return;\n                        }\n                        nextEl = nextEl.nextElementSibling;\n                    }\n                    break;\n                \n                case \"ArrowUp\":\n                    let previousEl = selectedProgram.previousElementSibling;\n                    while (previousEl)\n                    {\n                        if (previousEl.classList.contains(\"voice_selector_option\"))\n                        {\n                            selectedProgram.classList.remove(\"voice_selector_selected\");\n                            previousEl.classList.add(\"voice_selector_selected\");\n                            selectedProgram = previousEl;\n                            return;\n                        }\n                        previousEl = previousEl.previousElementSibling;\n                    }\n                    break;\n            }\n        });\n        \n        \n        selectionWindow.onclick = e =>\n        {\n            e.stopPropagation();\n        };\n        this.selectionMenu.appendChild(selectionWindow);\n        this.selectionMenu.onclick = e =>\n        {\n            e.stopPropagation();\n            this.hideSelectionMenu();\n        };\n        this.isWindowShown = true;\n        if (!isMobile)\n        {\n            searchInput.focus();\n        }\n    }\n    \n    /**\n     * Generates the instrument table for displaying\n     * @param wrapper {Element} the wrapper\n     * @param elements {{name: string, program: number, bank: number}[]}\n     */\n    generateTable(wrapper, elements)\n    {\n        const table = document.createElement(\"table\");\n        table.classList.add(\"voice_selector_table\");\n        \n        const selectedBank = parseInt(this.value.split(\":\")[0]);\n        const selectedProgram = parseInt(this.value.split(\":\")[1]);\n        \n        let lastProgram = -20;\n        for (const preset of elements)\n        {\n            const row = document.createElement(\"tr\");\n            const program = preset.program;\n            row.classList.add(\"voice_selector_option\");\n            row.setAttribute(\"program\", program.toString());\n            row.setAttribute(\"bank\", preset.bank.toString());\n            \n            if (program === selectedProgram && preset.bank === selectedBank)\n            {\n                row.classList.add(\"voice_selector_selected\");\n                setTimeout(() =>\n                {\n                    row.scrollIntoView({\n                        behavior: \"instant\",\n                        block: \"center\",\n                        inline: \"center\"\n                    });\n                }, 20);\n            }\n            \n            row.onclick = () =>\n            {\n                const newVal = `${preset.bank}:${program}`;\n                if (this.value === newVal)\n                {\n                    this.hideSelectionMenu();\n                    return;\n                }\n                this.editCallback(newVal);\n                this.locked = true;\n                this.presetLock.innerHTML = getLockSVG(ICON_SIZE);\n                this.hideSelectionMenu();\n            };\n            \n            // create a new group\n            if (program !== lastProgram)\n            {\n                lastProgram = program;\n                // create the header (not for drums\n                if (preset.bank !== 128)\n                {\n                    const headerRow = document.createElement(\"tr\");\n                    const header = document.createElement(\"th\");\n                    header.colSpan = 3;\n                    header.textContent = midiPatchNames[lastProgram];\n                    headerRow.appendChild(header);\n                    table.appendChild(headerRow);\n                }\n            }\n            const programText = `${preset.program.toString().padStart(3, \"0\")}`;\n            const bankText = `${preset.bank.toString().padStart(3, \"0\")}`;\n            \n            const presetName = document.createElement(\"td\");\n            presetName.classList.add(\"voice_selector_preset_name\");\n            presetName.textContent = preset.name;\n            \n            const presetProgram = document.createElement(\"td\");\n            presetName.classList.add(\"voice_selector_preset_program\");\n            presetProgram.textContent = programText;\n            \n            const presetBank = document.createElement(\"td\");\n            presetName.classList.add(\"voice_selector_preset_program\");\n            presetBank.textContent = bankText;\n            \n            row.appendChild(presetBank);\n            row.appendChild(presetProgram);\n            row.appendChild(presetName);\n            table.appendChild(row);\n        }\n        wrapper.appendChild(table);\n        return table;\n    }\n    \n    hideSelectionMenu()\n    {\n        document.getElementsByClassName(\"spessasynth_main\")[0].removeChild(this.selectionMenu);\n        this.selectionMenu = undefined;\n        this.isWindowShown = false;\n    }\n    \n    toggleMode()\n    {\n        this.mainButton.classList.toggle(\"voice_selector_light\");\n    }\n    \n    /**\n     * @param elements {{name: string, program: number, bank: number}[]}\n     */\n    reload(elements = this.elements)\n    {\n        this.elements = elements.map(e =>\n        {\n            return {\n                name: e.name,\n                program: e.program,\n                bank: e.bank,\n                stringified: `${e.bank.toString().padStart(3, \"0\")}:${e.program.toString()\n                    .padStart(\n                        3,\n                        \"0\"\n                    )} ${e.name}`\n            };\n        });\n        if (this.elements.length > 0)\n        {\n            const firstEl = this.elements[0];\n            const bank = firstEl.bank;\n            const currentProgram = parseInt(this.value.split(\":\")[1]);\n            let program = currentProgram;\n            if (this.elements.find(e => e.program === currentProgram) === undefined)\n            {\n                program = firstEl.program;\n            }\n            this.mainButton.textContent = this.getString(`${bank}:${program}`);\n        }\n    }\n    \n    /**\n     * @param value {string}\n     */\n    set(value)\n    {\n        this.value = value;\n        this.reload();\n        this.mainButton.textContent = this.getString(this.value);\n        \n        if (this.isWindowShown)\n        {\n            // remove the old selected class\n            const oldSelected = this.selectionMenu.getElementsByClassName(\"voice_selector_selected\")[0];\n            if (oldSelected !== undefined)\n            {\n                oldSelected.classList.remove(\"voice_selector_selected\");\n            }\n            /**\n             * @type {HTMLTableElement}\n             */\n            const table = this.selectionMenu.getElementsByClassName(\"voice_selector_table\")[0];\n            // find the newly selected class\n            const selectedBank = parseInt(this.value.split(\":\")[0]);\n            const selectedProgram = parseInt(this.value.split(\":\")[1]);\n            for (const row of table.rows)\n            {\n                if (row.cells.length === 1)\n                {\n                    continue;\n                }\n                const bank = parseInt(row.cells[0].textContent);\n                const program = parseInt(row.cells[1].textContent);\n                if (bank === selectedBank && program === selectedProgram)\n                {\n                    row.classList.add(\"voice_selector_selected\");\n                    row.scrollIntoView({\n                        behavior: \"smooth\",\n                        block: \"center\",\n                        inline: \"center\"\n                    });\n                }\n            }\n        }\n        \n    }\n    \n    /**\n     * @param inputString {string}\n     * @returns {string}\n     */\n    getString(inputString)\n    {\n        const split = inputString.split(\":\");\n        const bank = parseInt(split[0]);\n        const program = parseInt(split[1]);\n        const name = this.elements.find(e => e.bank === bank && e.program === program);\n        if (!name)\n        {\n            return \"\";\n        }\n        if (bank === 128 || this.elements.filter(e => e.program === program && e.bank !== 128).length < 2)\n        {\n            return `${program}. ${name.name}`;\n        }\n        return `${bank}:${program} ${name.name}`;\n    }\n}", "/**\n * @typedef {{\n *     controller: HTMLDivElement,\n *     controllerMeters: Object<number, Meter>\n *     voiceMeter: Meter,\n *     pitchWheel: Meter,\n *     transpose: Meter,\n *     preset: Selector,\n *     drumsToggle: HTMLDivElement,\n *     soloButton: HTMLDivElement,\n *     muteButton: HTMLDivElement,\n *     isHidingLocked: boolean\n * }} ChannelController\n */\n\nimport { Meter } from \"./synthui_meter.js\";\nimport { isXGDrums, LOCALE_PATH } from \"../synthetizer_ui.js\";\nimport {\n    ALL_CHANNELS_OR_DIFFERENT_ACTION,\n    DEFAULT_PERCUSSION,\n    midiControllers,\n    modulatorSources,\n    NON_CC_INDEX_OFFSET\n} from \"spessasynth_core\";\nimport { getDrumsSvg, getEmptyMicSvg, getMicSvg, getMuteSvg, getNoteSvg, getVolumeSvg } from \"../../utils/icons.js\";\nimport { Selector } from \"./synthui_selector.js\";\nimport { ANIMATION_REFLOW_TIME } from \"../../utils/animation_utils.js\";\n\n/**\n * @param bank {number}\n * @returns {boolean}\n */\nexport function isValidXGMSB(bank)\n{\n    return isXGDrums(bank) || bank === 64 || bank === 120;\n}\n\n\nexport function isSystemXG(system)\n{\n    return system === \"gm2\" || system === \"xg\";\n}\n\nexport const ICON_SIZE = 32;\n\n/**\n * Creates a new channel controller\n * @param channelNumber {number}\n * @returns {ChannelController}\n * @this {SynthetizerUI}\n */\nexport function createChannelController(channelNumber)\n{\n    /**\n     * @type {Set<number>}\n     */\n    this.soloChannels = new Set();\n    // controller\n    const controller = document.createElement(\"div\");\n    controller.classList.add(\"channel_controller\");\n    \n    /**\n     * @type {ChannelController}\n     */\n    const channelController = {};\n    channelController.controllerMeters = {};\n    channelController.controller = controller;\n    channelController.isHidingLocked = false;\n    \n    // voice meter\n    const voiceMeter = new Meter(\n        this.channelColors[channelNumber % this.channelColors.length],\n        LOCALE_PATH + \"channelController.voiceMeter\",\n        this.locale,\n        [channelNumber + 1],\n        0,\n        100,\n        0\n    );\n    voiceMeter.bar.classList.add(\"voice_meter_bar_smooth\");\n    controller.appendChild(voiceMeter.div);\n    channelController.voiceMeter = voiceMeter;\n    \n    // pitch wheel\n    const pitchWheel = new Meter(\n        this.channelColors[channelNumber % this.channelColors.length],\n        LOCALE_PATH + \"channelController.pitchBendMeter\",\n        this.locale,\n        [channelNumber + 1],\n        -8192,\n        8191,\n        0,\n        true,\n        val =>\n        {\n            const meterLocked = pitchWheel.isLocked;\n            if (meterLocked)\n            {\n                this.synth.lockController(\n                    channelNumber,\n                    NON_CC_INDEX_OFFSET + modulatorSources.pitchWheel,\n                    false\n                );\n            }\n            val = Math.round(val) + 8192;\n            // get bend values\n            const msb = val >> 7;\n            const lsb = val & 0x7F;\n            this.synth.pitchWheel(channelNumber, msb, lsb);\n            if (meterLocked)\n            {\n                this.synth.lockController(\n                    channelNumber,\n                    NON_CC_INDEX_OFFSET + modulatorSources.pitchWheel,\n                    true\n                );\n            }\n        },\n        () => this.synth.lockController(\n            channelNumber,\n            NON_CC_INDEX_OFFSET + modulatorSources.pitchWheel,\n            true\n        ),\n        () => this.synth.lockController(\n            channelNumber,\n            NON_CC_INDEX_OFFSET + modulatorSources.pitchWheel,\n            false\n        )\n    );\n    controller.appendChild(pitchWheel.div);\n    channelController.pitchWheel = pitchWheel;\n    \n    /**\n     * @param cc {number}\n     * @param val {number}\n     * @param meter {Meter}\n     */\n    let changeCCUserFunction = (cc, val, meter) =>\n    {\n        if (meter.isLocked)\n        {\n            this.synth.lockController(channelNumber, cc, false);\n            this.synth.controllerChange(channelNumber, cc, val);\n            this.synth.lockController(channelNumber, cc, true);\n        }\n        else\n        {\n            this.synth.controllerChange(channelNumber, cc, val);\n        }\n    };\n    \n    /**\n     * @param ccNum {number}\n     * @param localePath {string}\n     * @param defaultValue {number}\n     * @param allowLocking {boolean}\n     * @returns {Meter}\n     */\n    const createCCMeterHelper = (ccNum, localePath, defaultValue, allowLocking = true) =>\n    {\n        const meter = new Meter(\n            this.channelColors[channelNumber % this.channelColors.length],\n            LOCALE_PATH + localePath,\n            this.locale,\n            [channelNumber + 1],\n            0,\n            127,\n            defaultValue,\n            true,\n            val => changeCCUserFunction(ccNum, Math.round(val), meter),\n            allowLocking ? () => this.synth.lockController(channelNumber, ccNum, true) : undefined,\n            allowLocking ? () => this.synth.lockController(channelNumber, ccNum, false) : undefined\n        );\n        channelController.controllerMeters[ccNum] = meter;\n        return meter;\n    };\n    \n    // pan controller\n    const pan = createCCMeterHelper(midiControllers.pan, \"channelController.panMeter\", 64);\n    controller.appendChild(pan.div);\n    \n    // expression controller\n    const expression = createCCMeterHelper(\n        midiControllers.expressionController,\n        \"channelController.expressionMeter\",\n        127\n    );\n    controller.appendChild(expression.div);\n    \n    // volume controller\n    const volume = createCCMeterHelper(midiControllers.mainVolume, \"channelController.volumeMeter\", 100);\n    controller.appendChild(volume.div);\n    \n    // modulation wheel\n    const modulation = createCCMeterHelper(\n        midiControllers.modulationWheel,\n        \"channelController.modulationWheelMeter\",\n        0\n    );\n    controller.appendChild(modulation.div);\n    \n    // chorus\n    const chorus = createCCMeterHelper(midiControllers.chorusDepth, \"channelController.chorusMeter\", 0);\n    controller.appendChild(chorus.div);\n    \n    // reverb\n    const reverb = createCCMeterHelper(midiControllers.reverbDepth, \"channelController.reverbMeter\", 0);\n    controller.appendChild(reverb.div);\n    \n    // filter cutoff\n    const filterCutoff = createCCMeterHelper(midiControllers.brightness, \"channelController.filterMeter\", 64);\n    controller.appendChild(filterCutoff.div);\n    \n    // attack time\n    const attackTime = createCCMeterHelper(midiControllers.attackTime, \"channelController.attackMeter\", 64);\n    controller.appendChild(attackTime.div);\n    \n    // release time\n    const releaseTime = createCCMeterHelper(midiControllers.releaseTime, \"channelController.releaseMeter\", 64);\n    controller.appendChild(releaseTime.div);\n    \n    // portamento time\n    const portamentoTime = createCCMeterHelper(\n        midiControllers.portamentoTime,\n        \"channelController.portamentoTimeMeter\",\n        0\n    );\n    controller.appendChild(portamentoTime.div);\n    \n    // portamento control\n    const portamentoControl = createCCMeterHelper(\n        midiControllers.portamentoControl,\n        \"channelController.portamentoControlMeter\",\n        60,\n        false // don't allow locking portamento control\n    );\n    controller.appendChild(portamentoControl.div);\n    \n    // resonance\n    const filterResonance = createCCMeterHelper(\n        midiControllers.filterResonance,\n        \"channelController.resonanceMeter\",\n        64\n    );\n    controller.appendChild(filterResonance.div);\n    \n    // transpose is not a cc, add it manually\n    const transpose = new Meter(\n        this.channelColors[channelNumber % this.channelColors.length],\n        LOCALE_PATH + \"channelController.transposeMeter\",\n        this.locale,\n        [channelNumber + 1],\n        -36,\n        36,\n        0,\n        true,\n        val =>\n        {\n            val = Math.round(val);\n            this.synth.transposeChannel(channelNumber, val, true);\n            transpose.update(val);\n        },\n        undefined,\n        undefined,\n        active =>\n        {\n            // do hide on multi-port files\n            if (channelNumber >= 16)\n            {\n                return;\n            }\n            this.setCCVisibilityStartingFrom(channelNumber + 1, !active);\n        }\n    );\n    controller.appendChild(transpose.div);\n    channelController.transpose = transpose;\n    \n    // preset controller\n    const presetSelector = new Selector(\n        ([]), // empty for now\n        this.locale,\n        LOCALE_PATH + \"channelController.presetSelector\",\n        [channelNumber + 1],\n        async presetName =>\n        {\n            const data = presetName.split(\":\");\n            const bank = parseInt(data[0]);\n            this.synth.lockController(channelNumber, ALL_CHANNELS_OR_DIFFERENT_ACTION, false);\n            if (isSystemXG(this.synth.midiSystem) && !isValidXGMSB(bank))\n            {\n                // msb 0\n                this.synth.controllerChange(channelNumber, midiControllers.bankSelect, 0);\n                // lsb actual\n                this.synth.controllerChange(\n                    channelNumber,\n                    midiControllers.lsbForControl0BankSelect,\n                    bank\n                );\n            }\n            else\n            {\n                this.synth.controllerChange(channelNumber, midiControllers.bankSelect, bank);\n            }\n            this.synth.programChange(channelNumber, parseInt(data[1]));\n            if (this.onProgramChange)\n            {\n                this.onProgramChange(channelNumber);\n            }\n            presetSelector.mainButton.classList.add(\"locked_selector\");\n            this.synth.lockController(channelNumber, ALL_CHANNELS_OR_DIFFERENT_ACTION, true);\n        },\n        locked => this.synth.lockController(channelNumber, ALL_CHANNELS_OR_DIFFERENT_ACTION, locked)\n    );\n    controller.appendChild(presetSelector.mainButton);\n    channelController.preset = presetSelector;\n    \n    // solo button\n    const soloButton = document.createElement(\"div\");\n    soloButton.innerHTML = getEmptyMicSvg(ICON_SIZE);\n    this.locale.bindObjectProperty(\n        soloButton,\n        \"title\",\n        LOCALE_PATH + \"channelController.soloButton.description\",\n        [channelNumber + 1]\n    );\n    soloButton.classList.add(\"controller_element\");\n    soloButton.classList.add(\"mute_button\");\n    soloButton.onclick = () =>\n    {\n        // toggle solo\n        if (this.soloChannels.has(channelNumber))\n        {\n            this.soloChannels.delete(channelNumber);\n        }\n        else\n        {\n            this.soloChannels.add(channelNumber);\n        }\n        if (this.soloChannels.size === 0 || this.soloChannels.size >= this.synth.channelsAmount)\n        {\n            // no channels or all channels are soloed, unmute everything\n            for (let i = 0; i < this.synth.channelsAmount; i++)\n            {\n                this.controllers[i].soloButton.innerHTML = getEmptyMicSvg(ICON_SIZE);\n                this.synth.muteChannel(i, this.controllers[i].muteButton.hasAttribute(\"is_muted\"));\n            }\n            if (this.soloChannels.size >= this.synth.channelsAmount)\n            {\n                // all channels are soloed, return to normal\n                this.soloChannels.clear();\n            }\n            return;\n        }\n        // unmute every solo channel and mute others\n        for (let i = 0; i < this.synth.channelsAmount; i++)\n        {\n            if (this.soloChannels.has(i))\n            {\n                this.controllers[i].soloButton.innerHTML = getMicSvg(ICON_SIZE);\n                this.synth.muteChannel(i, this.controllers[i].muteButton.hasAttribute(\"is_muted\"));\n            }\n            else\n            {\n                this.controllers[i].soloButton.innerHTML = getEmptyMicSvg(ICON_SIZE);\n                this.synth.muteChannel(i, true);\n            }\n        }\n    };\n    controller.appendChild(soloButton);\n    channelController.soloButton = soloButton;\n    \n    // mute button\n    const muteButton = document.createElement(\"div\");\n    muteButton.innerHTML = getVolumeSvg(ICON_SIZE);\n    this.locale.bindObjectProperty(\n        muteButton,\n        \"title\",\n        LOCALE_PATH + \"channelController.muteButton.description\",\n        [channelNumber + 1]\n    );\n    muteButton.classList.add(\"controller_element\");\n    muteButton.classList.add(\"mute_button\");\n    muteButton.onclick = () =>\n    {\n        if (muteButton.hasAttribute(\"is_muted\"))\n        {\n            // unmute\n            muteButton.removeAttribute(\"is_muted\");\n            const canBeUnmuted = this.soloChannels.size === 0 || this.soloChannels.has(channelNumber);\n            this.synth.muteChannel(channelNumber, !canBeUnmuted);\n            muteButton.innerHTML = getVolumeSvg(ICON_SIZE);\n            \n        }\n        else\n        {\n            // mute\n            this.synth.muteChannel(channelNumber, true);\n            muteButton.setAttribute(\"is_muted\", \"true\");\n            muteButton.innerHTML = getMuteSvg(ICON_SIZE);\n        }\n    };\n    controller.appendChild(muteButton);\n    channelController.muteButton = muteButton;\n    \n    // drums toggle\n    const drumsToggle = document.createElement(\"div\");\n    drumsToggle.innerHTML = channelNumber === DEFAULT_PERCUSSION ? getDrumsSvg(ICON_SIZE) : getNoteSvg(ICON_SIZE);\n    this.locale.bindObjectProperty(\n        drumsToggle,\n        \"title\",\n        LOCALE_PATH + \"channelController.drumToggleButton.description\",\n        [channelNumber + 1]\n    );\n    drumsToggle.classList.add(\"controller_element\");\n    drumsToggle.classList.add(\"mute_button\");\n    drumsToggle.onclick = () =>\n    {\n        if (presetSelector.mainButton.classList.contains(\"locked_selector\"))\n        {\n            this.synth.lockController(channelNumber, ALL_CHANNELS_OR_DIFFERENT_ACTION, false);\n            presetSelector.mainButton.classList.remove(\"locked_selector\");\n        }\n        this.synth.setDrums(channelNumber, !this.synth.channelProperties[channelNumber].isDrum);\n    };\n    controller.appendChild(drumsToggle);\n    channelController.drumsToggle = drumsToggle;\n    \n    return channelController;\n    \n}\n\n/**\n * @param channelNumber {number}\n * @this {SynthetizerUI}\n */\nexport function appendNewController(channelNumber)\n{\n    let lastPortElement = this.ports[this.ports.length - 1];\n    // port check\n    if (channelNumber % 16 === 0)\n    {\n        // do not add the first port\n        const portNum = Math.floor(channelNumber / 16);\n        if (portNum > 0)\n        {\n            const portElement = document.createElement(\"div\");\n            portElement.classList.add(\"synthui_port_descriptor\");\n            this.locale.bindObjectProperty(portElement, \"textContent\", \"locale.synthesizerController.port\", [portNum]);\n            let timeout = 0;\n            portElement.onclick = () =>\n            {\n                const port = this.ports[portNum];\n                clearTimeout(timeout);\n                if (!port.classList.contains(\"collapsed\"))\n                {\n                    port.classList.add(\"collapsed\");\n                    timeout = setTimeout(() =>\n                    {\n                        port.classList.add(\"hidden\");\n                    }, 350);\n                }\n                else\n                {\n                    port.classList.remove(\"hidden\");\n                    timeout = setTimeout(() =>\n                    {\n                        port.classList.remove(\"collapsed\");\n                    }, ANIMATION_REFLOW_TIME);\n                }\n            };\n            \n            // this gets added to the main div, not the port group, to allow closing\n            this.mainDivWrapper.appendChild(portElement);\n            this.portDescriptors.push(portElement);\n        }\n    }\n    const controller = this.createChannelController(channelNumber);\n    this.controllers.push(controller);\n    lastPortElement.appendChild(controller.controller);\n    \n    // create a new port group if needed\n    if (channelNumber % 16 === 15)\n    {\n        this.mainDivWrapper.appendChild(lastPortElement);\n        lastPortElement = document.createElement(\"div\");\n        lastPortElement.classList.add(\"synthui_port_group\");\n        this.ports.push(lastPortElement);\n    }\n}\n\n/**\n * @this {SynthetizerUI}\n */\nexport function createChannelControllers()\n{\n    for (let i = 0; i < this.synth.channelsAmount; i++)\n    {\n        this.appendNewController(i);\n    }\n    \n    this.setEventListeners();\n    \n    setInterval(this.updateVoicesAmount.bind(this), 100);\n    this.hideControllers();\n}", "import { createSlider } from \"../settings_ui/sliders.js\";\n\n/**\n * @param el {HTMLElement}\n * @param content {NotificationContent}\n * @param locale {LocaleManager}\n */\nfunction applyTextContent(el, content, locale)\n{\n    if (content.textContent)\n    {\n        el.textContent = content.textContent;\n    }\n    if (content.translatePathTitle)\n    {\n        if (!locale)\n        {\n            throw new Error(\"Translate path title provided but no locale provided.\");\n        }\n        locale.bindObjectProperty(\n            el,\n            \"textContent\",\n            content.translatePathTitle + \".title\",\n            content?.translatePathTitleProps\n        );\n        locale.bindObjectProperty(\n            el,\n            \"title\",\n            content.translatePathTitle + \".description\",\n            content?.translatePathTitleProps\n        );\n    }\n}\n\n/**\n * @param content {NotificationContent}\n * @param locale {LocaleManager}\n * @returns {HTMLElement}\n */\nexport function getContent(content, locale)\n{\n    switch (content.type)\n    {\n        case \"button\":\n            const btn = document.createElement(\"button\");\n            applyTextContent(btn, content, locale);\n            applyAttributes(content, [btn]);\n            return btn;\n        \n        case \"text\":\n            const p = document.createElement(\"p\");\n            applyTextContent(p, content, locale);\n            applyAttributes(content, [p]);\n            return p;\n        \n        case \"input\":\n            const inputWrapper = document.createElement(\"div\");\n            inputWrapper.classList.add(\"notification_input_wrapper\");\n            const input = document.createElement(\"input\");\n            applyTextContent(input, content, locale);\n            input.addEventListener(\"keydown\", e => e.stopPropagation());\n            const inputLabel = document.createElement(\"label\");\n            applyTextContent(inputLabel, content, locale);\n            \n            applyAttributes(content, [input, inputLabel]);\n            inputWrapper.append(inputLabel);\n            inputWrapper.appendChild(input);\n            return inputWrapper;\n        \n        case \"select\":\n            const selectWrapper = document.createElement(\"div\");\n            selectWrapper.classList.add(\"notification_input_wrapper\");\n            const select = document.createElement(\"select\");\n            if (content.selectOptions === undefined)\n            {\n                throw new Error(\"Select but no options given?\");\n            }\n            for (const option of Object.entries(content.selectOptions))\n            {\n                const opt = document.createElement(\"option\");\n                opt.value = option[0];\n                opt.textContent = option[1];\n                select.appendChild(opt);\n            }\n            const selectLabel = document.createElement(\"label\");\n            \n            applyTextContent(selectLabel, content, locale);\n            applyAttributes(content, [select, selectLabel]);\n            selectWrapper.appendChild(selectLabel);\n            selectWrapper.appendChild(select);\n            return selectWrapper;\n        \n        case \"file\":\n            const fileWrapper = document.createElement(\"label\");\n            fileWrapper.classList.add(\"notification_input_wrapper\");\n            const file = document.createElement(\"input\");\n            file.type = \"file\";\n            const fileButton = document.createElement(\"label\");\n            fileButton.classList.add(\"notification_file_button\");\n            applyTextContent(fileButton, content, locale);\n            \n            const fileLabel = document.createElement(\"label\");\n            applyTextContent(fileLabel, content, locale);\n            \n            applyAttributes(content, [fileButton, file, fileLabel]);\n            fileButton.appendChild(file);\n            fileWrapper.append(fileLabel);\n            fileWrapper.appendChild(fileButton);\n            return fileWrapper;\n        \n        case \"progress\":\n            const background = document.createElement(\"div\");\n            background.classList.add(\"notification_progress_background\");\n            const progress = document.createElement(\"div\");\n            progress.classList.add(\"notification_progress\");\n            applyAttributes(content, [progress, background]);\n            background.appendChild(progress);\n            return background;\n        \n        case \"toggle\":\n            return getSwitch(content, locale);\n        \n        case \"range\":\n            const range = document.createElement(\"input\");\n            range.type = \"range\";\n            const label = document.createElement(\"label\");\n            applyAttributes(content, [range, label]);\n            applyTextContent(label, content, locale);\n            const slider = createSlider(range, false);\n            const wrapper = document.createElement(\"div\");\n            wrapper.classList.add(\"notification_slider_wrapper\");\n            wrapper.appendChild(label);\n            wrapper.appendChild(slider);\n            return wrapper;\n        \n    }\n}\n\n/**\n * @param content {NotificationContent}\n * @param elements {HTMLElement[]}\n */\nfunction applyAttributes(content, elements)\n{\n    if (content.attributes)\n    {\n        for (const [key, value] of Object.entries(content.attributes))\n        {\n            for (const element of elements)\n            {\n                if (key.startsWith(\"onchange\"))\n                {\n                    element[key] = value;\n                }\n                else\n                {\n                    element.setAttribute(key, value);\n                }\n            }\n        }\n    }\n    if (content.listeners)\n    {\n        for (const [key, value] of Object.entries(content.listeners))\n        {\n            for (const element of elements)\n            {\n                element.addEventListener(key, value);\n            }\n        }\n    }\n}\n\n/**\n * @param content {NotificationContent}\n * @param locale {LocaleManager}\n * @returns {HTMLLabelElement}\n */\nfunction getSwitch(content, locale)\n{\n    const switchWrapper = document.createElement(\"label\");\n    switchWrapper.classList.add(\"notification_switch_wrapper\");\n    const toggleText = document.createElement(\"label\");\n    applyTextContent(toggleText, content, locale);\n    \n    const toggleInput = document.createElement(\"input\");\n    toggleInput.type = \"checkbox\";\n    applyAttributes(content, [toggleText, toggleInput]);\n    \n    const toggle = document.createElement(\"div\");\n    toggle.classList.add(\"notification_switch\");\n    toggle.appendChild(toggleInput);\n    \n    const slider = document.createElement(\"div\");\n    slider.classList.add(\"notification_switch_slider\");\n    toggle.appendChild(slider);\n    \n    switchWrapper.appendChild(toggleText);\n    switchWrapper.appendChild(toggle);\n    return switchWrapper;\n}", "import { getContent } from \"./get_content.js\";\nimport { ANIMATION_REFLOW_TIME } from \"../utils/animation_utils.js\";\n\nconst NOTIFICATION_TIME = 13;\n\nlet notificationCounter = 0;\n/**\n * @type {Object<number, {div: HTMLDivElement, timeout: number, onclose: function}>}\n */\nconst notifications = {};\n\n/**\n * @typedef {Object} NotificationType\n * @property {HTMLDivElement} div\n * @property {number} id\n */\n\n/**\n * @typedef {Function} NotificationContentCallback\n * @param {NotificationType} notification - the notification\n * @param {HTMLElement} target - the element that caused this callback\n */\n\n\n/**\n * @typedef {Object} NotificationContent\n * @property {\"button\"|\"progress\"|\"text\"|\"input\"|\"toggle\"|\"range\"|\"file\"|\"select\"} type\n * @property {Object<string, string>|undefined} selectOptions - as value: content. This only applies to the \"select\" type\n * @property {string|undefined} textContent\n * @property {string|undefined} translatePathTitle\n * @property {string[]|undefined} translatePathTitleProps\n * @property {Object<string, string>|undefined} attributes\n * @property {NotificationContentCallback|undefined} onClick\n * @property {Object<string, function>|undefined} listeners\n */\n\n/**\n * @param title {string}\n * @param contents {NotificationContent[]}\n * @param time {number} seconds\n * @param allowClosing {boolean}\n * @param locale {LocaleManager}\n * @param contentStyling {Object<string, string>}\n * @param onclose {function()}\n * @returns {NotificationType}\n */\nexport function showNotification(\n    title,\n    contents,\n    time = NOTIFICATION_TIME,\n    allowClosing = true,\n    locale = undefined,\n    contentStyling = undefined,\n    onclose = undefined)\n{\n    const notification = document.createElement(\"div\");\n    const notificationID = notificationCounter++;\n    \n    notification.classList.add(\"notification\");\n    notification.innerHTML = `\n    <div class='top'>\n        <h2 class='notification_title'>${title}</h2>\n        <span class='close_btn'>\u00D7</span>\n    </div>`;\n    const contentWrapper = document.createElement(\"div\");\n    contentWrapper.classList.add(\"notification_content\");\n    if (contentStyling)\n    {\n        for (const [key, value] of Object.entries(contentStyling))\n        {\n            contentWrapper.style[key] = value;\n        }\n    }\n    notification.appendChild(contentWrapper);\n    for (const content of contents)\n    {\n        const element = getContent(content, locale);\n        if (content.onClick)\n        {\n            element.onclick = () => content.onClick({ div: notification, id: notificationID }, element);\n        }\n        contentWrapper.appendChild(element);\n    }\n    \n    if (allowClosing)\n    {\n        notification.getElementsByClassName(\"close_btn\")[0].onclick = () =>\n        {\n            closeNotification(notificationID);\n        };\n    }\n    else\n    {\n        notification.getElementsByClassName(\"close_btn\")[0].style.display = \"none\";\n    }\n    \n    setTimeout(() =>\n    {\n        notification.classList.add(\"drop\");\n    }, ANIMATION_REFLOW_TIME);\n    const timeoutID = setTimeout(() =>\n    {\n        closeNotification(notificationID);\n    }, time * 1000 + ANIMATION_REFLOW_TIME);\n    document.getElementsByClassName(\"notification_field\")[0].appendChild(notification);\n    notifications[notificationID] = {\n        div: notification,\n        timeout: timeoutID,\n        onclose: onclose\n    };\n    return {\n        div: notification,\n        id: notificationID\n    };\n}\n\n/**\n * @param id {number}\n */\nexport function closeNotification(id)\n{\n    if (notifications[id] === undefined)\n    {\n        return;\n    }\n    const notificationEl = notifications[id];\n    const notification = notificationEl.div;\n    clearTimeout(notifications[id].timeout);\n    notification.classList.remove(\"drop\");\n    setTimeout(() => notification.parentElement.removeChild(notification), 500);\n    if (notificationEl.onclose)\n    {\n        notificationEl.onclose();\n    }\n    notifications[id] = undefined;\n}", "import { showNotification } from \"../../notification/notification.js\";\nimport { consoleColors } from \"../../utils/console_colors.js\";\nimport { DEFAULT_SYNTH_CONFIG } from \"spessasynth_lib\";\n\nconst DEFAULT_CHORUS_CONFIG = DEFAULT_SYNTH_CONFIG.chorusConfig;\n\nconst USER_CONFIG = {\n    nodesAmount: DEFAULT_CHORUS_CONFIG.nodesAmount,\n    defaultDelay: DEFAULT_CHORUS_CONFIG.defaultDelay,\n    delayVariation: DEFAULT_CHORUS_CONFIG.delayVariation,\n    stereoDifference: DEFAULT_CHORUS_CONFIG.stereoDifference,\n    oscillatorFrequency: DEFAULT_CHORUS_CONFIG.oscillatorFrequency,\n    oscillatorFrequencyVariation: DEFAULT_CHORUS_CONFIG.oscillatorFrequencyVariation,\n    oscillatorGain: DEFAULT_CHORUS_CONFIG.oscillatorGain\n};\n\n/**\n * @param locale {LocaleManager}\n * @param path {string}\n * @param synth {CustomSynth}\n * @returns {NotificationType}\n */\nexport function showEffectsConfigWindow(locale, path, synth)\n{\n    const ACTUAL_PATH = path + \"effectsConfig.\";\n    const nofification = showNotification(\n        locale.getLocaleString(ACTUAL_PATH + \"button.title\"),\n        [\n            {\n                type: \"button\",\n                translatePathTitle: path + \"disableCustomVibrato\",\n                onClick: (_, el) =>\n                {\n                    synth.disableGSNRPparams();\n                    el.parentNode.removeChild(el);\n                }\n            },\n            \n            // REVERB\n            {\n                type: \"text\",\n                translatePathTitle: ACTUAL_PATH + \"reverbConfig\",\n                attributes: { \"style\": \"margin-bottom: -0.5rem\" }\n            },\n            {\n                type: \"file\",\n                translatePathTitle: ACTUAL_PATH + \"reverbConfig.impulseResponse\",\n                attributes: { \"accept\": \"audio/*\" },\n                listeners: {\n                    \"input\": async e =>\n                    {\n                        if (e.target.files.length === 0)\n                        {\n                            return;\n                        }\n                        e.stopImmediatePropagation();\n                        e.preventDefault();\n                        const btn = e.target.parentElement.parentElement.getElementsByTagName(\"label\")[0];\n                        btn.textContent = locale.getLocaleString(\"locale.synthInit.genericLoading\");\n                        const buffer = await synth.context.decodeAudioData(await e.target.files[0].arrayBuffer());\n                        synth.setReverbResponse(buffer);\n                        btn.textContent = locale.getLocaleString(\"locale.synthInit.done\");\n                        console.info(\n                            \"%cReverb response set!\",\n                            consoleColors.info\n                        );\n                    }\n                }\n            },\n            \n            // CHORUS\n            {\n                type: \"text\",\n                translatePathTitle: ACTUAL_PATH + \"chorusConfig\",\n                attributes: { \"style\": \"margin-bottom: -0.5rem\" }\n            },\n            {\n                type: \"input\",\n                translatePathTitle: ACTUAL_PATH + \"chorusConfig.nodesAmount\",\n                attributes: {\n                    \"type\": \"number\",\n                    \"min\": \"0\",\n                    \"value\": USER_CONFIG.nodesAmount,\n                    \"setting\": \"nodes\"\n                }\n            },\n            {\n                type: \"input\",\n                translatePathTitle: ACTUAL_PATH + \"chorusConfig.defaultDelay\",\n                attributes: {\n                    \"type\": \"number\",\n                    \"min\": \"0\",\n                    \"value\": USER_CONFIG.defaultDelay,\n                    \"setting\": \"delay\"\n                }\n            },\n            {\n                type: \"input\",\n                translatePathTitle: ACTUAL_PATH + \"chorusConfig.delayVariation\",\n                attributes: {\n                    \"type\": \"number\",\n                    \"min\": \"0\",\n                    \"value\": USER_CONFIG.delayVariation,\n                    \"setting\": \"delay-var\"\n                }\n            },\n            {\n                type: \"input\",\n                translatePathTitle: ACTUAL_PATH + \"chorusConfig.stereoDifference\",\n                attributes: {\n                    \"type\": \"number\",\n                    \"min\": \"0\",\n                    \"value\": USER_CONFIG.stereoDifference,\n                    \"setting\": \"stereo\"\n                }\n            },\n            {\n                type: \"input\",\n                translatePathTitle: ACTUAL_PATH + \"chorusConfig.oscillatorFrequency\",\n                attributes: {\n                    \"type\": \"number\",\n                    \"min\": \"0\",\n                    \"value\": USER_CONFIG.oscillatorFrequency,\n                    \"setting\": \"osc-freq\"\n                }\n            },\n            {\n                type: \"input\",\n                translatePathTitle: ACTUAL_PATH + \"chorusConfig.frequencyVariation\",\n                attributes: {\n                    \"type\": \"number\",\n                    \"min\": \"0\",\n                    \"value\": USER_CONFIG.oscillatorFrequencyVariation,\n                    \"setting\": \"freq-var\"\n                }\n            },\n            {\n                type: \"input\",\n                translatePathTitle: ACTUAL_PATH + \"chorusConfig.oscillatorGain\",\n                attributes: {\n                    \"type\": \"number\",\n                    \"min\": \"0\",\n                    \"value\": USER_CONFIG.oscillatorGain,\n                    \"setting\": \"osc-gain\"\n                }\n            },\n            {\n                type: \"button\",\n                translatePathTitle: ACTUAL_PATH + \"chorusConfig.apply\",\n                onClick: n =>\n                {\n                    USER_CONFIG.nodesAmount = parseFloat(n.div.querySelector(\"input[setting='nodes']\").value);\n                    USER_CONFIG.defaultDelay = parseFloat(n.div.querySelector(\"input[setting='delay']\").value);\n                    USER_CONFIG.delayVariation = parseFloat(n.div.querySelector(\"input[setting='delay-var']\").value);\n                    USER_CONFIG.stereoDifference = parseFloat(n.div.querySelector(\"input[setting='stereo']\").value);\n                    USER_CONFIG.oscillatorFrequency = parseFloat(n.div.querySelector(\"input[setting='osc-freq']\").value);\n                    USER_CONFIG.defaultDelay = parseFloat(n.div.querySelector(\"input[setting='delay']\").value);\n                    USER_CONFIG.oscillatorFrequencyVariation = parseFloat(n.div.querySelector(\n                        \"input[setting='freq-var']\").value);\n                    USER_CONFIG.oscillatorGain = parseFloat(n.div.querySelector(\"input[setting='osc-gain']\").value);\n                    synth.setChorusConfig(USER_CONFIG);\n                }\n            }\n        ],\n        999999,\n        true,\n        locale\n    );\n    nofification.div.onclick = e => e.stopImmediatePropagation();\n    return nofification;\n}", "import { closeNotification, showNotification } from \"../../notification/notification.js\";\nimport { KeyModifier } from \"spessasynth_core\";\n\n\nconst LOCALE_PATH = \"locale.synthesizerController.keyModifiers.\";\n\n/**\n * @param locale {LocaleManager}\n * @param keyboard {MidiKeyboard}\n * @returns {Promise<number>}\n */\nasync function getKey(locale, keyboard)\n{\n    return new Promise(r =>\n    {\n        const notification = showNotification(\n            locale.getLocaleString(LOCALE_PATH + \"selectKey.title\"),\n            [\n                {\n                    type: \"text\",\n                    textContent: locale.getLocaleString(LOCALE_PATH + \"selectKey.prompt\")\n                }\n            ],\n            999999,\n            false,\n            locale\n        );\n        \n        keyboard.onNotePressed = note =>\n        {\n            closeNotification(notification.id);\n            keyboard.onNotePressed = undefined;\n            r(note);\n        };\n    });\n}\n\n/**\n * @param synth {CustomSynth}\n * @param locale {LocaleManager}\n * @param keyboard {MidiKeyboard}\n * @param presetList {{presetName: string, program: number, bank: number}[]}\n */\nasync function doModifyKey(synth, locale, keyboard, presetList)\n{\n    const key = await getKey(locale, keyboard);\n    const getInput = (name, min, max, val) =>\n    {\n        const obj = {\n            \"type\": \"number\",\n            \"min\": min.toString(),\n            \"max\": max.toString(),\n            \"value\": val.toString()\n        };\n        obj[name] = \"true\";\n        return obj;\n    };\n    const presetOptions = {};\n    presetOptions[\"unchanged\"] = locale.getLocaleString(LOCALE_PATH + \"modifyKey.preset.unchanged\");\n    for (const p of presetList.toSorted((p1, p2) =>\n    {\n        if (p1.presetName < p2.presetName)\n        {\n            return -1;\n        }\n        if (p1.presetName > p2.presetName)\n        {\n            return 1;\n        }\n        return 0;\n    }))\n    {\n        presetOptions[p.presetName] = p.presetName;\n    }\n    /**\n     * @type {KeyModifier}\n     */\n    const mod = synth.keyModifierManager.getModifier(keyboard.channel, key);\n    const vel = mod?.velocity ?? -1;\n    const gain = mod?.gain ?? 1;\n    const n = showNotification(\n        locale.getLocaleString(LOCALE_PATH + \"modifyKey.title\"),\n        [\n            {\n                type: \"text\",\n                translatePathTitle: LOCALE_PATH + \"selectedKey\",\n                translatePathTitleProps: [key.toString()]\n            },\n            {\n                type: \"button\",\n                textContent: locale.getLocaleString(LOCALE_PATH + \"selectKey.change\"),\n                onClick: async n =>\n                {\n                    closeNotification(n.id);\n                    await doModifyKey(synth, locale, keyboard, presetList);\n                }\n            },\n            {\n                type: \"input\",\n                translatePathTitle: LOCALE_PATH + \"selectedChannel\",\n                attributes: getInput(\"chan\", 0, (synth.channelsAmount - 1).toString(), keyboard.channel.toString())\n            },\n            {\n                type: \"input\",\n                translatePathTitle: LOCALE_PATH + \"modifyKey.velocity\",\n                attributes: getInput(\"vel\", 0, 127, vel)\n            },\n            {\n                type: \"input\",\n                translatePathTitle: LOCALE_PATH + \"modifyKey.gain\",\n                attributes: getInput(\"gain\", 0, 10, gain)\n            },\n            {\n                type: \"select\",\n                translatePathTitle: LOCALE_PATH + \"modifyKey.preset\",\n                attributes: { \"preset-selector\": \"true\" },\n                selectOptions: presetOptions\n            },\n            {\n                type: \"button\",\n                translatePathTitle: LOCALE_PATH + \"modifyKey.apply\",\n                onClick: n =>\n                {\n                    const channel = parseInt(n.div.querySelector(\"input[chan]\").value) ?? -1;\n                    const velocity = parseInt(n.div.querySelector(\"input[vel]\").value) ?? -1;\n                    const gain = parseFloat(n.div.querySelector(\"input[gain]\").value) ?? 1;\n                    const presetName = n.div.querySelector(\"select[preset-selector]\").value;\n                    let bank = -1;\n                    let program = -1;\n                    if (presetName !== \"unchanged\")\n                    {\n                        const preset = presetList.find(p => p.presetName === presetName);\n                        bank = preset.bank;\n                        program = preset.program;\n                    }\n                    synth.keyModifierManager.addModifier(channel, key, {\n                        velocity: velocity,\n                        patch: {\n                            program: program,\n                            bank: bank\n                        },\n                        gain: gain\n                    });\n                    closeNotification(n.id);\n                }\n            }\n        ],\n        99999,\n        true,\n        locale\n    );\n    const prog = mod?.patch?.program ?? -1;\n    const bank = mod?.patch?.bank ?? -1;\n    if (bank !== -1 && prog !== -1)\n    {\n        n.div.querySelector(\"select[preset-selector]\").value = presetList.find(p => p.bank === bank && p.program === prog).presetName;\n    }\n}\n\n/**\n * @param synth {CustomSynth}\n * @param locale {LocaleManager}\n * @param keyboard {MidiKeyboard}\n */\nasync function doRemoveModification(synth, locale, keyboard)\n{\n    const key = await getKey(locale, keyboard);\n    showNotification(\n        locale.getLocaleString(LOCALE_PATH + \"removeModification.title\"),\n        [\n            {\n                type: \"text\",\n                translatePathTitle: LOCALE_PATH + \"selectedKey\",\n                translatePathTitleProps: [key.toString()]\n            },\n            {\n                type: \"button\",\n                textContent: locale.getLocaleString(LOCALE_PATH + \"selectKey.change\"),\n                onClick: async n =>\n                {\n                    closeNotification(n.id);\n                    await doRemoveModification(synth, locale, keyboard);\n                }\n            },\n            {\n                type: \"input\",\n                translatePathTitle: LOCALE_PATH + \"selectedChannel\",\n                attributes: {\n                    \"chan\": \"true\",\n                    \"type\": \"number\",\n                    \"value\": keyboard.channel.toString(),\n                    \"min\": \"0\",\n                    \"max\": (synth.channelsAmount - 1).toString()\n                }\n            },\n            {\n                type: \"button\",\n                translatePathTitle: LOCALE_PATH + \"removeModification.remove\",\n                onClick: n =>\n                {\n                    const channel = parseInt(n.div.querySelector(\"input[chan]\").value) ?? -1;\n                    synth.keyModifierManager.deleteModifier(channel, key);\n                    closeNotification(n.id);\n                }\n            }\n        ],\n        99999,\n        true,\n        locale\n    );\n}\n\n/**\n * @param synth {CustomSynth}\n * @param locale {LocaleManager}\n * @param keyboard {MidiKeyboard}\n * @param presetList {{presetName: string, program: number, bank: number}[]}\n */\nexport function startKeyModifiersMenu(synth, locale, keyboard, presetList)\n{\n    showNotification(\n        locale.getLocaleString(LOCALE_PATH + \"mainTitle\"),\n        [\n            {\n                type: \"text\",\n                textContent: locale.getLocaleString(LOCALE_PATH + \"detailedDescription\"),\n                attributes: { \"style\": \"white-space: pre; font-style: italic;\" }\n            },\n            {\n                type: \"text\",\n                textContent: locale.getLocaleString(LOCALE_PATH + \"prompt\")\n            },\n            {\n                type: \"button\",\n                translatePathTitle: LOCALE_PATH + \"modifyKey\",\n                onClick: n =>\n                {\n                    closeNotification(n.id);\n                    doModifyKey(synth, locale, keyboard, presetList).then();\n                }\n            },\n            {\n                type: \"button\",\n                translatePathTitle: LOCALE_PATH + \"removeModification\",\n                onClick: n =>\n                {\n                    closeNotification(n.id);\n                    doRemoveModification(synth, locale, keyboard).then();\n                }\n            },\n            {\n                type: \"button\",\n                translatePathTitle: LOCALE_PATH + \"resetModifications\",\n                onClick: n =>\n                {\n                    closeNotification(n.id);\n                    showNotification(\n                        locale.getLocaleString(LOCALE_PATH + \"resetModifications.confirmation.title\"),\n                        [\n                            {\n                                type: \"text\",\n                                textContent: locale.getLocaleString(LOCALE_PATH + \"resetModifications.confirmation.description\")\n                            },\n                            {\n                                type: \"button\",\n                                textContent: locale.getLocaleString(\"locale.yes\"),\n                                onClick: n =>\n                                {\n                                    closeNotification(n.id);\n                                    synth.keyModifierManager.clearModifiers();\n                                }\n                            },\n                            {\n                                type: \"button\",\n                                textContent: locale.getLocaleString(\"locale.no\"),\n                                onClick: n =>\n                                {\n                                    closeNotification(n.id);\n                                }\n                            }\n                        ],\n                        99999,\n                        true,\n                        locale\n                    );\n                }\n            }\n        ],\n        9999999,\n        true,\n        locale\n    );\n}", "import { closeNotification, showNotification } from \"../../notification/notification.js\";\nimport { LOCALE_PATH } from \"../synthetizer_ui.js\";\nimport { showEffectsConfigWindow } from \"./effects_config.js\";\nimport { startKeyModifiersMenu } from \"./key_modifier_ui.js\";\n\n/**\n * @this {SynthetizerUI}\n */\nexport function showAdvancedConfiguration()\n{\n    this.hideOnDocClick = false;\n    const blackMidiAttribute = this.synth.highPerformanceMode ? { checked: \"checked\" } : {};\n    showNotification(\n        this.locale.getLocaleString(LOCALE_PATH + \"advancedConfiguration.title\"),\n        [\n            {\n                type: \"button\",\n                translatePathTitle: LOCALE_PATH + \"effectsConfig.button\",\n                onClick: n =>\n                {\n                    closeNotification(n.id);\n                    if (this.effectsConfigWindow !== undefined)\n                    {\n                        closeNotification(this.effectsConfigWindow);\n                        this.effectsConfigWindow = undefined;\n                        return;\n                    }\n                    this.effectsConfigWindow = showEffectsConfigWindow(this.locale, LOCALE_PATH, this.synth).id;\n                }\n            },\n            \n            {\n                type: \"button\",\n                translatePathTitle: LOCALE_PATH + \"keyModifiers.button\",\n                onClick: n =>\n                {\n                    closeNotification(n.id);\n                    startKeyModifiersMenu(this.synth, this.locale, this.keyboard, this.presetList);\n                }\n            },\n            \n            {\n                type: \"input\",\n                translatePathTitle: LOCALE_PATH + \"voiceCap\",\n                listeners: {\n                    \"input\": e =>\n                    {\n                        this.synth.voiceCap = parseInt(e.target.value) || 100;\n                        this.voiceMeter.max = this.synth.voiceCap;\n                    }\n                },\n                attributes: {\n                    \"type\": \"number\",\n                    \"min\": \"1\",\n                    \"max\": \"1000\",\n                    \"value\": this.synth.voiceCap.toString()\n                }\n            },\n            \n            {\n                type: \"toggle\",\n                translatePathTitle: LOCALE_PATH + \"blackMidiMode\",\n                attributes: blackMidiAttribute,\n                listeners: {\n                    \"input\": e => this.synth.highPerformanceMode = e.target.checked\n                }\n            }\n        ],\n        99999999,\n        true,\n        this.locale\n    );\n}", "import { Meter } from \"./synthui_meter.js\";\nimport { LOCALE_PATH } from \"../synthetizer_ui.js\";\nimport { ALL_CHANNELS_OR_DIFFERENT_ACTION, interpolationTypes, VOICE_CAP } from \"spessasynth_core\";\nimport { getEmptyMicSvg, getVolumeSvg } from \"../../utils/icons.js\";\nimport { ICON_SIZE } from \"./create_channel_controller.js\";\nimport { closeNotification } from \"../../notification/notification.js\";\nimport { showAdvancedConfiguration } from \"./advanced_configuration.js\";\n\n/**\n * @this {SynthetizerUI}\n */\nexport function createMainSynthController()\n{\n    // control wrapper\n    let controlsWrapper = document.createElement(\"div\");\n    controlsWrapper.classList.add(\"controls_wrapper\");\n    \n    /**\n     * Voice meter\n     * @type {Meter}\n     */\n    this.voiceMeter = new Meter(\n        \"\",\n        LOCALE_PATH + \"mainVoiceMeter\",\n        this.locale,\n        [],\n        0,\n        VOICE_CAP,\n        0\n    );\n    this.voiceMeter.bar.classList.add(\"voice_meter_bar_smooth\");\n    this.voiceMeter.div.classList.add(\"main_controller_element\");\n    \n    /**\n     * Volume controller\n     * @type {Meter}\n     */\n    this.volumeController = new Meter(\n        \"\",\n        LOCALE_PATH + \"mainVolumeMeter\",\n        this.locale,\n        [],\n        0,\n        200,\n        100,\n        true,\n        v =>\n        {\n            this.synth.setMainVolume(Math.round(v) / 100);\n            this.volumeController.update(v);\n        }\n    );\n    this.volumeController.bar.classList.add(\"voice_meter_bar_smooth\");\n    this.volumeController.div.classList.add(\"main_controller_element\");\n    \n    /**\n     * Pan controller\n     * @type {Meter}\n     */\n    this.panController = new Meter(\n        \"\",\n        LOCALE_PATH + \"mainPanMeter\",\n        this.locale,\n        [],\n        -1,\n        1,\n        0,\n        true,\n        v =>\n        {\n            // use roland gs master pan\n            this.synth.setMasterPan(v);\n            this.panController.update(v);\n        }\n    );\n    this.panController.bar.classList.add(\"voice_meter_bar_smooth\");\n    this.panController.div.classList.add(\"main_controller_element\");\n    \n    /**\n     * Transpose controller\n     * @type {Meter}\n     */\n    this.transposeController = new Meter(\n        \"\",\n        LOCALE_PATH + \"mainTransposeMeter\",\n        this.locale,\n        [],\n        -12,\n        12,\n        0,\n        true,\n        v =>\n        {\n            // limit to half semitone precision\n            this.synth.transpose(Math.round(v * 2) / 2);\n            this.transposeController.update(Math.round(v * 2) / 2);\n        },\n        undefined,\n        undefined,\n        active =>\n        {\n            this.setCCVisibilityStartingFrom(0, !active);\n        }\n    );\n    this.transposeController.bar.classList.add(\"voice_meter_bar_smooth\");\n    this.transposeController.div.classList.add(\"main_controller_element\");\n    \n    // note killer\n    let midiPanicButton = document.createElement(\"button\");\n    this.locale.bindObjectProperty(midiPanicButton, \"textContent\", LOCALE_PATH + \"midiPanic.title\");\n    this.locale.bindObjectProperty(midiPanicButton, \"title\", LOCALE_PATH + \"midiPanic.description\");\n    \n    midiPanicButton.classList.add(\"synthui_button\");\n    midiPanicButton.classList.add(\"main_controller_element\");\n    midiPanicButton.onclick = () => this.synth.stopAll(true);\n    \n    // system reset button\n    let resetCCButton = document.createElement(\"button\");\n    this.locale.bindObjectProperty(resetCCButton, \"textContent\", LOCALE_PATH + \"systemReset.title\");\n    this.locale.bindObjectProperty(resetCCButton, \"title\", LOCALE_PATH + \"systemReset.description\");\n    \n    resetCCButton.classList.add(\"synthui_button\");\n    resetCCButton.classList.add(\"main_controller_element\");\n    resetCCButton.onclick = () =>\n    {\n        // unlock everything\n        this.controllers.forEach((channel, number) =>\n        {\n            if (channel.pitchWheel.isLocked)\n            {\n                channel.pitchWheel.toggleLock();\n            }\n            // CCs\n            for (const meter of Object.values(channel.controllerMeters))\n            {\n                if (meter.isLocked)\n                {\n                    meter.toggleLock();\n                }\n            }\n            // program\n            if (channel.preset.mainButton.classList.contains(\"locked_selector\"))\n            {\n                this.synth.lockController(number, ALL_CHANNELS_OR_DIFFERENT_ACTION, false);\n                channel.preset.mainButton.classList.remove(\"locked_selector\");\n            }\n            // transpose\n            this.synth.transposeChannel(number, 0, true);\n            channel.transpose.update(0);\n            \n            // mute/solo\n            channel.soloButton.innerHTML = getEmptyMicSvg(ICON_SIZE);\n            channel.muteButton.innerHTML = getVolumeSvg(ICON_SIZE);\n            this.synth.muteChannel(number, false);\n            \n        });\n        this.synth.resetControllers();\n    };\n    \n    // show only used\n    const showOnlyUsedButton = document.createElement(\"button\");\n    this.locale.bindObjectProperty(\n        showOnlyUsedButton,\n        \"textContent\",\n        LOCALE_PATH + \"showOnlyUsed.title\"\n    );\n    this.locale.bindObjectProperty(\n        showOnlyUsedButton,\n        \"title\",\n        LOCALE_PATH + \"showOnlyUsed.description\"\n    );\n    showOnlyUsedButton.classList.add(\"synthui_button\");\n    showOnlyUsedButton.classList.add(\"main_controller_element\");\n    showOnlyUsedButton.onclick = () =>\n    {\n        this.showOnlyUsedEnabled = !this.showOnlyUsedEnabled;\n        showOnlyUsedButton.classList.toggle(\"enabled\");\n        this.setOnlyUsedControllersVisible(this.showOnlyUsedEnabled);\n    };\n    \n    // advanced config\n    const advancedConfigurationButton = document.createElement(\"button\");\n    this.locale.bindObjectProperty(\n        advancedConfigurationButton,\n        \"textContent\",\n        LOCALE_PATH + \"advancedConfiguration.title\"\n    );\n    this.locale.bindObjectProperty(\n        advancedConfigurationButton,\n        \"title\",\n        LOCALE_PATH + \"advancedConfiguration.description\"\n    );\n    advancedConfigurationButton.classList.add(\"synthui_button\");\n    advancedConfigurationButton.classList.add(\"main_controller_element\");\n    advancedConfigurationButton.onclick = showAdvancedConfiguration.bind(this);\n    \n    \n    // shown CC group selector\n    const groupSelector = document.createElement(\"select\");\n    groupSelector.classList.add(\"synthui_button\");\n    groupSelector.classList.add(\"main_controller_element\");\n    this.locale.bindObjectProperty(groupSelector, \"title\", LOCALE_PATH + \"channelController.groupSelector.description\");\n    // create all the options\n    for (const option of [\n        \"effects\",\n        \"volumeEnvelope\",\n        \"filter\",\n        \"portamento\"\n    ])\n    {\n        const optionElement = document.createElement(\"option\");\n        optionElement.value = option;\n        this.locale.bindObjectProperty(\n            optionElement,\n            \"textContent\",\n            LOCALE_PATH + \"channelController.groupSelector.\" + option\n        );\n        groupSelector.appendChild(optionElement);\n    }\n    \n    \n    groupSelector.onchange = () =>\n    {\n        this.showControllerGroup(groupSelector.value);\n    };\n    this.groupSelector = groupSelector;\n    \n    /**\n     * interpolation type\n     * @type {HTMLSelectElement}\n     */\n    const interpolation = document.createElement(\"select\");\n    interpolation.classList.add(\"main_controller_element\");\n    interpolation.classList.add(\"synthui_button\");\n    this.locale.bindObjectProperty(interpolation, \"title\", LOCALE_PATH + \"interpolation.description\");\n    \n    // interpolation types\n    {\n        /**\n         * linear (default)\n         * @type {HTMLOptionElement}\n         */\n        const linear = document.createElement(\"option\");\n        linear.value = \"0\";\n        this.locale.bindObjectProperty(linear, \"textContent\", LOCALE_PATH + \"interpolation.linear\");\n        interpolation.appendChild(linear);\n        \n        /**\n         * nearest neighbor\n         * @type {HTMLOptionElement}\n         */\n        const nearest = document.createElement(\"option\");\n        nearest.value = \"1\";\n        this.locale.bindObjectProperty(nearest, \"textContent\", LOCALE_PATH + \"interpolation.nearestNeighbor\");\n        interpolation.appendChild(nearest);\n        \n        /**\n         * cubic (default)\n         * @type {HTMLOptionElement}\n         */\n        const cubic = document.createElement(\"option\");\n        cubic.value = \"2\";\n        cubic.selected = true;\n        this.locale.bindObjectProperty(cubic, \"textContent\", LOCALE_PATH + \"interpolation.cubic\");\n        interpolation.appendChild(cubic);\n        \n        interpolation.onchange = () =>\n        {\n            this.synth.setInterpolationType(/** @type {interpolationTypes} */parseInt(interpolation.value));\n        };\n    }\n    \n    /**\n     * main controller\n     * @type {HTMLDivElement}\n     */\n    let controller = document.createElement(\"div\");\n    controller.classList.add(\"synthui_controller\");\n    this.uiDiv.appendChild(controller);\n    this.mainDivWrapper = controller;\n    \n    // channel controller shower\n    let showControllerButton = document.createElement(\"button\");\n    this.locale.bindObjectProperty(showControllerButton, \"textContent\", LOCALE_PATH + \"toggleButton.title\");\n    this.locale.bindObjectProperty(showControllerButton, \"title\", LOCALE_PATH + \"toggleButton.description\");\n    showControllerButton.classList.add(\"synthui_button\");\n    showControllerButton.onclick = () =>\n    {\n        this.hideOnDocClick = false;\n        this.toggleVisibility();\n    };\n    \n    // meters\n    controlsWrapper.appendChild(this.volumeController.div);\n    controlsWrapper.appendChild(this.panController.div);\n    controlsWrapper.appendChild(this.transposeController.div);\n    // buttons\n    controlsWrapper.appendChild(midiPanicButton);\n    controlsWrapper.appendChild(resetCCButton);\n    controlsWrapper.appendChild(showOnlyUsedButton);\n    controlsWrapper.appendChild(advancedConfigurationButton);\n    controlsWrapper.appendChild(groupSelector);\n    controlsWrapper.appendChild(interpolation);\n    \n    /**\n     * @type {Meter[]}\n     */\n    this.mainMeters = [\n        this.volumeController,\n        this.panController,\n        this.transposeController,\n        this.voiceMeter\n    ];\n    /**\n     * @type {HTMLElement[]}\n     */\n    this.mainButtons = [\n        midiPanicButton,\n        resetCCButton,\n        advancedConfigurationButton,\n        showControllerButton,\n        interpolation\n    ];\n    // main synth div\n    this.uiDiv.appendChild(this.voiceMeter.div);\n    this.uiDiv.appendChild(showControllerButton);\n    controller.appendChild(controlsWrapper);\n    this.mainControllerDiv = controller;\n    // stop propagation to not hide\n    this.mainControllerDiv.onclick = e => e.stopPropagation();\n    // hide if clicked outside\n    document.addEventListener(\"click\", () =>\n    {\n        if (!this.hideOnDocClick)\n        {\n            this.hideOnDocClick = true;\n            return;\n        }\n        if (this.effectsConfigWindow !== undefined)\n        {\n            closeNotification(this.effectsConfigWindow);\n            this.effectsConfigWindow = undefined;\n        }\n        controller.classList.remove(\"synthui_controller_show\");\n        this.isShown = false;\n        this.hideControllers();\n    });\n}", "import { getDrumsSvg, getNoteSvg } from \"../../utils/icons.js\";\n\n/**\n * @this {SynthetizerUI}\n */\nexport function setEventListeners()\n{\n    // add event listeners\n    this.synth.eventHandler.addEvent(\"programchange\", \"synthui-program-change\", e =>\n    {\n        const p = this.controllers[e.channel].preset;\n        p.set(`${e.bank}:${e.program}`);\n    });\n    \n    this.synth.eventHandler.addEvent(\"allcontrollerreset\", \"synthui-all-controller-reset\", () =>\n    {\n        for (const controller of this.controllers)\n        {\n            for (const meter of Object.values(controller.controllerMeters))\n            {\n                meter.update(meter.defaultValue);\n            }\n        }\n    });\n    \n    this.synth.eventHandler.addEvent(\"controllerchange\", \"synthui-controller-change\", e =>\n    {\n        const controller = e.controllerNumber;\n        const channel = e.channel;\n        const value = e.controllerValue;\n        const con = this.controllers[channel];\n        if (con === undefined)\n        {\n            return;\n        }\n        const meter = con.controllerMeters[controller];\n        if (meter !== undefined)\n        {\n            meter.update(value);\n        }\n    });\n    \n    this.synth.eventHandler.addEvent(\"pitchwheel\", \"synthui-pitch-wheel\", e =>\n    {\n        const val = (e.MSB << 7) | e.LSB;\n        // pitch wheel\n        this.controllers[e.channel].pitchWheel.update(val - 8192);\n    });\n    \n    this.synth.eventHandler.addEvent(\"drumchange\", \"synthui-drum-change\", e =>\n    {\n        this.controllers[e.channel].drumsToggle.innerHTML = (e.isDrumChannel ? getDrumsSvg(32) : getNoteSvg(32));\n        const preset = this.controllers[e.channel].preset;\n        preset.reload(e.isDrumChannel ? this.percussionList : this.instrumentList);\n        preset.set(preset.value);\n    });\n    \n    this.synth.eventHandler.addEvent(\"newchannel\", \"synthui-new-channel\", () =>\n    {\n        this.appendNewController(this.controllers.length);\n        this.showControllerGroup(this.groupSelector.value);\n        this.hideControllers();\n    });\n}", "import { hideControllers, showControllers } from \"./methods/hide_show_controllers.js\";\nimport { toggleDarkMode } from \"./methods/toggle_dark_mode.js\";\nimport {\n    appendNewController,\n    createChannelController,\n    createChannelControllers\n} from \"./methods/create_channel_controller.js\";\nimport { createMainSynthController } from \"./methods/create_main_controller.js\";\nimport { setEventListeners } from \"./methods/set_event_listeners.js\";\nimport { keybinds } from \"../utils/keybinds.js\";\nimport { ANIMATION_REFLOW_TIME } from \"../utils/animation_utils.js\";\nimport { closeNotification } from \"../notification/notification.js\";\nimport { midiControllers } from \"spessasynth_core\";\n\nexport function isXGDrums(bankNr)\n{\n    return bankNr === 120 || bankNr === 126 || bankNr === 127;\n}\n\n\nexport const LOCALE_PATH = \"locale.synthesizerController.\";\n\n/**\n * synthesizer_ui.js\n * purpose: manages the graphical user interface for the synthesizer\n */\n\nclass SynthetizerUI\n{\n    \n    /**\n     * @type {CustomSynth}\n     */\n    synth;\n    /**\n     * @type {function(channel: number)}\n     */\n    onProgramChange = undefined;\n    \n    /**\n     * @type {ChannelController[]}\n     */\n    controllers = [];\n    \n    /**\n     * @type {HTMLDivElement[]}\n     */\n    ports = [];\n    \n    /**\n     * @type {HTMLDivElement[]}\n     */\n    portDescriptors = [];\n    \n    /**\n     * @type {HTMLDivElement}\n     */\n    mainDivWrapper;\n    \n    /**\n     * @type {CustomSeq}\n     */\n    sequencer = undefined;\n    \n    showOnlyUsedEnabled = false;\n    \n    /**\n     * @type {{name: string, program: number, bank: number}[]}\n     */\n    instrumentList = [];\n    \n    /**\n     * @type {{name: string, program: number, bank: number}[]}\n     */\n    percussionList = [];\n    \n    /**\n     * @type {{presetName: string, program: number, bank: number}[]}\n     */\n    presetList = [];\n    \n    /**\n     * Creates a new instance of CustomSynth UI\n     * @param colors {string[]}\n     * @param element {HTMLElement} the element to create synthui in\n     * @param localeManager {LocaleManager}\n     */\n    constructor(colors, element, localeManager)\n    {\n        this.channelColors = colors;\n        const wrapper = element;\n        this.uiDiv = document.createElement(\"div\");\n        this.uiDiv.classList.add(\"wrapper\");\n        wrapper.appendChild(this.uiDiv);\n        this.uiDiv.style.visibility = \"visible\";\n        this.isShown = false;\n        this.animationId = -1;\n        this.locale = localeManager;\n        this.hideOnDocClick = true;\n        /**\n         * For closing the effect window when closing the synthui\n         * @type {undefined|number}\n         */\n        this.effectsConfigWindow = undefined;\n        \n        const firstPort = document.createElement(\"div\");\n        firstPort.classList.add(\"synthui_port_group\");\n        this.ports.push(firstPort);\n    }\n    \n    /**\n     * @param keyboard {MidiKeyboard}\n     */\n    connectKeyboard(keyboard)\n    {\n        this.keyboard = keyboard;\n    }\n    \n    /**\n     * Connects the synth to UI\n     * @param synth {CustomSynth}\n     */\n    connectSynth(synth)\n    {\n        this.synth = synth;\n        \n        this.getInstrumentList();\n        \n        this.createMainSynthController();\n        this.createChannelControllers();\n        this.showControllerGroup(\"effects\");\n        \n        document.addEventListener(\"keydown\", e =>\n        {\n            switch (e.key.toLowerCase())\n            {\n                case keybinds.synthesizerUIShow:\n                    e.preventDefault();\n                    this.toggleVisibility();\n                    break;\n                \n                //\n                case keybinds.settingsShow:\n                    this.isShown = true;\n                    this.toggleVisibility();\n                    break;\n                \n                case keybinds.blackMidiMode:\n                    e.preventDefault();\n                    this.synth.highPerformanceMode = !this.synth.highPerformanceMode;\n                    break;\n                \n                case keybinds.midiPanic:\n                    e.preventDefault();\n                    this.synth.stopAll(true);\n                    break;\n            }\n        });\n        \n        // add event listener for locale change\n        this.locale.onLocaleChanged.push(() =>\n        {\n            // reload all meters\n            // global meters\n            this.voiceMeter.update(this.voiceMeter.currentValue, true);\n            this.volumeController.update(this.volumeController.currentValue, true);\n            this.panController.update(this.panController.currentValue, true);\n            this.panController.update(this.panController.currentValue, true);\n            this.transposeController.update(\n                this.transposeController.currentValue,\n                true\n            );\n            // channel controller meters\n            for (const controller of this.controllers)\n            {\n                controller.voiceMeter.update(controller.voiceMeter.currentValue, true);\n                controller.pitchWheel.update(controller.pitchWheel.currentValue, true);\n                for (const meter of Object.values(controller.controllerMeters))\n                {\n                    meter.update(meter.currentValue, true);\n                }\n                controller.transpose.update(controller.transpose.currentValue, true);\n            }\n        });\n    }\n    \n    /**\n     * @param seq {CustomSeq}\n     */\n    connectSequencer(seq)\n    {\n        this.sequencer = seq;\n        seq.addOnSongChangeEvent(() =>\n        {\n            this.setOnlyUsedControllersVisible(this.showOnlyUsedEnabled);\n        }, \"synthui-song-change\");\n    }\n    \n    toggleVisibility()\n    {\n        if (this.animationId !== -1)\n        {\n            clearTimeout(this.animationId);\n        }\n        const controller = document.getElementsByClassName(\"synthui_controller\")[0];\n        this.isShown = !this.isShown;\n        if (this.isShown)\n        {\n            controller.style.display = \"block\";\n            document.getElementsByClassName(\"top_part\")[0].classList.add(\"synthui_shown\");\n            this.showControllers();\n            \n            setTimeout(() =>\n            {\n                controller.classList.add(\"synthui_controller_show\");\n            }, ANIMATION_REFLOW_TIME);\n        }\n        else\n        {\n            if (this.effectsConfigWindow !== undefined)\n            {\n                closeNotification(this.effectsConfigWindow);\n                this.effectsConfigWindow = undefined;\n            }\n            document.getElementsByClassName(\"top_part\")[0].classList.remove(\"synthui_shown\");\n            this.hideControllers();\n            controller.classList.remove(\"synthui_controller_show\");\n            this.animationId = setTimeout(() =>\n            {\n                controller.style.display = \"none\";\n            }, 200);\n        }\n    }\n    \n    updateVoicesAmount()\n    {\n        this.voiceMeter.update(this.synth.voicesAmount);\n        \n        this.controllers.forEach((controller, i) =>\n        {\n            // update channel\n            let voices = this.synth.channelProperties[i]?.voicesAmount;\n            if (voices === undefined)\n            {\n                return;\n            }\n            controller.voiceMeter.update(voices);\n            if (voices < 1 && this.synth.voicesAmount > 0)\n            {\n                controller.controller.classList.add(\"no_voices\");\n            }\n            else\n            {\n                controller.controller.classList.remove(\"no_voices\");\n            }\n        });\n    }\n    \n    getInstrumentList()\n    {\n        this.synth.eventHandler.addEvent(\"presetlistchange\", \"synthui-preset-list-change\", e =>\n        {\n            /**\n             * @type {{presetName: string, program: number, bank: number}[]}\n             */\n            const presetList = e;\n            this.presetList = presetList;\n            this.instrumentList = presetList.filter(p => !isXGDrums(p.bank) && p.bank !== 128)\n                .sort((a, b) =>\n                {\n                    if (a.program === b.program)\n                    {\n                        return a.bank - b.bank;\n                    }\n                    return a.program - b.program;\n                })\n                .map(p =>\n                {\n                    return {\n                        name: p.presetName,\n                        bank: p.bank,\n                        program: p.program\n                    };\n                });\n            this.percussionList = presetList.filter(p => isXGDrums(p.bank) || p.bank === 128)\n                .sort((a, b) => a.program - b.program)\n                .map(p =>\n                {\n                    return {\n                        name: p.presetName,\n                        bank: p.bank,\n                        program: p.program\n                    };\n                });\n            \n            if (this.percussionList.length === 0)\n            {\n                this.percussionList = this.instrumentList;\n            }\n            else if (this.instrumentList.length === 0)\n            {\n                this.instrumentList = this.percussionList;\n            }\n            \n            this.controllers.forEach((controller, i) =>\n            {\n                const list = this.synth.channelProperties[i].isDrum ? this.percussionList : this.instrumentList;\n                controller.preset.reload(list);\n                controller.preset.set(`${list[0].bank}:${list[0].program}`);\n            });\n        });\n    }\n    \n    /**\n     * @param start {number}\n     * @param visible {boolean}\n     */\n    setCCVisibilityStartingFrom(start, visible)\n    {\n        if (visible)\n        {\n            for (let i = 0; i < this.controllers.length; i++)\n            {\n                this.setChannelControllerVisibility(i, true);\n            }\n            this.portDescriptors.forEach(e =>\n            {\n                // do not show ports that are empty\n                e.classList.remove(\"hidden\");\n            });\n        }\n        else\n        {\n            for (let i = start; i < this.controllers.length; i++)\n            {\n                this.setChannelControllerVisibility(i, false);\n            }\n            this.portDescriptors.forEach(e => e.classList.add(\"hidden\"));\n        }\n    }\n    \n    /**\n     * @param enabled {boolean}\n     */\n    setOnlyUsedControllersVisible(enabled)\n    {\n        this.showOnlyUsedEnabled = enabled;\n        if (!this.sequencer)\n        {\n            return;\n        }\n        if (!enabled)\n        {\n            for (let i = 0; i < this.controllers.length; i++)\n            {\n                this.setChannelControllerVisibility(i, true, true);\n                this.controllers[i].isHidingLocked = false;\n            }\n            return;\n            \n        }\n        /**\n         * @type {Set<number>}\n         */\n        const usedChannels = new Set();\n        this.sequencer.midiData.usedChannelsOnTrack.forEach((used, trackNum) =>\n        {\n            const port = this.sequencer.midiData.midiPorts[trackNum];\n            const offset = this.sequencer.midiData.midiPortChannelOffsets[port];\n            used.values().forEach(v => usedChannels.add(v + offset));\n        });\n        for (let i = 0; i < this.controllers.length; i++)\n        {\n            if (usedChannels.has(i))\n            {\n                this.setChannelControllerVisibility(i, true, true);\n                this.controllers[i].isHidingLocked = false;\n            }\n            else\n            {\n                this.setChannelControllerVisibility(i, false, true);\n            }\n        }\n    }\n    \n    /**\n     * @param channelNumber {number}\n     * @param isVisible {boolean}\n     * @param force {boolean}\n     */\n    setChannelControllerVisibility(channelNumber, isVisible, force = false)\n    {\n        if (isVisible)\n        {\n            const c = this.controllers[channelNumber];\n            if (!c.isHidingLocked || force)\n            {\n                c.controller.classList.remove(\"hidden\");\n                c.isHidingLocked = force;\n            }\n        }\n        else\n        {\n            const c = this.controllers[channelNumber];\n            if (!c.isHidingLocked || force)\n            {\n                c.controller.classList.add(\"hidden\");\n                c.isHidingLocked = force;\n            }\n        }\n    }\n    \n    /**\n     * @param groupType {\"effects\"|\"portamento\"|\"volumeEnvelope\"|\"filter\"}\n     */\n    showControllerGroup(groupType)\n    {\n        const effectControllers = [\n            midiControllers.chorusDepth,\n            midiControllers.reverbDepth\n        ];\n        const envelopeControllers = [\n            midiControllers.attackTime,\n            midiControllers.releaseTime\n        ];\n        const filterControllers = [\n            midiControllers.brightness,\n            midiControllers.filterResonance\n        ];\n        const portamentoControllers = [\n            midiControllers.portamentoTime,\n            midiControllers.portamentoControl\n        ];\n        \n        const hideCCs = ccs => ccs.forEach(cc =>\n        {\n            this.controllers.forEach(controller =>\n            {\n                controller.controllerMeters[cc].div.classList.add(\"hidden\");\n            });\n        });\n        const showCCs = ccs => ccs.forEach(cc =>\n        {\n            this.controllers.forEach(controller =>\n            {\n                controller.controllerMeters[cc].div.classList.remove(\"hidden\");\n            });\n        });\n        \n        hideCCs(effectControllers);\n        hideCCs(portamentoControllers);\n        hideCCs(filterControllers);\n        hideCCs(envelopeControllers);\n        switch (groupType)\n        {\n            case \"effects\":\n                showCCs(effectControllers);\n                break;\n            \n            case \"volumeEnvelope\":\n                showCCs(envelopeControllers);\n                break;\n            \n            case \"filter\":\n                showCCs(filterControllers);\n                break;\n            \n            case \"portamento\":\n                showCCs(portamentoControllers);\n        }\n    }\n}\n\nSynthetizerUI.prototype.hideControllers = hideControllers;\nSynthetizerUI.prototype.showControllers = showControllers;\nSynthetizerUI.prototype.toggleDarkMode = toggleDarkMode;\n\nSynthetizerUI.prototype.createChannelController = createChannelController;\nSynthetizerUI.prototype.appendNewController = appendNewController;\nSynthetizerUI.prototype.createChannelControllers = createChannelControllers;\nSynthetizerUI.prototype.createMainSynthController = createMainSynthController;\n\nSynthetizerUI.prototype.setEventListeners = setEventListeners;\n\nexport { SynthetizerUI };", "export const USE_MIDI_RANGE = \"midi range\";\n\n/**\n * The channel colors are taken from synthui\n * @param keyboard {MidiKeyboard}\n * @param synthui {SynthetizerUI}\n * @param renderer {Renderer}\n * @this {SpessaSynthSettings}\n * @private\n */\nexport function _createKeyboardHandler(keyboard, synthui, renderer)\n{\n    let channelNumber = 0;\n    \n    const keyboardControls = this.htmlControls.keyboard;\n    \n    /**\n     * @type {HTMLParagraphElement[]}\n     */\n    const nameDisplays = [];\n    /**\n     * @type {{\n     *     program: number,\n     *     bank: number,\n     *     drum: boolean\n     * }[]}\n     */\n    const channelTrackers = [];\n    \n    /**\n     * @type {{\n     *     presetName: string,\n     *     program: number,\n     *     bank: number\n     * }[]}\n     */\n    let presetList = undefined;\n    \n    const updateChannel = channel =>\n    {\n        const chan = channelTrackers[channel];\n        let bank = chan.drum ? 128 : chan.bank;\n        let preset = presetList.find(p => p.bank === bank && p.program === chan.program);\n        if (!preset)\n        {\n            preset = presetList[0];\n        }\n        nameDisplays[channel].textContent = \": \" + preset.presetName;\n    };\n    \n    const updateChannels = () =>\n    {\n        if (!presetList)\n        {\n            return;\n        }\n        for (let channel = 0; channel < nameDisplays.length; channel++)\n        {\n            updateChannel(channel);\n        }\n    };\n    \n    const createChannel = () =>\n    {\n        const option = document.createElement(\"option\");\n        \n        option.value = channelNumber.toString();\n        const channelDisplay = document.createElement(\"p\");\n        // Channel: {0} gets formatted to channel number\n        this.locale.bindObjectProperty(\n            channelDisplay,\n            \"textContent\",\n            \"locale.settings.keyboardSettings.selectedChannel.channelOption\",\n            [channelNumber + 1]\n        );\n        \n        const nameDisplay = document.createElement(\"p\");\n        nameDisplay.textContent = \": UNKNOWN\";\n        nameDisplays.push(nameDisplay);\n        channelTrackers.push({\n            program: 0,\n            bank: 0,\n            drum: channelNumber % 16 === 9\n        });\n        updateChannels();\n        \n        option.appendChild(channelDisplay);\n        option.appendChild(nameDisplay);\n        option.style.background = synthui.channelColors[channelNumber % synthui.channelColors.length];\n        option.style.color = \"rgb(0, 0, 0)\";\n        \n        keyboardControls.channelSelector.appendChild(option);\n        channelNumber++;\n    };\n    \n    const syn = this.synthui.synth;\n    syn.eventHandler.addEvent(\"presetlistchange\", \"settings-preset-list-change\", e =>\n    {\n        presetList = e;\n        updateChannels();\n    });\n    if (syn.presetList.length > 0)\n    {\n        presetList = syn.presetList;\n    }\n    syn.eventHandler.addEvent(\"newchannel\", \"settings-new-channel\", () =>\n    {\n        createChannel();\n    });\n    syn.eventHandler.addEvent(\"programchange\", \"settings-program-change\", e =>\n    {\n        const c = channelTrackers[e.channel];\n        c.bank = e.bank;\n        c.program = e.program;\n        updateChannel(e.channel);\n    });\n    syn.eventHandler.addEvent(\"drumchange\", \"settings-drum-change\", e =>\n    {\n        channelTrackers[e.channel].drum = e.isDrumChannel;\n        updateChannel(e.channel);\n    });\n    \n    // create the initial synth channels\n    for (let i = 0; i < synthui.synth.channelsAmount; i++)\n    {\n        createChannel();\n    }\n    keyboardControls.channelSelector.onchange = () =>\n    {\n        keyboard.selectChannel(parseInt(keyboardControls.channelSelector.value));\n    };\n    \n    keyboardControls.sizeSelector.onchange = () =>\n    {\n        if (this.musicMode.visible)\n        {\n            this.musicMode.setVisibility(false, document.getElementById(\"keyboard_canvas_wrapper\"));\n            setTimeout(() =>\n            {\n                if (keyboardControls.sizeSelector.value === USE_MIDI_RANGE)\n                {\n                    this.autoKeyRange = true;\n                    if (this?.sequi?.seq)\n                    {\n                        keyboard.keyRange = this.sequi.seq.midiData.keyRange;\n                        renderer.keyRange = this.sequi.seq.midiData.keyRange;\n                    }\n                }\n                else\n                {\n                    this.autoKeyRange = false;\n                    keyboard.keyRange = this.keyboardSizes[keyboardControls.sizeSelector.value];\n                    renderer.keyRange = this.keyboardSizes[keyboardControls.sizeSelector.value];\n                }\n                this._saveSettings();\n            }, 600);\n            return;\n        }\n        if (keyboardControls.sizeSelector.value === USE_MIDI_RANGE)\n        {\n            this.autoKeyRange = true;\n            if (this?.sequi?.seq)\n            {\n                keyboard.keyRange = this.sequi.seq.midiData.keyRange;\n                renderer.keyRange = this.sequi.seq.midiData.keyRange;\n            }\n        }\n        else\n        {\n            this.autoKeyRange = false;\n            keyboard.keyRange = this.keyboardSizes[keyboardControls.sizeSelector.value];\n            renderer.keyRange = this.keyboardSizes[keyboardControls.sizeSelector.value];\n        }\n        this._saveSettings();\n    };\n    \n    /**\n     * @param seq {CustomSeq}\n     */\n    this.addSequencer = seq =>\n    {\n        seq.addOnSongChangeEvent(mid =>\n        {\n            if (this.autoKeyRange)\n            {\n                keyboard.keyRange = mid.keyRange;\n                renderer.keyRange = mid.keyRange;\n            }\n            if (mid.RMIDInfo?.[\"IPIC\"] !== undefined)\n            {\n                // switch to music mode if picture available\n                if (this.musicMode.visible === false)\n                {\n                    this.toggleMusicPlayerMode().then();\n                }\n            }\n        }, \"settings-keyboard-handler-song-change\");\n    };\n    \n    // listen for new channels\n    synthui.synth.eventHandler.addEvent(\"newchannel\", \"settings-new-channel\", () =>\n    {\n        createChannel();\n    });\n    \n    // QoL: change selected channel if the given channel is muted\n    synthui.synth.eventHandler.addEvent(\"mutechannel\", \"settings-keuboard-mute-channel\", e =>\n    {\n        if (e.isMuted)\n        {\n            if (e.channel === keyboard.channel)\n            {\n                // find the first non-selected channel\n                let channelNumber = 0;\n                while (synthui.synth.channelProperties[channelNumber].isMuted)\n                {\n                    channelNumber++;\n                    if (synthui.synth.channelProperties[channelNumber] === undefined)\n                    {\n                        return;\n                    }\n                }\n                if (channelNumber < synthui.synth.channelsAmount)\n                {\n                    keyboard.selectChannel(channelNumber);\n                    keyboardControls.channelSelector.value = channelNumber;\n                }\n            }\n        }\n    });\n    \n    // dark mode toggle\n    keyboardControls.modeSelector.onclick = () =>\n    {\n        if (this.musicMode.visible)\n        {\n            this.musicMode.setVisibility(false, document.getElementById(\"keyboard_canvas_wrapper\"));\n            setTimeout(() =>\n            {\n                keyboard.toggleMode();\n                this._saveSettings();\n                this.renderer.updateSize();\n            }, 600);\n            return;\n        }\n        keyboard.toggleMode();\n        this._saveSettings();\n    };\n    \n    // keyboard show toggle\n    keyboardControls.showSelector.onclick = () =>\n    {\n        keyboard.shown = !keyboard.shown;\n        this._saveSettings();\n    };\n    \n}", "/**\n * settings_html.js\n * purpose: the inner HTML for the settings element\n */\nimport { USE_MIDI_RANGE } from \"./handlers/keyboard_handler.js\";\nimport { rendererModes } from \"../renderer/renderer.js\";\n\n// translate-path: only innerText: translate-path-title: inner text by adding .title and title by adding .description\nexport const settingsHtml = `\n<h1 translate-path='locale.settings.mainTitle'></h1>\n<div class='settings_groups_parent'>\n    <div class='settings_group'>\n        <h2 translate-path='locale.settings.rendererSettings.title'></h2>\n        \n        <label for='renderer_mode_selector' translate-path-title='locale.settings.rendererSettings.mode'></label>\n        <select id='renderer_mode_selector'>\n            <option value='${rendererModes.waveformsMode}' translate-path='locale.settings.rendererSettings.mode.waveforms'></option>\n            <option value='${rendererModes.filledWaveformsMode}' translate-path='locale.settings.rendererSettings.mode.filledWaveforms'></option>\n            <option value='${rendererModes.spectrumSplitMode}' translate-path='locale.settings.rendererSettings.mode.spectrumSplit'></option>\n            <option value='${rendererModes.spectrumSingleMode}' translate-path='locale.settings.rendererSettings.mode.spectrum'></option>\n            <option value='none' translate-path='locale.none'></option>\n        </select>\n        \n        <label translate-path-title='locale.settings.rendererSettings.noteFallingTime'></label>\n        <spessarange min='1' max='9999' value='1000' class='settings_slider' input_id='note_time_slider' units='ms'></spessarange>\n        \n        <label translate-path-title='locale.settings.rendererSettings.noteAfterTriggerTime'></label>\n        <spessarange min='0' max='9999' value='0' class='settings_slider' input_id='note_after_time_slider' units='ms'></spessarange>\n        \n        <div id='renderer_analyser_settings'>\n            <label\n            translate-path-title='locale.settings.rendererSettings.waveformSampleSize'></label>\n            <spessarange min='5' max='15' value='10' class='settings_slider' input_id='analyser_fft_slider' units=''></spessarange>\n            \n            <label translate-path-title='locale.settings.rendererSettings.waveformAmplifier'></label>\n            <spessarange min='-10' max='10' value='2' class='settings_slider' input_id='wave_multiplier_slider' units=''></spessarange>\n        </div>\n        \n        <div id='renderer_waveform_settings'>\n            <label translate-path-title='locale.settings.rendererSettings.waveformThickness'></label>\n            <spessarange min='0' max='10' value='2' class='settings_slider' input_id='analyser_thickness_slider' units='px'></spessarange>\n            \n            <div class='switch_label'>\n                <label for='stabilize_waveforms_toggler' translate-path-title='locale.settings.rendererSettings.toggleStabilizeWaveforms'></label>\n                <label class='switch'>\n                    <input type='checkbox' checked id='stabilize_waveforms_toggler'>\n                    <span class='switch_slider'></span>\n                </label>\n            </div>\n        </div>\n        \n        <div id='renderer_frequency_settings' class='hidden'>\n            <div class='switch_label'>\n                <label for='exponential_gain_toggler' translate-path-title='locale.settings.rendererSettings.toggleExponentialGain'></label>\n                <label class='switch'>\n                    <input type='checkbox' checked id='exponential_gain_toggler'>\n                    <span class='switch_slider'></span>\n                </label>\n            </div>\n            \n            <div class='switch_label'>\n                <label for='dynamic_gain_toggler' translate-path-title='locale.settings.rendererSettings.toggleDynamicGain'></label>\n                <label class='switch'>\n                    <input type='checkbox' checked id='dynamic_gain_toggler'>\n                    <span class='switch_slider'></span>\n                </label>\n            </div>\n            \n            <div class='switch_label'>\n                <label for='logarithmic_frequency_toggler' translate-path-title='locale.settings.rendererSettings.toggleLogarithmicFrequency'></label>\n                <label class='switch'>\n                    <input type='checkbox' checked id='logarithmic_frequency_toggler'>\n                    <span class='switch_slider'></span>\n                </label>\n            </div>\n        </div>\n        \n        <div class='switch_label'>\n            <label for='note_toggler' translate-path-title='locale.settings.rendererSettings.toggleNotesRendering'></label>\n            <label class='switch'>\n                <input type='checkbox' checked id='note_toggler'>\n                <span class='switch_slider'></span>\n            </label>\n        </div>\n        \n        <div class='switch_label'>\n            <label for='active_note_toggler' translate-path-title='locale.settings.rendererSettings.toggleDrawingActiveNotes'></label>\n            <label class='switch'>\n                <input type='checkbox' checked id='active_note_toggler'>\n                <span class='switch_slider'></span>\n            </label>\n        </div>\n        \n        <div class='switch_label'>\n            <label for='visual_pitch_toggler' translate-path-title='locale.settings.rendererSettings.toggleDrawingVisualPitch'></label>\n            <label class='switch'>\n                <input type='checkbox' checked id='visual_pitch_toggler'>\n                <span class='switch_slider'></span>\n            </label>\n        </div>\n    </div>\n\n\n    <div class='settings_group'>\n        <h2 translate-path='locale.settings.keyboardSettings.title'></h2>\n        <label for='channel_selector' translate-path-title='locale.settings.keyboardSettings.selectedChannel'></label>\n        <select id='channel_selector'>\n        </select>\n        \n        <label for='keyboard_size_selector' translate-path-title='locale.settings.keyboardSettings.keyboardSize'></label>\n        <select id='keyboard_size_selector'>\n            <option value='full' translate-path='locale.settings.keyboardSettings.keyboardSize.full'></option>\n            <option value='piano' translate-path='locale.settings.keyboardSettings.keyboardSize.piano'></option>\n            <option value='5 octaves' translate-path='locale.settings.keyboardSettings.keyboardSize.fiveOctaves'></option>\n            <option value='two octaves' translate-path='locale.settings.keyboardSettings.keyboardSize.twoOctaves'></option>\n            <option value='${USE_MIDI_RANGE}' translate-path='locale.settings.keyboardSettings.keyboardSize.useSongKeyRange'></option>\n        </select>\n        \n        <div class='switch_label'>\n            <label translate-path-title='locale.settings.keyboardSettings.toggleTheme'></label>\n            <label class='switch'>\n                <input type='checkbox' id='mode_selector'>\n                <span class='switch_slider'></span>\n            </label>\n        </div>\n        <div class='switch_label'>\n            <label translate-path-title='locale.settings.keyboardSettings.show'></label>\n            <label class='switch'>\n                <input type='checkbox' checked id='keyboard_show'>\n                <span class='switch_slider'></span>\n            </label>\n        </div>\n    </div>\n    \n    \n    <div class='settings_group' id='midi_settings'>\n        <h2 translate-path='locale.settings.midiSettings.title'></h2>\n        <label for='midi_input_selector' translate-path-title='locale.settings.midiSettings.midiInput'></label>\n        <select id='midi_input_selector'>\n            <option value='-1' translate-path='locale.settings.midiSettings.midiInput.disabled'></option>\n        </select>\n        \n        <label for='midi_output_selector' translate-path-title='locale.settings.midiSettings.midiOutput'></label>\n        <select id='midi_output_selector'>\n            <option value='-1' translate-path='locale.settings.midiSettings.midiOutput.disabled'></option>\n        </select>\n        \n        <h4 class='hover_reminder' translate-path-title='locale.settings.midiSettings.reminder'></h4>\n    </div>\n    \n    \n    <div class='settings_group'>\n        <h2 translate-path='locale.settings.interfaceSettings.title'></h2>\n        <div class='switch_label'>\n            <label translate-path-title='locale.settings.interfaceSettings.toggleTheme'></label>\n            <label class='switch'>\n                <input type='checkbox' checked id='toggle_mode_button'>\n                <span class='switch_slider'></span>\n            </label>\n        </div>\n        \n        <div class='switch_label'>\n            <label translate-path-title='locale.settings.interfaceSettings.showControls'></label>\n            <label class='switch'>\n                <input type='checkbox' checked id='show_sequencer_controls_button'>\n                <span class='switch_slider'></span>\n            </label>\n        </div>\n        \n        <label for='language_selector' translate-path-title='locale.settings.interfaceSettings.selectLanguage'></label>\n        <select id='language_selector'>\n         <option value='help-translate' translate-path='locale.settings.interfaceSettings.selectLanguage.helpTranslate'></option>\n        <!-- will be added via javascript -->\n        </select>\n        \n        <label for='layout_selector' translate-path-title='locale.settings.interfaceSettings.layoutDirection'></label>\n        <select id='layout_selector'>\n            <option value='downwards' selected translate-path='locale.settings.interfaceSettings.layoutDirection.values.downwards'></option>\n            <option value='upwards' translate-path='locale.settings.interfaceSettings.layoutDirection.values.upwards'></option>\n            <option value='left' translate-path='locale.settings.interfaceSettings.layoutDirection.values.leftToRight'></option>\n            <option value='right' translate-path='locale.settings.interfaceSettings.layoutDirection.values.rightToLeft'></option>\n        </select>\n        \n        <h3><a href='https://github.com/spessasus/SpessaSynth/wiki/How-To-Use-App' target='_blank' translate-path-title='locale.synthesizerController.helpButton'></a></h3>\n        \n        <h4 class='hover_reminder' translate-path-title='locale.settings.interfaceSettings.reminder'></h4>\n    </div>\n</div>\n`;", "import { getSpan } from \"../sliders.js\";\nimport { USE_MIDI_RANGE } from \"../handlers/keyboard_handler.js\";\nimport { rendererModes } from \"../../renderer/renderer.js\";\n\n/**\n * @private\n * @this {SpessaSynthSettings}\n */\nexport async function _loadSettings()\n{\n    /**\n     * @type {SavedSettings}\n     */\n    const savedSettings = await window.savedSettings;\n    \n    console.info(\"Loading saved settings...\", savedSettings);\n    \n    const getValue = (v, def) =>\n    {\n        return v ?? def;\n    };\n    \n    // renderer\n    const rendererControls = this.htmlControls.renderer;\n    const renderer = this.renderer;\n    const rendererValues = savedSettings?.renderer;\n    \n    // rendering mode\n    const renderingMode = getValue(rendererValues?.renderingMode, rendererModes.waveformsMode);\n    rendererControls.renderingMode.value = renderingMode;\n    this._setRendererMode(renderingMode);\n    \n    // note falling time\n    const fallingTime = getValue(rendererValues?.noteFallingTimeMs, 1000);\n    renderer.noteFallingTimeMs = fallingTime;\n    rendererControls.noteTimeSlider.value = fallingTime;\n    rendererControls.noteTimeSlider.dispatchEvent(new CustomEvent(\"input\"));\n    getSpan(rendererControls.noteTimeSlider).innerText = `${fallingTime}ms`;\n    \n    // note after trigger time\n    const afterTime = getValue(rendererValues?.noteAfterTriggerTimeMs, 0);\n    renderer.noteAfterTriggerTimeMs = afterTime;\n    rendererControls.noteAfterTriggerTimeSlider.value = afterTime;\n    rendererControls.noteAfterTriggerTimeSlider.dispatchEvent(new CustomEvent(\"input\"));\n    getSpan(rendererControls.noteAfterTriggerTimeSlider).innerText = `${afterTime}ms`;\n    \n    // waveform line thickness\n    const thickness = getValue(rendererValues?.waveformThickness, 2);\n    rendererControls.analyserThicknessSlider.value = thickness;\n    rendererControls.analyserThicknessSlider.dispatchEvent(new CustomEvent(\"input\"));\n    renderer.lineThickness = thickness;\n    getSpan(rendererControls.analyserThicknessSlider).innerText = `${thickness}px`;\n    \n    // fft size (sample size)\n    const fftSize = getValue(rendererValues?.sampleSize, 1024);\n    // Math.pow(2, parseInt(rendererControls.analyserFftSlider.value)); we need to invert this\n    rendererControls.analyserFftSlider.value = Math.log2(fftSize);\n    rendererControls.analyserFftSlider.dispatchEvent(new CustomEvent(\"input\"));\n    renderer.normalAnalyserFft = fftSize;\n    renderer.drumAnalyserFft = Math.pow(2, Math.min(15, Math.log2(fftSize) + 1));\n    renderer.updateFftSize();\n    this.setTimeDelay(fftSize);\n    getSpan(rendererControls.analyserFftSlider).innerText = `${fftSize}`;\n    \n    // wave multiplier\n    const multiplier = getValue(rendererValues?.amplifier, 2);\n    renderer.waveMultiplier = multiplier;\n    rendererControls.waveMultiplierSlizer.value = multiplier;\n    rendererControls.waveMultiplierSlizer.dispatchEvent(new CustomEvent(\"input\"));\n    getSpan(rendererControls.waveMultiplierSlizer).innerText = multiplier.toString();\n    \n    // render notes\n    let controls = this.htmlControls.renderer;\n    const renderNotes = getValue(rendererValues?.renderNotes, true);\n    renderer.renderNotes = renderNotes;\n    controls.noteToggler.checked = renderNotes;\n    \n    // render active notes effect\n    const activeNotes = getValue(rendererValues?.drawActiveNotes, true);\n    renderer.drawActiveNotes = activeNotes;\n    controls.activeNoteToggler.checked = activeNotes;\n    \n    // show visual pitch\n    const visualPitch = getValue(rendererValues?.showVisualPitch, true);\n    renderer.showVisualPitch = visualPitch;\n    controls.visualPitchToggler.checked = visualPitch;\n    \n    // stabilize waveforms\n    const stabilize = getValue(rendererValues?.stabilizeWaveforms, true);\n    renderer.stabilizeWaveforms = stabilize;\n    controls.stabilizeWaveformsToggler.checked = stabilize;\n    \n    // dynamic gain\n    const dynamic = getValue(rendererValues?.dynamicGain, false);\n    renderer.dynamicGain = dynamic;\n    controls.dynamicGainToggler.checked = dynamic;\n    \n    // exponential gain\n    const exponential = getValue(rendererValues?.exponentialGain, true);\n    renderer.exponentialGain = exponential;\n    controls.exponentialGainToggler.checked = exponential;\n    \n    // log frequency\n    const logFrequency = getValue(rendererValues?.logarithmicFrequency, true);\n    renderer.logarithmicFrequency = logFrequency;\n    controls.logarithmicFrequencyToggler.checked = logFrequency;\n    \n    // keyboard size\n    renderer.keyRange = getValue(rendererValues?.keyRange, { min: 0, max: 128 });\n    \n    // keyboard\n    const keyboardControls = this.htmlControls.keyboard;\n    const keyboard = this.midiKeyboard;\n    const keyboardValues = savedSettings?.keyboard;\n    \n    // removed the selected channel because it's not something you want to save\n    /**\n     * keyboard size\n     * @type {{min: number, max: number}}\n     */\n    const range = getValue(keyboardValues?.keyRange, { min: 0, max: 127 });\n    keyboard.setKeyRange(range, false);\n    // find the correct option for the size\n    if (keyboardValues?.autoRange === true)\n    {\n        keyboardControls.sizeSelector.value = USE_MIDI_RANGE;\n        this.autoKeyRange = true;\n    }\n    else\n    {\n        this.autoKeyRange = false;\n        keyboardControls.sizeSelector.value = Object.keys(this.keyboardSizes)\n            .find(size => this.keyboardSizes[size].min === range.min && this.keyboardSizes[size].max === range.max);\n    }\n    // keyboard theme\n    if (keyboardValues?.mode === \"dark\")\n    {\n        keyboard.toggleMode(false);\n        this.htmlControls.keyboard.modeSelector.checked = true;\n    }\n    // keyboard show\n    if (keyboardValues?.show === false)\n    {\n        keyboard.shown = false;\n        this.htmlControls.keyboard.showSelector.checked = false;\n    }\n    \n    \n    // interface\n    this.locale.changeGlobalLocale(savedSettings?.interface?.language, true);\n    \n    // using set timeout here fixes it for some reason\n    setTimeout(() =>\n    {\n        this.htmlControls.interface.languageSelector.value = getValue(savedSettings?.interface?.language, \"en\");\n    }, 100);\n    if (savedSettings?.interface?.mode === \"light\")\n    {\n        this._toggleDarkMode();\n        this.htmlControls.interface.themeSelector.checked = false;\n    }\n    else\n    {\n        this.htmlControls.interface.themeSelector.checked = true;\n    }\n    \n    this.htmlControls.interface.layoutSelector.value = savedSettings?.interface?.layout || \"downwards\";\n    this._changeLayout(savedSettings?.interface?.layout || \"downwards\");\n}", "// if window.saveSettings function is exposed, call it with _serializeSettings\n/**\n * @this {SpessaSynthSettings}\n * @private\n */\nexport function _saveSettings()\n{\n    if (window.saveSettings)\n    {\n        window.saveSettings(this._serializeSettings());\n    }\n}", "import { USE_MIDI_RANGE } from \"../handlers/keyboard_handler.js\";\n\n/**\n * Serializes settings into a nice object\n * @private\n * @returns {SavedSettings}\n * @this {SpessaSynthSettings}\n */\nexport function _serializeSettings()\n{\n    let renderingMode = this.renderer.rendererMode.toString();\n    if (!this.renderer.renderAnalysers)\n    {\n        renderingMode = \"none\";\n    }\n    return {\n        renderer: {\n            renderingMode: renderingMode,\n            noteFallingTimeMs: this.renderer.noteFallingTimeMs,\n            noteAfterTriggerTimeMs: this.renderer.noteAfterTriggerTimeMs,\n            waveformThickness: this.renderer.lineThickness,\n            sampleSize: this.renderer.normalAnalyserFft,\n            amplifier: this.renderer.waveMultiplier,\n            renderWaveforms: this.renderer.renderAnalysers,\n            renderNotes: this.renderer.renderNotes,\n            drawActiveNotes: this.renderer.drawActiveNotes,\n            showVisualPitch: this.renderer.showVisualPitch,\n            stabilizeWaveforms: this.renderer.stabilizeWaveforms,\n            dynamicGain: this.renderer.dynamicGain,\n            exponentialGain: this.renderer.exponentialGain,\n            logarithmicFrequency: this.renderer.logarithmicFrequency,\n            keyRange: this.renderer.keyRange\n        },\n        \n        keyboard: {\n            selectedChannel: this.midiKeyboard.channel,\n            keyRange: this.midiKeyboard.keyRange,\n            mode: this.midiKeyboard.mode,\n            autoRange: this.htmlControls.keyboard.sizeSelector.value === USE_MIDI_RANGE,\n            show: this.htmlControls.keyboard.showSelector.checked === true\n        },\n        \n        midi: {\n            input: !this.midiDeviceHandler?.selectedInput ? null : this.midiDeviceHandler?.selectedInput.name,\n            output: !this.midiDeviceHandler?.selectedOutput ? null : this.midiDeviceHandler?.selectedOutput.name\n        },\n        \n        interface: {\n            mode: this.mode,\n            language: this.htmlControls.interface.languageSelector.value,\n            layout: this.htmlControls.interface.layoutSelector.value\n        }\n    };\n}", "/**\n * @this {SpessaSynthSettings}\n * @private\n */\nexport function _createInterfaceSettingsHandler()\n{\n    const button = this.htmlControls.interface.themeSelector;\n    button.onclick = () =>\n    {\n        this._toggleDarkMode();\n        this._saveSettings();\n    };\n    const select = this.htmlControls.interface.languageSelector;\n    // load up the languages\n    for (const [code, locale] of Object.entries(this.locales))\n    {\n        const option = document.createElement(\"option\");\n        option.value = code;\n        option.textContent = locale.localeName;\n        select.appendChild(option);\n    }\n    select.value = this.locale.localeCode;\n    select.onchange = () =>\n    {\n        if (select.value === \"help-translate\")\n        {\n            window.open(\n                \"https://github.com/spessasus/SpessaSynth/blob/master/src/website/js/locale/locale_files/README.md\");\n            select.value = this.locale.localeCode;\n            return;\n        }\n        this.locale.changeGlobalLocale(select.value);\n        this._saveSettings();\n    };\n    const layoutSelect = this.htmlControls.interface.layoutSelector;\n    layoutSelect.onchange = () =>\n    {\n        this._changeLayout(layoutSelect.value);\n        this._saveSettings();\n        layoutSelect.blur();\n    };\n    \n    // IMPORTANT\n    // this DOES NOT get saved in settings!\n    const seqControls = this.htmlControls.interface.showControlsToggle;\n    seqControls.onchange = () =>\n    {\n        if (seqControls.checked)\n        {\n            document.getElementsByClassName(\"bottom_part\")[0].classList.remove(\"hidden\");\n        }\n        else\n        {\n            document.getElementsByClassName(\"bottom_part\")[0].classList.add(\"hidden\");\n        }\n    };\n}\n\n/**\n * @this {SpessaSynthSettings}\n * @param layout {\"downwards\"|\"upwards\"|\"left\"|\"right\"}\n * @private\n */\nexport function _changeLayout(layout)\n{\n    const wrapper = document.getElementById(\"keyboard_canvas_wrapper\");\n    const canvas = document.getElementById(\"note_canvas\");\n    const keyboard = document.getElementById(\"keyboard\");\n    switch (layout)\n    {\n        case \"downwards\":\n            wrapper.classList.remove(\"upwards\");\n            wrapper.classList.remove(\"left_to_right\");\n            wrapper.classList.remove(\"right_to_left\");\n            \n            canvas.classList.remove(\"sideways\");\n            keyboard.classList.remove(\"sideways\");\n            this.renderer.direction = \"down\";\n            this.renderer.sideways = false;\n            break;\n        \n        case \"upwards\":\n            wrapper.classList.add(\"upwards\");\n            wrapper.classList.remove(\"left_to_right\");\n            wrapper.classList.remove(\"right_to_left\");\n            \n            canvas.classList.remove(\"sideways\");\n            keyboard.classList.remove(\"sideways\");\n            this.renderer.direction = \"up\";\n            this.renderer.sideways = false;\n            break;\n        \n        case \"left\":\n            wrapper.classList.remove(\"upwards\");\n            wrapper.classList.add(\"left_to_right\");\n            wrapper.classList.remove(\"right_to_left\");\n            \n            canvas.classList.add(\"sideways\");\n            keyboard.classList.add(\"sideways\");\n            this.renderer.direction = \"up\";\n            this.renderer.sideways = true;\n            break;\n        \n        case \"right\":\n            wrapper.classList.remove(\"upwards\");\n            wrapper.classList.remove(\"left_to_right\");\n            wrapper.classList.add(\"right_to_left\");\n            \n            canvas.classList.add(\"sideways\");\n            keyboard.classList.add(\"sideways\");\n            this.renderer.direction = \"down\";\n            this.renderer.sideways = true;\n    }\n    this.renderer.updateSize();\n}", "// top color\nconst TC_DARK = {\n    start: \"#101010\",\n    end: \"#212121\"\n};\nconst TC_LIGHT = {\n    start: \"#bbb\",\n    end: \"#f0f0f0\"\n};\n\n// font color\nconst FC_DARK = \"#eee\";\nconst FC_LIGHT = \"#333\";\n\n// top buttons color\nconst TBC_DARK = {\n    start: \"#222\",\n    end: \"#333\"\n};\n\nconst TBC_LIGHT = {\n    start: \"#ccc\",\n    end: \"#fff\"\n};\n\nconst TRANSITION_TIME = 0.2;\n\n/**\n * @this {SpessaSynthSettings}\n * @private\n */\nexport function _toggleDarkMode()\n{\n    if (this.mode === \"dark\")\n    {\n        this.mode = \"light\";\n        this.renderer.drawActiveNotes = false;\n    }\n    else\n    {\n        this.renderer.drawActiveNotes = true;\n        this.mode = \"dark\";\n        \n    }\n    this.renderer.toggleDarkMode();\n    this.synthui.toggleDarkMode();\n    this.sequi.toggleDarkMode();\n    this.musicMode.toggleDarkMode();\n    \n    document.getElementsByClassName(\"spessasynth_main\")[0].classList.toggle(\"light_mode\");\n    \n    // top part\n    document.getElementsByClassName(\"top_part\")[0].classList.toggle(\"top_part_light\");\n    \n    // settings\n    this.mainDiv.classList.toggle(\"settings_menu_light\");\n    \n    \n    // rest\n    // things get hacky here: change the global (*) --font-color to black:\n    // find the star rule\n    const rules = document.styleSheets[0].cssRules;\n    for (let rule of rules)\n    {\n        if (rule.selectorText === \"*\")\n        {\n            if (this.mode === \"dark\")\n            {\n                // dark mode\n                transitionColor(FC_LIGHT, FC_DARK, TRANSITION_TIME, rule, \"--font-color\");\n                \n                transitionColor(TBC_LIGHT.start, TBC_DARK.start, TRANSITION_TIME, rule, \"--top-buttons-color-start\");\n                transitionColor(TBC_LIGHT.end, TBC_DARK.end, TRANSITION_TIME, rule, \"--top-buttons-color-end\");\n                \n                transitionColor(TC_LIGHT.start, TC_DARK.start, TRANSITION_TIME, rule, \"--top-color-start\");\n                transitionColor(TC_LIGHT.end, TC_DARK.end, TRANSITION_TIME, rule, \"--top-color-end\");\n            }\n            else\n            {\n                // light mode\n                transitionColor(FC_DARK, FC_LIGHT, TRANSITION_TIME, rule, \"--font-color\");\n                \n                transitionColor(TBC_DARK.start, TBC_LIGHT.start, TRANSITION_TIME, rule, \"--top-buttons-color-start\");\n                transitionColor(TBC_DARK.end, TBC_LIGHT.end, TRANSITION_TIME, rule, \"--top-buttons-color-end\");\n                \n                transitionColor(TC_DARK.start, TC_LIGHT.start, TRANSITION_TIME, rule, \"--top-color-start\");\n                transitionColor(TC_DARK.end, TC_LIGHT.end, TRANSITION_TIME, rule, \"--top-color-end\");\n            }\n            break;\n        }\n    }\n    document.body.style.background = this.mode === \"dark\" ? \"black\" : \"white\";\n}\n\n/**\n * @type {Object<string, number>}\n */\nlet intervals = {};\n\n/**\n * @param initialColor {string} hex\n * @param targetColor {string} hex\n * @param duration {number}\n * @param propertyName {string}\n * @param cssRule {CSSRule}\n */\nfunction transitionColor(initialColor, targetColor, duration, cssRule, propertyName)\n{\n    if (intervals[propertyName])\n    {\n        clearInterval(intervals[propertyName]);\n        intervals[propertyName] = undefined;\n    }\n    \n    /**\n     * @param hex {string}\n     * @return {{r: number, b: number, g: number}}\n     */\n    function hexToRgb(hex)\n    {\n        // for stuff like #222\n        if (hex.length === 4)\n        {\n            hex = `#${hex[1]}${hex[1]}${hex[2]}${hex[2]}${hex[3]}${hex[3]}`;\n        }\n        const num = parseInt(hex.slice(1), 16);\n        return {\n            r: (num >> 16) & 255,\n            g: (num >> 8) & 255,\n            b: num & 255\n        };\n    }\n    \n    /**\n     * @param start {number}\n     * @param end {number}\n     * @param progress {number}\n     * @return {number}\n     */\n    function interpolate(start, end, progress)\n    {\n        return start + ((end - start) * progress);\n    }\n    \n    // Parse initial and target colors\n    const startColor = hexToRgb(initialColor);\n    const endColor = hexToRgb(targetColor);\n    \n    const startTime = performance.now() / 1000;\n    \n    function step()\n    {\n        const currentTime = performance.now() / 1000;\n        const elapsedTime = currentTime - startTime;\n        const progress = Math.min(elapsedTime / duration, 1);\n        \n        const r = Math.round(interpolate(startColor.r, endColor.r, progress));\n        const g = Math.round(interpolate(startColor.g, endColor.g, progress));\n        const b = Math.round(interpolate(startColor.b, endColor.b, progress));\n        \n        cssRule.style.setProperty(propertyName, `rgb(${r}, ${g}, ${b})`);\n        \n        if (progress >= 1)\n        {\n            clearInterval(intervals[propertyName]);\n            intervals[propertyName] = undefined;\n        }\n    }\n    \n    intervals[propertyName] = setInterval(step, 1000 / 60); // 60 FPS should be enough\n}", "import { getSpan } from \"../sliders.js\";\nimport { rendererModes } from \"../../renderer/renderer.js\";\n\n/**\n * @param mode {string}\n * @this {SpessaSynthSettings}\n * @private\n */\nexport function _setRendererMode(mode)\n{\n    const waveformSettings = document.getElementById(\"renderer_waveform_settings\");\n    const freqSettings = document.getElementById(\"renderer_frequency_settings\");\n    const generalAnalyserSettings = document.getElementById(\"renderer_analyser_settings\");\n    // check for none\n    if (mode === \"none\")\n    {\n        this.renderer.renderAnalysers = false;\n        freqSettings.classList.add(\"hidden\");\n        waveformSettings.classList.add(\"hidden\");\n        generalAnalyserSettings.classList.add(\"hidden\");\n        this._saveSettings();\n        return;\n    }\n    generalAnalyserSettings.classList.remove(\"hidden\");\n    this.renderer.renderAnalysers = true;\n    /**\n     * @type {rendererModes|number}\n     */\n    const renderingMode = parseInt(mode);\n    this.renderer.setRendererMode(renderingMode);\n    // show appropriate settings\n    if (renderingMode === rendererModes.waveformsMode || renderingMode === rendererModes.filledWaveformsMode)\n    {\n        waveformSettings.classList.remove(\"hidden\");\n        freqSettings.classList.add(\"hidden\");\n    }\n    else\n    {\n        waveformSettings.classList.add(\"hidden\");\n        freqSettings.classList.remove(\"hidden\");\n    }\n    this._saveSettings();\n}\n\n/**\n * @param renderer {Renderer}\n * @this {SpessaSynthSettings}\n * @private\n */\nexport function _createRendererHandler(renderer)\n{\n    const rendererControls = this.htmlControls.renderer;\n    \n    // rendering mode\n    rendererControls.renderingMode.addEventListener(\"change\", () =>\n    {\n        this._setRendererMode(rendererControls.renderingMode.value);\n    });\n    \n    rendererControls.renderingMode.dispatchEvent(new CustomEvent(\"change\"));\n    \n    // note falling time\n    rendererControls.noteTimeSlider.addEventListener(\"input\", () =>\n    {\n        renderer.noteFallingTimeMs = rendererControls.noteTimeSlider.value;\n        getSpan(rendererControls.noteTimeSlider).innerText = `${rendererControls.noteTimeSlider.value}ms`;\n    });\n    // bind to onchange instead of oninput to prevent spam\n    rendererControls.noteTimeSlider.onchange = () =>\n    {\n        this._saveSettings();\n    };\n    \n    // note after trigger time\n    rendererControls.noteAfterTriggerTimeSlider.addEventListener(\"input\", () =>\n    {\n        renderer.noteAfterTriggerTimeMs = rendererControls.noteAfterTriggerTimeSlider.value;\n        getSpan(rendererControls.noteAfterTriggerTimeSlider).innerText = `${rendererControls.noteAfterTriggerTimeSlider.value}ms`;\n    });\n    rendererControls.noteAfterTriggerTimeSlider.onchange = () =>\n    {\n        this._saveSettings();\n    };\n    \n    // waveform line thickness\n    rendererControls.analyserThicknessSlider.addEventListener(\"input\", () =>\n    {\n        renderer.lineThickness = parseInt(rendererControls.analyserThicknessSlider.value);\n        getSpan(rendererControls.analyserThicknessSlider).innerText = `${rendererControls.analyserThicknessSlider.value}px`;\n    });\n    rendererControls.analyserThicknessSlider.onchange = () =>\n    {\n        this._saveSettings();\n    };\n    \n    // fft size (sample size)\n    rendererControls.analyserFftSlider.addEventListener(\"input\", () =>\n    {\n        let value = Math.pow(2, parseInt(rendererControls.analyserFftSlider.value));\n        renderer.normalAnalyserFft = value;\n        renderer.drumAnalyserFft = Math.pow(2, Math.min(15, parseInt(rendererControls.analyserFftSlider.value) + 1));\n        renderer.updateFftSize();\n        this.setTimeDelay(value);\n        getSpan(rendererControls.analyserFftSlider).innerText = `${value}`;\n    });\n    rendererControls.analyserFftSlider.onchange = () =>\n    {\n        this._saveSettings();\n    };\n    \n    // wave multiplier\n    rendererControls.waveMultiplierSlizer.addEventListener(\"input\", () =>\n    {\n        renderer.waveMultiplier = parseInt(rendererControls.waveMultiplierSlizer.value);\n        getSpan(rendererControls.waveMultiplierSlizer).innerText = rendererControls.waveMultiplierSlizer.value;\n    });\n    rendererControls.waveMultiplierSlizer.onchange = () =>\n    {\n        this._saveSettings();\n    };\n    \n    // render notes\n    rendererControls.noteToggler.onclick = () =>\n    {\n        renderer.renderNotes = !renderer.renderNotes;\n        this._saveSettings();\n    };\n    \n    // render active notes effect\n    rendererControls.activeNoteToggler.onclick = () =>\n    {\n        renderer.drawActiveNotes = !renderer.drawActiveNotes;\n        this._saveSettings();\n    };\n    \n    // show visual pitch\n    rendererControls.visualPitchToggler.onclick = () =>\n    {\n        renderer.showVisualPitch = !renderer.showVisualPitch;\n        this._saveSettings();\n    };\n    \n    // stabilize waveforms\n    rendererControls.stabilizeWaveformsToggler.onclick = () =>\n    {\n        renderer.stabilizeWaveforms = !renderer.stabilizeWaveforms;\n        this._saveSettings();\n    };\n    \n    // dynamic gain\n    rendererControls.dynamicGainToggler.onclick = () =>\n    {\n        renderer.dynamicGain = !renderer.dynamicGain;\n        this._saveSettings();\n    };\n    \n    // logarithmic frequency\n    rendererControls.logarithmicFrequencyToggler.onclick = () =>\n    {\n        renderer.logarithmicFrequency = !renderer.logarithmicFrequency;\n        this._saveSettings();\n    };\n    \n    // exponential gain\n    rendererControls.exponentialGainToggler.onclick = () =>\n    {\n        renderer.exponentialGain = !renderer.exponentialGain;\n        this._saveSettings();\n    };\n}", "import { isMobile } from \"../../utils/is_mobile.js\";\nimport { MIDIDeviceHandler, Sequencer } from \"spessasynth_lib\";\n\n/**\n * @param handler {MIDIDeviceHandler}\n * @param sequi {SequencerUI}\n * @param synthui {SynthetizerUI}\n * @this {SpessaSynthSettings}\n * @private\n */\nexport function _createMidiSettingsHandler(handler, sequi, synthui)\n{\n    handler.createMIDIDeviceHandler().then(success =>\n    {\n        if (success)\n        {\n            this._createMidiInputHandler(handler, synthui.synth);\n            this._createMidiOutputHandler(handler, sequi);\n        }\n        else\n        {\n            if (!isMobile)\n            {\n                const parent = document.getElementById(\"midi_settings\");\n                // show midi as not available\n                const input = this.htmlControls.midi.inputSelector;\n                const output = this.htmlControls.midi.outputSelector;\n                // hide everything\n                input.classList.add(\"hidden\");\n                output.classList.add(\"hidden\");\n                parent.querySelector(\"label[for='midi_input_selector']\").classList.add(\"hidden\");\n                parent.querySelector(\"label[for='midi_output_selector']\").classList.add(\"hidden\");\n                \n                // show error\n                const errorMessage = document.createElement(\"h3\");\n                errorMessage.classList.add(\"error_message\");\n                parent.appendChild(errorMessage);\n                this.locale.bindObjectProperty(errorMessage, \"textContent\", \"locale.warnings.noMidiSupport\");\n            }\n        }\n    });\n}\n\n/**\n * @param handler {MIDIDeviceHandler}\n * @param synth {CustomSynth}\n * @this {SpessaSynthSettings}\n * @private\n */\nexport function _createMidiInputHandler(handler, synth)\n{\n    // input selector\n    if (handler.inputs.length < 1)\n    {\n        return;\n    }\n    // no device\n    const select = this.htmlControls.midi.inputSelector;\n    for (const input of handler.inputs)\n    {\n        const option = document.createElement(\"option\");\n        option.value = input[0].toString();\n        option.innerText = input[1].name;\n        select.appendChild(option);\n    }\n    select.onchange = () =>\n    {\n        if (select.value === \"-1\")\n        {\n            handler.disconnectAllDevicesFromSynth();\n        }\n        else\n        {\n            // noinspection JSCheckFunctionSignatures\n            handler.connectDeviceToSynth(handler.inputs.get(select.value), synth);\n        }\n        this._saveSettings();\n    };\n    // try to connect the first input (if it exists)\n    if (handler.inputs.size > 0)\n    {\n        const firstInput = handler.inputs.entries().next().value;\n        // noinspection JSCheckFunctionSignatures\n        handler.connectDeviceToSynth(firstInput[1], synth);\n        select.value = firstInput[0];\n    }\n}\n\n/**\n * note that using sequi allows us to get the sequencer after it has been created\n * @param handler {MIDIDeviceHandler}\n * @param sequi {SequencerUI}\n * @this {SpessaSynthSettings}\n * @private\n */\nexport function _createMidiOutputHandler(handler, sequi)\n{\n    if (!handler.outputs)\n    {\n        setTimeout(() =>\n        {\n            this._createMidiOutputHandler(handler, sequi);\n        }, 1000);\n        return;\n    }\n    if (handler.outputs.length < 1)\n    {\n        return;\n    }\n    const select = this.htmlControls.midi.outputSelector;\n    for (const output of handler.outputs)\n    {\n        const option = document.createElement(\"option\");\n        option.value = output[0].toString();\n        option.innerText = output[1].name;\n        select.appendChild(option);\n    }\n    \n    select.onchange = () =>\n    {\n        if (!sequi.seq)\n        {\n            // set timeout to wait for sequencer to exist\n            setTimeout(select.onchange, 1000);\n            return;\n        }\n        if (select.value === \"-1\")\n        {\n            handler.disconnectSeqFromMIDI(/** @type {Sequencer}*/sequi.seq);\n        }\n        else\n        {\n            handler.connectMIDIOutputToSeq(handler.outputs.get(select.value), /** @type {Sequencer}*/sequi.seq);\n        }\n        this._saveSettings();\n    };\n}", "export const rendererSettingsLocale = {\n    title: \"Renderer settings\",\n    \n    mode: {\n        title: \"Visualization mode\",\n        description: \"Change the visualization mode of the channels\",\n        waveforms: \"Waveforms\",\n        spectrumSplit: \"Spectrum Split\",\n        spectrum: \"Spectrum\",\n        filledWaveforms: \"Filled Waveforms\"\n    },\n    \n    noteFallingTime: {\n        title: \"Note falling time (milliseconds)\",\n        description: \"How fast the notes fall (visually)\"\n    },\n    \n    noteAfterTriggerTime: {\n        title: \"Note after trigger time (milliseconds)\",\n        description: \"How long the notes fall after they get triggered. Zero means that they trigger at the bottom\"\n    },\n    \n    waveformThickness: {\n        title: \"Waveform line thickness (px)\",\n        description: \"How thick the waveform lines are\"\n    },\n    \n    waveformSampleSize: {\n        title: \"Sample size\",\n        description: \"How detailed the visualizations are (Note: high values might impact performance). Also note that high values will add a delay to the audio to sync the waveforms with the audio\"\n    },\n    \n    waveformAmplifier: {\n        title: \"Amplifier\",\n        description: \"How vibrant the visualizaions are\"\n    },\n    \n    toggleExponentialGain: {\n        title: \"Enable exponential gain\",\n        description: \"Make the differences in gain more visible by using exponential curve rather than linear for height calculation\"\n    },\n    \n    toggleDynamicGain: {\n        title: \"Enable dynamic gain\",\n        description: \"Adjust the gain automatically so the highest point always touches the ceiling of the display\"\n    },\n    \n    toggleLogarithmicFrequency: {\n        title: \"Enable logarithmic frequency\",\n        description: \"Spread the frequency bins in a logarithmic fashion, rather than linear. Recommended\"\n    },\n    \n    toggleWaveformsRendering: {\n        title: \"Enable waveforms rendering\",\n        description: \"Enable rendering the channel waveforms (colorful lines showing audio)\"\n    },\n    \n    toggleNotesRendering: {\n        title: \"Enable notes rendering\",\n        description: \"Enable rendering of the falling notes when playing a MIDI file\"\n    },\n    \n    toggleDrawingActiveNotes: {\n        title: \"Enable drawing active notes\",\n        description: \"Enable notes lighting up and glowing when they get pressed\"\n    },\n    \n    toggleDrawingVisualPitch: {\n        title: \"Enable drawing visual pitch\",\n        description: \"Enable notes sliding left or right when the pitch wheel is applied\"\n    },\n    \n    toggleStabilizeWaveforms: {\n        title: \"Stabilize waveforms\",\n        description: \"Enable oscilloscope triggering\"\n    }\n};", "export const keyboardSettingsLocale = {\n    title: \"MIDI Keyboard settings\",\n    \n    selectedChannel: {\n        title: \"Selected channel\",\n        description: \"The channel keyboard sends messages to\",\n        channelOption: \"Channel {0}\"\n    },\n    \n    keyboardSize: {\n        title: \"Keyboard size\",\n        description: \"The range of keys shown on the keyboard. Adjusts the MIDI note size accordingly\",\n        \n        full: \"128 keys (full)\",\n        piano: \"88 keys (piano)\",\n        fiveOctaves: \"5 octaves\",\n        useSongKeyRange: \"Use song's key range\",\n        twoOctaves: \"Two octaves\"\n    },\n    \n    toggleTheme: {\n        title: \"Use dark theme\",\n        description: \"Use the dark MIDI keyboard theme\"\n    },\n    \n    show: {\n        title: \"Show\",\n        description: \"Show/hide MIDI keyboard\"\n    }\n};", "export const midiSettingsLocale = {\n    title: \"MIDI settings\",\n    \n    midiInput: {\n        title: \"MIDI input\",\n        description: \"The port to listen on for MIDI messages\",\n        disabled: \"Disabled\"\n    },\n    \n    midiOutput: {\n        title: \"MIDI output\",\n        description: \"The port to play the MIDI file to\",\n        disabled: \"Use SpessaSynth\"\n    },\n    \n    reminder: {\n        title: \"Note that you need to RESTART YOUR BROWSER after connecting a new MIDI device for it to show up here.\",\n        description: \"Also note that Safari does not support WebMIDI, so you will need to use a different browser if you are on Mac.\"\n    }\n};", "export const interfaceSettings = {\n    title: \"Interface settings\",\n    \n    toggleTheme: {\n        title: \"Use dark theme\",\n        description: \"Enable the dark theme for the interface\"\n    },\n    \n    selectLanguage: {\n        title: \"Language\",\n        description: \"Change the program language\",\n        helpTranslate: \"Translate SpessaSynth\"\n    },\n    \n    layoutDirection: {\n        title: \"Layout direction\",\n        description: \"The layout direction of the renderer and keyboard\",\n        values: {\n            downwards: \"Downwards\",\n            upwards: \"Upwards\",\n            leftToRight: \"Left to right\",\n            rightToLeft: \"Right to left\"\n        }\n    },\n    \n    reminder: {\n        title: \"Did you know that you can hover over the settings to get more information?\",\n        description: \"Like this one!\"\n    },\n    \n    showControls: {\n        title: \"Show controls\",\n        description: \"Show the transport control buttons\"\n    }\n};", "import { rendererSettingsLocale } from \"./renderer_settings.js\";\nimport { keyboardSettingsLocale } from \"./keyboard_settings.js\";\nimport { midiSettingsLocale } from \"./midi_settings.js\";\nimport { interfaceSettings } from \"./interface_settings.js\";\n\n/**\n * @type {CompleteSettingsLocale}\n */\nexport const settingsLocale = {\n    toggleButton: \"Settings\",\n    mainTitle: \"Program settings\",\n    \n    rendererSettings: rendererSettingsLocale,\n    keyboardSettings: keyboardSettingsLocale,\n    midiSettings: midiSettingsLocale,\n    \n    interfaceSettings: interfaceSettings\n};", "/**\n * locale for music player mode\n * @type {{nothingPlaying: string, currentlyPlaying: string, nothingPlayingCopyright: string, toggleButton: {description: string, title: string}}}\n */\nexport const musicPlayerModeLocale = {\n    toggleButton: {\n        title: \"Toggle music player mode\",\n        description: \"Toggle the simplified UI version, hiding the keyboard and note visualizations\"\n    },\n    currentlyPlaying: \"Currently playing:\",\n    nothingPlaying: \"Nothing is playing\",\n    nothingPlayingCopyright: \"Upload a MIDI!\"\n};", "export const channelControllerLocale = {\n    voiceMeter: {\n        title: \"Voices: \",\n        description: \"Voices: The current amount of voices playing on channel {0}\"\n    },\n    \n    pitchBendMeter: {\n        title: \"Pitch: \",\n        description: \"Pitch Wheel: The current pitch bend applied to channel {0}\"\n    },\n    \n    panMeter: {\n        title: \"Pan: \",\n        description: \"Pan: The current stereo panning applied to channel {0} (right-click to lock)\"\n    },\n    \n    expressionMeter: {\n        title: \"Expression: \",\n        description: \"Expression: The current expression (loudness) of channel {0} (right-click to lock)\"\n    },\n    \n    volumeMeter: {\n        title: \"Volume: \",\n        description: \"Volume: The current volume of channel {0} (right-click to lock)\"\n    },\n    \n    modulationWheelMeter: {\n        title: \"Mod Wheel: \",\n        description: \"Modulation Wheel: The current modulation (usually vibrato) depth of channel {0} (right-click to lock)\"\n    },\n    \n    chorusMeter: {\n        title: \"Chorus: \",\n        description: \"Chorus Level: The current level of chorus effect applied to channel {0} (right-click to lock)\"\n    },\n    \n    reverbMeter: {\n        title: \"Reverb: \",\n        description: \"Reverb Level: The current level of reverb effect applied to channel {0} (right-click to lock)\"\n    },\n    \n    filterMeter: {\n        title: \"Filter: \",\n        description: \"Filter Cutoff: The current level of low-pass filter cutoff applied to channel {0} (right-click to lock)\"\n    },\n    \n    resonanceMeter: {\n        title: \"Resonance: \",\n        description: \"Filter Resonance: The current resonance (Q) level of the low-pass filter applied to channel {0} (right-click to lock)\"\n    },\n    \n    transposeMeter: {\n        title: \"Transpose: \",\n        description: \"Channel Transpose: The current transposition (key shift) of channel {0}\"\n    },\n    \n    attackMeter: {\n        title: \"Attack Time: \",\n        description: \"Attack Time: The current attack time (speed) of channel {0} (right-click to lock)\"\n    },\n    \n    releaseMeter: {\n        title: \"Release Time: \",\n        description: \"Release Time: The current release time (speed) of channel {0} (right-click to lock)\"\n    },\n    \n    portamentoTimeMeter: {\n        title: \"Porta Time: \",\n        description: \"Portamento Time: The current portamento time of channel {0} (right-click to lock). Set to 0 to disable portamento.\"\n    },\n    \n    portamentoControlMeter: {\n        title: \"Porta Ctrl: \",\n        description: \"Portamento Control: Starting key number to glide from on channel {0} (you probably don't want to lock this)\"\n    },\n    \n    groupSelector: {\n        description: \"Select the group of MIDI Controllers to manipulate\",\n        effects: \"Effects\",\n        volumeEnvelope: \"Vol. Envelope\",\n        filter: \"Filter\",\n        portamento: \"Portamento (glide)\"\n    },\n    \n    presetSelector: {\n        description: \"Change the patch (instrument) channel {0} is using\",\n        selectionPrompt: \"Change instrument for channel {0}\",\n        searchPrompt: \"Search...\"\n    },\n    \n    presetReset: {\n        description: \"Unlock channel {0} to allow program changes\"\n    },\n    \n    soloButton: {\n        description: \"Solo on channel {0}\"\n    },\n    \n    muteButton: {\n        description: \"Mute/unmute channel {0}\"\n    },\n    \n    drumToggleButton: {\n        description: \"Toggle drums on channel {0}\"\n    }\n};", "export const effectsConfig = {\n    button: {\n        title: \"Effects config\",\n        description: \"Configure the chorus and reverb effects and the custom vibrato\"\n    },\n    reverbConfig: {\n        title: \"Reverb configuration\",\n        description: \"Configure the reverb processor\",\n        impulseResponse: {\n            title: \"Impulse response\",\n            description: \"Select impulse response for the convolver reverb\"\n        }\n    },\n    \n    chorusConfig: {\n        title: \"Chorus configuration\",\n        description: \"Configure the chorus processor\",\n        nodesAmount: {\n            title: \"Nodes amount\",\n            description: \"The amount of delay nodes (for each stereo channel) to use\"\n        },\n        defaultDelay: {\n            title: \"Delay (s)\",\n            description: \"The delay time for the first node in seconds\"\n        },\n        delayVariation: {\n            title: \"Delay increment (s)\",\n            description: \"The amount to increment each delay node after the first one in seconds\"\n        },\n        stereoDifference: {\n            title: \"Stereo difference (s)\",\n            description: \"The difference of delays between two channels (added to the left channel and subtracted from the right)\"\n        },\n        oscillatorFrequency: {\n            title: \"LFO frequency (Hz)\",\n            description: \"The first delay node's LFO frequency, in Hz. The LFO controls delay time.\"\n        },\n        frequencyVariation: {\n            title: \"LFO increment (Hz)\",\n            description: \"The amount to increment each LFO's frequency after the first one, in Hz\"\n        },\n        oscillatorGain: {\n            title: \"LFO gain (s)\",\n            description: \"How much will LFO alter the delay in delay nodes, in seconds\"\n        },\n        apply: {\n            title: \"Apply\",\n            description: \"Apply the selected settings\"\n        }\n    }\n};", "export const keyModifiers = {\n    button: {\n        title: \"Key Modifiers\",\n        description: \"Modify individual key parameters\"\n    },\n    \n    mainTitle: \"Key Modification editor\",\n    \n    detailedDescription: \"This menu allows you to modify a MIDI note on a given channel.\\n\"\n        + \"Currently you can modify its velocity and assign a patch (instrument) it uses.\\n\" +\n        \" This is especially useful for drums.\",\n    \n    prompt: \"What would you like to do?\",\n    \n    selectKey: {\n        prompt: \"Press the key you want to modify on the keyboard.\",\n        title: \"Select key\",\n        change: \"Change key\"\n    },\n    \n    selectedChannel: {\n        title: \"Selected channel\",\n        description: \"The channel to which the key you want to modify belongs\"\n    },\n    \n    selectedKey: {\n        title: \"Selected key: {0}\",\n        description: \"You have selected the MIDI note number {0}\"\n    },\n    \n    modifyKey: {\n        title: \"Modify a key\",\n        description: \"Modify a single key on a given channel\",\n        velocity: {\n            title: \"Velocity override\",\n            description: \"The velocity to use on this key, ignoring the MIDI velocity. Leave at -1 for unchanged\"\n        },\n        gain: {\n            title: \"Gain\",\n            description: \"Linear gain for this voice. Set to 1 for unchanged.\"\n        },\n        preset: {\n            title: \"Preset override\",\n            description: \"The preset to use on this key.\",\n            unchanged: \"Unchanged\"\n        },\n        apply: {\n            title: \"Apply\",\n            description: \"Apply the selected modifier\"\n        }\n    },\n    \n    removeModification: {\n        title: \"Remove modification\",\n        description: \"Remove modification from a single key on a given channel\",\n        \n        remove: {\n            title: \"Remove\",\n            description: \"Remove this key modifier\"\n        }\n    },\n    \n    resetModifications: {\n        title: \"Reset changes\",\n        description: \"Clear and reset all key modifications from all channels\",\n        \n        confirmation: {\n            title: \"Confirm your actions\",\n            description: \"Are you sure you want to remove ALL modifications?\"\n        }\n    }\n};", "import { channelControllerLocale } from \"./channel_controller.js\";\nimport { effectsConfig } from \"./effects_config.js\";\nimport { keyModifiers } from \"./key_modifiers.js\";\n\n/**\n *\n * @type {{systemReset: {description: string, title: string}, disableCustomVibrato: {description: string, title: string}, mainTransposeMeter: {description: string, title: string}, mainVoiceMeter: {description: string, title: string}, midiPanic: {description: string, title: string}, mainPanMeter: {description: string, title: string}, mainVolumeMeter: {description: string, title: string}, toggleButton: {description: string, title: string}, channelController: {transposeMeter: {description: string, title: string}, voiceMeter: {description: string, title: string}, modulationWheelMeter: {description: string, title: string}, expressionMeter: {description: string, title: string}, panMeter: {description: string, title: string}, presetSelector: {description: string}, presetReset: {description: string}, pitchBendMeter: {description: string, title: string}, reverbMeter: {description: string, title: string}, volumeMeter: {description: string, title: string}, drumToggleButton: {description: string}, muteButton: {description: string}, chorusMeter: {description: string, title: string}}, blackMidiMode: {description: string, title: string}}}\n */\nexport const synthesizerControllerLocale = {\n    toggleButton: {\n        title: \"Synthesizer controller\",\n        description: \"Show the synthesizer controller\"\n    },\n    \n    // meters\n    mainVoiceMeter: {\n        title: \"Voices: \",\n        description: \"The total amount of voices currently playing\"\n    },\n    \n    mainVolumeMeter: {\n        title: \"Volume: \",\n        description: \"The current master volume of the synthesizer\"\n    },\n    \n    mainPanMeter: {\n        title: \"Pan: \",\n        description: \"The current master stereo panning of the synthesizer\"\n    },\n    \n    mainTransposeMeter: {\n        title: \"Transpose: \",\n        description: \"Transpose: Transposes the synthesizer (in semitones or keys)\"\n    },\n    \n    // buttons\n    midiPanic: {\n        title: \"MIDI Panic\",\n        description: \"MIDI Panic: Stops all voices immediately\"\n    },\n    \n    systemReset: {\n        title: \"Reset Controllers\",\n        description: \"Reset Controllers: Resets all MIDI controllers to their default values\"\n    },\n    \n    blackMidiMode: {\n        title: \"Black MIDI mode\",\n        description: \"Transpose: Toggles the High Performance Mode, simplifying the look and killing the notes faster\"\n    },\n    \n    showOnlyUsed: {\n        title: \"Show Only Used\",\n        description: \"Show only the used MIDI channels in the synthesizer controller\"\n    },\n    \n    disableCustomVibrato: {\n        title: \"Disable custom vibrato\",\n        description: \"Disables the custom (NRPN) Vibrato permamently. Reload the website to reenable it\"\n    },\n    \n    helpButton: {\n        title: \"Help\",\n        description: \"Help: Opens an external website with the usage guide\"\n    },\n    \n    interpolation: {\n        description: \"Select the synthesizer's interpolation method\",\n        linear: \"Linear Interpolation\",\n        nearestNeighbor: \"Nearest neighbor\",\n        cubic: \"Cubic Interpolation\"\n    },\n    \n    advancedConfiguration: {\n        title: \"Config\",\n        description: \"Configure the advanced settings for the synthesizer\"\n    },\n    \n    voiceCap: {\n        title: \"Voice cap\",\n        description: \"The maximum amount of voices allowed to play at once\"\n    },\n    \n    holdPedalDown: \"Hold pedal is down (Shift)\",\n    port: \"Port {0} (click to toggle visibility)\",\n    channelController: channelControllerLocale,\n    effectsConfig: effectsConfig,\n    keyModifiers: keyModifiers\n};", "export const sequencerControllerLocale = {\n    previousSong: \"Previous song\",\n    nextSong: \"Next song\",\n    loopThis: \"Loop this song\",\n    playPause: \"Play/pause\",\n    shuffle: \"Shuffle songs\",\n    playbackRate: \"Playback speed\",\n    lyrics: {\n        show: \"Show lyrics\",\n        title: \"Decoded text\",\n        noLyrics: \"No lyrics available...\",\n        otherText: {\n            title: \"Other text\"\n        },\n        \n        subtitles: {\n            title: \"Upload ASS subtitles\",\n            description: \"Upload your own subtitles in the (.ass) format\"\n        }\n    }\n};", "export const exportAudio = {\n    button: {\n        title: \"Save Audio\",\n        description: \"Save the composition to various formats\"\n    },\n    \n    formats: {\n        title: \"Choose format\",\n        formats: {\n            wav: {\n                button: {\n                    title: \"WAV audio (.wav)\",\n                    description: \"Export the song with modifications as a .wav audio file\"\n                },\n                options: {\n                    title: \"WAV export options\",\n                    description: \"Export the current MIDI file as WAV applying all the modifications made via the synthesizer controller.\",\n                    confirm: \"Export\",\n                    normalizeVolume: {\n                        title: \"Normalize volume\",\n                        description: \"Keep the volume at the same level, no matter how loud or quiet the MIDI is. Recommended.\"\n                    },\n                    additionalTime: {\n                        title: \"Additional time (s)\",\n                        description: \"Additional time at the end of the song to allow for the sound to fade. (seconds)\"\n                    },\n                    sampleRate: {\n                        title: \"Sample rate\",\n                        description: \"Output file sample rate in Hz. Leave as is unless you know what you're doing.\"\n                    },\n                    \n                    separateChannels: {\n                        title: \"Separate channels\",\n                        description: \"Save each channel as a separate file. Useful for things like oscilloscope viewers. Note that this disables reverb and chorus.\",\n                        saving: {\n                            title: \"Channel files\",\n                            save: \"Save channel {0}\",\n                            saveAll: \"Save all\"\n                        }\n                    },\n                    loopCount: {\n                        title: \"Loop count\",\n                        description: \"The amount of times to loop the song\"\n                    }\n                },\n                exportMessage: {\n                    message: \"Exporting WAV audio...\",\n                    addingEffects: \"Adding effects...\",\n                    estimated: \"Remaining:\",\n                    convertWav: \"Converting to wav...\"\n                }\n            },\n            \n            midi: {\n                button: {\n                    title: \"MIDI (.mid)\",\n                    description: \"Export the MIDI file with the controller and instrument changes applied\"\n                }\n            },\n            \n            soundfont: {\n                button: {\n                    title: \"SoundFont (.sf2, .sf3)\",\n                    description: \"Export a SoundFont2 file\"\n                },\n                \n                options: {\n                    title: \"SF export options\",\n                    confirm: \"Export\",\n                    trim: {\n                        title: \"Trim\",\n                        description: \"Export the soundfont trimmed to only use instruments and samples that the MIDI file uses\"\n                    },\n                    compress: {\n                        title: \"Compress\",\n                        description: \"Compress samples with lossy Ogg Vorbis compression if uncompressed. Significantly reduces the file size.\" +\n                            \"If the soundfont was already compressed, it won't be uncompressed even if this option is disabled\"\n                    },\n                    quality: {\n                        title: \"Compression quality\",\n                        description: \"The quality of compression. Higher is better\"\n                    }\n                },\n                \n                exportMessage: {\n                    message: \"Exporting SoundFont...\"\n                }\n            },\n            \n            dls: {\n                button: {\n                    title: \"DLS (.dls)\",\n                    description: \"Export the SoundFont as DLS\"\n                },\n                warning: {\n                    title: \"DLS Export warning\",\n                    message: \"DLS export is limited and may produce broken files with large and complex SoundFonts.\",\n                    details: \"More info\",\n                    confirm: \"Export anyways\"\n                },\n                \n                exportMessage: {\n                    message: \"Exporting DLS...\"\n                }\n            },\n            \n            rmidi: {\n                button: {\n                    title: \"Embedded MIDI (.rmi)\",\n                    description: \"Export the modified MIDI with the embedded trimmed soundfont as a single file. \" +\n                        \"Note that this format isn't widely supported\"\n                },\n                \n                progress: {\n                    title: \"Exporting embeded MIDI...\",\n                    loading: \"Loading Soundfont and MIDI...\",\n                    modifyingMIDI: \"Modifying MIDI...\",\n                    modifyingSoundfont: \"Trimming Soundfont... (this may take a while!)\",\n                    saving: \"Saving RMIDI...\",\n                    done: \"Done!\"\n                },\n                \n                options: {\n                    title: \"RMIDI export options\",\n                    description: \"Embed the current SoundFont + MIDI as RMIDI and apply all the modifications made via the synthesizer controller.\",\n                    confirm: \"Export\",\n                    compress: {\n                        title: \"Compress\",\n                        description: \"Compress the Soundfont with lossy Ogg Vorbis compression. Significantly reduces the file size. Recommended.\"\n                    },\n                    quality: {\n                        title: \"Compression quality\",\n                        description: \"The quality of compression. Higher is better.\"\n                    },\n                    bankOffset: {\n                        title: \"Bank offset\",\n                        description: \"The bank offset of the file. Value of 0 is recommended. Only change if you know what you're doing.\"\n                    },\n                    adjust: {\n                        title: \"Adjust MIDI\",\n                        description: \"Adjusts the MIDI file to the SoundFont. Leave this on unless you know what you're doing.\"\n                    }\n                }\n            }\n        },\n        metadata: {\n            songTitle: {\n                title: \"Title:\",\n                description: \"The song's title\"\n            },\n            album: {\n                title: \"Album:\",\n                description: \"The song's album\"\n            },\n            artist: {\n                title: \"Artist:\",\n                description: \"The song's artist\"\n            },\n            albumCover: {\n                title: \"Album cover:\",\n                description: \"The song's album cover\"\n            },\n            creationDate: {\n                title: \"Created:\",\n                description: \"The song's creation date\"\n            },\n            genre: {\n                title: \"Genre:\",\n                description: \"The song's genre\"\n            },\n            comment: {\n                title: \"Comment:\",\n                description: \"The song's comment\"\n            },\n            duration: {\n                title: \"Duration:\",\n                description: \"The song's duration\"\n            },\n            subject: {\n                title: \"Subject:\",\n                description: \"The song's subject\"\n            }\n        }\n    }\n};", "import { settingsLocale } from \"./settings/settings.js\";\nimport { musicPlayerModeLocale } from \"./music_player_mode.js\";\nimport { synthesizerControllerLocale } from \"./synthesizer_controller/synthesizer_controller.js\";\nimport { sequencerControllerLocale } from \"./sequencer_controller.js\";\nimport { exportAudio } from \"./export_audio.js\";\n\n/**\n *\n * @type {CompleteLocaleTypedef}\n */\nexport const localeEnglish = {\n    localeName: \"English\",\n    // title message\n    titleMessage: \"SpessaSynth: SF2/DLS Javascript Synthesizer\",\n    demoTitleMessage: \"SpessaSynth: SF2/DLS Javascript Synthesizer Online Demo\",\n    \n    synthInit: {\n        genericLoading: \"Loading...\",\n        loadingSoundfont: \"Loading SoundFont...\",\n        loadingBundledSoundfont: \"Loading bundled SoundFont...\",\n        startingSynthesizer: \"Starting Synthesizer...\",\n        savingSoundfont: \"Saving SoundFont for reuse...\",\n        noWebAudio: \"Your browser does not support Web Audio.\",\n        done: \"Ready!\"\n    },\n    \n    // top bar buttons\n    midiUploadButton: \"Upload your MIDI files\",\n    \n    extraBank: {\n        title: \"Extra bank selection\",\n        offset: {\n            title: \"Bank offset\",\n            description: \"Bank offset for the extra bank\"\n        },\n        file: {\n            title: \"Sound bank\",\n            description: \"Select the sound bank (DLS/SF2/SF3)\"\n        },\n        confirm: {\n            title: \"Confirm\",\n            description: \"Confirm and apply the extra bank\"\n        },\n        clear: {\n            title: \"Clear\",\n            description: \"Clear the extra bank\"\n        },\n        button: \"Add an extra sound bank\"\n    },\n    \n    exportAudio: exportAudio,\n    \n    error: \"Error\",\n    yes: \"Yes\",\n    no: \"No\",\n    none: \"None\",\n    \n    \n    demoSoundfontUploadButton: \"Upload the soundfont\",\n    demoGithubPage: \"Project page\",\n    soundfontEditor: \"SoundFont Editor\",\n    demoDownload: {\n        main: \"Download\",\n        downloadLocal: {\n            title: \"Download Local Edition\",\n            description: \"Download SpessaSynth: Local Edition to use offline on your computer\"\n        }\n    },\n    demoSongButton: \"Demo Song\",\n    credits: \"Credits\",\n    dropPrompt: \"Drop files here...\",\n    \n    warnings: {\n        outOfMemory: \"Your browser ran out of memory. Consider using Firefox or SF3 soundfont instead. (see console for error).\",\n        noMidiSupport: \"No MIDI ports detected, this functionality will be disabled.\",\n        warning: \"Warning\"\n    },\n    hideTopBar: {\n        title: \"Hide top bar\",\n        description: \"Hide the top (title) bar to provide a more seamless experience\"\n    },\n    \n    convertDls: {\n        title: \"DLS Conversion\",\n        message: \"Looks like you've uploaded a DLS file. Do you want to convert it to SF2?\"\n    },\n    \n    // all translations split up\n    musicPlayerMode: musicPlayerModeLocale,\n    settings: settingsLocale,\n    synthesizerController: synthesizerControllerLocale,\n    sequencerController: sequencerControllerLocale\n};", "export const rendererSettingsLocale = {\n    title: \"Ustawienia wizualizacji\",\n    \n    mode: {\n        title: \"Tryb wizualizacji\",\n        description: \"Zmie\u0144 tryb wizualizacji kana\u0142\u00F3w\",\n        waveforms: \"Kszta\u0142t fali\",\n        spectrumSplit: \"Spektrum rozdzielone\",\n        spectrum: \"Spektrum\",\n        filledWaveforms: \"Wype\u0142nione fale\"\n    },\n    \n    noteFallingTime: {\n        title: \"Czas spadania nut (ms)\",\n        description: \"Jak szybko spadaj\u0105 z g\u00F3ry nuty (w milisekundach)\"\n    },\n    \n    noteAfterTriggerTime: {\n        title: \"Czas po aktywacji nuty (ms)\",\n        description: \"Jak d\u0142ugo nuty spadaj\u0105 po aktywacji. Zero oznacza, \u017Ce aktywuj\u0105 si\u0119 na dole.\"\n    },\n    \n    waveformThickness: {\n        title: \"Grubo\u015B\u0107 lini fal (px)\",\n        description: \"Jak grube s\u0105 linie fal d\u017Awi\u0119kowych\"\n    },\n    \n    waveformSampleSize: {\n        title: \"Rozmiar pr\u00F3bki\",\n        description: \"Jak szczeg\u00F3\u0142owe s\u0105 wizualizacje (Uwaga: wysokie warto\u015Bci mog\u0105 pogorszy\u0107 wydajno\u015B\u0107) Pami\u0119taj, \u017Ce wysokie warto\u015Bci dodadz\u0105 op\u00F3\u017Anienie do d\u017Awi\u0119ku, aby zsynchronizowa\u0107 fale z d\u017Awi\u0119kiem.\"\n    },\n    \n    waveformAmplifier: {\n        title: \"Wzmacniasz\",\n        description: \"Jak '\u017Cywe' s\u0105 wizualizacje. Kontroluje ich amplitud\u0119\"\n    },\n    \n    toggleExponentialGain: {\n        title: \"Wyk\u0142adniczy przyrost\",\n        description: \"Wyodr\u0119bnij r\u00F3\u017Cnice w g\u0142o\u015Bno\u015Bci cz\u0119stotliwo\u015Bci poprzez zastosowanie funkcji wyk\u0142adniczej\"\n    },\n    \n    toggleDynamicGain: {\n        title: \"Dynamiczny przyrost\",\n        description: \"Automatycznie dostosuj przysrost aby najg\u0142o\u015Bniejsza cz\u0119stotliwo\u015Bc zape\u0142nia\u0142a ca\u0142\u0105 wysoko\u015B\u0107\"\n    },\n    \n    toggleLogarithmicFrequency: {\n        title: \"Logarytmiczna cz\u0119stotliwo\u015B\u0107\",\n        description: \"Roz\u0142\u00F3\u017C cz\u0119stotliwo\u015Bci w spos\u00F3b logarytmiczny zamiast liniowego. Zalecane\"\n    },\n    \n    toggleWaveformsRendering: {\n        title: \"W\u0142\u0105cz rysowanie fal\",\n        description: \"W\u0142\u0105cz rysowanie fal d\u017Awi\u0119kowych (16-tu kolorowych linii z ty\u0142u)\"\n    },\n    \n    toggleNotesRendering: {\n        title: \"W\u0142\u0105cz rysowanie nut\",\n        description: \"W\u0142\u0105cz rysowanie spadaj\u0105cych nut podczas odtwarzania pliku MIDI\"\n    },\n    \n    toggleDrawingActiveNotes: {\n        title: \"W\u0142\u0105cz rysowanie aktywnych nut\",\n        description: \"W\u0142\u0105cz efekt pod\u015Bwietlania si\u0119 nut przy aktywacji\"\n    },\n    \n    toggleDrawingVisualPitch: {\n        title: \"W\u0142\u0105cz wizualizacj\u0119 wysoko\u015Bci tonu\",\n        description: \"W\u0142\u0105cz przesuwanie nut w lewo lub w prawo gdy wysoko\u015B\u0107 nut jest zmieniana\"\n    },\n    \n    toggleStabilizeWaveforms: {\n        title: \"W\u0142\u0105cz stabilizacj\u0119 fal\",\n        description: \"W\u0142\u0105cz stabilizowanie fal d\u017Awi\u0119kowych\"\n    }\n};", "export const keyboardSettingsLocale = {\n    title: \"Ustawienia pianina\",\n    \n    selectedChannel: {\n        title: \"Wybrany kana\u0142\",\n        description: \"Kana\u0142, do kt\u00F3rego b\u0119dzie pod\u0142\u0105czone pianino\",\n        channelOption: \"Kana\u0142 {0}\"\n    },\n    \n    keyboardSize: {\n        title: \"Rozmiar pianina\",\n        description: \"Zakres klawiszy widocznych na pianine. Dostosowuje r\u00F3wnie\u017C szeroko\u015B\u0107 wizualizowanych nut\",\n        \n        full: \"128 klawiszy (pe\u0142en zakres)\",\n        piano: \"88 klawiszy (fortepian)\",\n        fiveOctaves: \"5 oktaw\",\n        twoOctaves: \"Dwie oktawy\",\n        useSongKeyRange: \"U\u017Cyj zakresu utworu\"\n    },\n    \n    toggleTheme: {\n        title: \"W\u0142\u0105cz ciemny motyw\",\n        description: \"W\u0142\u0105cz ciemny motyw wbudowanego pianina\"\n    },\n    \n    show: {\n        title: \"Poka\u017C\",\n        description: \"Poka\u017C/ukryj pianino\"\n    }\n};", "export const midiSettingsLocale = {\n    title: \"Ustawienia MIDI\",\n    \n    midiInput: {\n        title: \"Wej\u015Bcie MIDI\",\n        description: \"Port MIDI, kt\u00F3ry b\u0119dzie nas\u0142uchiwany\",\n        disabled: \"Wy\u0142\u0105czony\"\n    },\n    \n    midiOutput: {\n        title: \"Wyj\u015Bcie MIDI\",\n        description: \"Port MIDI, do kt\u00F3rego b\u0119dzie grany utw\u00F3r\",\n        disabled: \"U\u017Cyj SpessaSynth\"\n    },\n    \n    reminder: {\n        title: \"Zauwa\u017C, \u017Ce po pod\u0142\u0105czeniu nowego urz\u0105dzenia MIDI MUSISZ ZRESTARTOWA\u0106 PRZEGL\u0104DARK\u0118, aby pojawi\u0142o si\u0119 ono tutaj.\",\n        description: \"Zauwa\u017C r\u00F3wnie\u017C, \u017Ce Safari nie obs\u0142uguje WebMIDI, wi\u0119c musisz u\u017Cy\u0107 innej przegl\u0105darki, je\u015Bli jeste\u015B na Macu.\"\n    }\n};", "export const interfaceSettings = {\n    title: \"Ustawienia interfejsu\",\n    \n    toggleTheme: {\n        title: \"W\u0142\u0105cz ciemny motyw\",\n        description: \"W\u0142\u0105cz ciemny motyw programu\"\n    },\n    \n    selectLanguage: {\n        title: \"J\u0119zyk\",\n        description: \"Zmie\u0144 j\u0119zyk programu\",\n        helpTranslate: \"Przet\u0142umacz SpessaSynth\"\n    },\n    \n    layoutDirection: {\n        title: \"Uk\u0142ad\",\n        description: \"Kierunek uk\u0142adu wizualizacji i pianina\",\n        values: {\n            downwards: \"W d\u00F3\u0142\",\n            upwards: \"W g\u00F3r\u0119\",\n            leftToRight: \"Od lewej do prawej\",\n            rightToLeft: \"Od prawej do lewej\"\n        }\n    },\n    \n    reminder: {\n        title: \"Czy wiedzia\u0142e\u015B, \u017Ce mo\u017Cesz najecha\u0107 na ustawienia, aby uzyska\u0107 wi\u0119cej informacji?\",\n        description: \"Tak jak ta!\"\n    },\n    \n    showControls: {\n        title: \"Poka\u017C kontrolki\",\n        description: \"Poka\u017C kontrolki do przewijania czasu\"\n    }\n};", "import { rendererSettingsLocale } from \"./renderer_settings.js\";\nimport { keyboardSettingsLocale } from \"./keyboard_settings.js\";\nimport { midiSettingsLocale } from \"./midi_settings.js\";\nimport { interfaceSettings } from \"./interface_settings.js\";\n\n/**\n *\n * @type {CompleteSettingsLocale}\n */\nexport const settingsLocale = {\n    toggleButton: \"Ustawienia\",\n    mainTitle: \"Ustawienia programu\",\n    \n    rendererSettings: rendererSettingsLocale,\n    keyboardSettings: keyboardSettingsLocale,\n    midiSettings: midiSettingsLocale,\n    \n    interfaceSettings: interfaceSettings\n};", "/**\n * locale for music player mode\n * @type {{nothingPlaying: string, currentlyPlaying: string, nothingPlayingCopyright: string, toggleButton: {description: string, title: string}}}\n */\nexport const musicPlayerModeLocale = {\n    toggleButton: {\n        title: \"Prze\u0142\u0105cz tryb odtwarzania muzyki\",\n        description: \"Prze\u0142\u0105cz uproszczon\u0105 wersj\u0119 interfejsu, ukrywaj\u0105c pianino i wizualizacj\u0119 nut\"\n    },\n    currentlyPlaying: \"Teraz gramy:\",\n    nothingPlaying: \"Nic teraz nie gra\",\n    nothingPlayingCopyright: \"Wgraj jakie\u015B MIDI!\"\n};", "export const channelControllerLocale = {\n    voiceMeter: {\n        title: \"D\u017Awi\u0119ki: \",\n        description: \"Ilo\u015B\u0107 D\u017Awi\u0119k\u00F3w: Aktualna ilo\u015B\u0107 d\u017Awi\u0119k\u00F3w na kanale {0}\"\n    },\n    \n    pitchBendMeter: {\n        title: \"Wysoko\u015B\u0107: \",\n        description: \"Ko\u0142o Wysoko\u015Bci: Aktualna wysoko\u015B\u0107 tonu na kanale {0}\"\n    },\n    \n    panMeter: {\n        title: \"Stereo: \",\n        description: \"Poziom Stereo: Aktualny efekt stereo na kanale {0} (kliknij prawym aby zablokowa\u0107)\"\n    },\n    \n    expressionMeter: {\n        title: \"Ekspresja: \",\n        description: \"Poziom Ekspresji: Aktualna ekspresja (g\u0142o\u015Bno\u015B\u0107) kana\u0142u {0} (kliknij prawym aby zablokowa\u0107)\"\n    },\n    \n    volumeMeter: {\n        title: \"G\u0142o\u015Bno\u015B\u0107: \",\n        description: \"Poziom G\u0142o\u015Bno\u015Bci: Aktualna g\u0142o\u015Bno\u015B\u0107 kana\u0142u {0} (kliknij prawym aby zablokowa\u0107)\"\n    },\n    \n    modulationWheelMeter: {\n        title: \"Modulacja: \",\n        description: \"Ko\u0142o Modulacji: Aktualna g\u0142\u0119boko\u015B\u0107 modulacji (zazwyczaj vibrato) kana\u0142u {0} (kliknij prawym aby zablokowa\u0107)\"\n    },\n    \n    chorusMeter: {\n        title: \"Ch\u00F3r: \",\n        description: \"Poziom Ch\u00F3ru: Aktualny efekt ch\u00F3ru na kanale {0} (kliknij prawym aby zablokowa\u0107)\"\n    },\n    \n    reverbMeter: {\n        title: \"Pog\u0142os: \",\n        description: \"Poziom Pog\u0142osu: Aktualny efekt pog\u0142osu na kanale {0} (kliknij prawym aby zablokowa\u0107)\"\n    },\n    \n    filterMeter: {\n        title: \"Filtr: \",\n        description: \"Poziom Filtra: Aktualny poziom filtra niskopasmowego na kanale {0} (kliknij prawym aby zablokowa\u0107)\"\n    },\n    \n    resonanceMeter: {\n        title: \"Rezonans: \",\n        description: \"Rezonans Filtra: Aktualny poziom rezonansu (Q) filtra dolnoprzepustowego zastosowanego do kana\u0142u {0} (kliknij prawym, aby zablokowa\u0107)\"\n    },\n    \n    attackMeter: {\n        title: \"Atak: \",\n        description: \"Czas Ataku: Aktualny czas ataku (szybko\u015B\u0107) kana\u0142u {0} (kliknij prawym, aby zablokowa\u0107)\"\n    },\n    \n    releaseMeter: {\n        title: \"Zwolnienie: \",\n        description: \"Czas Zwolnienia: Aktualny czas zwolnienia (szybko\u015B\u0107) kana\u0142u {0} (kliknij prawym, aby zablokowa\u0107)\"\n    },\n    \n    portamentoTimeMeter: {\n        title: \"Czas Porta.: \",\n        description: \"Czas Portamento: Aktualny czas portamento kana\u0142u {0} (kliknij prawym, aby zablokowa\u0107). Ustaw na 0, aby wy\u0142\u0105czy\u0107 portamento.\"\n    },\n    \n    portamentoControlMeter: {\n        title: \"Kont. Porta.: \",\n        description: \"Kontrola Portamento: Numer klawisza pocz\u0105tkowego do glissanda na kanale {0} (prawdopodobnie nie chcesz tego zablokowa\u0107)\"\n    },\n    \n    groupSelector: {\n        description: \"Wybierz grup\u0119 kontroler\u00F3w MIDI do manipulacji\",\n        effects: \"Efekty\",\n        volumeEnvelope: \"Obwiednia G\u0142o\u015Bno\u015Bci\",\n        filter: \"Filtr\",\n        portamento: \"Portamento\"\n    },\n    \n    transposeMeter: {\n        title: \"Transpozycja: \",\n        description: \"Transpozycja kana\u0142u: Aktualna transpozycja (przesuni\u0119cie klawiszy) kana\u0142u {0}\"\n    },\n    \n    presetSelector: {\n        description: \"Zmie\u0144 patch (instrument), kt\u00F3rego u\u017Cywa kana\u0142 {0}\",\n        selectionPrompt: \"Zmie\u0144 instrument kana\u0142u {0}\",\n        searchPrompt: \"Wyszukaj...\"\n    },\n    \n    presetReset: {\n        description: \"Odblokuj kana\u0142 {0}, aby program m\u00F3g\u0142 go zmienia\u0107\"\n    },\n    \n    soloButton: {\n        description: \"Solo na kanale {0}\"\n    },\n    \n    muteButton: {\n        description: \"Wycisz/odcisz kana\u0142 {0}\"\n    },\n    \n    drumToggleButton: {\n        description: \"Prze\u0142\u0105cz perkusj\u0119 na kanale {0}\"\n    }\n};", "export const effectsConfig = {\n    button: {\n        title: \"Konfiguracja efekt\u00F3w\",\n        description: \"Skonfiguruj efekt pog\u0142osu i ch\u00F3ru oraz wy\u0142\u0105cz niestandardowe wibrato\"\n    },\n    reverbConfig: {\n        title: \"Konfiguracja pog\u0142osu\",\n        description: \"Skonfiguruj procesor pog\u0142osu\",\n        impulseResponse: {\n            title: \"Impuls pog\u0142osu\",\n            description: \"Wybierz impuls kszta\u0142tuj\u0105cy d\u017Awi\u0119k pog\u0142osu\"\n        }\n    },\n    \n    chorusConfig: {\n        title: \"Konfiguracja ch\u00F3ru\",\n        description: \"Skonfiguruj procesor efektu ch\u00F3ru\",\n        nodesAmount: {\n            title: \"Ilo\u015B\u0107 w\u0119z\u0142\u00F3w\",\n            description: \"Ilo\u015B\u0107 li\u0144 op\u00F3\u017Aniaj\u0105cych dla ka\u017Cdego kana\u0142u stereo\"\n        },\n        defaultDelay: {\n            title: \"Op\u00F3\u017Anienie (s)\",\n            description: \"Op\u00F3\u017Anienie pierwszej linii, w sekundach\"\n        },\n        delayVariation: {\n            title: \"Przyrost op\u00F3\u017Anienia (s)\",\n            description: \"Przyrost op\u00F3\u017Anienia ka\u017Cdej kolejnej linii w sekundach\"\n        },\n        stereoDifference: {\n            title: \"R\u00F3\u017Cnica stereo (s)\",\n            description: \"R\u00F3\u017Cnica op\u00F3\u017Anie\u0144 w kana\u0142ach stereo (dodane do lewego kana\u0142u i odj\u0119te od prawego sekundy)\"\n        },\n        oscillatorFrequency: {\n            title: \"Cz\u0119stotliwo\u015B\u0107 LFO (Hz)\",\n            description: \"Cz\u0119stotliwo\u015B\u0107 pierwszego LFO kontroluj\u0105cego op\u00F3\u017Anienie pierwszej linii w Hz.\"\n        },\n        frequencyVariation: {\n            title: \"Przyrost LFO (Hz)\",\n            description: \"Przyrost cz\u0119stotliwo\u015Bci LFO ka\u017Cdej kolejnej linii w Hz\"\n        },\n        oscillatorGain: {\n            title: \"Si\u0142a LFO (s)\",\n            description: \"Jak bardzo LFO b\u0119dzie wp\u0142ywa\u0107 na op\u00F3\u017Anienie linii, w sekundach\"\n        },\n        apply: {\n            title: \"Zastosuj\",\n            description: \"Zastosuj wybrane ustawienia\"\n        }\n    }\n};", "export const keyModifiers = {\n    button: {\n        title: \"Modyfikacja klawiszy\",\n        description: \"Zmodyfikuj indywidualne parametry klawiszy.\"\n    },\n    \n    mainTitle: \"Edytor modyfikacji klawiszy\",\n    \n    detailedDescription: \"To menu pozwala Ci na modyfikacj\u0119 danych klawiszy na danym kanale.\\n\"\n        + \"Aktualnie mo\u017Cesz nadpisa\u0107 si\u0142\u0119 nacisku oraz przypisa\u0107 instrument do danego klawisza.\\n\" +\n        \"To jest szczeg\u00F3lnie przydatne w przypadku perkusji.\",\n    \n    prompt: \"Co chcesz teraz zrobi\u0107?\",\n    \n    selectKey: {\n        prompt: \"Naci\u015Bnij klawisz kt\u00F3ry chcesz zmodyfikowa\u0107.\",\n        title: \"Wybierz klawisz\",\n        change: \"Zmie\u0144 klawisz\"\n    },\n    \n    selectedChannel: {\n        title: \"Wybrany kana\u0142\",\n        description: \"Kana\u0142 do kt\u00F3rego nale\u017Cy klawisz kt\u00F3ry chcesz zmodyfikowa\u0107.\"\n    },\n    \n    selectedKey: {\n        title: \"Wybrany klawisz: {0}\",\n        description: \"Wybra\u0142e\u015B/a\u015B klawisz MIDI o numerze {0}.\"\n    },\n    \n    modifyKey: {\n        title: \"Zmodyfikuj klawisz\",\n        description: \"Zmodyfikuj pojedynczy klawisz na danym kanale.\",\n        velocity: {\n            title: \"Si\u0142a nacisku\",\n            description: \"Si\u0142a nacisku dla tego klawisza. Pozostaw -1 dla braku zmian.\"\n        },\n        preset: {\n            title: \"Nadpisanie instrumentu\",\n            description: \"Instrument dla tego klawisza.\",\n            unchanged: \"Bez zmian\"\n        },\n        gain: {\n            title: \"G\u0142o\u015Bno\u015B\u0107\",\n            description: \"Liniowy przyrost g\u0142o\u015Bno\u015Bci dla tego klawisza. Pozostaw na 1 dla braku zmian.\"\n        },\n        apply: {\n            title: \"Zastosuj\",\n            description: \"Zastosuj modyfikacj\u0119\"\n        }\n    },\n    \n    removeModification: {\n        title: \"Usu\u0144 modyfikacj\u0119\",\n        description: \"Usu\u0144 modyfikacj\u0119 z klawisza na danym kanale.\",\n        \n        remove: {\n            title: \"Usu\u0144\",\n            description: \"Usu\u0144 ten modyfikator.\"\n        }\n    },\n    \n    resetModifications: {\n        title: \"Zresetuj zmiany\",\n        description: \"Wyczy\u015B\u0107 i usu\u0144 wszystkie zastosowane zmiany\",\n        \n        confirmation: {\n            title: \"Potwierdzenie\",\n            description: \"Jeste\u015B pewien, \u017Ce chcesz usun\u0105\u0107 WSZYSTKIE zmiany?\"\n        }\n    }\n};", "import { channelControllerLocale } from \"./channel_controller.js\";\nimport { effectsConfig } from \"./effects_config.js\";\nimport { keyModifiers } from \"./key_modifiers.js\";\n\n/**\n * @type {{systemReset: {description: string, title: string}, disableCustomVibrato: {description: string, title: string}, mainTransposeMeter: {description: string, title: string}, mainVoiceMeter: {description: string, title: string}, midiPanic: {description: string, title: string}, mainPanMeter: {description: string, title: string}, mainVolumeMeter: {description: string, title: string}, toggleButton: {description: string, title: string}, channelController: {transposeMeter: {description: string, title: string}, voiceMeter: {description: string, title: string}, modulationWheelMeter: {description: string, title: string}, expressionMeter: {description: string, title: string}, panMeter: {description: string, title: string}, presetSelector: {description: string}, presetReset: {description: string}, pitchBendMeter: {description: string, title: string}, reverbMeter: {description: string, title: string}, volumeMeter: {description: string, title: string}, drumToggleButton: {description: string}, muteButton: {description: string}, chorusMeter: {description: string, title: string}}, blackMidiMode: {description: string, title: string}}}\n */\nexport const synthesizerControllerLocale = {\n    toggleButton: {\n        title: \"Kontroler syntezatora\",\n        description: \"Poka\u017C kontroler syntezatora\"\n    },\n    \n    // meters\n    mainVoiceMeter: {\n        title: \"D\u017Awi\u0119ki: \",\n        description: \"Ca\u0142kowita ilo\u015B\u0107 aktualnie odtwarzanych d\u017Awi\u0119k\u00F3w\"\n    },\n    \n    mainVolumeMeter: {\n        title: \"G\u0142o\u015Bno\u015B\u0107: \",\n        description: \"Aktualna g\u0142o\u015Bno\u015B\u0107 syntezatora\"\n    },\n    \n    mainPanMeter: {\n        title: \"Stereo: \",\n        description: \"Aktualna pozycja stereo syntezatora\"\n    },\n    \n    mainTransposeMeter: {\n        title: \"Transpozycja: \",\n        description: \"Transpozycjonuje syntezator (w semitonach)\"\n    },\n    \n    // buttons\n    midiPanic: {\n        title: \"MIDI Panic\",\n        description: \"Zatrzymuje wszystkie d\u017Awi\u0119ki\"\n    },\n    \n    systemReset: {\n        title: \"Reset systemu\",\n        description: \"Resetuje wszystkie kontroleru do ich domy\u015Blnych warto\u015Bci\"\n    },\n    \n    blackMidiMode: {\n        title: \"Tryb black MIDI\",\n        description: \"Prze\u0142\u0105cza tryb wysokiej wydajno\u015Bci, upraszczaj\u0105c wygl\u0105d i pogarszaj\u0105c jako\u015B\u0107 d\u017Awi\u0119ku\"\n    },\n    \n    disableCustomVibrato: {\n        title: \"Wy\u0142\u0105cz niestandardowe vibrato\",\n        description: \"Wy\u0142\u0105cza niestandardowe (NRPN) vibrato. Wymaga prze\u0142adowania strony aby je ponownie w\u0142\u0105czy\u0107\"\n    },\n    \n    helpButton: {\n        title: \"Pomoc\",\n        description: \"Poka\u017C instrukcj\u0119 obs\u0142ugi\"\n    },\n    \n    interpolation: {\n        description: \"Wybierz metod\u0119 interpolacji\",\n        linear: \"Interpolacja liniowa\",\n        nearestNeighbor: \"Najbli\u017Cszy s\u0105siad\",\n        cubic: \"Interpolacja Sze\u015Bcienna\"\n    },\n    \n    showOnlyUsed: {\n        title: \"Poka\u017C tylko u\u017Cyte\",\n        description: \"Pokazuj tylko u\u017Cyte kontrolery MIDI w tym menu\"\n    },\n    \n    advancedConfiguration: {\n        title: \"Ustawienia\",\n        description: \"Skonfiguruj zaawansowane ustawienia syntezatora\"\n    },\n    \n    voiceCap: {\n        title: \"Limit g\u0142os\u00F3w\",\n        description: \"Maksymalna ilo\u015B\u0107 g\u0142os\u00F3w mog\u0105ca gra\u0107 jednocze\u015Bnie\"\n    },\n    \n    holdPedalDown: \"Peda\u0142 podtrzymania naci\u015Bni\u0119ty (Shift)\",\n    port: \"Port {0} (kliknij aby zmieni\u0107 widoczno\u015B\u0107)\",\n    channelController: channelControllerLocale,\n    effectsConfig: effectsConfig,\n    keyModifiers: keyModifiers\n};", "export const sequencerControllerLocale = {\n    previousSong: \"Poprzedni utw\u00F3r\",\n    nextSong: \"Nast\u0119pny utw\u00F3r\",\n    loopThis: \"Odtwarzaj w p\u0119tli\",\n    playPause: \"Odtw\u00F3rz/wstrzymaj\",\n    shuffle: \"Losowa kolejno\u015B\u0107\",\n    playbackRate: \"Pr\u0119dko\u015B\u0107 odtwarzania\",\n    lyrics: {\n        show: \"Poka\u017C tekst\",\n        title: \"Odczytany tekst\",\n        noLyrics: \"Brak dost\u0119pnego tekstu...\",\n        otherText: {\n            title: \"Inny tekst\"\n        },\n        \n        subtitles: {\n            title: \"Wgraj napisy ASS\",\n            description: \"Wgraj swoje w\u0142asne napisy w formacie ASS (.ass)\"\n        }\n    }\n};", "export const exportAudio = {\n    button: {\n        title: \"Zapisz\",\n        description: \"Zapisz w r\u00F3\u017Cnych formatach\"\n    },\n    \n    formats: {\n        title: \"Wybierz format\",\n        formats: {\n            wav: {\n                button: {\n                    title: \"Audio WAV (.wav)\",\n                    description: \"Eksportuj utw\u00F3r ze zmianami jako plik audio .wav\"\n                },\n                options: {\n                    title: \"Opcje eksportu audio\",\n                    description: \"Eksportuj MIDI jako WAV, uwzgl\u0119dniaj\u0105c wszystkie modyfikacje wykonane w kontrolerze.\",\n                    confirm: \"Eksportuj\",\n                    normalizeVolume: {\n                        title: \"Normalizuj g\u0142o\u015Bno\u015B\u0107\",\n                        description: \"Eksportuj audio z tak\u0105 sam\u0105 g\u0142o\u015Bno\u015Bci\u0105, niezale\u017Cnie od g\u0142o\u015Bno\u015Bci MIDI.\"\n                    },\n                    additionalTime: {\n                        title: \"Dodatkowy czas (s)\",\n                        description: \"Dodatkowy czas na ko\u0144cu utworu aby pozwoli\u0107 na wyciszenie si\u0119 d\u017Awi\u0119ku. (sekundy)\"\n                    },\n                    sampleRate: {\n                        title: \"Cz\u0119stotliwo\u015B\u0107\",\n                        description: \"Cz\u0119stotliwo\u015B\u0107 pr\u00F3bkowania d\u017Awi\u0119ku. Pozostaw bez zmian, chyba \u017Ce wiesz, co robisz.\"\n                    },\n                    separateChannels: {\n                        title: \"Rozdziel kana\u0142y\",\n                        description: \"Zapisz ka\u017Cdy kana\u0142 w osobnym pliuku. Przydatne dla rzeczy jak widok oscyloskopowy. Nale\u017Cy pami\u0119ta\u0107 \u017Ce to wy\u0142\u0105cza ekfet pog\u0142osu i ch\u00F3ru\",\n                        saving: {\n                            title: \"Pliki audio kana\u0142\u00F3w\",\n                            save: \"Zapisz kana\u0142 {0}\",\n                            saveAll: \"Zapisz wszystkie\"\n                        }\n                    },\n                    loopCount: {\n                        title: \"Ilo\u015B\u0107 p\u0119tli\",\n                        description: \"Ilo\u015B\u0107 razy zap\u0119tlenia utworu\"\n                    }\n                },\n                exportMessage: {\n                    message: \"Eksportowanie audio...\",\n                    addingEffects: \"Dodawanie efekt\u00F3w...\",\n                    estimated: \"Pozosta\u0142o:\",\n                    convertWav: \"Konwertowanie do wav...\"\n                }\n            },\n            \n            midi: {\n                button: {\n                    title: \"MIDI (.mid)\",\n                    description: \"Eksportuj plik MIDI wraz ze zmianami instrument\u00F3w i kontroler\u00F3w\"\n                }\n            },\n            \n            soundfont: {\n                button: {\n                    title: \"SoundFont (.sf2, .sf3)\",\n                    description: \"Eksportuj SoundFont\"\n                },\n                \n                options: {\n                    title: \"Opcje eksportu soundfonta\",\n                    confirm: \"Eksportuj\",\n                    trim: {\n                        title: \"Zmniejsz\",\n                        description: \"Zmniejsz SoundFont aby zawiera\u0142 tylko klawisze u\u017Cyte w MIDI\"\n                    },\n                    compress: {\n                        title: \"Kompresuj\",\n                        description: \"Zkompresuj pr\u00F3bki kt\u00F3re nie s\u0105 zkompresowane przy u\u017Cyciu stratnego kodeka Ogg Vorbis. Znacznie zmniejsza rozmiar pliku.\" +\n                            \"Je\u015Bli soundfont by\u0142 ju\u017C skompresowany, nie zostanie zdekompresowany nawet gdy ta opcja jest wy\u0142\u0105czona\"\n                    },\n                    quality: {\n                        title: \"Jako\u015B\u0107 kompresji\",\n                        description: \"Jako\u015B\u0107 skompresowanych pr\u00F3bek. Im wy\u017Csza tym lepsza\"\n                    }\n                }\n            },\n            \n            dls: {\n                button: {\n                    title: \"DLS (.dls)\",\n                    description: \"Eksportuj SoundFonta jako DLS\"\n                },\n                warning: {\n                    title: \"Ostrze\u017Cenie DLS\",\n                    message: \"Eksport do formatu DLS jest ograniczony i mo\u017Ce utworzy\u0107 uszkodzone pliki.\",\n                    details: \"Wi\u0119cej informacji\",\n                    confirm: \"Eksportuj i tak\"\n                }\n            },\n            \n            rmidi: {\n                button: {\n                    title: \"Osadzone MIDI (.rmi)\",\n                    description: \"Eksportuj zmodyfikowane MIDI wraz ze zmniejszonym soundfontem jako jeden plik. \" +\n                        \"Uwaga: ten format nie jest szeroko wspierany\"\n                },\n                \n                progress: {\n                    title: \"Exportowanie osadzonego MIDI...\",\n                    loading: \"Wczytywanie soundfonta i MIDI...\",\n                    modifyingMIDI: \"Modyfikowanie MIDI...\",\n                    modifyingSoundfont: \"Zmniejszanie Soundfonta... (troch\u0119 to zajmie!)\",\n                    saving: \"Zapisywanie RMIDI...\",\n                    done: \"Gotowe!\"\n                },\n                \n                options: {\n                    title: \"Opcje eksportu RMIDI\",\n                    description: \"Osad\u017A SoundFonta + MIDI jako RMIDI i dodaj wszystkie modyfikacje wykonane z kontrolera.\",\n                    confirm: \"Eksportuj\",\n                    compress: {\n                        title: \"Kompresuj\",\n                        description: \"Skompresuj osadzonego soundfonta za pomoc\u0105 stratnego kodeka Ogg Vorbis. Znacznie zmniejsza rozmiar pliku. Zalecane.\"\n                    },\n                    quality: {\n                        title: \"Jako\u015B\u0107 kompresji\",\n                        description: \"Jako\u015B\u0107 skompresowanych pr\u00F3bek. Im wy\u017Csza tym lepsza\"\n                    },\n                    bankOffset: {\n                        title: \"Przesuni\u0119cie banku\",\n                        description: \"Przesuni\u0119cie banku w pliku. Zalecane 0. Zmie\u0144 tylko je\u015Bli wiesz co robisz.\"\n                    },\n                    adjust: {\n                        title: \"Dostosuj MIDI\",\n                        description: \"Dostosuj MIDI do SoundFonta. Pozostaw w\u0142\u0105czone, chyba \u017Ce wiesz co robisz.\"\n                    }\n                    \n                }\n            }\n        },\n        metadata: {\n            songTitle: {\n                title: \"Tytu\u0142:\",\n                description: \"Tytu\u0142 utworu\"\n            },\n            album: {\n                title: \"Album:\",\n                description: \"Album utworu\"\n            },\n            artist: {\n                title: \"Tw\u00F3rca:\",\n                description: \"Tw\u00F3rca utworu\"\n            },\n            albumCover: {\n                title: \"Ok\u0142adka albumu:\",\n                description: \"Ok\u0142adka albumu utworu\"\n            },\n            creationDate: {\n                title: \"Stworzono:\",\n                description: \"Data stworzenia utworu\"\n            },\n            genre: {\n                title: \"Gatunek:\",\n                description: \"Gatunek utworu\"\n            },\n            comment: {\n                title: \"Komentarz:\",\n                description: \"Komentarz do utworu\"\n            },\n            duration: {\n                title: \"Czas trwania:\",\n                description: \"Czas trwania utworu\"\n            },\n            subject: {\n                title: \"Temat:\",\n                description: \"Temat utworu\"\n            }\n        }\n    }\n};", "import { settingsLocale } from \"./settings/settings.js\";\nimport { musicPlayerModeLocale } from \"./music_player_mode.js\";\nimport { synthesizerControllerLocale } from \"./synthesizer_controller/synthesizer_controller.js\";\nimport { sequencerControllerLocale } from \"./sequencer_controller.js\";\nimport { exportAudio } from \"./export_audio.js\";\n\n/**\n *\n * @type {CompleteLocaleTypedef}\n */\nexport const localePolish = {\n    localeName: \"Polski\",\n    // title messsage\n    titleMessage: \"SpessaSynth: JavaScriptowy Syntezator SF2/DLS\",\n    demoTitleMessage: \"SpessaSynth: JavaScriptowy Syntezator SF2/DLS Wersja Demo\",\n    \n    synthInit: {\n        genericLoading: \"Wczytywanie...\",\n        loadingSoundfont: \"Wczytywanie SoundFonta...\",\n        loadingBundledSoundfont: \"Wczytywanie wbudowanego SoundFonta...\",\n        startingSynthesizer: \"Uruchamianie syntezatora...\",\n        savingSoundfont: \"Zapisywanie SoundFonta do przegl\u0105darki...\",\n        noWebAudio: \"Twoja przegl\u0105darka nie wspiera Web Audio.\",\n        done: \"Gotowe!\"\n    },\n    \n    // top bar buttons\n    midiUploadButton: \"Wgraj Twoje pliki MIDI\",\n    midiRenderButton: {\n        title: \"Eksportuj audio\",\n        description: \"Zapisz audio do pliku WAV lub MIDI\"\n    },\n    \n    \n    extraBank: {\n        title: \"Wyb\u00F3r dodatkowego banku\",\n        offset: {\n            title: \"Przesuni\u0119cie banku\",\n            description: \"Przesuni\u0119cie banku dla dodatkowego banku\"\n        },\n        file: {\n            title: \"Plik banku\",\n            description: \"Wybierz plik dla banku d\u017Awi\u0119kowego (DLS/SF2/SF3)\"\n        },\n        confirm: {\n            title: \"Zatwierd\u017A\",\n            description: \"Potwierd\u017A i zastosuj wybrany bank\"\n        },\n        clear: {\n            title: \"Wyczy\u015B\u0107\",\n            description: \"Wyczy\u015B\u0107 dodatkowy bank\"\n        },\n        button: \"Dodaj dodatkowy bank d\u017Awi\u0119k\u00F3w\"\n    },\n    \n    exportAudio: exportAudio,\n    \n    yes: \"Tak\",\n    no: \"Nie\",\n    error: \"B\u0142\u0105d\",\n    none: \"Brak\",\n    \n    demoSoundfontUploadButton: \"Wgraj SoundFonta\",\n    demoGithubPage: \"Strona projektu\",\n    soundfontEditor: \"Edytor SoundFont\u00F3w\",\n    demoDownload: {\n        main: \"Pobierz\",\n        downloadLocal: {\n            title: \"Pobierz Edycj\u0119 Lokaln\u0105\",\n            description: \"Pobierz SpessaSynth: Edycja Lokalna aby u\u017Cywa\u0107 jej na swoim komputerze bez internetu\"\n        }\n    },\n    demoSongButton: \"Piosenka demo\",\n    credits: \"Tw\u00F3rcy\",\n    dropPrompt: \"Upu\u015B\u0107 pliki tutaj...\",\n    \n    warnings: {\n        outOfMemory: \"Twojej przegl\u0105darce sko\u0144czy\u0142a si\u0119 pami\u0119\u0107. Rozwa\u017C u\u017Cycie Firefoxa albo plik\u00F3w SF3. (Zobacz b\u0142\u0105d w konsoli)\",\n        noMidiSupport: \"Nie wykryto MIDI. Korzystanie z port\u00F3w MIDI nie b\u0119dzie dost\u0119pne.\",\n        warning: \"Uwaga\"\n    },\n    \n    hideTopBar: {\n        title: \"Ukryj g\u00F3rny pasek\",\n        description: \"Ukryj pasek tytu\u0142owy w celu poprawy widoczno\u015Bci na pionowych ekranach\"\n    },\n    \n    convertDls: {\n        title: \"Konwersja DLS\",\n        message: \"Wygl\u0105da na to, \u017Ce wgra\u0142e\u015B plik DLS. Czy chcesz przekonwertowa\u0107 go do SF2?\"\n    },\n    \n    // all translations split up\n    musicPlayerMode: musicPlayerModeLocale,\n    settings: settingsLocale,\n    synthesizerController: synthesizerControllerLocale,\n    sequencerController: sequencerControllerLocale\n};", "export const rendererSettingsLocale = {\n    title: \"\u30EC\u30F3\u30C0\u30E9\u30FC\u8A2D\u5B9A\",\n    noteFallingTime: {\n        title: \"\u30CE\u30FC\u30C8\u306E\u843D\u4E0B\u6642\u9593\uFF08\u30DF\u30EA\u79D2\uFF09\",\n        description: \"\u30CE\u30FC\u30C8\u304C\u843D\u3061\u308B\u901F\u3055\uFF08\u8996\u899A\u7684\u306B\uFF09\"\n    },\n    \n    waveformThickness: {\n        title: \"\u6CE2\u5F62\u306E\u7DDA\u306E\u592A\u3055\uFF08\u30D4\u30AF\u30BB\u30EB\uFF09\",\n        description: \"\u6CE2\u5F62\u306E\u7DDA\u306E\u592A\u3055\"\n    },\n    \n    waveformSampleSize: {\n        title: \"\u6CE2\u5F62\u306E\u30B5\u30F3\u30D7\u30EB\u30B5\u30A4\u30BA\",\n        description: \"\u6CE2\u5F62\u306E\u8A73\u7D30\u5EA6\uFF08\u6CE8\uFF1A\u9AD8\u3044\u5024\u306F\u30D1\u30D5\u30A9\u30FC\u30DE\u30F3\u30B9\u306B\u5F71\u97FF\u3092\u4E0E\u3048\u308B\u53EF\u80FD\u6027\u304C\u3042\u308A\u307E\u3059\uFF09 \u9AD8\u3044\u5024\u306F\u3001\u6CE2\u5F62\u3092\u30AA\u30FC\u30C7\u30A3\u30AA\u3068\u540C\u671F\u3055\u305B\u308B\u305F\u3081\u306B\u30AA\u30FC\u30C7\u30A3\u30AA\u306B\u9045\u5EF6\u3092\u8FFD\u52A0\u3057\u307E\u3059\u3002\"\n    },\n    \n    waveformAmplifier: {\n        title: \"\u6CE2\u5F62\u306E\u5897\u5E45\u5668\",\n        description: \"\u6CE2\u5F62\u306E\u9BAE\u3084\u304B\u3055\"\n    },\n    \n    toggleWaveformsRendering: {\n        title: \"\u6CE2\u5F62\u30EC\u30F3\u30C0\u30EA\u30F3\u30B0\u306E\u5207\u308A\u66FF\u3048\",\n        description: \"\u30C1\u30E3\u30F3\u30CD\u30EB\u6CE2\u5F62\u306E\u30EC\u30F3\u30C0\u30EA\u30F3\u30B0\u3092\u5207\u308A\u66FF\u3048\u307E\u3059\uFF08\u30AA\u30FC\u30C7\u30A3\u30AA\u3092\u8868\u793A\u3059\u308B\u30AB\u30E9\u30D5\u30EB\u306A\u7DDA\uFF09\"\n    },\n    \n    toggleNotesRendering: {\n        title: \"\u30CE\u30FC\u30C8\u30EC\u30F3\u30C0\u30EA\u30F3\u30B0\u306E\u5207\u308A\u66FF\u3048\",\n        description: \"MIDI\u30D5\u30A1\u30A4\u30EB\u3092\u518D\u751F\u3059\u308B\u969B\u306E\u843D\u4E0B\u30CE\u30FC\u30C8\u306E\u30EC\u30F3\u30C0\u30EA\u30F3\u30B0\u3092\u5207\u308A\u66FF\u3048\u307E\u3059\"\n    },\n    \n    toggleDrawingActiveNotes: {\n        title: \"\u30A2\u30AF\u30C6\u30A3\u30D6\u30CE\u30FC\u30C8\u306E\u63CF\u753B\u3092\u5207\u308A\u66FF\u3048\",\n        description: \"\u30CE\u30FC\u30C8\u304C\u62BC\u3055\u308C\u305F\u3068\u304D\u306B\u5149\u308A\u8F1D\u304F\u63CF\u753B\u3092\u5207\u308A\u66FF\u3048\u307E\u3059\"\n    },\n    \n    toggleDrawingVisualPitch: {\n        title: \"\u30D3\u30B8\u30E5\u30A2\u30EB\u30D4\u30C3\u30C1\u63CF\u753B\u306E\u5207\u308A\u66FF\u3048\",\n        description: \"\u30D4\u30C3\u30C1\u30DB\u30A4\u30FC\u30EB\u304C\u9069\u7528\u3055\u308C\u305F\u3068\u304D\u306B\u30CE\u30FC\u30C8\u304C\u5DE6\u53F3\u306B\u30B9\u30E9\u30A4\u30C9\u3059\u308B\u63CF\u753B\u3092\u5207\u308A\u66FF\u3048\u307E\u3059\"\n    },\n    \n    toggleStabilizeWaveforms: {\n        title: \"\u6CE2\u5F62\u3092\u5B89\u5B9A\u3055\u305B\u308B\",\n        description: \"\u30AA\u30FC\u30C7\u30A3\u30AA\u6CE2\u5F62\u3092\u5B89\u5B9A\u3055\u305B\u308B\u8A2D\u5B9A\u3092\u5207\u308A\u66FF\u3048\u3001\u6CE2\u5F62\u3092\u56FA\u5B9A\u3057\u307E\u3059\u3002\"\n    }\n};", "export const keyboardSettingsLocale = {\n    title: \"\u30AD\u30FC\u30DC\u30FC\u30C9\u8A2D\u5B9A\",\n    \n    selectedChannel: {\n        title: \"\u9078\u629E\u3055\u308C\u305F\u30C1\u30E3\u30F3\u30CD\u30EB\",\n        description: \"\u30AD\u30FC\u30DC\u30FC\u30C9\u304C\u30E1\u30C3\u30BB\u30FC\u30B8\u3092\u9001\u4FE1\u3059\u308B\u30C1\u30E3\u30F3\u30CD\u30EB\",\n        channelOption: \"\u30C1\u30E3\u30F3\u30CD\u30EB {0}\"\n    },\n    \n    keyboardSize: {\n        title: \"\u30AD\u30FC\u30DC\u30FC\u30C9\u30B5\u30A4\u30BA\",\n        description: \"\u30AD\u30FC\u30DC\u30FC\u30C9\u306B\u8868\u793A\u3055\u308C\u308B\u30AD\u30FC\u306E\u7BC4\u56F2\u3002MIDI\u30CE\u30FC\u30C8\u306E\u30B5\u30A4\u30BA\u306B\u5FDC\u3058\u3066\u8ABF\u6574\u3055\u308C\u307E\u3059\",\n        \n        full: \"128\u30AD\u30FC\uFF08\u5168\u4F53\uFF09\",\n        piano: \"88\u30AD\u30FC\uFF08\u30D4\u30A2\u30CE\uFF09\",\n        fiveOctaves: \"5\u30AA\u30AF\u30BF\u30FC\u30D6\",\n        useSongKeyRange: \"\u66F2\u306E\u30AD\u30FC\u7BC4\u56F2\u3092\u4F7F\u7528\",\n        twoOctaves: \"\u30AA\u30AF\u30BF\u30FC\u30D6\"\n    },\n    \n    toggleTheme: {\n        title: \"\u30C6\u30FC\u30DE\u3092\u5207\u308A\u66FF\u3048\",\n        description: \"\u30AD\u30FC\u30DC\u30FC\u30C9\u306E\u30C6\u30FC\u30DE\u3092\u5207\u308A\u66FF\u3048\u307E\u3059\"\n    },\n    \n    show: {\n        title: \"\u8868\u793A\",\n        description: \"MIDI\u30AD\u30FC\u30DC\u30FC\u30C9\u3092\u8868\u793A/\u975E\u8868\u793A\"\n    }\n};", "export const midiSettingsLocale = {\n    title: \"MIDI\u8A2D\u5B9A\",\n    \n    midiInput: {\n        title: \"MIDI\u5165\u529B\",\n        description: \"MIDI\u30E1\u30C3\u30BB\u30FC\u30B8\u3092\u53D7\u4FE1\u3059\u308B\u30DD\u30FC\u30C8\",\n        disabled: \"\u7121\u52B9\"\n    },\n    \n    midiOutput: {\n        title: \"MIDI\u51FA\u529B\",\n        description: \"MIDI\u30D5\u30A1\u30A4\u30EB\u3092\u518D\u751F\u3059\u308B\u30DD\u30FC\u30C8\",\n        disabled: \"SpessaSynth\u3092\u4F7F\u7528\"\n    },\n    \n    reminder: {\n        title: \"\u65B0\u3057\u3044MIDI\u30C7\u30D0\u30A4\u30B9\u3092\u63A5\u7D9A\u3057\u305F\u5F8C\u3001\u3053\u3053\u306B\u8868\u793A\u3059\u308B\u306B\u306F\u30D6\u30E9\u30A6\u30B6\u3092\u518D\u8D77\u52D5\u3059\u308B\u5FC5\u8981\u304C\u3042\u308B\u3053\u3068\u306B\u6CE8\u610F\u3057\u3066\u304F\u3060\u3055\u3044\u3002\",\n        description: \"\u307E\u305F\u3001Safari\u306FWebMIDI\u3092\u30B5\u30DD\u30FC\u30C8\u3057\u3066\u3044\u306A\u3044\u305F\u3081\u3001Mac\u306E\u5834\u5408\u306F\u5225\u306E\u30D6\u30E9\u30A6\u30B6\u3092\u4F7F\u7528\u3059\u308B\u5FC5\u8981\u304C\u3042\u308A\u307E\u3059\u3002\"\n    }\n};", "import { rendererSettingsLocale } from \"./renderer_settings.js\";\nimport { keyboardSettingsLocale } from \"./keyboard_settings.js\";\nimport { midiSettingsLocale } from \"./midi_settings.js\";\n\n/**\n * @type {CompleteSettingsLocale}\n */\nexport const settingsLocale = {\n    toggleButton: \"\u8A2D\u5B9A\",\n    mainTitle: \"\u30D7\u30ED\u30B0\u30E9\u30E0\u8A2D\u5B9A\",\n    \n    rendererSettings: rendererSettingsLocale,\n    keyboardSettings: keyboardSettingsLocale,\n    midiSettings: midiSettingsLocale,\n    \n    interfaceSettings: {\n        title: \"\u30A4\u30F3\u30BF\u30FC\u30D5\u30A7\u30FC\u30B9\u8A2D\u5B9A\",\n        \n        toggleTheme: {\n            title: \"\u30C6\u30FC\u30DE\u3092\u5207\u308A\u66FF\u3048\",\n            description: \"\u30D7\u30ED\u30B0\u30E9\u30E0\u306E\u30C6\u30FC\u30DE\u3092\u5207\u308A\u66FF\u3048\u307E\u3059\"\n        },\n        \n        selectLanguage: {\n            title: \"\u8A00\u8A9E\",\n            description: \"\u30D7\u30ED\u30B0\u30E9\u30E0\u306E\u8A00\u8A9E\u3092\u5909\u66F4\u3057\u307E\u3059\"\n        },\n        \n        layoutDirection: {\n            title: \"\u30EC\u30A4\u30A2\u30A6\u30C8\u306E\u65B9\u5411\",\n            description: \"\u30EC\u30F3\u30C0\u30E9\u30FC\u3068\u30AD\u30FC\u30DC\u30FC\u30C9\u306E\u30EC\u30A4\u30A2\u30A6\u30C8\u65B9\u5411\",\n            values: {\n                downwards: \"\u4E0B\u5411\u304D\",\n                upwards: \"\u4E0A\u5411\u304D\",\n                leftToRight: \"\u5DE6\u304B\u3089\u53F3\",\n                rightToLeft: \"\u53F3\u304B\u3089\u5DE6\"\n            }\n        },\n        \n        reminder: {\n            title: \"\u8A2D\u5B9A\u306B\u30AB\u30FC\u30BD\u30EB\u3092\u5408\u308F\u305B\u308B\u3068\u3001\u8A73\u7D30\u60C5\u5831\u3092\u8868\u793A\u3067\u304D\u308B\u3053\u3068\u3092\u77E5\u3063\u3066\u3044\u307E\u3057\u305F\u304B\uFF1F\",\n            description: \"\u3053\u306E\u3088\u3046\u306B\uFF01\"\n        }\n    }\n};", "/**\n * locale for music player mode\n * @type {{nothingPlaying: string, currentlyPlaying: string, nothingPlayingCopyright: string, toggleButton: {description: string, title: string}}}\n */\nexport const musicPlayerModeLocale = {\n    toggleButton: {\n        title: \"\u97F3\u697D\u30D7\u30EC\u30A4\u30E4\u30FC\u30E2\u30FC\u30C9\u306E\u5207\u308A\u66FF\u3048\",\n        description: \"\u7C21\u7565\u5316\u3055\u308C\u305FUI\u30D0\u30FC\u30B8\u30E7\u30F3\u306B\u5207\u308A\u66FF\u3048\u3001\u30AD\u30FC\u30DC\u30FC\u30C9\u3068\u30CE\u30FC\u30C8\u306E\u8996\u899A\u5316\u3092\u96A0\u3057\u307E\u3059\"\n    },\n    currentlyPlaying: \"\u518D\u751F\u4E2D:\",\n    nothingPlaying: \"\u518D\u751F\u3057\u3066\u3044\u308B\u3082\u306E\u306F\u3042\u308A\u307E\u305B\u3093\",\n    nothingPlayingCopyright: \"MIDI\u3092\u30A2\u30C3\u30D7\u30ED\u30FC\u30C9\u3057\u3066\u304F\u3060\u3055\u3044\uFF01\"\n};", "export const channelControllerLocale = {\n    voiceMeter: {\n        title: \"\u30DC\u30A4\u30B9: \",\n        description: \"\u30C1\u30E3\u30F3\u30CD\u30EB {0} \u3067\u518D\u751F\u4E2D\u306E\u30DC\u30A4\u30B9\u306E\u73FE\u5728\u306E\u6570\"\n    },\n    \n    pitchBendMeter: {\n        title: \"\u30D4\u30C3\u30C1: \",\n        description: \"\u30C1\u30E3\u30F3\u30CD\u30EB {0} \u306B\u9069\u7528\u3055\u308C\u3066\u3044\u308B\u73FE\u5728\u306E\u30D4\u30C3\u30C1\u30D9\u30F3\u30C9\"\n    },\n    \n    panMeter: {\n        title: \"\u30D1\u30F3: \",\n        description: \"\u30C1\u30E3\u30F3\u30CD\u30EB {0} \u306B\u9069\u7528\u3055\u308C\u3066\u3044\u308B\u73FE\u5728\u306E\u30B9\u30C6\u30EC\u30AA\u30D1\u30F3\u30CB\u30F3\u30B0\uFF08\u53F3\u30AF\u30EA\u30C3\u30AF\u3067\u30ED\u30C3\u30AF\uFF09\"\n    },\n    \n    expressionMeter: {\n        title: \"\u30A8\u30AF\u30B9\u30D7\u30EC\u30C3\u30B7\u30E7\u30F3: \",\n        description: \"\u30C1\u30E3\u30F3\u30CD\u30EB {0} \u306E\u73FE\u5728\u306E\u8868\u73FE\uFF08\u97F3\u91CF\uFF09\uFF08\u53F3\u30AF\u30EA\u30C3\u30AF\u3067\u30ED\u30C3\u30AF\uFF09\"\n    },\n    \n    volumeMeter: {\n        title: \"\u30DC\u30EA\u30E5\u30FC\u30E0: \",\n        description: \"\u30C1\u30E3\u30F3\u30CD\u30EB {0} \u306E\u73FE\u5728\u306E\u97F3\u91CF\uFF08\u53F3\u30AF\u30EA\u30C3\u30AF\u3067\u30ED\u30C3\u30AF\uFF09\"\n    },\n    \n    modulationWheelMeter: {\n        title: \"\u30E2\u30B8\u30E5\u30EC\u30FC\u30B7\u30E7\u30F3\u30DB\u30A4\u30FC\u30EB: \",\n        description: \"\u30C1\u30E3\u30F3\u30CD\u30EB {0} \u306E\u73FE\u5728\u306E\u30E2\u30B8\u30E5\u30EC\u30FC\u30B7\u30E7\u30F3\uFF08\u901A\u5E38\u306F\u30D3\u30D6\u30E9\u30FC\u30C8\uFF09\u306E\u6DF1\u3055\uFF08\u53F3\u30AF\u30EA\u30C3\u30AF\u3067\u30ED\u30C3\u30AF\uFF09\"\n    },\n    \n    chorusMeter: {\n        title: \"\u30B3\u30FC\u30E9\u30B9: \",\n        description: \"\u30C1\u30E3\u30F3\u30CD\u30EB {0} \u306B\u9069\u7528\u3055\u308C\u3066\u3044\u308B\u73FE\u5728\u306E\u30B3\u30FC\u30E9\u30B9\u30A8\u30D5\u30A7\u30AF\u30C8\u306E\u30EC\u30D9\u30EB\uFF08\u53F3\u30AF\u30EA\u30C3\u30AF\u3067\u30ED\u30C3\u30AF\uFF09\"\n    },\n    \n    reverbMeter: {\n        title: \"\u30EA\u30D0\u30FC\u30D6: \",\n        description: \"\u30C1\u30E3\u30F3\u30CD\u30EB {0} \u306B\u9069\u7528\u3055\u308C\u3066\u3044\u308B\u73FE\u5728\u306E\u30EA\u30D0\u30FC\u30D6\u30A8\u30D5\u30A7\u30AF\u30C8\u306E\u30EC\u30D9\u30EB\uFF08\u53F3\u30AF\u30EA\u30C3\u30AF\u3067\u30ED\u30C3\u30AF\uFF09\"\n    },\n    \n    filterMeter: {\n        title: \"\u30D5\u30A3\u30EB\u30BF\u30FC: \",\n        description: \"\u30C1\u30E3\u30F3\u30CD\u30EB {0} \u306B\u9069\u7528\u3055\u308C\u3066\u3044\u308B\u30ED\u30FC\u30D1\u30B9\u30D5\u30A3\u30EB\u30BF\u30FC\u306E\u30AB\u30C3\u30C8\u30AA\u30D5\u306E\u73FE\u5728\u306E\u30EC\u30D9\u30EB (\u53F3\u30AF\u30EA\u30C3\u30AF\u3067\u30ED\u30C3\u30AF)\"\n    },\n    \n    \n    transposeMeter: {\n        title: \"\u30C8\u30E9\u30F3\u30B9\u30DD\u30FC\u30BA: \",\n        description: \"\u30C1\u30E3\u30F3\u30CD\u30EB {0} \u306E\u73FE\u5728\u306E\u79FB\u8ABF\uFF08\u30AD\u30FC\u30B7\u30D5\u30C8\uFF09\"\n    },\n    \n    presetSelector: {\n        description: \"\u30C1\u30E3\u30F3\u30CD\u30EB {0} \u304C\u4F7F\u7528\u3059\u308B\u30D1\u30C3\u30C1\uFF08\u697D\u5668\uFF09\u3092\u5909\u66F4\",\n        selectionPrompt: \"\u30C1\u30E3\u30F3\u30CD\u30EB {0} \u306E\u697D\u5668\u3092\u5909\u66F4\u3059\u308B\",\n        searchPrompt: \"\u691C\u7D22...\"\n    },\n    \n    presetReset: {\n        description: \"\u30D7\u30ED\u30B0\u30E9\u30E0\u5909\u66F4\u3092\u8A31\u53EF\u3059\u308B\u305F\u3081\u306B\u30C1\u30E3\u30F3\u30CD\u30EB {0} \u306E\u30ED\u30C3\u30AF\u3092\u89E3\u9664\"\n    },\n    \n    soloButton: {\n        description: \"\u30C1\u30E3\u30F3\u30CD\u30EB {0} \u3092\u5358\u72EC\u518D\u751F\"\n    },\n    \n    muteButton: {\n        description: \"\u30C1\u30E3\u30F3\u30CD\u30EB {0} \u3092\u30DF\u30E5\u30FC\u30C8/\u30DF\u30E5\u30FC\u30C8\u89E3\u9664\"\n    },\n    \n    drumToggleButton: {\n        description: \"\u30C1\u30E3\u30F3\u30CD\u30EB {0} \u3067\u30C9\u30E9\u30E0\u3092\u5207\u308A\u66FF\u3048\"\n    }\n};", "import { channelControllerLocale } from \"./channel_controller.js\";\n\n/**\n *\n * @type {{systemReset: {description: string, title: string}, disableCustomVibrato: {description: string, title: string}, mainTransposeMeter: {description: string, title: string}, mainVoiceMeter: {description: string, title: string}, midiPanic: {description: string, title: string}, mainPanMeter: {description: string, title: string}, mainVolumeMeter: {description: string, title: string}, toggleButton: {description: string, title: string}, channelController: {transposeMeter: {description: string, title: string}, voiceMeter: {description: string, title: string}, modulationWheelMeter: {description: string, title: string}, expressionMeter: {description: string, title: string}, panMeter: {description: string, title: string}, presetSelector: {description: string}, presetReset: {description: string}, pitchBendMeter: {description: string, title: string}, reverbMeter: {description: string, title: string}, volumeMeter: {description: string, title: string}, drumToggleButton: {description: string}, muteButton: {description: string}, chorusMeter: {description: string, title: string}}, blackMidiMode: {description: string, title: string}}}\n */\nexport const synthesizerControllerLocale = {\n    toggleButton: {\n        title: \"\u30B7\u30F3\u30BB\u30B5\u30A4\u30B6\u30FC\u30B3\u30F3\u30C8\u30ED\u30FC\u30E9\u30FC\",\n        description: \"\u30B7\u30F3\u30BB\u30B5\u30A4\u30B6\u30FC\u30B3\u30F3\u30C8\u30ED\u30FC\u30E9\u30FC\u3092\u8868\u793A\"\n    },\n    \n    // meters\n    mainVoiceMeter: {\n        title: \"\u30DC\u30A4\u30B9: \",\n        description: \"\u73FE\u5728\u518D\u751F\u4E2D\u306E\u30DC\u30A4\u30B9\u306E\u7DCF\u6570\"\n    },\n    \n    mainVolumeMeter: {\n        title: \"\u30DC\u30EA\u30E5\u30FC\u30E0: \",\n        description: \"\u30B7\u30F3\u30BB\u30B5\u30A4\u30B6\u30FC\u306E\u73FE\u5728\u306E\u30DE\u30B9\u30BF\u30FC\u30DC\u30EA\u30E5\u30FC\u30E0\"\n    },\n    \n    mainPanMeter: {\n        title: \"\u30D1\u30F3: \",\n        description: \"\u30B7\u30F3\u30BB\u30B5\u30A4\u30B6\u30FC\u306E\u73FE\u5728\u306E\u30DE\u30B9\u30BF\u30FC\u30B9\u30C6\u30EC\u30AA\u30D1\u30F3\u30CB\u30F3\u30B0\"\n    },\n    \n    mainTransposeMeter: {\n        title: \"\u30C8\u30E9\u30F3\u30B9\u30DD\u30FC\u30BA: \",\n        description: \"\u30B7\u30F3\u30BB\u30B5\u30A4\u30B6\u30FC\u3092\u79FB\u8ABF\u3057\u307E\u3059\uFF08\u30BB\u30DF\u30C8\u30FC\u30F3\u307E\u305F\u306F\u30AD\u30FC\uFF09\"\n    },\n    \n    // buttons\n    midiPanic: {\n        title: \"MIDI\u30D1\u30CB\u30C3\u30AF\",\n        description: \"\u3059\u3079\u3066\u306E\u30DC\u30A4\u30B9\u3092\u5373\u5EA7\u306B\u505C\u6B62\"\n    },\n    \n    systemReset: {\n        title: \"\u30B7\u30B9\u30C6\u30E0\u30EA\u30BB\u30C3\u30C8\",\n        description: \"\u3059\u3079\u3066\u306E\u30B3\u30F3\u30C8\u30ED\u30FC\u30E9\u30FC\u3092\u30C7\u30D5\u30A9\u30EB\u30C8\u5024\u306B\u30EA\u30BB\u30C3\u30C8\"\n    },\n    \n    blackMidiMode: {\n        title: \"\u30D6\u30E9\u30C3\u30AFMIDI\u30E2\u30FC\u30C9\",\n        description: \"\u9AD8\u6027\u80FD\u30E2\u30FC\u30C9\u3092\u5207\u308A\u66FF\u3048\u3001\u898B\u305F\u76EE\u3092\u7C21\u7D20\u5316\u3057\u3001\u30CE\u30FC\u30C8\u3092\u901F\u304F\u6D88\u53BB\"\n    },\n    \n    disableCustomVibrato: {\n        title: \"\u30AB\u30B9\u30BF\u30E0\u30D3\u30D6\u30E9\u30FC\u30C8\u3092\u7121\u52B9\u5316\",\n        description: \"\u30AB\u30B9\u30BF\u30E0\uFF08NRPN\uFF09\u30D3\u30D6\u30E9\u30FC\u30C8\u3092\u6C38\u4E45\u306B\u7121\u52B9\u5316\u3002\u518D\u5EA6\u6709\u52B9\u5316\u3059\u308B\u306B\u306F\u30A6\u30A7\u30D6\u30B5\u30A4\u30C8\u3092\u30EA\u30ED\u30FC\u30C9\"\n    },\n    \n    helpButton: {\n        title: \"\u30D8\u30EB\u30D7\",\n        description: \"\u4F7F\u7528\u30AC\u30A4\u30C9\u3092\u8868\u793A\u3057\u307E\u3059\"\n    },\n    \n    interpolation: {\n        description: \"\u30B7\u30F3\u30BB\u30B5\u30A4\u30B6\u30FC\u306E\u88DC\u9593\u65B9\u6CD5\u3092\u9078\u629E\",\n        linear: \"\u30EA\u30CB\u30A2\",\n        nearestNeighbor: \"\u306A\u3057\"\n    },\n    \n    channelController: channelControllerLocale\n};\n", "export const sequencerControllerLocale = {\n    previousSong: \"\u524D\u306E\u66F2\",\n    nextSong: \"\u6B21\u306E\u66F2\",\n    loopThis: \"\u3053\u306E\u66F2\u3092\u30EB\u30FC\u30D7\",\n    playPause: \"\u518D\u751F/\u4E00\u6642\u505C\u6B62\",\n    lyrics: {\n        show: \"\u6B4C\u8A5E\u3092\u8868\u793A\",\n        title: \"\u30C7\u30B3\u30FC\u30C9\u3055\u308C\u305F\u30C6\u30AD\u30B9\u30C8\",\n        noLyrics: \"\u6B4C\u8A5E\u304C\u3042\u308A\u307E\u305B\u3093...\",\n        otherText: {\n            title: \"\u305D\u306E\u4ED6\u306E\u30C6\u30AD\u30B9\u30C8\"\n        }\n    }\n};", "export const exportAudio = {\n    button: {\n        title: \"\u97F3\u58F0\u3092\u4FDD\u5B58\",\n        description: \"\u97F3\u58F0\u3092WAV\u3001MIDI\u3001SF2\u3001\u307E\u305F\u306FRMI\u30D5\u30A1\u30A4\u30EB\u3068\u3057\u3066\u4FDD\u5B58\"\n    },\n    \n    formats: {\n        title: \"\u30D5\u30A9\u30FC\u30DE\u30C3\u30C8\u3092\u9078\u629E\",\n        formats: {\n            wav: {\n                button: {\n                    title: \"WAV\u97F3\u58F0 (.wav)\",\n                    description: \"\u5909\u66F4\u3092\u52A0\u3048\u305F\u66F2\u3092.wav\u30AA\u30FC\u30C7\u30A3\u30AA\u30D5\u30A1\u30A4\u30EB\u3068\u3057\u3066\u30A8\u30AF\u30B9\u30DD\u30FC\u30C8\u3057\u307E\u3059\"\n                },\n                options: {\n                    title: \"WAV\u30A8\u30AF\u30B9\u30DD\u30FC\u30C8\u30AA\u30D7\u30B7\u30E7\u30F3\",\n                    confirm: \"\u30A8\u30AF\u30B9\u30DD\u30FC\u30C8\",\n                    normalizeVolume: {\n                        title: \"\u97F3\u91CF\u306E\u6B63\u898F\u5316\",\n                        description: \"MIDI\u306E\u97F3\u91CF\u306B\u304B\u304B\u308F\u3089\u305A\u3001\u97F3\u91CF\u3092\u4E00\u5B9A\u306B\u4FDD\u3061\u307E\u3059\u3002\u63A8\u5968\u8A2D\u5B9A\u3067\u3059\u3002\"\n                    },\n                    additionalTime: {\n                        title: \"\u8FFD\u52A0\u6642\u9593\uFF08\u79D2\uFF09\",\n                        description: \"\u97F3\u304C\u30D5\u30A7\u30FC\u30C9\u30A2\u30A6\u30C8\u3059\u308B\u305F\u3081\u306B\u66F2\u306E\u6700\u5F8C\u306B\u8FFD\u52A0\u3059\u308B\u6642\u9593\u3067\u3059\u3002\uFF08\u79D2\uFF09\"\n                    },\n                    \n                    separateChannels: {\n                        title: \"\u30C1\u30E3\u30F3\u30CD\u30EB\u3092\u5206\u5272\",\n                        description: \"\u5404\u30C1\u30E3\u30F3\u30CD\u30EB\u3092\u5225\u3005\u306E\u30D5\u30A1\u30A4\u30EB\u3068\u3057\u3066\u4FDD\u5B58\u3057\u307E\u3059\u3002\u30AA\u30B7\u30ED\u30B9\u30B3\u30FC\u30D7\u30D3\u30E5\u30FC\u30A2\u306A\u3069\u306B\u4FBF\u5229\u3067\u3059\u3002\u3053\u306E\u30AA\u30D7\u30B7\u30E7\u30F3\u3092\u4F7F\u7528\u3059\u308B\u3068\u30EA\u30D0\u30FC\u30D6\u3084\u30B3\u30FC\u30E9\u30B9\u304C\u7121\u52B9\u306B\u306A\u308A\u307E\u3059\u3002\",\n                        saving: {\n                            title: \"\u30C1\u30E3\u30F3\u30CD\u30EB\u30D5\u30A1\u30A4\u30EB\",\n                            save: \"\u30C1\u30E3\u30F3\u30CD\u30EB{0}\u3092\u4FDD\u5B58\"\n                        }\n                    },\n                    loopCount: {\n                        title: \"\u30EB\u30FC\u30D7\u56DE\u6570\",\n                        description: \"\u66F2\u3092\u30EB\u30FC\u30D7\u3059\u308B\u56DE\u6570\"\n                    }\n                },\n                exportMessage: {\n                    message: \"WAV\u97F3\u58F0\u3092\u30A8\u30AF\u30B9\u30DD\u30FC\u30C8\u3057\u3066\u3044\u307E\u3059...\",\n                    estimated: \"\u6B8B\u308A\u6642\u9593:\",\n                    convertWav: \"WAV\u306B\u5909\u63DB\u4E2D...\"\n                }\n            },\n            \n            midi: {\n                button: {\n                    title: \"MIDI (.mid)\",\n                    description: \"\u30B3\u30F3\u30C8\u30ED\u30FC\u30E9\u30FC\u3068\u697D\u5668\u306E\u5909\u66F4\u304C\u9069\u7528\u3055\u308C\u305FMIDI\u30D5\u30A1\u30A4\u30EB\u3092\u30A8\u30AF\u30B9\u30DD\u30FC\u30C8\u3057\u307E\u3059\"\n                }\n            },\n            \n            soundfont: {\n                button: {\n                    title: \"\u30B5\u30A6\u30F3\u30C9\u30D5\u30A9\u30F3\u30C8 (.sf2)\",\n                    description: \"SoundFont2\u30D5\u30A1\u30A4\u30EB\u3092\u30A8\u30AF\u30B9\u30DD\u30FC\u30C8\u3057\u307E\u3059\"\n                },\n                \n                options: {\n                    title: \"SF\u30A8\u30AF\u30B9\u30DD\u30FC\u30C8\u30AA\u30D7\u30B7\u30E7\u30F3\",\n                    confirm: \"\u30A8\u30AF\u30B9\u30DD\u30FC\u30C8\",\n                    trim: {\n                        title: \"\u30C8\u30EA\u30DF\u30F3\u30B0\",\n                        description: \"MIDI\u30D5\u30A1\u30A4\u30EB\u3067\u4F7F\u7528\u3055\u308C\u3066\u3044\u308B\u697D\u5668\u3068\u30B5\u30F3\u30D7\u30EB\u3060\u3051\u306B\u30C8\u30EA\u30DF\u30F3\u30B0\u3055\u308C\u305F\u30B5\u30A6\u30F3\u30C9\u30D5\u30A9\u30F3\u30C8\u3092\u30A8\u30AF\u30B9\u30DD\u30FC\u30C8\u3057\u307E\u3059\"\n                    },\n                    compress: {\n                        title: \"\u5727\u7E2E\",\n                        description: \"\u672A\u5727\u7E2E\u306E\u5834\u5408\u306F\u3001Ogg Vorbis\u306E\u30ED\u30B9\u5727\u7E2E\u3067\u30B5\u30F3\u30D7\u30EB\u3092\u5727\u7E2E\u3057\u307E\u3059\u3002\u30D5\u30A1\u30A4\u30EB\u30B5\u30A4\u30BA\u304C\u5927\u5E45\u306B\u524A\u6E1B\u3055\u308C\u307E\u3059\u3002\" +\n                            \"\u30B5\u30A6\u30F3\u30C9\u30D5\u30A9\u30F3\u30C8\u304C\u3059\u3067\u306B\u5727\u7E2E\u3055\u308C\u3066\u3044\u308B\u5834\u5408\u3001\u3053\u306E\u30AA\u30D7\u30B7\u30E7\u30F3\u3092\u7121\u52B9\u306B\u3057\u3066\u3082\u518D\u5727\u7E2E\u3055\u308C\u308B\u3053\u3068\u306F\u3042\u308A\u307E\u305B\u3093\"\n                    },\n                    quality: {\n                        title: \"\u5727\u7E2E\u54C1\u8CEA\",\n                        description: \"\u5727\u7E2E\u306E\u54C1\u8CEA\u3067\u3059\u3002\u9AD8\u3044\u307B\u3069\u826F\u3044\u3067\u3059\"\n                    }\n                }\n            },\n            \n            rmidi: {\n                button: {\n                    title: \"\u57CB\u3081\u8FBC\u307FMIDI (.rmi)\",\n                    description: \"\u5909\u66F4\u3055\u308C\u305FMIDI\u3068\u30C8\u30EA\u30DF\u30F3\u30B0\u3055\u308C\u305F\u30B5\u30A6\u30F3\u30C9\u30D5\u30A9\u30F3\u30C8\u30921\u3064\u306E\u30D5\u30A1\u30A4\u30EB\u306B\u57CB\u3081\u8FBC\u3093\u3067\u30A8\u30AF\u30B9\u30DD\u30FC\u30C8\u3057\u307E\u3059\u3002\" +\n                        \"\u3053\u306E\u5F62\u5F0F\u306F\u5E83\u304F\u30B5\u30DD\u30FC\u30C8\u3055\u308C\u3066\u3044\u306A\u3044\u3053\u3068\u306B\u6CE8\u610F\u3057\u3066\u304F\u3060\u3055\u3044\"\n                },\n                \n                progress: {\n                    title: \"\u57CB\u3081\u8FBC\u307E\u308C\u305FMIDI\u3092\u30A8\u30AF\u30B9\u30DD\u30FC\u30C8\u4E2D...\",\n                    loading: \"\u30B5\u30A6\u30F3\u30C9\u30D5\u30A9\u30F3\u30C8\u3068MIDI\u3092\u8AAD\u307F\u8FBC\u307F\u4E2D...\",\n                    modifyingMIDI: \"MIDI\u3092\u4FEE\u6B63\u4E2D...\",\n                    modifyingSoundfont: \"\u30B5\u30A6\u30F3\u30C9\u30D5\u30A9\u30F3\u30C8\u3092\u30C8\u30EA\u30DF\u30F3\u30B0\u4E2D...\",\n                    saving: \"RMIDI\u3092\u4FDD\u5B58\u4E2D...\",\n                    done: \"\u5B8C\u4E86\u3057\u307E\u3057\u305F\uFF01\"\n                },\n                \n                options: {\n                    title: \"RMIDI\u30A8\u30AF\u30B9\u30DD\u30FC\u30C8\u30AA\u30D7\u30B7\u30E7\u30F3\",\n                    confirm: \"\u30A8\u30AF\u30B9\u30DD\u30FC\u30C8\",\n                    compress: {\n                        title: \"\u5727\u7E2E\",\n                        description: \"\u30B5\u30A6\u30F3\u30C9\u30D5\u30A9\u30F3\u30C8\u3092Ogg Vorbis\u306E\u30ED\u30B9\u5727\u7E2E\u3067\u5727\u7E2E\u3057\u307E\u3059\u3002\u30D5\u30A1\u30A4\u30EB\u30B5\u30A4\u30BA\u304C\u5927\u5E45\u306B\u524A\u6E1B\u3055\u308C\u307E\u3059\u3002\u63A8\u5968\u8A2D\u5B9A\u3067\u3059\u3002\"\n                    },\n                    quality: {\n                        title: \"\u5727\u7E2E\u54C1\u8CEA\",\n                        description: \"\u5727\u7E2E\u306E\u54C1\u8CEA\u3067\u3059\u3002\u9AD8\u3044\u307B\u3069\u826F\u3044\u3067\u3059\u3002\"\n                    },\n                    bankOffset: {\n                        title: \"\u30D0\u30F3\u30AF\u30AA\u30D5\u30BB\u30C3\u30C8\",\n                        description: \"\u30D5\u30A1\u30A4\u30EB\u306E\u30D0\u30F3\u30AF\u30AA\u30D5\u30BB\u30C3\u30C8\u3067\u3059\u30020\u306E\u5024\u304C\u63A8\u5968\u3055\u308C\u307E\u3059\u3002\u5909\u66F4\u306F\u614E\u91CD\u306B\u884C\u3063\u3066\u304F\u3060\u3055\u3044\u3002\"\n                    },\n                    adjust: {\n                        title: \"MIDI\u3092\u8ABF\u6574\",\n                        description: \"MIDI\u30D5\u30A1\u30A4\u30EB\u3092\u30B5\u30A6\u30F3\u30C9\u30D5\u30A9\u30F3\u30C8\u306B\u5408\u308F\u305B\u3066\u8ABF\u6574\u3057\u307E\u3059\u3002\u7279\u5225\u306A\u7406\u7531\u304C\u306A\u3044\u9650\u308A\u3001\u3053\u306E\u30AA\u30D7\u30B7\u30E7\u30F3\u306F\u30AA\u30F3\u306E\u307E\u307E\u306B\u3057\u3066\u304F\u3060\u3055\u3044\u3002\"\n                    }\n                }\n            }\n        },\n        metadata: {\n            songTitle: {\n                title: \"\u30BF\u30A4\u30C8\u30EB:\",\n                description: \"\u66F2\u306E\u30BF\u30A4\u30C8\u30EB\"\n            },\n            album: {\n                title: \"\u30A2\u30EB\u30D0\u30E0:\",\n                description: \"\u66F2\u306E\u30A2\u30EB\u30D0\u30E0\"\n            },\n            artist: {\n                title: \"\u30A2\u30FC\u30C6\u30A3\u30B9\u30C8:\",\n                description: \"\u66F2\u306E\u30A2\u30FC\u30C6\u30A3\u30B9\u30C8\"\n            },\n            albumCover: {\n                title: \"\u30A2\u30EB\u30D0\u30E0\u30AB\u30D0\u30FC:\",\n                description: \"\u66F2\u306E\u30A2\u30EB\u30D0\u30E0\u30AB\u30D0\u30FC\"\n            },\n            creationDate: {\n                title: \"\u4F5C\u6210\u65E5:\",\n                description: \"\u66F2\u306E\u4F5C\u6210\u65E5\"\n            },\n            genre: {\n                title: \"\u30B8\u30E3\u30F3\u30EB:\",\n                description: \"\u66F2\u306E\u30B8\u30E3\u30F3\u30EB\"\n            },\n            comment: {\n                title: \"\u30B3\u30E1\u30F3\u30C8:\",\n                description: \"\u66F2\u306E\u30B3\u30E1\u30F3\u30C8\"\n            },\n            duration: {\n                title: \"\u9577\u3055:\",\n                description: \"\u66F2\u306E\u9577\u3055\"\n            }\n        }\n        \n    }\n};\n", "import { settingsLocale } from \"./settings/settings.js\";\nimport { musicPlayerModeLocale } from \"./music_player_mode.js\";\nimport { synthesizerControllerLocale } from \"./synthesizer_controller/synthesizer_controller.js\";\nimport { sequencerControllerLocale } from \"./sequencer_controller.js\";\nimport { exportAudio } from \"./export_audio.js\";\n\n/**\n *\n * @type {CompleteLocaleTypedef}\n */\nexport const localeJapanese = {\n    localeName: \"\u65E5\u672C\u8A9E\",\n    // title messsage\n    titleMessage: \"SpessaSynth: SF2/DLS Javascript \u30B7\u30F3\u30BB\u30B5\u30A4\u30B6\u30FC\",\n    demoTitleMessage: \"SpessaSynth: SF2/DLS Javascript \u30B7\u30F3\u30BB\u30B5\u30A4\u30B6\u30FC \u30AA\u30F3\u30E9\u30A4\u30F3\u30C7\u30E2\",\n    \n    synthInit: {\n        genericLoading: \"\u8AAD\u307F\u8FBC\u307F\u4E2D...\",\n        loadingSoundfont: \"\u30B5\u30A6\u30F3\u30C9\u30D5\u30A9\u30F3\u30C8\u3092\u8AAD\u307F\u8FBC\u3093\u3067\u3044\u307E\u3059...\",\n        loadingBundledSoundfont: \"\u30D0\u30F3\u30C9\u30EB\u3055\u308C\u305F\u30B5\u30A6\u30F3\u30C9\u30D5\u30A9\u30F3\u30C8\u3092\u8AAD\u307F\u8FBC\u3093\u3067\u3044\u307E\u3059...\",\n        startingSynthesizer: \"\u30B7\u30F3\u30BB\u30B5\u30A4\u30B6\u30FC\u3092\u8D77\u52D5\u3057\u3066\u3044\u307E\u3059...\",\n        savingSoundfont: \"\u518D\u5229\u7528\u306E\u305F\u3081\u306B\u30B5\u30A6\u30F3\u30C9\u30D5\u30A9\u30F3\u30C8\u3092\u4FDD\u5B58\u3057\u3066\u3044\u307E\u3059...\",\n        noWebAudio: \"\u304A\u4F7F\u3044\u306E\u30D6\u30E9\u30A6\u30B6\u306FWeb Audio\u3092\u30B5\u30DD\u30FC\u30C8\u3057\u3066\u3044\u307E\u305B\u3093\u3002\",\n        done: \"\u6E96\u5099\u5B8C\u4E86\uFF01\"\n    },\n    \n    // top bar buttons\n    midiUploadButton: \"MIDI\u30D5\u30A1\u30A4\u30EB\u3092\u30A2\u30C3\u30D7\u30ED\u30FC\u30C9\",\n    \n    exportAudio: exportAudio,\n    \n    yes: \"\u306F\u3044\",\n    no: \"\u3044\u3044\u3048\",\n    error: \"\u30A8\u30E9\u30FC\",\n    \n    \n    demoSoundfontUploadButton: \"\u30B5\u30A6\u30F3\u30C9\u30D5\u30A9\u30F3\u30C8\u3092\u30A2\u30C3\u30D7\u30ED\u30FC\u30C9\",\n    demoGithubPage: \"\u30D7\u30ED\u30B8\u30A7\u30AF\u30C8\u306E\u30DA\u30FC\u30B8\",\n    demoSongButton: \"\u30C7\u30E2\u30BD\u30F3\u30B0\",\n    credits: \"\u30AF\u30EA\u30A8\u30A4\u30BF\u30FC\",\n    dropPrompt: \"\u3053\u3053\u306B\u30D5\u30A1\u30A4\u30EB\u3092\u30C9\u30ED\u30C3\u30D7...\",\n    \n    warnings: {\n        noMidiSupport: \"\u3053\u306E\u30D6\u30E9\u30A6\u30B6\u306FMIDI\u5165\u529B\u3092\u30B5\u30DD\u30FC\u30C8\u3057\u3066\u3044\u306A\u3044\u305F\u3081\u3001\u3053\u306E\u6A5F\u80FD\u306F\u5229\u7528\u3067\u304D\u307E\u305B\u3093\u3002Chrome\u307E\u305F\u306FFirefox\u3092\u4F7F\u7528\u3059\u308B\u3053\u3068\u3092\u691C\u8A0E\u3057\u3066\u304F\u3060\u3055\u3044\u3002\",\n        outOfMemory: \"\u30D6\u30E9\u30A6\u30B6\u306E\u30E1\u30E2\u30EA\u304C\u4E0D\u8DB3\u3057\u307E\u3057\u305F\u3002Firefox\u3084SF3\u30B5\u30A6\u30F3\u30C9\u30D5\u30A9\u30F3\u30C8\u306E\u4F7F\u7528\u3092\u691C\u8A0E\u3057\u3066\u304F\u3060\u3055\u3044\u3002\\n\\n\uFF08\u30A8\u30E9\u30FC\u306B\u3064\u3044\u3066\u306F\u30B3\u30F3\u30BD\u30FC\u30EB\u3092\u53C2\u7167\u3057\u3066\u304F\u3060\u3055\u3044\uFF09\u3002\",\n        warning: \"\u6CE8\u610F\"\n    },\n    \n    hideTopBar: {\n        title: \"\u30C8\u30C3\u30D7\u30D0\u30FC\u3092\u96A0\u3059\",\n        description: \"\u30C8\u30C3\u30D7\uFF08\u30BF\u30A4\u30C8\u30EB\uFF09\u30D0\u30FC\u3092\u96A0\u3057\u3066\u3001\u3088\u308A\u30B7\u30FC\u30E0\u30EC\u30B9\u306A\u4F53\u9A13\u3092\u63D0\u4F9B\u3057\u307E\u3059\"\n    },\n    \n    convertDls: {\n        title: \"DLS\u5909\u63DB\",\n        message: \"DLS\u30D5\u30A1\u30A4\u30EB\u304C\u30A2\u30C3\u30D7\u30ED\u30FC\u30C9\u3055\u308C\u305F\u3088\u3046\u3067\u3059\u3002\u3053\u308C\u3092SF2\u306B\u5909\u63DB\u3057\u307E\u3059\u304B\uFF1F\"\n    },\n    \n    \n    // all translations split up\n    musicPlayerMode: musicPlayerModeLocale,\n    settings: settingsLocale,\n    synthesizerController: synthesizerControllerLocale,\n    sequencerController: sequencerControllerLocale\n};\n", "export const rendererSettingsLocale = {\n    title: \"Configuration de l'affichage\",\n    noteFallingTime: {\n        title: \"Temps de descente des cascades (millisecondes)\",\n        description: \"D\u00E9finition de la vitesse \u00E0 laquelle les notes tombent sur le clavier (visuellement)\"\n    },\n    \n    noteAfterTriggerTime: {\n        title: \"Dur\u00E9e apr\u00E8s le d\u00E9clenchement d'une note (millisecondes)\",\n        description: \"Dur\u00E9e de la chute des notes apr\u00E8s leur d\u00E9clenchement. Z\u00E9ro signifie qu'elles se d\u00E9clenchent en bas\"\n    },\n    \n    waveformThickness: {\n        title: \"\u00C9paisseur du trait des formes d'ondes (pixels)\",\n        description: \"D\u00E9finition de l'\u00E9paisseur du trait des formes d'ondes\"\n    },\n    \n    waveformSampleSize: {\n        title: \"R\u00E9solution des formes d'ondes\",\n        description: \"D\u00E9finition du niveau de d\u00E9tail des formes d'ondes (note : une valeur \u00E9lev\u00E9e peut diminuer les performances)\"\n    },\n    \n    waveformAmplifier: {\n        title: \"Amplification des formes d'ondes\",\n        description: \"Cette option permet d'obtenir des formes d'ondes \u00E9voluant avec plus ou moins d'amplitude\"\n    },\n    \n    toggleWaveformsRendering: {\n        title: \"Visibilit\u00E9 des formes d'ondes\",\n        description: \"Active ou non le rendu des formes d'ondes (les lignes color\u00E9es r\u00E9agissant avec l'audio)\"\n    },\n    \n    toggleNotesRendering: {\n        title: \"Visibilit\u00E9 des cascades\",\n        description: \"Active ou non le rendu des chutes de notes sur le clavier lors de la lecture d'un fichier MIDI\"\n    },\n    \n    toggleDrawingActiveNotes: {\n        title: \"Visibilit\u00E9 des notes actives\",\n        description: \"Active ou non les lumi\u00E8res lorsque les touches sont appuy\u00E9es\"\n    },\n    \n    toggleDrawingVisualPitch: {\n        title: \"Rendu visuel du pitch bend\",\n        description: \"Active ou non le glissement vers la droite ou vers la gauche des notes lorsque le pitch bend est utilis\u00E9\"\n    },\n    \n    toggleStabilizeWaveforms: {\n        title: \"Stabilisation des formes d'ondes\",\n        description: \"Active ou non la stabilisation des formes d'ondes comme sur un oscilloscope\"\n    }\n};", "export const keyboardSettingsLocale = {\n    title: \"Configuration du clavier MIDI\",\n    \n    selectedChannel: {\n        title: \"S\u00E9lection du canal\",\n        description: \"Le canal sur lequel le clavier envoie des messages\",\n        channelOption: \"Canal {0}\"\n    },\n    \n    keyboardSize: {\n        title: \"Taille du clavier\",\n        description: \"Choix de l'\u00E9tendue de notes sur le clavier, ajustant la largeur des touches en cons\u00E9quence\",\n        \n        full: \"128 notes (complet)\",\n        piano: \"88 notes (piano)\",\n        fiveOctaves: \"5 octaves\",\n        useSongKeyRange: \"Utiliser l'\u00E9tendue de notes du morceau\",\n        twoOctaves: \"2 octaves\"\n    },\n    \n    toggleTheme: {\n        title: \"Th\u00E8me sombre\",\n        description: \"Utiliser le th\u00E8me sombre du clavier MIDI\"\n    },\n    \n    show: {\n        title: \"Visibilit\u00E9\",\n        description: \"Montrer / cacher le clavier MIDI\"\n    }\n};", "export const midiSettingsLocale = {\n    title: \"Configuration MIDI\",\n    \n    midiInput: {\n        title: \"Entr\u00E9e MIDI\",\n        description: \"Le port \u00E0 \u00E9couter pour recevoir les messages MIDI\",\n        disabled: \"D\u00E9sactiv\u00E9\"\n    },\n    \n    midiOutput: {\n        title: \"Sortie MIDI\",\n        description: \"Le port utilis\u00E9 pour jouer les fichiers MIDI\",\n        disabled: \"Utilisation de SpessaSynth\"\n    },\n    \n    reminder: {\n        title: \"Notez que vous devez REDEMARRER VOTRE NAVIGATEUR apr\u00E8s avoir connect\u00E9 un nouveau p\u00E9riph\u00E9rique MIDI pour qu'il apparaisse ici.\",\n        description: \"Notez \u00E9galement que Safari ne prend pas en charge WebMIDI, vous devrez donc utiliser un navigateur diff\u00E9rent si vous \u00EAtes sur Mac.\"\n    }\n};", "import { rendererSettingsLocale } from \"./renderer_settings.js\";\nimport { keyboardSettingsLocale } from \"./keyboard_settings.js\";\nimport { midiSettingsLocale } from \"./midi_settings.js\";\n\n/**\n * @type {CompleteSettingsLocale}\n */\nexport const settingsLocale = {\n    toggleButton: \"Configurations\",\n    mainTitle: \"Configuration du synth\u00E9tiseur\",\n    \n    rendererSettings: rendererSettingsLocale,\n    keyboardSettings: keyboardSettingsLocale,\n    midiSettings: midiSettingsLocale,\n    \n    interfaceSettings: {\n        title: \"Configuration de l'interface\",\n        \n        toggleTheme: {\n            title: \"Th\u00E8me sombre\",\n            description: \"Active ou non le th\u00E8me sombre pour l'interface\"\n        },\n        \n        selectLanguage: {\n            title: \"Langue\",\n            description: \"Change la langue de l'interface\",\n            helpTranslate: \"Traduire SpessaSynth\"\n        },\n        \n        layoutDirection: {\n            title: \"Orientation de la mise en page\",\n            description: \"Orientation du rendu des notes et du clavier\",\n            values: {\n                downwards: \"Vers le bas\",\n                upwards: \"Vers le haut\",\n                leftToRight: \"De gauche \u00E0 droite\",\n                rightToLeft: \"De droite \u00E0 gauche\"\n            }\n        },\n        \n        reminder: {\n            title: \"Saviez-vous que vous pouvez survoler les param\u00E8tres pour obtenir plus d'informations ?\",\n            description: \"Comme ceci !\"\n        }\n    }\n};", "/**\n * locale for music player mode\n * @type {{nothingPlaying: string, currentlyPlaying: string, nothingPlayingCopyright: string, toggleButton: {description: string, title: string}}}\n */\nexport const musicPlayerModeLocale = {\n    toggleButton: {\n        title: \"Activer / d\u00E9sactiver le mode lecteur de musique\",\n        description: \"Cette option permet de simplifier l'interface, en masquant le clavier et l'animation des notes\"\n    },\n    currentlyPlaying: \"Lecture en cours :\",\n    nothingPlaying: \"Aucune lecture en cours\",\n    nothingPlayingCopyright: \"Chargez un fichier MIDI !\"\n};", "export const channelControllerLocale = {\n    voiceMeter: {\n        title: \"Voix : \",\n        description: \"Le nombre actuel de voix sur le canal {0}\"\n    },\n    \n    pitchBendMeter: {\n        title: \"Pitch : \",\n        description: \"La valeur actuelle du pitch bend sur le canal {0}\"\n    },\n    \n    panMeter: {\n        title: \"Balance : \",\n        description: \"La valeur actuelle de la panoramique st\u00E9r\u00E9o sur le canal {0} (clic droit pour verrouiller)\"\n    },\n    \n    expressionMeter: {\n        title: \"Expression : \",\n        description: \"La valeur actuelle de l'expression (force) du canal {0} (clic droit pour verrouiller)\"\n    },\n    \n    volumeMeter: {\n        title: \"Volume : \",\n        description: \"Le volume actuel du canal 0} (clic droit pour verrouiller)\"\n    },\n    \n    modulationWheelMeter: {\n        title: \"Molette de modulation : \",\n        description: \"La valeur actuelle de la quantit\u00E9 de modulation (g\u00E9n\u00E9ralement utilis\u00E9e pour le vibrato) du canal {0} (clic droit pour verrouiller)\"\n    },\n    \n    chorusMeter: {\n        title: \"Chorus : \",\n        description: \"Le niveau actuel de l'effet de chorus appliqu\u00E9 au canal {0} (clic droit pour verrouiller)\"\n    },\n    \n    reverbMeter: {\n        title: \"R\u00E9verb\u00E9ration : \",\n        description: \"Le niveau actuel de r\u00E9verb\u00E9ration appliqu\u00E9 au canal {0} (clic droit pour verrouiller)\"\n    },\n    \n    filterMeter: {\n        title: \"Filtre : \",\n        description: \"La hauteur actuelle du filtre passe-bas appliqu\u00E9 au canal {0} (clic droit pour verrouiller)\"\n    },\n    \n    transposeMeter: {\n        title: \"Transposition : \",\n        description: \"La transposition actuelle (d\u00E9calage de notes) du canal {0}\"\n    },\n    \n    presetSelector: {\n        description: \"Changer l'instrument que le canal {0} utilise\",\n        selectionPrompt: \"Changer l'instrument du canal {0}\",\n        searchPrompt: \"Chercher...\"\n    },\n    \n    presetReset: {\n        description: \"D\u00E9verrouiller le canal {0} pour permettre un changement de programme\"\n    },\n    \n    soloButton: {\n        description: \"Solo du canal {0}\"\n    },\n    \n    muteButton: {\n        description: \"Rendre ou non le canal {0} muet\"\n    },\n    \n    drumToggleButton: {\n        description: \"Activer les percussions sur le canal {0}\"\n    }\n};", "export const effectsConfig = {\n    button: {\n        title: \"Configuration des effets\",\n        description: \"Configure les effets de chorus et de r\u00E9verb\u00E9ration ainsi que le vibrato personnalis\u00E9\"\n    },\n    reverbConfig: {\n        title: \"Configuration de la r\u00E9verb\u00E9ration\",\n        description: \"Configure l'effet de r\u00E9verb\u00E9ration\",\n        impulseResponse: {\n            title: \"Response impulsionnelle\",\n            description: \"S\u00E9lectionnez la r\u00E9ponse impulsionnelle pour la r\u00E9verb\u00E9ration \u00E0 convolution\"\n        }\n    },\n    \n    chorusConfig: {\n        title: \"Configuration du chorus\",\n        description: \"Configure l'effet de chorus\",\n        nodesAmount: {\n            title: \"Nombre de lignes de retard\",\n            description: \"Nombre de lignes de retard (pour chaque canal st\u00E9r\u00E9o) \u00E0 utiliser\"\n        },\n        defaultDelay: {\n            title: \"D\u00E9lai (s)\",\n            description: \"Dur\u00E9e en secondes de la premi\u00E8re ligne de retard\"\n        },\n        delayVariation: {\n            title: \"Augmentation du d\u00E9lai (s)\",\n            description: \"Dur\u00E9e \u00E0 ajouter en secondes pour chaque ligne de retard apr\u00E8s la premi\u00E8re\"\n        },\n        stereoDifference: {\n            title: \"Diff\u00E9rence st\u00E9r\u00E9o (s)\",\n            description: \"Diff\u00E9rence du d\u00E9lai entre 2 canaux (ajout\u00E9 au canal de gauche et soustrait au canal de droite)\"\n        },\n        oscillatorFrequency: {\n            title: \"Fr\u00E9quence LFO (Hz)\",\n            description: \"Fr\u00E9quence de l'oscillateur (LFO) de la premi\u00E8re ligne de retard, en Hz. Le LFO contr\u00F4le la dur\u00E9e du retard.\"\n        },\n        frequencyVariation: {\n            title: \"Augmentation LFO (Hz)\",\n            description: \"Quantit\u00E9 \u00E0 ajouter \u00E0 la fr\u00E9quence d'oscillation de chaque ligne de retard apr\u00E8s la premi\u00E8re, en Hz\"\n        },\n        oscillatorGain: {\n            title: \"Gain LFO (s)\",\n            description: \"Combien l'oscillateur modifie-t-il le d\u00E9lai des lignes de retard, en secondes \"\n        },\n        apply: {\n            title: \"Valider\",\n            description: \"Sauvegarde les param\u00E8tres des effets\"\n        }\n    }\n};", "export const keyModifiers = {\n    button: {\n        title: \"Modificateur de notes\",\n        description: \"Permet de modifier des notes, individuellement\"\n    },\n    \n    mainTitle: \"\u00C9diteur de modifications de notes\",\n    \n    detailedDescription: \"Ce menu vous permet de modifier une note MIDI d'un canal choisi.\\n\"\n        + \"Vous pouvez actuellement modifier sa v\u00E9locit\u00E9 et assigner un patch (instrument).\\n\" +\n        \"Cette fonction est particuli\u00E8rement utile pour les percussions.\",\n    \n    prompt: \"Que voulez-vous faire ?\",\n    \n    selectKey: {\n        prompt: \"Appuyez sur la note que vous voulez modifier sur le clavier.\",\n        title: \"S\u00E9lectionner une note\",\n        change: \"Changer la note\"\n    },\n    \n    selectedChannel: {\n        title: \"Canal s\u00E9lectionn\u00E9\",\n        description: \"Le canal auquel appartient la note \u00E0 modifier\"\n    },\n    \n    selectedKey: {\n        title: \"Note s\u00E9lectionn\u00E9e : {0}\",\n        description: \"Vous avez s\u00E9lectionn\u00E9 la note MIDI {0}\"\n    },\n    \n    modifyKey: {\n        title: \"Modifier une note\",\n        description: \"Modifie une note d'un canal choisi\",\n        velocity: {\n            title: \"Forcer la v\u00E9locit\u00E9\",\n            description: \"V\u00E9locit\u00E9 \u00E0 utiliser pour cette note, ignorant la v\u00E9locit\u00E9 indiqu\u00E9e par les signaux MIDI. La valeur -1 d\u00E9sactive le for\u00E7age\"\n        },\n        preset: {\n            title: \"Forcer le preset\",\n            description: \"Preset \u00E0 utiliser pour cette note\",\n            unchanged: \"Inchang\u00E9\"\n        },\n        apply: {\n            title: \"Valider\",\n            description: \"Sauvegarder les modificateurs\"\n        }\n    },\n    \n    removeModification: {\n        title: \"Enlever un modificateur\",\n        description: \"Enlever un modificateur s'appliquant \u00E0 une note pour un canal donn\u00E9\",\n        \n        remove: {\n            title: \"Enlever\",\n            description: \"Enlever ce modificateur de note\"\n        }\n    },\n    \n    resetModifications: {\n        title: \"Tout r\u00E9initialiser\",\n        description: \"Enlever tous les modificateurs de notes pour tous les canaux\",\n        \n        confirmation: {\n            title: \"Confirmation\",\n            description: \"\u00CAtes-vous s\u00FBr(e) de bien vouloir supprimer tous les modificateurs ?\"\n        }\n    }\n};", "import { channelControllerLocale } from \"./channel_controller.js\";\nimport { effectsConfig } from \"./effects_config.js\";\nimport { keyModifiers } from \"./key_modifiers.js\";\n\n/**\n *\n * @type {{systemReset: {description: string, title: string}, disableCustomVibrato: {description: string, title: string}, mainTransposeMeter: {description: string, title: string}, mainVoiceMeter: {description: string, title: string}, midiPanic: {description: string, title: string}, mainPanMeter: {description: string, title: string}, mainVolumeMeter: {description: string, title: string}, toggleButton: {description: string, title: string}, channelController: {transposeMeter: {description: string, title: string}, voiceMeter: {description: string, title: string}, modulationWheelMeter: {description: string, title: string}, expressionMeter: {description: string, title: string}, panMeter: {description: string, title: string}, presetSelector: {description: string}, presetReset: {description: string}, pitchBendMeter: {description: string, title: string}, reverbMeter: {description: string, title: string}, volumeMeter: {description: string, title: string}, drumToggleButton: {description: string}, muteButton: {description: string}, chorusMeter: {description: string, title: string}}, blackMidiMode: {description: string, title: string}}}\n */\nexport const synthesizerControllerLocale = {\n    toggleButton: {\n        title: \"Contr\u00F4leurs du synth\u00E9tiseur\",\n        description: \"Affiche les contr\u00F4leurs du synth\u00E9tiseur\"\n    },\n    \n    // meters\n    mainVoiceMeter: {\n        title: \"Voix : \",\n        description: \"Le nombre total de voix jou\u00E9es actuellement\"\n    },\n    \n    mainVolumeMeter: {\n        title: \"Volume : \",\n        description: \"Le volume global actuel du synth\u00E9tiseur\"\n    },\n    \n    mainPanMeter: {\n        title: \"Balance : \",\n        description: \"La panoramique globale actuelle du synth\u00E9tiseur\"\n    },\n    \n    mainTransposeMeter: {\n        title: \"Transposition : \",\n        description: \"Pour transposer le synth\u00E9tiseur (en demi-tons ou notes)\"\n    },\n    \n    // buttons\n    midiPanic: {\n        title: \"Panique MIDI\",\n        description: \"Stoppe toutes les voix imm\u00E9diatement\"\n    },\n    \n    systemReset: {\n        title: \"R\u00E9initialisation du syst\u00E8me\",\n        description: \"R\u00E9initialise tous les contr\u00F4leurs \u00E0 leur valeur par d\u00E9faut\"\n    },\n    \n    blackMidiMode: {\n        title: \"Mode Black MIDI\",\n        description: \"Active le mode haute performance, en simplifiant l'apparence g\u00E9n\u00E9rale et en arr\u00EAtant les notes plus rapidement\"\n    },\n    \n    disableCustomVibrato: {\n        title: \"D\u00E9sactiver le vibrato personnalis\u00E9\",\n        description: \"D\u00E9sactive le vibrato personnalis\u00E9 (NRPN) de mani\u00E8re permanente\\nUn rechargement de la page web sera n\u00E9cessaire pour le r\u00E9activer\"\n    },\n    \n    helpButton: {\n        title: \"Aide\",\n        description: \"Ouvre une page web pour afficher un guide\"\n    },\n    \n    interpolation: {\n        description: \"S\u00E9lection de la m\u00E9thode d'interpolation du synth\u00E9tiseur\",\n        linear: \"Interpolation lin\u00E9aire\",\n        nearestNeighbor: \"Aucune (valeur la plus proche)\",\n        cubic: \"Interpolation cubique\"\n    },\n    \n    channelController: channelControllerLocale,\n    effectsConfig: effectsConfig,\n    keyModifiers: keyModifiers\n};", "export const sequencerControllerLocale = {\n    previousSong: \"Morceau pr\u00E9c\u00E9dent\",\n    nextSong: \"Morceau suivant\",\n    loopThis: \"Lire ce morceau en boucle\",\n    playPause: \"Lecture / pause\",\n    lyrics: {\n        show: \"Montrer les paroles\",\n        title: \"Texte d\u00E9cod\u00E9\",\n        noLyrics: \"Paroles indisponibles...\",\n        otherText: {\n            title: \"Autre texte\"\n        },\n        \n        subtitles: {\n            title: \"Charger des sous-titres ASS\",\n            description: \"Chargez vos propres sous-titres au format .ass\"\n        }\n    }\n};", "export const exportAudio = {\n    button: {\n        title: \"Sauvegarder l'audio\",\n        description: \"Sauvegarder la composition dans diff\u00E9rents formats\"\n    },\n    \n    formats: {\n        title: \"Choix du format\",\n        formats: {\n            wav: {\n                button: {\n                    title: \"Audio WAV (.wav)\",\n                    description: \"Exporter le morceau avec les modifications dans un fichier audio .wav\"\n                },\n                options: {\n                    title: \"Options de l'exportation WAV\",\n                    confirm: \"Exporter\",\n                    normalizeVolume: {\n                        title: \"Normaliser le volume\",\n                        description: \"Pour garder le volume \u00E0 un niveau constant, peu importe comment est jou\u00E9 le morceau MIDI (option recommand\u00E9e)\"\n                    },\n                    additionalTime: {\n                        title: \"Dur\u00E9e additionnelle (s)\",\n                        description: \"Dur\u00E9e additionnelle \u00E0 la fin du morceau pour donner le temps au son de disparaitre, en secondes\"\n                    },\n                    sampleRate: {\n                        title: \"Fr\u00E9quence d'\u00E9chantillonnage\",\n                        description: \"Fr\u00E9quence d'\u00E9chantillonnage du fichier de sortie en Hz (ne changez ce param\u00E8tre que si vous savez ce que vous faites)\"\n                    },\n                    \n                    separateChannels: {\n                        title: \"S\u00E9paration des canaux\",\n                        description: \"Pour sauvegarder chaque canal dans un fichier s\u00E9par\u00E9, utile par exemple pour des affichage de type oscilloscope (cette option d\u00E9sactive la r\u00E9verb\u00E9ration et l'effet de chorus)\",\n                        saving: {\n                            title: \"Fichiers des canaux\",\n                            save: \"Sauvegarder le canal {0}\"\n                        }\n                    },\n                    loopCount: {\n                        title: \"Nombre de r\u00E9p\u00E9titions\",\n                        description: \"Nombre de fois que le morceau est r\u00E9p\u00E9t\u00E9 apr\u00E8s la premi\u00E8re lecture\"\n                    }\n                },\n                exportMessage: {\n                    message: \"Exportation de l'audio en cours...\",\n                    estimated: \"Temps restant :\",\n                    convertWav: \"Conversion dans le format WAV...\"\n                }\n            },\n            \n            midi: {\n                button: {\n                    title: \"MIDI (.mid)\",\n                    description: \"Exporter le fichier MIDI en incluant les modifications des contr\u00F4leurs et des instruments\"\n                }\n            },\n            \n            soundfont: {\n                button: {\n                    title: \"SoundFont (.sf2, .sf3)\",\n                    description: \"Exporter une banque de sons au format SoundFont2\"\n                },\n                \n                options: {\n                    title: \"Options de l'exportation SoundFont2\",\n                    confirm: \"Exporter\",\n                    trim: {\n                        title: \"All\u00E9ger\",\n                        description: \"Exporter la banque de sons avec seulement les instruments et \u00E9chantillons utilis\u00E9s par le fichier MIDI\"\n                    },\n                    compress: {\n                        title: \"Compresser\",\n                        description: \"Compacter les \u00E9chantillons gr\u00E2ce \u00E0 l'algorithme de compression avec pertes Ogg Vorbis\\n\" +\n                            \"Ceci r\u00E9duit de mani\u00E8re significative le poids du fichier\\nNote : si la banque de sons \u00E9tait d\u00E9j\u00E0 compress\u00E9e, cette option ne d\u00E9compressera pas m\u00EAme en \u00E9tant d\u00E9sactiv\u00E9e\"\n                    },\n                    quality: {\n                        title: \"Qualit\u00E9 de compression\",\n                        description: \"La qualit\u00E9 de la compression, une valeur haute augmentant la qualit\u00E9 du son mais aussi le poids du fichier\"\n                    }\n                }\n            },\n            \n            dls: {\n                button: {\n                    title: \"DLS (.dls)\",\n                    description: \"Exporte la soundfont au format DLS\"\n                },\n                warning: {\n                    title: \"Avertissement concernant l'exportation DLS\",\n                    message: \"L'exportation DLS est limit\u00E9e et peut produire des fichiers corrompus avec des soundfonts lourdes et complexes.\",\n                    details: \"Plus d'info\",\n                    confirm: \"Continuer l'exportation\"\n                }\n            },\n            \n            rmidi: {\n                button: {\n                    title: \"MIDI embarqu\u00E9 (.rmi)\",\n                    description: \"Exporter le fichier MIDI modifi\u00E9 avec la banque de sons all\u00E9g\u00E9e dans un seul fichier\\n\" +\n                        \"Note : ce format n'est pas support\u00E9 par tous les lecteurs MIDI\"\n                },\n                \n                progress: {\n                    title: \"Exportation du fichier MIDI embarqu\u00E9...\",\n                    loading: \"Chargement de la banque de sons et du fichier MIDI...\",\n                    modifyingMIDI: \"Modification MIDI...\",\n                    modifyingSoundfont: \"All\u00E8gement de la banque de sons...\",\n                    saving: \"Cr\u00E9ation du fichier RMIDI...\",\n                    done: \"Termin\u00E9 !\"\n                },\n                \n                options: {\n                    title: \"Options de l'exportation RMIDI\",\n                    confirm: \"Exporter\",\n                    compress: {\n                        title: \"Compression\",\n                        description: \"Compacter les \u00E9chantillons gr\u00E2ce \u00E0 l'algorithme de compression avec pertes Ogg Vorbis\\nCeci r\u00E9duit de mani\u00E8re significative le poids du fichier (option recommand\u00E9e)\"\n                    },\n                    quality: {\n                        title: \"Qualit\u00E9 de compression\",\n                        description: \"La qualit\u00E9 de la compression, une valeur haute augmentant la qualit\u00E9 du son mais aussi le poids du fichier\"\n                    },\n                    bankOffset: {\n                        title: \"D\u00E9calage de banque\",\n                        description: \"D\u00E9calage des num\u00E9ros de banque dans le fichier\\n(une valeur de 0 est recommand\u00E9e sauf cas particulier)\"\n                    },\n                    adjust: {\n                        title: \"Ajustement MIDI\",\n                        description: \"Ajuste le fichier MIDI \u00E0 la banque de sons\\n(il est conseill\u00E9 de laisser cette option activ\u00E9e sauf cas particulier)\"\n                    }\n                }\n            }\n        },\n        metadata: {\n            songTitle: {\n                title: \"Titre :\",\n                description: \"Le titre du morceau\"\n            },\n            album: {\n                title: \"Album :\",\n                description: \"Le nom de l'album dans lequel se trouve le morceau\"\n            },\n            artist: {\n                title: \"Artiste :\",\n                description: \"Le ou les artiste(s) du morceau\"\n            },\n            albumCover: {\n                title: \"Pochette d'album :\",\n                description: \"La pochette de l'album dans lequel se trouve le morceau\"\n            },\n            creationDate: {\n                title: \"Date de cr\u00E9ation :\",\n                description: \"La date de cr\u00E9ation du morceau\"\n            },\n            genre: {\n                title: \"Genre :\",\n                description: \"Le genre du morceau\"\n            },\n            comment: {\n                title: \"Commentaire :\",\n                description: \"Le commentaire li\u00E9 au morceau\"\n            },\n            duration: {\n                title: \"Dur\u00E9e :\",\n                description: \"La dur\u00E9e du morceau\"\n            }\n        }\n    }\n};", "import { settingsLocale } from \"./settings/settings.js\";\nimport { musicPlayerModeLocale } from \"./music_player_mode.js\";\nimport { synthesizerControllerLocale } from \"./synthesizer_controller/synthesizer_controller.js\";\nimport { sequencerControllerLocale } from \"./sequencer_controller.js\";\nimport { exportAudio } from \"./export_audio.js\";\n\n/**\n *\n * @type {CompleteLocaleTypedef}\n */\nexport const localeFrench = {\n    localeName: \"Fran\u00E7ais\",\n    // title message\n    titleMessage: \"SpessaSynth : synth\u00E9tiseur compatible SF2, \u00E9crit en javascript\",\n    demoTitleMessage: \"SpessaSynth : d\u00E9mo en ligne du synth\u00E9tiseur compatible SF2/DLS\",\n    \n    synthInit: {\n        genericLoading: \"Chargement...\",\n        loadingSoundfont: \"Chargement de la banque de sons...\",\n        loadingBundledSoundfont: \"Chargement de la banque de sons int\u00E9gr\u00E9e...\",\n        startingSynthesizer: \"D\u00E9marrage du synth\u00E9tiseur...\",\n        savingSoundfont: \"Sauvegarde de la banque de sons pour une utilisation ult\u00E9rieure...\",\n        noWebAudio: \"Votre navigateur ne supporte pas l'audio par le web.\",\n        done: \"Pr\u00EAt !\"\n    },\n    \n    // top bar buttons\n    midiUploadButton: \"Charger des fichiers MIDI\",\n    \n    exportAudio: exportAudio,\n    \n    yes: \"Oui\",\n    no: \"Non\",\n    error: \"Erreur\",\n    \n    \n    demoSoundfontUploadButton: \"Charger une banque de sons\",\n    demoGithubPage: \"Page du projet\",\n    demoSongButton: \"Morceau d\u00E9mo\",\n    credits: \"Cr\u00E9dits\",\n    dropPrompt: \"Rel\u00E2chez les fichiers ici...\",\n    \n    warnings: {\n        outOfMemory: \"Votre navigateur est \u00E0 cours de m\u00E9moire. L'usage de Firefox ou des banques de sons au format SF3 est recommand\u00E9 (voir la console pour plus de d\u00E9tails concernant l'erreur).\",\n        noMidiSupport: \"Aucun port MIDI d\u00E9tect\u00E9, cette fonctionnalit\u00E9 sera d\u00E9sactiv\u00E9e.\",\n        warning: \"Attention\"\n    },\n    hideTopBar: {\n        title: \"Masquer la barre sup\u00E9rieure\",\n        description: \"Masquer la barre sup\u00E9rieure (titre) pour offrir une meilleure exp\u00E9rience\"\n    },\n    \n    convertDls: {\n        title: \"Conversion DLS\",\n        message: \"Le fichier charg\u00E9 semble \u00EAtre au format DLS. Voulez-vous le convertir au format SF2 ?\"\n    },\n    \n    // all translations split up\n    musicPlayerMode: musicPlayerModeLocale,\n    settings: settingsLocale,\n    synthesizerController: synthesizerControllerLocale,\n    sequencerController: sequencerControllerLocale\n};", "// SpessaSynth Portugu\u00EAs do Brasil\n// por Lucas Gabriel (lucmsilva)\n// https://github.com/lucmsilva651\n\nexport const rendererSettingsLocale = {\n    title: \"Configura\u00E7\u00F5es do Renderizador\",\n    noteFallingTime: {\n        title: \"Tempo de queda da nota (milissegundos)\",\n        description: \"A velocidade com que as notas caem (visualmente)\"\n    },\n    \n    waveformThickness: {\n        title: \"Espessura da linha da forma de onda (px)\",\n        description: \"A espessura das linhas da forma de onda\"\n    },\n    \n    waveformSampleSize: {\n        title: \"Tamanho da amostra da forma de onda\",\n        description: \"O qu\u00E3o detalhadas s\u00E3o as formas de onda (Nota: valores altos podem impactar o desempenho) Tamb\u00E9m observe que valores altos adicionar\u00E3o um atraso ao \u00E1udio para sincronizar as formas de onda com o \u00E1udio.\"\n    },\n    \n    waveformAmplifier: {\n        title: \"Amplificador de forma de onda\",\n        description: \"O qu\u00E3o vibrantes s\u00E3o as formas de onda\"\n    },\n    \n    toggleWaveformsRendering: {\n        title: \"Habilitar renderiza\u00E7\u00E3o de formas de onda\",\n        description: \"Habilitar a renderiza\u00E7\u00E3o das formas de onda do canal (linhas coloridas mostrando o \u00E1udio)\"\n    },\n    \n    toggleNotesRendering: {\n        title: \"Habilitar renderiza\u00E7\u00E3o de notas\",\n        description: \"Habilitar a renderiza\u00E7\u00E3o das notas caindo ao reproduzir um arquivo MIDI\"\n    },\n    \n    toggleDrawingActiveNotes: {\n        title: \"Habilitar desenho de notas ativas\",\n        description: \"Habilitar o destaque e o brilho das notas quando pressionadas\"\n    },\n    \n    toggleDrawingVisualPitch: {\n        title: \"Habilitar desenho de altura visual\",\n        description: \"Habilitar o deslizamento das notas para a esquerda ou direita quando o wheel de pitch \u00E9 aplicado\"\n    },\n    \n    toggleStabilizeWaveforms: {\n        title: \"Estabilizar formas de onda\",\n        description: \"Habilitar o disparo do oscilosc\u00F3pio\"\n    }\n};\n", "// SpessaSynth Portugu\u00EAs do Brasil\n// por Lucas Gabriel (lucmsilva)\n// https://github.com/lucmsilva651\n\nexport const keyboardSettingsLocale = {\n    title: \"Configura\u00E7\u00F5es do Teclado MIDI\",\n    \n    selectedChannel: {\n        title: \"Canal selecionado\",\n        description: \"O canal para o qual o teclado envia mensagens\",\n        channelOption: \"Canal {0}\"\n    },\n    \n    keyboardSize: {\n        title: \"Tamanho do teclado\",\n        description: \"A faixa de teclas mostradas no teclado. Ajusta o tamanho das notas MIDI de acordo\",\n        \n        full: \"128 teclas (completo)\",\n        piano: \"88 teclas (piano)\",\n        fiveOctaves: \"5 oitavas\",\n        useSongKeyRange: \"Usar a faixa de notas da m\u00FAsica\",\n        twoOctaves: \"Duas oitavas\"\n    },\n    \n    toggleTheme: {\n        title: \"Usar tema escuro\",\n        description: \"Usar o tema escuro do teclado MIDI\"\n    },\n    \n    show: {\n        title: \"Mostrar\",\n        description: \"Mostrar/ocultar o teclado MIDI\"\n    }\n};\n", "// SpessaSynth Portugu\u00EAs do Brasil\n// por Lucas Gabriel (lucmsilva)\n// https://github.com/lucmsilva651\n\nexport const midiSettingsLocale = {\n    title: \"Configura\u00E7\u00F5es MIDI\",\n    \n    midiInput: {\n        title: \"Entrada MIDI\",\n        description: \"A porta para escutar mensagens MIDI\",\n        disabled: \"Desativado\"\n    },\n    \n    midiOutput: {\n        title: \"Sa\u00EDda MIDI\",\n        description: \"A porta para reproduzir o arquivo MIDI\",\n        disabled: \"Usar SpessaSynth\"\n    },\n    \n    reminder: {\n        title: \"Note que voc\u00EA precisa REINICIAR O NAVEGADOR ap\u00F3s conectar um novo dispositivo MIDI para que ele apare\u00E7a aqui.\",\n        description: \"Tamb\u00E9m note que o Safari n\u00E3o suporta WebMIDI, ent\u00E3o voc\u00EA precisar\u00E1 usar um navegador diferente se estiver no Mac.\"\n    }\n};\n", "// SpessaSynth Portugu\u00EAs do Brasil\n// por Lucas Gabriel (lucmsilva)\n// https://github.com/lucmsilva651\n\nimport { rendererSettingsLocale } from \"./renderer_settings.js\";\nimport { keyboardSettingsLocale } from \"./keyboard_settings.js\";\nimport { midiSettingsLocale } from \"./midi_settings.js\";\n\n/**\n * @type {CompleteSettingsLocale}\n */\nexport const settingsLocale = {\n    toggleButton: \"Configura\u00E7\u00F5es\",\n    mainTitle: \"Configura\u00E7\u00F5es do Programa\",\n    \n    rendererSettings: rendererSettingsLocale,\n    keyboardSettings: keyboardSettingsLocale,\n    midiSettings: midiSettingsLocale,\n    \n    interfaceSettings: {\n        title: \"Configura\u00E7\u00F5es da Interface\",\n        \n        toggleTheme: {\n            title: \"Usar tema escuro\",\n            description: \"Ativar o tema escuro para a interface\"\n        },\n        \n        selectLanguage: {\n            title: \"Idioma\",\n            description: \"Alterar o idioma do programa\",\n            helpTranslate: \"Traduzir o SpessaSynth\"\n        },\n        \n        layoutDirection: {\n            title: \"Dire\u00E7\u00E3o do layout\",\n            description: \"A dire\u00E7\u00E3o do layout do renderizador e do teclado\",\n            values: {\n                downwards: \"Para baixo\",\n                upwards: \"Para cima\",\n                leftToRight: \"Da esquerda para a direita\",\n                rightToLeft: \"Da direita para a esquerda\"\n            }\n        },\n        \n        reminder: {\n            title: \"Voc\u00EA sabia que pode passar o mouse sobre as configura\u00E7\u00F5es para obter mais informa\u00E7\u00F5es?\",\n            description: \"Como esta!\"\n        }\n    }\n};\n", "// SpessaSynth Portugu\u00EAs do Brasil\n// por Lucas Gabriel (lucmsilva)\n// https://github.com/lucmsilva651\n\n/**\n * @type {{nothingPlaying: string, currentlyPlaying: string, nothingPlayingCopyright: string, toggleButton: {description: string, title: string}}}\n */\nexport const musicPlayerModeLocale = {\n    toggleButton: {\n        title: \"Trocar o modo do reprodutor de m\u00FAsica\",\n        description: \"Ir para a vers\u00E3o simplificada, ocultando o teclado e as visualiza\u00E7\u00F5es de notas\"\n    },\n    currentlyPlaying: \"Tocando agora:\",\n    nothingPlaying: \"Nada est\u00E1 tocando\",\n    nothingPlayingCopyright: \"Envie um MIDI!\"\n};", "// SpessaSynth Portugu\u00EAs do Brasil\n// por Lucas Gabriel (lucmsilva)\n// https://github.com/lucmsilva651\n\nexport const channelControllerLocale = {\n    voiceMeter: {\n        title: \"Vozes: \",\n        description: \"A quantidade atual de vozes tocando no canal {0}\"\n    },\n    \n    pitchBendMeter: {\n        title: \"Pitch: \",\n        description: \"O desvio de pitch atual aplicado ao canal {0}\"\n    },\n    \n    panMeter: {\n        title: \"Pan: \",\n        description: \"O panning est\u00E9reo atual aplicado ao canal {0} (clique com o bot\u00E3o direito para travar)\"\n    },\n    \n    expressionMeter: {\n        title: \"Express\u00E3o: \",\n        description: \"A express\u00E3o (volume) atual do canal {0} (clique com o bot\u00E3o direito para travar)\"\n    },\n    \n    volumeMeter: {\n        title: \"Volume: \",\n        description: \"O volume atual do canal {0} (clique com o bot\u00E3o direito para travar)\"\n    },\n    \n    modulationWheelMeter: {\n        title: \"Roda de modula\u00E7\u00E3o: \",\n        description: \"A profundidade de modula\u00E7\u00E3o (geralmente vibrato) atual do canal {0} (clique com o bot\u00E3o direito para travar)\"\n    },\n    \n    chorusMeter: {\n        title: \"Chorus: \",\n        description: \"O n\u00EDvel atual do efeito de chorus aplicado ao canal {0} (clique com o bot\u00E3o direito para travar)\"\n    },\n    \n    reverbMeter: {\n        title: \"Reverb: \",\n        description: \"O n\u00EDvel atual do efeito de reverb aplicado ao canal {0} (clique com o bot\u00E3o direito para travar)\"\n    },\n    \n    filterMeter: {\n        title: \"Filtro: \",\n        description: \"O n\u00EDvel atual do corte do filtro passa-baixo aplicado ao canal {0} (clique com o bot\u00E3o direito para travar)\"\n    },\n    \n    transposeMeter: {\n        title: \"Transposi\u00E7\u00E3o: \",\n        description: \"A transposi\u00E7\u00E3o (mudan\u00E7a de tonalidade) atual do canal {0}\"\n    },\n    \n    presetSelector: {\n        description: \"Mudar o patch (instrumento) que o canal {0} est\u00E1 usando\",\n        selectionPrompt: \"Mudar instrumento para o canal {0}\",\n        searchPrompt: \"Pesquisar...\"\n    },\n    \n    presetReset: {\n        description: \"Destravar o canal {0} para permitir altera\u00E7\u00F5es de programa\"\n    },\n    \n    soloButton: {\n        description: \"Solo no canal {0}\"\n    },\n    \n    muteButton: {\n        description: \"Silenciar/desmutar o canal {0}\"\n    },\n    \n    drumToggleButton: {\n        description: \"Alternar bateria no canal {0}\"\n    }\n};\n", "// SpessaSynth Portugu\u00EAs do Brasil\n// por Lucas Gabriel (lucmsilva)\n// https://github.com/lucmsilva651\n\nexport const effectsConfig = {\n    button: {\n        title: \"Configura\u00E7\u00F5es de Efeitos\",\n        description: \"Configure os efeitos de chorus e reverb, al\u00E9m do vibrato personalizado\"\n    },\n    reverbConfig: {\n        title: \"Configura\u00E7\u00E3o do Reverb\",\n        description: \"Configure o processador de reverb\",\n        impulseResponse: {\n            title: \"Resposta ao impulso\",\n            description: \"Selecione a resposta ao impulso para o reverb convolver\"\n        }\n    },\n    \n    chorusConfig: {\n        title: \"Configura\u00E7\u00E3o do Chorus\",\n        description: \"Configure o processador de chorus\",\n        nodesAmount: {\n            title: \"Quantidade de n\u00F3s\",\n            description: \"A quantidade de n\u00F3s de atraso (para cada canal est\u00E9reo) a serem usados\"\n        },\n        defaultDelay: {\n            title: \"Atraso (s)\",\n            description: \"O tempo de atraso para o primeiro n\u00F3 em segundos\"\n        },\n        delayVariation: {\n            title: \"Incremento de atraso (s)\",\n            description: \"A quantidade para incrementar cada n\u00F3 de atraso ap\u00F3s o primeiro em segundos\"\n        },\n        stereoDifference: {\n            title: \"Diferen\u00E7a est\u00E9reo (s)\",\n            description: \"A diferen\u00E7a de atrasos entre dois canais (adicionada ao canal esquerdo e subtra\u00EDda do direito)\"\n        },\n        oscillatorFrequency: {\n            title: \"Frequ\u00EAncia do LFO (Hz)\",\n            description: \"A frequ\u00EAncia do LFO do primeiro n\u00F3 de atraso, em Hz. O LFO controla o tempo de atraso.\"\n        },\n        frequencyVariation: {\n            title: \"Incremento do LFO (Hz)\",\n            description: \"A quantidade para incrementar a frequ\u00EAncia de cada LFO ap\u00F3s o primeiro, em Hz\"\n        },\n        oscillatorGain: {\n            title: \"Ganho do LFO (s)\",\n            description: \"Quanto o LFO alterar\u00E1 o atraso nos n\u00F3s de atraso, em segundos\"\n        },\n        apply: {\n            title: \"Aplicar\",\n            description: \"Aplicar as configura\u00E7\u00F5es selecionadas\"\n        }\n    }\n};\n", "// SpessaSynth Portugu\u00EAs do Brasil\n// por Lucas Gabriel (lucmsilva)\n// https://github.com/lucmsilva651\n\nimport { channelControllerLocale } from \"./channel_controller.js\";\nimport { effectsConfig } from \"./effects_config.js\";\n\n/**\n *\n * @type {{systemReset: {description: string, title: string}, disableCustomVibrato: {description: string, title: string}, mainTransposeMeter: {description: string, title: string}, mainVoiceMeter: {description: string, title: string}, midiPanic: {description: string, title: string}, mainPanMeter: {description: string, title: string}, mainVolumeMeter: {description: string, title: string}, toggleButton: {description: string, title: string}, channelController: {transposeMeter: {description: string, title: string}, voiceMeter: {description: string, title: string}, modulationWheelMeter: {description: string, title: string}, expressionMeter: {description: string, title: string}, panMeter: {description: string, title: string}, presetSelector: {description: string}, presetReset: {description: string}, pitchBendMeter: {description: string, title: string}, reverbMeter: {description: string, title: string}, volumeMeter: {description: string, title: string}, drumToggleButton: {description: string}, muteButton: {description: string}, chorusMeter: {description: string, title: string}}, blackMidiMode: {description: string, title: string}}}\n */\nexport const synthesizerControllerLocale = {\n    toggleButton: {\n        title: \"Controlador de Sintetizador\",\n        description: \"Mostra o controlador do sintetizador\"\n    },\n    \n    // meters\n    mainVoiceMeter: {\n        title: \"Voices: \",\n        description: \"A quantidade total de vozes atualmente tocando\"\n    },\n    \n    mainVolumeMeter: {\n        title: \"Volume: \",\n        description: \"O volume mestre atual do sintetizador\"\n    },\n    \n    mainPanMeter: {\n        title: \"Pan: \",\n        description: \"A panor\u00E2mica est\u00E9reo mestre atual do sintetizador\"\n    },\n    \n    mainTransposeMeter: {\n        title: \"Transposi\u00E7\u00E3o: \",\n        description: \"Transp\u00F5e o sintetizador (em semitons ou teclas)\"\n    },\n    \n    // buttons\n    midiPanic: {\n        title: \"P\u00E2nico MIDI\",\n        description: \"Para todas as vozes imediatamente\"\n    },\n    \n    systemReset: {\n        title: \"Reiniciar Sistema\",\n        description: \"Redefine todos os controladores para seus valores padr\u00E3o\"\n    },\n    \n    blackMidiMode: {\n        title: \"Modo Black MIDI\",\n        description: \"Ativa o Modo de Alto Desempenho, simplificando a apar\u00EAncia e eliminando as notas mais rapidamente\"\n    },\n    \n    disableCustomVibrato: {\n        title: \"Desativar vibrato personalizado\",\n        description: \"Desativa permanentemente o vibrato personalizado (NRPN). Recarregue o site para reativ\u00E1-lo\"\n    },\n    \n    helpButton: {\n        title: \"Ajuda\",\n        description: \"Abre um site externo com o guia de uso\"\n    },\n    \n    interpolation: {\n        description: \"Selecione o m\u00E9todo de interpola\u00E7\u00E3o do sintetizador\",\n        linear: \"Interpola\u00E7\u00E3o Linear\",\n        nearestNeighbor: \"Vizinho mais pr\u00F3ximo\",\n        cubic: \"Interpola\u00E7\u00E3o C\u00FAbica\"\n    },\n    \n    channelController: channelControllerLocale,\n    effectsConfig: effectsConfig\n};\n", "// SpessaSynth Portugu\u00EAs do Brasil\n// por Lucas Gabriel (lucmsilva)\n// https://github.com/lucmsilva651\n\nexport const sequencerControllerLocale = {\n    previousSong: \"M\u00FAsica anterior\",\n    nextSong: \"Pr\u00F3xima m\u00FAsica\",\n    loopThis: \"Repetir esta m\u00FAsica\",\n    playPause: \"Pausar/reproduzir\",\n    lyrics: {\n        show: \"Mostrar letras\",\n        title: \"Texto decodificado\",\n        noLyrics: \"Sem letras dispon\u00EDveis...\",\n        otherText: {\n            title: \"Outro texto\"\n        }\n    }\n};", "// SpessaSynth Portugu\u00EAs do Brasil\n// por Lucas Gabriel (lucmsilva)\n// https://github.com/lucmsilva651\n\nexport const exportAudio = {\n    button: {\n        title: \"Salvar \u00C1udio\",\n        description: \"Salvar a composi\u00E7\u00E3o em v\u00E1rios formatos\"\n    },\n    \n    formats: {\n        title: \"Escolher formato\",\n        formats: {\n            wav: {\n                button: {\n                    title: \"\u00C1udio WAV (.wav)\",\n                    description: \"Exportar a m\u00FAsica com modifica\u00E7\u00F5es como um arquivo de \u00E1udio .wav\"\n                },\n                options: {\n                    title: \"Op\u00E7\u00F5es de exporta\u00E7\u00E3o WAV\",\n                    confirm: \"Exportar\",\n                    normalizeVolume: {\n                        title: \"Normalizar volume\",\n                        description: \"Mant\u00E9m o volume no mesmo n\u00EDvel, independentemente de qu\u00E3o alto ou baixo est\u00E1 o MIDI. Recomendado.\"\n                    },\n                    additionalTime: {\n                        title: \"Tempo adicional (s)\",\n                        description: \"Tempo extra no final da m\u00FAsica para o som se dissipar. (em segundos)\"\n                    },\n                    \n                    separateChannels: {\n                        title: \"Separar canais\",\n                        description: \"Salva cada canal como um arquivo separado. \u00DAtil para visualizadores de oscilosc\u00F3pio. Note que isto desativa reverb e chorus.\",\n                        saving: {\n                            title: \"Arquivos de canal\",\n                            save: \"Salvar canal {0}\"\n                        }\n                    },\n                    loopCount: {\n                        title: \"Quantidade de repeti\u00E7\u00F5es\",\n                        description: \"N\u00FAmero de vezes que a m\u00FAsica ser\u00E1 repetida\"\n                    }\n                },\n                exportMessage: {\n                    message: \"Exportando \u00E1udio WAV...\",\n                    estimated: \"Restante:\",\n                    convertWav: \"Convertendo para wav...\"\n                }\n            },\n            \n            midi: {\n                button: {\n                    title: \"MIDI (.mid)\",\n                    description: \"Exportar o arquivo MIDI com as altera\u00E7\u00F5es de controlador e instrumento aplicadas\"\n                }\n            },\n            \n            soundfont: {\n                button: {\n                    title: \"SoundFont (.sf2, .sf3)\",\n                    description: \"Exportar um arquivo SoundFont2\"\n                },\n                \n                options: {\n                    title: \"Op\u00E7\u00F5es de exporta\u00E7\u00E3o SF\",\n                    confirm: \"Exportar\",\n                    trim: {\n                        title: \"Cortar\",\n                        description: \"Exportar o SoundFont apenas com os instrumentos e amostras utilizados pelo arquivo MIDI\"\n                    },\n                    compress: {\n                        title: \"Comprimir\",\n                        description: \"Comprimir as amostras com compress\u00E3o Ogg Vorbis com perdas, se n\u00E3o comprimidas. Reduz bastante o tamanho do arquivo. \" +\n                            \"Se o SoundFont j\u00E1 estava comprimido, n\u00E3o ser\u00E1 descomprimido, mesmo se esta op\u00E7\u00E3o estiver desativada.\"\n                    },\n                    quality: {\n                        title: \"Qualidade da compress\u00E3o\",\n                        description: \"A qualidade da compress\u00E3o. Quanto maior, melhor\"\n                    }\n                }\n            },\n            \n            rmidi: {\n                button: {\n                    title: \"MIDI Embutido (.rmi)\",\n                    description: \"Exportar o MIDI modificado com o SoundFont recortado embutido como um \u00FAnico arquivo. \" +\n                        \"Observe que este formato n\u00E3o \u00E9 amplamente suportado.\"\n                },\n                \n                progress: {\n                    title: \"Exportando MIDI embutido...\",\n                    loading: \"Carregando SoundFont e MIDI...\",\n                    modifyingMIDI: \"Modificando MIDI...\",\n                    modifyingSoundfont: \"Cortando SoundFont...\",\n                    saving: \"Salvando RMIDI...\",\n                    done: \"Pronto!\"\n                },\n                \n                options: {\n                    title: \"Op\u00E7\u00F5es de exporta\u00E7\u00E3o RMIDI\",\n                    confirm: \"Exportar\",\n                    compress: {\n                        title: \"Comprimir\",\n                        description: \"Comprimir o SoundFont com Ogg Vorbis com perdas. Reduz bastante o tamanho do arquivo. Recomendado.\"\n                    },\n                    quality: {\n                        title: \"Qualidade da compress\u00E3o\",\n                        description: \"A qualidade da compress\u00E3o. Quanto maior, melhor.\"\n                    },\n                    bankOffset: {\n                        title: \"Deslocamento do banco\",\n                        description: \"O deslocamento do banco do arquivo. Valor 0 \u00E9 recomendado. Alterar somente se souber o que est\u00E1 fazendo.\"\n                    },\n                    adjust: {\n                        title: \"Ajustar MIDI\",\n                        description: \"Ajusta o arquivo MIDI ao SoundFont. Mantenha ativado, a menos que tenha certeza do que est\u00E1 fazendo.\"\n                    }\n                }\n            }\n        },\n        metadata: {\n            songTitle: {\n                title: \"T\u00EDtulo:\",\n                description: \"T\u00EDtulo da m\u00FAsica\"\n            },\n            album: {\n                title: \"\u00C1lbum:\",\n                description: \"\u00C1lbum da m\u00FAsica\"\n            },\n            artist: {\n                title: \"Artista:\",\n                description: \"Artista da m\u00FAsica\"\n            },\n            albumCover: {\n                title: \"Capa do \u00E1lbum:\",\n                description: \"Capa do \u00E1lbum da m\u00FAsica\"\n            },\n            creationDate: {\n                title: \"Criado em:\",\n                description: \"Data de cria\u00E7\u00E3o da m\u00FAsica\"\n            },\n            genre: {\n                title: \"G\u00EAnero:\",\n                description: \"G\u00EAnero da m\u00FAsica\"\n            },\n            comment: {\n                title: \"Coment\u00E1rio:\",\n                description: \"Coment\u00E1rio da m\u00FAsica\"\n            },\n            duration: {\n                title: \"Dura\u00E7\u00E3o:\",\n                description: \"Dura\u00E7\u00E3o da m\u00FAsica\"\n            }\n        }\n    }\n};", "// SpessaSynth Portugu\u00EAs do Brasil\n// por Lucas Gabriel (lucmsilva)\n// https://github.com/lucmsilva651\n\nimport { settingsLocale } from \"./settings/settings.js\";\nimport { musicPlayerModeLocale } from \"./music_player_mode.js\";\nimport { synthesizerControllerLocale } from \"./synthesizer_controller/synthesizer_controller.js\";\nimport { sequencerControllerLocale } from \"./sequencer_controller.js\";\nimport { exportAudio } from \"./export_audio.js\";\n\n/**\n *\n * @type {CompleteLocaleTypedef}\n */\nexport const localePortuguese = {\n    localeName: \"Portugu\u00EAs (Brasil)\",\n    // title messsage\n    titleMessage: \"SpessaSynth: Sintetizador JavaScript SF2/DLS\",\n    demoTitleMessage: \"SpessaSynth: Demo Online do Sintetizador JavaScript SF2/DLS\",\n    \n    synthInit: {\n        genericLoading: \"Carregando...\",\n        loadingSoundfont: \"Carregando SoundFont...\",\n        loadingBundledSoundfont: \"Carregando SoundFont embutida...\",\n        startingSynthesizer: \"Iniciando sintetizador...\",\n        savingSoundfont: \"Salvando SoundFont para reutiliza\u00E7\u00E3o...\",\n        noWebAudio: \"Seu navegador n\u00E3o suporta Web Audio.\",\n        done: \"Pronto!\"\n    },\n    \n    // top bar buttons\n    midiUploadButton: \"Envie seus arquivos MIDI\",\n    \n    exportAudio: exportAudio,\n    \n    yes: \"Sim\",\n    no: \"N\u00E3o\",\n    \n    demoSoundfontUploadButton: \"Envie a SoundFont\",\n    demoGithubPage: \"P\u00E1gina do projeto\",\n    demoSongButton: \"M\u00FAsica de demonstra\u00E7\u00E3o\",\n    credits: \"Cr\u00E9ditos\",\n    dropPrompt: \"Solte os arquivos aqui...\",\n    \n    warnings: {\n        outOfMemory: \"Seu navegador ficou sem mem\u00F3ria. Tente usar o Firefox ou uma SoundFont SF3 (veja o console para detalhes).\",\n        noMidiSupport: \"Nenhuma porta MIDI detectada, essa fun\u00E7\u00E3o ser\u00E1 desativada.\",\n        warning: \"Aten\u00E7\u00E3o\"\n    },\n    hideTopBar: {\n        title: \"Ocultar barra superior\",\n        description: \"Oculte a barra de t\u00EDtulo para uma experi\u00EAncia mais imersiva\"\n    },\n    \n    convertDls: {\n        title: \"Convers\u00E3o DLS\",\n        message: \"Parece que voc\u00EA enviou um arquivo DLS. Quer converter para SF2?\"\n    },\n    \n    // all translations split up\n    musicPlayerMode: musicPlayerModeLocale,\n    settings: settingsLocale,\n    synthesizerController: synthesizerControllerLocale,\n    sequencerController: sequencerControllerLocale\n};", "import { localeEnglish } from \"./locale_en/locale.js\";\nimport { localePolish } from \"./locale_pl/locale.js\";\nimport { localeJapanese } from \"./locale_ja/locale.js\";\nimport { localeFrench } from \"./locale_fr/locale.js\";\nimport { localePortuguese } from \"./locale_pt/locale.js\";\n\nexport const DEFAULT_LOCALE = \"en\";\n/**\n * @enum {CompleteLocaleTypedef}\n */\nexport const localeList = {\n    \"en\": localeEnglish,\n    \"pl\": localePolish,\n    \"ja\": localeJapanese,\n    \"fr\": localeFrench,\n    \"pt\": localePortuguese\n};\n/**\n * @typedef {\n *     \"en\"\n *     |\"pl\"\n *     |\"ja\"\n *     |\"fr\"\n *     |\"pt\"\n * } LocaleList\n */", "import { settingsHtml } from \"./settings_html.js\";\nimport { getDownArrowSvg, getGearSvg } from \"../utils/icons.js\";\nimport { _loadSettings } from \"./saving/load_settings.js\";\nimport { _saveSettings } from \"./saving/save_settings.js\";\nimport { _serializeSettings } from \"./saving/serialize_settings.js\";\nimport { _changeLayout, _createInterfaceSettingsHandler } from \"./handlers/interface_handler.js\";\nimport { _toggleDarkMode } from \"./handlers/toggle_dark_mode.js\";\nimport { _createRendererHandler, _setRendererMode } from \"./handlers/renderer_handler.js\";\nimport {\n    _createMidiInputHandler,\n    _createMidiOutputHandler,\n    _createMidiSettingsHandler\n} from \"./handlers/midi_handler.js\";\nimport { _createKeyboardHandler } from \"./handlers/keyboard_handler.js\";\nimport { localeList } from \"../locale/locale_files/locale_list.js\";\nimport { keybinds } from \"../utils/keybinds.js\";\nimport { handleSliders } from \"./sliders.js\";\nimport { ANIMATION_REFLOW_TIME } from \"../utils/animation_utils.js\";\nimport { rendererModes } from \"../renderer/renderer.js\";\nimport { MIDIDeviceHandler } from \"spessasynth_lib\";\n\n\nconst TRANSITION_TIME = 0.2;\n\n// these delays sync with the AnalyserNode delay\n// tested on firefox\nconst niceDelayLookupTable = {\n    2048: 0.05,\n    4096: 0.27,\n    8192: 0.34,\n    16384: 0.37151927437641724,\n    32768: 0.48\n};\n\n/**\n * settings.js\n * purpose: manages the gui settings, controlling things like render settings, light mode, etc.\n */\n\nclass SpessaSynthSettings\n{\n    /**\n     * @type {function}\n     * @param {CustomSeq} seq\n     */\n    addSequencer;\n    \n    /**\n     * Creates a new instance of CustomSynth UI\n     * @param settingsWrapper {HTMLElement} the element to create the settings in\n     * @param sythui {SynthetizerUI}\n     * @param sequi {SequencerUI}\n     * @param renderer {Renderer}\n     * @param midiKeyboard {MidiKeyboard}\n     * @param midiDeviceHandler {MIDIDeviceHandler}\n     * @param playerInfo {MusicModeUI}\n     * @param localeManager {LocaleManager}\n     * @param delayNode {DelayNode}\n     */\n    constructor(settingsWrapper,\n                sythui,\n                sequi,\n                renderer,\n                midiKeyboard,\n                midiDeviceHandler,\n                playerInfo,\n                localeManager,\n                delayNode)\n    {\n        this.delay = delayNode;\n        this.mode = \"dark\";\n        this.autoKeyRange = false;\n        \n        this.renderer = renderer;\n        this.midiKeyboard = midiKeyboard;\n        this.midiDeviceHandler = midiDeviceHandler;\n        this.synthui = sythui;\n        this.sequi = sequi;\n        this.locale = localeManager;\n        this.musicMode = playerInfo;\n        \n        this.locales = localeList;\n        this.keyboardSizes = {\n            \"full\": { min: 0, max: 127 },\n            \"piano\": { min: 21, max: 108 },\n            \"5 octaves\": { min: 36, max: 96 },\n            \"two octaves\": { min: 53, max: 77 }\n        };\n        \n        /**\n         * @type {HTMLElement}\n         */\n        const settingsButton = document.createElement(\"div\");\n        settingsButton.style.position = \"relative\";\n        settingsButton.classList.add(\"seamless_button\");\n        settingsButton.classList.add(\"settings_button\");\n        settingsWrapper.appendChild(settingsButton);\n        \n        const musicModeButton = document.createElement(\"div\");\n        musicModeButton.classList.add(\"seamless_button\");\n        this.locale.bindObjectProperty(musicModeButton, \"innerText\", \"locale.musicPlayerMode.toggleButton.title\");\n        this.locale.bindObjectProperty(musicModeButton, \"title\", \"locale.musicPlayerMode.toggleButton.description\");\n        settingsWrapper.appendChild(musicModeButton);\n        \n        const hideTopButton = document.createElement(\"div\");\n        hideTopButton.classList.add(\"seamless_button\");\n        this.locale.bindObjectProperty(hideTopButton, \"innerText\", \"locale.hideTopBar.title\");\n        this.locale.bindObjectProperty(hideTopButton, \"title\", \"locale.hideTopBar.description\");\n        settingsWrapper.appendChild(hideTopButton);\n        \n        // add svg to show top button\n        const showTopButton = document.getElementsByClassName(\"show_top_button\")[0];\n        showTopButton.innerHTML = getDownArrowSvg(20);\n        \n        let text = document.createElement(\"span\");\n        this.locale.bindObjectProperty(text, \"innerText\", \"locale.settings.toggleButton\");\n        settingsButton.appendChild(text);\n        \n        let gear = document.createElement(\"div\");\n        gear.innerHTML = getGearSvg(24);\n        gear.classList.add(\"gear\");\n        settingsButton.appendChild(gear);\n        \n        this.mainDiv = document.createElement(\"div\");\n        this.mainDiv.classList.add(\"settings_menu\");\n        this.visible = false;\n        this.animationId = -1;\n        settingsButton.onclick = () => this.setVisibility(!this.visible);\n        settingsWrapper.appendChild(this.mainDiv);\n        \n        musicModeButton.onclick = this.toggleMusicPlayerMode.bind(this);\n        \n        hideTopButton.onclick = this.hideTopPart.bind(this);\n        \n        this.hideOnDocClick = true;\n        // stop propagation to disable hide on click outside\n        this.mainDiv.onclick = () =>\n        {\n            this.hideOnDocClick = false;\n        };\n        \n        // hide if clicked outside\n        document.addEventListener(\"click\", () =>\n        {\n            if (!this.hideOnDocClick)\n            {\n                this.hideOnDocClick = true;\n                return;\n            }\n            this.setVisibility(false);\n        });\n        \n        // load the HTML\n        this.mainDiv.innerHTML = settingsHtml;\n        // load input type range\n        handleSliders(this.mainDiv);\n        \n        // bind all translations to the HTML\n        for (const element of this.mainDiv.querySelectorAll(\"*[translate-path]\"))\n        {\n            // translate-path apply innerText directly\n            this.locale.bindObjectProperty(element, \"textContent\", element.getAttribute(\"translate-path\"));\n        }\n        for (const element of this.mainDiv.querySelectorAll(\"*[translate-path-title]\"))\n        {\n            const path = element.getAttribute(\"translate-path-title\");\n            // translate-path-title: apply to both innerText and title, by adding .title and .description respectively\n            this.locale.bindObjectProperty(element, \"textContent\", path + \".title\");\n            this.locale.bindObjectProperty(element, \"title\", path + \".description\");\n            \n            // for labels, also apply the \"title\" to elements that the label is for\n            if (element.tagName === \"LABEL\")\n            {\n                const forId = element.getAttribute(\"for\");\n                if (forId)\n                {\n                    const forElement = document.getElementById(forId);\n                    if (forElement)\n                    {\n                        this.locale.bindObjectProperty(forElement, \"title\", path + \".description\");\n                    }\n                }\n            }\n        }\n        \n        this.getHtmlControls();\n        \n        \n        // key bind is \"R\"\n        document.addEventListener(\"keydown\", e =>\n        {\n            switch (e.key.toLowerCase())\n            {\n                case keybinds.settingsShow:\n                    this.setVisibility(!this.visible);\n                    break;\n                \n                // hide when synth controller shown\n                case keybinds.synthesizerUIShow:\n                    this.setVisibility(false);\n            }\n        });\n        \n        // if window.savedSettings exists, load it\n        this._loadSettings().then(() =>\n        {\n            this.createHandlers(renderer, midiKeyboard, midiDeviceHandler, sequi, sythui);\n        });\n        \n        this.topPartVisible = true;\n        let fullscreen = false;\n        \n        // detect fullscreen (even f11)\n        window.addEventListener(\"resize\", () =>\n        {\n            let maxHeight = window.screen.height,\n                maxWidth = window.screen.width,\n                curHeight = window.outerHeight,\n                curWidth = window.outerWidth;\n            \n            let screen;\n            screen = maxWidth === curWidth && maxHeight === curHeight;\n            if (screen !== fullscreen)\n            {\n                fullscreen = screen;\n                if (screen)\n                {\n                    this.hideTopPart();\n                }\n                else\n                {\n                    this.showTopPart();\n                }\n            }\n        });\n        \n        document.addEventListener(\"fullscreenchange\", () =>\n        {\n            if (document.fullscreenElement === null)\n            {\n                this.showTopPart();\n            }\n            else\n            {\n                this.hideTopPart();\n            }\n        });\n    }\n    \n    async toggleMusicPlayerMode()\n    {\n        if (this.musicMode.visible === false)\n        {\n            this.hideTopPart();\n        }\n        this.musicMode.setVisibility(!this.musicMode.visible, document.getElementById(\"keyboard_canvas_wrapper\"));\n        this.renderer.renderBool = !this.musicMode.visible;\n        this.renderer.updateSize();\n    }\n    \n    showTopPart()\n    {\n        if (this.topPartVisible === true)\n        {\n            return;\n        }\n        this.topPartVisible = true;\n        const topPart = document.getElementsByClassName(\"top_part\")[0];\n        const showTopButton = document.getElementsByClassName(\"show_top_button\")[0];\n        topPart.style.display = \"\";\n        setTimeout(() =>\n        {\n            topPart.classList.remove(\"top_part_hidden\");\n        }, ANIMATION_REFLOW_TIME);\n        showTopButton.classList.remove(\"shown\");\n        showTopButton.style.display = \"none\";\n        window.dispatchEvent(new CustomEvent(\"resize\"));\n    }\n    \n    hideTopPart()\n    {\n        if (this.topPartVisible === false)\n        {\n            return;\n        }\n        this.topPartVisible = false;\n        // hide top\n        const topPart = document.getElementsByClassName(\"top_part\")[0];\n        topPart.classList.add(\"top_part_hidden\");\n        setTimeout(() =>\n        {\n            topPart.style.display = \"none\";\n        }, 200);\n        \n        // show button to get it back\n        const showTopButton = document.getElementsByClassName(\"show_top_button\")[0];\n        showTopButton.style.display = \"flex\";\n        setTimeout(() =>\n        {\n            showTopButton.classList.add(\"shown\");\n        }, ANIMATION_REFLOW_TIME);\n        \n        showTopButton.onclick = this.showTopPart.bind(this);\n        window.dispatchEvent(new CustomEvent(\"resize\"));\n    }\n    \n    /**\n     * @param visible {boolean}\n     */\n    setVisibility(visible)\n    {\n        if (this.animationId)\n        {\n            clearTimeout(this.animationId);\n        }\n        if (visible)\n        {\n            this.mainDiv.style.display = \"block\";\n            setTimeout(() =>\n            {\n                document.getElementsByClassName(\"top_part\")[0].classList.add(\"settings_shown\");\n                this.mainDiv.classList.add(\"settings_menu_show\");\n            }, ANIMATION_REFLOW_TIME);\n            this.hideOnDocClick = false;\n        }\n        else\n        {\n            document.getElementsByClassName(\"top_part\")[0].classList.remove(\"settings_shown\");\n            this.mainDiv.classList.remove(\"settings_menu_show\");\n            this.animationId = setTimeout(() =>\n            {\n                this.mainDiv.style.display = \"none\";\n            }, TRANSITION_TIME * 1000);\n        }\n        this.visible = visible;\n    }\n    \n    createHandlers(renderer, midiKeyboard, midiDeviceHandler, sequi, sythui)\n    {\n        // create handlers for all settings\n        this._createRendererHandler(renderer);\n        \n        this._createMidiSettingsHandler(\n            midiDeviceHandler,\n            sequi,\n            sythui\n        );\n        \n        this._createKeyboardHandler(\n            midiKeyboard,\n            sythui,\n            renderer\n        );\n        \n        this._createInterfaceSettingsHandler();\n    }\n    \n    getHtmlControls()\n    {\n        // get the HTML controllers\n        this.htmlControls = {\n            renderer: {\n                renderingMode: document.getElementById(\"renderer_mode_selector\"),\n                noteTimeSlider: document.getElementById(\"note_time_slider\"),\n                noteAfterTriggerTimeSlider: document.getElementById(\"note_after_time_slider\"),\n                noteToggler: document.getElementById(\"note_toggler\"),\n                activeNoteToggler: document.getElementById(\"active_note_toggler\"),\n                visualPitchToggler: document.getElementById(\"visual_pitch_toggler\"),\n                stabilizeWaveformsToggler: document.getElementById(\"stabilize_waveforms_toggler\"),\n                \n                exponentialGainToggler: document.getElementById(\"exponential_gain_toggler\"),\n                dynamicGainToggler: document.getElementById(\"dynamic_gain_toggler\"),\n                logarithmicFrequencyToggler: document.getElementById(\"logarithmic_frequency_toggler\"),\n                \n                analyserThicknessSlider: document.getElementById(\"analyser_thickness_slider\"),\n                analyserFftSlider: document.getElementById(\"analyser_fft_slider\"),\n                waveMultiplierSlizer: document.getElementById(\"wave_multiplier_slider\")\n            },\n            \n            keyboard: {\n                channelSelector: document.getElementById(\"channel_selector\"),\n                modeSelector: document.getElementById(\"mode_selector\"),\n                sizeSelector: document.getElementById(\"keyboard_size_selector\"),\n                showSelector: document.getElementById(\"keyboard_show\")\n            },\n            \n            midi: {\n                outputSelector: document.getElementById(\"midi_output_selector\"),\n                inputSelector: document.getElementById(\"midi_input_selector\")\n            },\n            \n            interface: {\n                themeSelector: document.getElementById(\"toggle_mode_button\"),\n                showControlsToggle: document.getElementById(\"show_sequencer_controls_button\"),\n                languageSelector: document.getElementById(\"language_selector\"),\n                layoutSelector: document.getElementById(\"layout_selector\")\n            }\n        };\n    }\n    \n    setTimeDelay(fft)\n    {\n        let delayTime;\n        // calculate delay:\n        // 16384 fft size = 0.37 s\n        if (fft >= 2048 && this.renderer.rendererMode !== rendererModes.spectrumSingleMode)\n        {\n            delayTime = niceDelayLookupTable[fft];//fft / this.synthui.synth.context.sampleRate;\n        }\n        else\n        {\n            delayTime = 0;\n        }\n        this.delay.delayTime.value = delayTime;\n        this.renderer.timeOffset = delayTime;\n        this.synthui.synth.eventHandler.timeDelay = delayTime;\n    }\n}\n\nSpessaSynthSettings.prototype._toggleDarkMode = _toggleDarkMode;\nSpessaSynthSettings.prototype._createInterfaceSettingsHandler = _createInterfaceSettingsHandler;\nSpessaSynthSettings.prototype._changeLayout = _changeLayout;\nSpessaSynthSettings.prototype._createRendererHandler = _createRendererHandler;\nSpessaSynthSettings.prototype._setRendererMode = _setRendererMode;\n\nSpessaSynthSettings.prototype._createMidiSettingsHandler = _createMidiSettingsHandler;\nSpessaSynthSettings.prototype._createMidiInputHandler = _createMidiInputHandler;\nSpessaSynthSettings.prototype._createMidiOutputHandler = _createMidiOutputHandler;\nSpessaSynthSettings.prototype._createKeyboardHandler = _createKeyboardHandler;\n\nSpessaSynthSettings.prototype._loadSettings = _loadSettings;\nSpessaSynthSettings.prototype._serializeSettings = _serializeSettings;\nSpessaSynthSettings.prototype._saveSettings = _saveSettings;\n\nexport { SpessaSynthSettings };", "import { getDoubleNoteSvg } from \"../utils/icons.js\";\n\nexport const musicModeInnerHTML = `\n        <div id='player_info_background_image'></div>\n        <div class='player_info_wrapper'>\n            <div class='player_info_note_icon'>\n                ${getDoubleNoteSvg(\"100%\")}\n                <img src='' alt='' style='display: none;'>\n            </div>\n            <div class='player_info_details_wrapper'>\n                <p style='font-size: small;'><i translate-path='locale.musicPlayerMode.currentlyPlaying'></i></p>\n                <h2  id='player_info_title' translate-path='locale.musicPlayerMode.nothingPlaying'></h2>\n                \n                <div class='player_info_detail_element'>\n                    <i id='player_info_detail' translate-path='locale.musicPlayerMode.nothingPlayingCopyright'></i>\n                </div>\n                \n                <div class='player_info_detail_element hidden'>\n                    <b translate-path-title='locale.exportAudio.formats.metadata.artist'></b><i id='player_info_artist'></i>\n                </div>\n                \n                <div class='player_info_detail_element hidden'>\n                    <b translate-path-title='locale.exportAudio.formats.metadata.album'></b><i id='player_info_album'></i>\n                </div>\n                \n                <div class='player_info_detail_element hidden'>\n                    <b translate-path-title='locale.exportAudio.formats.metadata.genre'></b><i id='player_info_genre'></i>\n                </div>\n                \n                <div class='player_info_detail_element hidden'>\n                    <b translate-path-title='locale.exportAudio.formats.metadata.creationDate'></b><i id='player_info_creation'></i>\n                </div>\n                \n                <div class='player_info_detail_element hidden'>\n                    <b translate-path-title='locale.exportAudio.formats.metadata.subject'></b><i id='player_info_subject'></i>\n                </div>\n                \n                <div class='player_info_detail_element hidden'>\n                    <b translate-path-title='locale.exportAudio.formats.metadata.comment'></b><i id='player_info_comment'></i>\n                </div>\n                \n                <div class='player_info_detail_element hidden'>\n                    <b translate-path-title='locale.exportAudio.formats.metadata.duration'></b><i id='player_info_time'></i>\n                </div>\n                \n                <div class='player_info_detail_element hidden'>\n                    <pre id='player_info_file_name'></pre>\n                </div>\n            </div>\n        </div>`;", "import { formatTime } from \"../utils/other.js\";\nimport { ANIMATION_REFLOW_TIME } from \"../utils/animation_utils.js\";\nimport { musicModeInnerHTML } from \"./music_mode_html.js\";\n\n/**\n * music_mode_ui.js\n * purpose: manages the music mode gui, hiding keyboard and renderer from view\n */\n\n\nconst TRANSITION_TIME = 0.5;\n\nexport class MusicModeUI\n{\n    /**\n     * Creates a new class for displaying information about the current file.\n     * @param element {HTMLElement}\n     * @param localeManager {LocaleManager}\n     */\n    constructor(element, localeManager)\n    {\n        this.mainDiv = element;\n        // load html\n        this.mainDiv.innerHTML = musicModeInnerHTML;\n        \n        // apply locale bindings\n        for (const el of this.mainDiv.querySelectorAll(\"*[translate-path]\"))\n        {\n            localeManager.bindObjectProperty(el, \"textContent\", el.getAttribute(\"translate-path\"));\n        }\n        for (const el of this.mainDiv.querySelectorAll(\"*[translate-path-title]\"))\n        {\n            localeManager.bindObjectProperty(el, \"textContent\", el.getAttribute(\"translate-path-title\") + \".title\");\n            localeManager.bindObjectProperty(el, \"title\", el.getAttribute(\"translate-path-title\") + \".description\");\n        }\n        this.timeoutId = -1;\n        this.visible = false;\n        this.locale = localeManager;\n    }\n    \n    toggleDarkMode()\n    {\n        this.mainDiv.getElementsByClassName(\"player_info_wrapper\")[0].classList.toggle(\"light_mode\");\n    }\n    \n    /**\n     * @param title {string}\n     */\n    setTitle(title)\n    {\n        // get the title\n        document.getElementById(\"player_info_title\").textContent = title;\n    }\n    \n    /**\n     * @param seq {CustomSeq}\n     */\n    connectSequencer(seq)\n    {\n        /**\n         * @type {CustomSeq}\n         */\n        this.seq = seq;\n        this.seq.addOnSongChangeEvent(mid =>\n        {\n            // use file name if no copyright detected\n            const midcopy = mid.copyright;\n            /**\n             * @param id {string}\n             * @param text {string}\n             * @param enableMarquee {boolean}\n             */\n            const setInfoText = (id, text, enableMarquee = true) =>\n            {\n                const el = document.getElementById(id);\n                // if new lines, split up into multiple spans and only then apply marquee\n                const lines = text.trim().split(\"\\n\");\n                if (lines.length > 1)\n                {\n                    el.parentElement.classList.remove(\"hidden\");\n                    el.innerHTML = \"\";\n                    for (const line of lines)\n                    {\n                        const textWrap = document.createElement(\"span\");\n                        textWrap.textContent = line;\n                        el.appendChild(textWrap);\n                        el.appendChild(document.createElement(\"br\"));\n                    }\n                    el.removeChild(el.lastChild);\n                    return;\n                }\n                \n                if (text.length > 0)\n                {\n                    el.parentElement.classList.remove(\"hidden\");\n                    el.innerHTML = \"\";\n                    // add scroll if needed\n                    if (text.length > 30 && enableMarquee)\n                    {\n                        el.classList.add(\"marquee\");\n                        \n                        const textWrap = document.createElement(\"span\");\n                        textWrap.textContent = text;\n                        el.appendChild(textWrap);\n                    }\n                    else\n                    {\n                        el.textContent = text;\n                    }\n                }\n                else\n                {\n                    el.parentElement.classList.add(\"hidden\");\n                }\n            };\n            // copyright\n            setInfoText(\"player_info_detail\", midcopy);\n            // time\n            setInfoText(\"player_info_time\", formatTime(this.seq.duration).time);\n            \n            // file name\n            setInfoText(\"player_info_file_name\", mid.fileName, false);\n            \n            // embedded things\n            // add album and artist meta\n            /**\n             * @param type {string}\n             * @param def {string}\n             * @param decoder {TextDecoder}\n             * @param prepend {string}\n             * @return {string}\n             */\n            const verifyDecode = (type, def, decoder, prepend = \"\") =>\n            {\n                return this.seq.midiData.RMIDInfo?.[type] === undefined ? def : prepend + decoder.decode(\n                    this.seq.midiData.RMIDInfo?.[type]?.buffer).replace(/\\0$/, \"\");\n            };\n            // initialize decoder\n            let encoding = verifyDecode(\"IENC\", \"ascii\", new TextDecoder());\n            const decoder = new TextDecoder(encoding);\n            \n            // artist, album, creation date, subject\n            setInfoText(\"player_info_album\", verifyDecode(\"IPRD\", \"\", decoder));\n            setInfoText(\"player_info_artist\", verifyDecode(\"IART\", \"\", decoder));\n            setInfoText(\"player_info_genre\", verifyDecode(\"IGNR\", \"\", decoder));\n            setInfoText(\"player_info_subject\", verifyDecode(\"ISBJ\", \"\", decoder));\n            setInfoText(\n                \"player_info_creation\",\n                verifyDecode(\"ICRD\", \"\", decoder) + verifyDecode(\n                    \"ICRT\",\n                    \"\",\n                    decoder,\n                    \"\\n\"\n                )\n            );\n            setInfoText(\"player_info_comment\", verifyDecode(\"ICMT\", \"\", decoder));\n            \n            // image\n            const svg = this.mainDiv.getElementsByTagName(\"svg\")[0];\n            const img = this.mainDiv.getElementsByTagName(\"img\")[0];\n            const bg = document.getElementById(\"player_info_background_image\");\n            if (!mid.isEmbedded)\n            {\n                svg.style.display = \"\";\n                img.style.display = \"none\";\n                bg.style.setProperty(\"--bg-image\", \"undefined\");\n                return;\n            }\n            // add album cover if available\n            if (mid.RMIDInfo[\"IPIC\"] === undefined)\n            {\n                svg.style.display = \"\";\n                img.style.display = \"none\";\n                bg.style.setProperty(\"--bg-image\", \"undefined\");\n                return;\n            }\n            svg.style.display = \"none\";\n            img.style.display = \"\";\n            const pic = new Blob([mid.RMIDInfo[\"IPIC\"].buffer]);\n            const url = URL.createObjectURL(pic);\n            img.src = url;\n            bg.style.setProperty(\"--bg-image\", `url('${url}')`);\n        }, \"player-js-song-change\");\n    }\n    \n    /**\n     * @param visible {boolean}\n     * @param keyboardCanvasWrapper {HTMLDivElement}\n     */\n    setVisibility(visible, keyboardCanvasWrapper)\n    {\n        if (visible === this.visible)\n        {\n            return;\n        }\n        this.visible = visible;\n        if (this.timeoutId)\n        {\n            clearTimeout(this.timeoutId);\n        }\n        const playerDiv = this.mainDiv;\n        if (visible)\n        {\n            // PREPARATION\n            // renderer and keyboard\n            keyboardCanvasWrapper.classList.add(\"out_animation\");\n            this.savedCKWrapperHeight = keyboardCanvasWrapper.clientHeight;\n            \n            // music mode\n            // hacky: get position of the wrapper and temporarily set to absolute (set to normal after finish)\n            const playerHeight = keyboardCanvasWrapper.clientHeight;\n            const playerTop = keyboardCanvasWrapper.getBoundingClientRect().top;\n            playerDiv.style.position = \"absolute\";\n            playerDiv.style.top = `${playerTop}px`;\n            playerDiv.style.height = `${playerHeight}px`;\n            playerDiv.style.display = \"flex\";\n            \n            // START\n            setTimeout(() =>\n            {\n                playerDiv.classList.add(\"player_info_show\");\n                document.body.style.overflow = \"hidden\";\n            }, ANIMATION_REFLOW_TIME);\n            \n            // FINISH\n            this.timeoutId = setTimeout(async () =>\n            {\n                keyboardCanvasWrapper.style.display = \"none\";\n                \n                playerDiv.style.position = \"\";\n                playerDiv.style.top = \"\";\n                playerDiv.style.height = \"\";\n                \n                document.body.style.overflow = \"\";\n            }, TRANSITION_TIME * 1000);\n        }\n        else\n        {\n            // PREPARATION\n            // wrapper\n            // hacky: get position of the music mode and temporarily set to absolute (set to normal after finish)\n            const rootTop = playerDiv.getBoundingClientRect().top;\n            keyboardCanvasWrapper.style.display = \"\";\n            keyboardCanvasWrapper.style.position = \"absolute\";\n            keyboardCanvasWrapper.style.top = `${rootTop}px`;\n            keyboardCanvasWrapper.style.height = `${this.savedCKWrapperHeight}px`;\n            \n            // music mode\n            playerDiv.classList.remove(\"player_info_show\");\n            \n            // START\n            setTimeout(() =>\n            {\n                keyboardCanvasWrapper.classList.remove(\"out_animation\");\n                document.body.style.overflow = \"hidden\";\n            }, ANIMATION_REFLOW_TIME);\n            \n            // FINISH\n            this.timeoutId = setTimeout(() =>\n            {\n                playerDiv.style.display = \"none\";\n                \n                keyboardCanvasWrapper.style.position = \"\";\n                keyboardCanvasWrapper.style.top = \"\";\n                keyboardCanvasWrapper.style.height = \"\";\n                \n                document.body.style.overflow = \"\";\n            }, TRANSITION_TIME * 1000);\n        }\n    }\n}", "/**\n * @typedef {{\n *  object: HTMLElement,\n *  propertyName: string,\n *  localePath: string,\n *  formattingArguments: string|number[],\n *  isEdited: boolean\n * }} PropertyType\n */\nimport { DEFAULT_LOCALE, localeList } from \"./locale_files/locale_list.js\";\n\nexport class LocaleManager\n{\n    /**\n     * calls it when the locale has changed (no arguments)\n     * @type {function()[]}\n     */\n    onLocaleChanged = [];\n    \n    /**\n     * Creates a new locale manager, responsible for managing and binding text values, then changing them when the locale changes\n     * @param initialLocale {LocaleList}\n     */\n    constructor(initialLocale)\n    {\n        /**\n         * @type {CompleteLocaleTypedef}\n         */\n        this.locale = localeList[initialLocale] || localeList[DEFAULT_LOCALE];\n        \n        /**\n         * @type {CompleteLocaleTypedef|localeList}\n         */\n        this.fallbackLocale = localeList[DEFAULT_LOCALE];\n        \n        /**\n         * @type {LocaleList}\n         */\n        this.localeCode = initialLocale;\n        /**\n         * All bound object properties and their respective objects\n         * @type {PropertyType[]}\n         * @private\n         */\n        this._boundObjectProperties = [];\n    }\n    \n    /**\n     * Resolves and gets the localized string for the current path\n     * @param localePath {string} The locale path to the text, written as JS object path, starts with \"locale.\"\n     * @param formattingArguments {string|number[]} optional arguments if the locale uses formatting (\"{0} {1}\") etc.\n     * @returns {string} The localized string\n     */\n    getLocaleString(localePath, formattingArguments = [])\n    {\n        const locale = this._resolveLocalePath(localePath);\n        if (formattingArguments.length > 0)\n        {\n            return this._formatLocale(locale, formattingArguments);\n        }\n        return locale;\n    }\n    \n    /**\n     * @param property {PropertyType}\n     * @private\n     */\n    _applyPropertyInternal(property)\n    {\n        // if edited, skip\n        if (property.isEdited)\n        {\n            return;\n        }\n        let textValue = this._resolveLocalePath(property.localePath);\n        if (property.formattingArguments.length > 0)\n        {\n            textValue = this._formatLocale(textValue, property.formattingArguments);\n        }\n        property.object[property.propertyName] = textValue;\n    }\n    \n    /**\n     * Checks if the property has changed and flags it as edited\n     * @param property {PropertyType}\n     * @private\n     */\n    _validatePropertyIntegrity(property)\n    {\n        // get the text value\n        let textValue = this._resolveLocalePath(property.localePath);\n        if (property.formattingArguments.length > 0)\n        {\n            textValue = this._formatLocale(textValue, property.formattingArguments);\n        }\n        if (property.object[property.propertyName] !== textValue)\n        {\n            property.isEdited = true;\n        }\n    }\n    \n    /**\n     * replaces strings like \"{0}\" with the given arguments\n     * @param template {string} the preformatted string\n     * @param values {string|number[]} the values to fill the string with\n     * @return {string} the formatted string\n     * @private\n     */\n    _formatLocale(template, values)\n    {\n        return template.replace(/{(\\d+)}/g, (match, number) =>\n        {\n            return typeof values[number] !== \"undefined\" ? values[number] : match;\n        });\n    }\n    \n    /**\n     * Binds a given object's property to a locale path and applies it\n     * @param object {HTMLElement|Object} the object that holds the bound property\n     * @param propertyName {string|\"textContent\"|\"title\"} the object's property to bind\n     * @param localePath {string} The locale path to the text, written as JS object path, starts with \"locale.\"\n     * @param formattingArguments {(string|number)[]} optional arguments if the locale uses formatting (\"{0} {1}\") etc.\n     */\n    bindObjectProperty(object, propertyName, localePath, formattingArguments = [])\n    {\n        /**\n         * Compile the property\n         * @type {PropertyType}\n         */\n        const property = {\n            object: object,\n            propertyName: propertyName,\n            localePath: localePath,\n            formattingArguments: formattingArguments,\n            isEdited: false\n        };\n        // apply value to the property\n        this._applyPropertyInternal(property);\n        // add to the bound properties list\n        this._boundObjectProperties.push(property);\n    }\n    \n    /**\n     * Resolves the locale path to get the string value from the locale object\n     * @param path {string} The locale path to the text, written as JS object path, starts with \"locale.\"\n     * @param fallback {boolean} If the locale being searched is the fallback locale. If false and no valid path was found,\n     * @returns {string} The string value from the path\n     * @private\n     */\n    _resolveLocalePath(path, fallback = false)\n    {\n        if (!path.startsWith(\"locale.\"))\n        {\n            throw new Error(`Invalid locale path: ${path} (it should start with \"locale.\")`);\n        }\n        \n        const parts = path.split(\".\");\n        \n        /**\n         * Traverse the locale object to get the value\n         * @type {Object|string}\n         */\n        let current = fallback ? this.fallbackLocale : this.locale;\n        for (let i = 1; i < parts.length; i++) // Start from 1 to skip \"locale\"\n        {\n            if (current[parts[i]] !== undefined)\n            {\n                current = current[parts[i]];\n            }\n            else\n            {\n                if (fallback)\n                {\n                    throw new Error(`Invalid locale path: ${path}: part \"${parts[i]}\" does not exist. Available paths: ${Object.keys(\n                        current).join(\", \")}`);\n                }\n                else\n                {\n                    console.warn(`Locale path \"${path}\" not translated in ${this.locale.localeName} (${this.localeCode}). Using ${this.fallbackLocale.localeName} instead.`);\n                    return this._resolveLocalePath(path, true);\n                }\n            }\n        }\n        \n        // Check if the final resolved value is a string\n        if (typeof current !== \"string\")\n        {\n            throw new Error(`Invalid locale path: ${path}: value is not a string. Perhaps the path is incomplete`);\n        }\n        \n        return current;\n    }\n    \n    /**\n     * Changes the global locale and all bound text\n     * @param newLocale {LocaleList}\n     * @param force {boolean} if the locale should be applied even to changed values\n     */\n    changeGlobalLocale(newLocale, force = false)\n    {\n        document.documentElement.lang = newLocale;\n        /**\n         * @type {CompleteLocaleTypedef}\n         */\n        const newLocaleObject = localeList[newLocale];\n        if (!newLocaleObject)\n        {\n            console.warn(`Locale ${newLocale} not found. Not switching.`);\n            return;\n        }\n        this.localeCode = newLocale;\n        console.info(\"Changing locale to\", newLocaleObject.localeName);\n        if (!force)\n        {\n            // Check if the property has been changed to something else. If so, don't change it back.\n            this._boundObjectProperties.forEach(property =>\n            {\n                this._validatePropertyIntegrity(property);\n            });\n        }\n        this.locale = newLocaleObject;\n        // apply the new locale to bound elements\n        this._boundObjectProperties.forEach(property =>\n        {\n            this._applyPropertyInternal(property);\n        });\n        this.onLocaleChanged.forEach(l => l());\n    }\n}", "import { closeNotification, showNotification } from \"../../notification/notification.js\";\nimport { audioBufferToWav, FancyChorus, getReverbProcessor } from \"spessasynth_lib\";\nimport { formatTime } from \"../../utils/other.js\";\nimport { consoleColors } from \"../../utils/console_colors.js\";\n\nimport { ANIMATION_REFLOW_TIME } from \"../../utils/animation_utils.js\";\nimport { audioToWav } from \"spessasynth_core\";\nimport JSZip from \"jszip\";\n\nconst RENDER_AUDIO_TIME_INTERVAL = 250;\n\n/**\n * @typedef {Object} WaveMetadata\n * @property {string|undefined} title - the song's title\n * @property {string|undefined} artist - the song's artist\n * @property {string|undefined} album - the song's album\n * @property {string|undefined} genre - the song's genre\n */\n\n\n/**\n * @this {Manager}\n * @param normalizeAudio {boolean}\n * @param sampleRate {number}\n * @param additionalTime {number}\n * @param separateChannels {boolean}\n * @param meta {WaveMetadata}\n * @param loopCount {number}\n * @returns {Promise<void>}\n * @private\n */\nexport async function _doExportAudioData(normalizeAudio = true, sampleRate = 44100, additionalTime = 2, separateChannels = false, meta = {}, loopCount = 0)\n{\n    this.isExporting = true;\n    if (!this.seq)\n    {\n        throw new Error(\"No sequencer active\");\n    }\n    // get locales\n    const exportingMessage = manager.localeManager.getLocaleString(`locale.exportAudio.formats.formats.wav.exportMessage.message`);\n    const estimatedMessage = manager.localeManager.getLocaleString(`locale.exportAudio.formats.formats.wav.exportMessage.estimated`);\n    const addingEffects = this.localeManager.getLocaleString(\n        \"locale.exportAudio.formats.formats.wav.exportMessage.addingEffects\");\n    const loadingMessage = manager.localeManager.getLocaleString(`locale.synthInit.genericLoading`);\n    const notification = showNotification(\n        exportingMessage,\n        [\n            { type: \"text\", textContent: loadingMessage },\n            { type: \"progress\" }\n        ],\n        9999999,\n        false\n    );\n    \n    const parsedMid = await this.seq.getMIDI();\n    // calculate times\n    const playbackRate = this.seq.playbackRate;\n    const loopStartAbsolute = parsedMid.MIDIticksToSeconds(parsedMid.loop.start) / playbackRate;\n    const loopEndAbsolute = parsedMid.MIDIticksToSeconds(parsedMid.loop.end) / playbackRate;\n    let loopDuration = loopEndAbsolute - loopStartAbsolute;\n    const duration = parsedMid.duration / playbackRate + additionalTime + loopDuration * loopCount;\n    let sampleDuration = sampleRate * duration;\n    \n    // progress tracking\n    const detailMessage = notification.div.getElementsByTagName(\"p\")[0];\n    const progressDiv = notification.div.getElementsByClassName(\"notification_progress\")[0];\n    const RATI_SECONDS = RENDER_AUDIO_TIME_INTERVAL / 1000;\n    let estimatedTime = duration * playbackRate;\n    const smoothingFactor = 0.1; // for smoothing estimated time\n    \n    \n    let lastProgress = 0;\n    const showProgress = (prog, str, time = true) =>\n    {\n        progressDiv.style.width = `${prog * 100}%`;\n        if (time)\n        {\n            // calculate estimated time\n            let hasRendered = (prog - lastProgress) * duration;\n            lastProgress = prog;\n            const speed = hasRendered / RATI_SECONDS;\n            const estimated = (1 - prog) / speed * duration;\n            if (estimated === Infinity)\n            {\n                return;\n            }\n            // smooth out estimated using exponential moving average\n            estimatedTime = smoothingFactor * estimated + (1 - smoothingFactor) * estimatedTime;\n            detailMessage.innerText = `${str} ${formatTime(estimatedTime).time}`;\n        }\n        else\n        {\n            detailMessage.innerText = `${str} ${Math.floor(prog * 100_0) / 10}%`;\n        }\n    };\n    \n    let progress = 0;\n    const interval = setInterval(() =>\n    {\n        showProgress(progress, estimatedMessage);\n    }, RENDER_AUDIO_TIME_INTERVAL);\n    \n    // first pass: render dry audio in the worker\n    const renderedNoEffectsData = await this.synth.renderAudio(\n        sampleRate,\n        additionalTime,\n        separateChannels,\n        loopCount,\n        (p) => progress = p\n    );\n    progressDiv.style.width = \"50%\";\n    // clear intervals\n    clearInterval(interval);\n    \n    \n    if (separateChannels)\n    {\n        \n        const snapshot = await this.synth.getSynthesizerSnapshot();\n        // discard effects\n        const renderedChannels = renderedNoEffectsData.slice(2);\n        const separatePath = `locale.exportAudio.formats.formats.wav.options.separateChannels.saving.`;\n        /**\n         * @type {NotificationContent[]}\n         */\n        const content = [];\n        const usedChannels = new Set();\n        for (const p of parsedMid.usedChannelsOnTrack)\n        {\n            p.forEach(c => usedChannels.add(c));\n        }\n        for (let i = 0; i < 16; i++)\n        {\n            // check if all channels are muted\n            let muted = true;\n            for (let j = i; j < snapshot.channelSnapshots.length; j += 16)\n            {\n                if (!snapshot.channelSnapshots[j].isMuted)\n                {\n                    muted = false;\n                    break;\n                }\n            }\n            if (!usedChannels.has(i) || muted)\n            {\n                continue;\n            }\n            const channel = i;\n            content.push({\n                type: \"button\",\n                textContent: this.localeManager.getLocaleString(separatePath + \"save\", [i + 1]),\n                onClick: async (n, target) =>\n                {\n                    const text = target.textContent;\n                    target.textContent = this.localeManager.getLocaleString(\n                        \"locale.exportAudio.formats.formats.wav.exportMessage.convertWav\");\n                    await new Promise(r => setTimeout(r, ANIMATION_REFLOW_TIME));\n                    \n                    // stereo\n                    const audioOut = audioToWav(\n                        renderedChannels[channel],\n                        sampleRate,\n                        false,\n                        undefined,\n                        undefined\n                    );\n                    const fileName = `${channel + 1} - ${snapshot.channelSnapshots[i].patchName}.wav`;\n                    this.saveBlob(new Blob([audioOut], { type: \"audio/wav\" }), fileName);\n                    target.classList.add(\"green_button\");\n                    target.textContent = text;\n                }\n            });\n        }\n        content.push({\n            type: \"button\",\n            textContent: this.localeManager.getLocaleString(separatePath + \"saveAll\"),\n            onClick: async (n, target) =>\n            {\n                const text = target.textContent;\n                target.textContent = this.localeManager.getLocaleString(\n                    \"locale.exportAudio.formats.formats.wav.exportMessage.convertWav\");\n                await new Promise(r => setTimeout(r, ANIMATION_REFLOW_TIME));\n                \n                const zipped = new JSZip();\n                renderedChannels.forEach((channel, i) =>\n                {\n                    // check if all channels are muted\n                    let muted = true;\n                    for (let j = i; j < snapshot.channelSnapshots.length; j += 16)\n                    {\n                        if (!snapshot.channelSnapshots[j].isMuted)\n                        {\n                            muted = false;\n                            break;\n                        }\n                    }\n                    if (!usedChannels.has(i) || muted)\n                    {\n                        return;\n                    }\n                    // stereo\n                    const audioOut = audioToWav(\n                        channel,\n                        sampleRate,\n                        false,\n                        undefined,\n                        undefined\n                    );\n                    const fileName = `${i + 1} - ${snapshot.channelSnapshots[i].patchName}.wav`;\n                    zipped.file(fileName, audioOut);\n                    console.info(\n                        `%cAdding file %c${fileName}%c to zip...`,\n                        consoleColors.info,\n                        consoleColors.recognized,\n                        consoleColors.info\n                    );\n                });\n                const zipFile = await zipped.generateAsync({ type: \"blob\" });\n                this.saveBlob(zipFile, `${parsedMid.midiName}.zip`);\n                target.classList.add(\"green_button\");\n                target.textContent = text;\n                \n            }\n        });\n        const n = showNotification(\n            this.localeManager.getLocaleString(separatePath + \"title\"),\n            content,\n            99999999,\n            true,\n            undefined,\n            {\n                display: \"flex\",\n                flexWrap: \"wrap\",\n                flexDirection: \"row\"\n            }\n        );\n        n.div.style.width = \"30rem\";\n    }\n    else\n    {\n        /**\n         * second pass: the effects\n         * @type {OfflineAudioContext}\n         */\n        let offline;\n        try\n        {\n            offline = new OfflineAudioContext({\n                numberOfChannels: separateChannels ? 32 : 2,\n                sampleRate: sampleRate,\n                length: sampleDuration\n            });\n        }\n        catch (e)\n        {\n            showNotification(\n                \"ERROR\",\n                [\n                    { type: \"text\", textContent: e }\n                ]\n            );\n            return;\n        }\n        // prepare the effects\n        const r = getReverbProcessor(offline, this.synth.effectsConfig.reverbImpulseResponse);\n        await r.promise;\n        const reverb = r.conv;\n        const chorus = new FancyChorus(offline.destination, this.synth.effectsConfig.chorusConfig);\n        reverb.connect(offline.destination);\n        \n        // connect the playback sources\n        const reverbAudio = new AudioBuffer({\n            length: sampleDuration,\n            sampleRate,\n            numberOfChannels: 2\n        });\n        const rev = renderedNoEffectsData[0];\n        reverbAudio.copyToChannel(rev[0], 0);\n        reverbAudio.copyToChannel(rev[1], 1);\n        const revSource = offline.createBufferSource();\n        revSource.buffer = reverbAudio;\n        revSource.connect(reverb);\n        revSource.start();\n        \n        \n        const chorusAudio = new AudioBuffer({\n            length: sampleDuration,\n            sampleRate,\n            numberOfChannels: 2\n        });\n        const chr = renderedNoEffectsData[1];\n        chorusAudio.copyToChannel(chr[0], 0);\n        chorusAudio.copyToChannel(chr[1], 1);\n        const chrSource = offline.createBufferSource();\n        chrSource.buffer = chorusAudio;\n        chrSource.connect(chorus.input);\n        chrSource.start();\n        \n        const dryAudio = new AudioBuffer({\n            length: sampleDuration,\n            sampleRate,\n            numberOfChannels: 2\n        });\n        const dry = renderedNoEffectsData[2];\n        dryAudio.copyToChannel(dry[0], 0);\n        dryAudio.copyToChannel(dry[1], 1);\n        const drySource = offline.createBufferSource();\n        drySource.buffer = dryAudio;\n        drySource.connect(offline.destination);\n        drySource.start();\n        \n        const progressTracker = setInterval(() =>\n        {\n            showProgress(offline.currentTime / duration, addingEffects, false);\n        }, RENDER_AUDIO_TIME_INTERVAL / 4);\n        \n        console.info(\n            \"%cSecond pass: rendering effects...\",\n            consoleColors.info\n        );\n        const buf = await offline.startRendering();\n        \n        clearInterval(progressTracker);\n        progressDiv.style.width = \"100%\";\n        \n        detailMessage.innerText = this.localeManager.getLocaleString(\n            \"locale.exportAudio.formats.formats.wav.exportMessage.convertWav\");\n        // let the browser show\n        await new Promise(r => setTimeout(r, ANIMATION_REFLOW_TIME));\n        \n        const startOffset = parsedMid.MIDIticksToSeconds(parsedMid.firstNoteOn);\n        const loopStart = loopStartAbsolute - startOffset;\n        const loopEnd = loopEndAbsolute - startOffset;\n        let loop = { start: loopStart, end: loopEnd };\n        console.info(\n            `%cWriting loop points: start %c${loopStart}%c, end:%c${loopEnd}`,\n            consoleColors.info,\n            consoleColors.recognized,\n            consoleColors.info,\n            consoleColors.recognized\n        );\n        const wav = audioBufferToWav(buf, normalizeAudio, 0, meta, loop);\n        this.saveBlob(wav, `${this.seqUI.currentSongTitle || \"unnamed_song\"}.wav`);\n    }\n    closeNotification(notification.id);\n    this.isExporting = false;\n}\n\n/**\n * @this {Manager}\n * @returns {Promise<void>}\n * @private\n */\nexport async function _exportAudioData()\n{\n    if (this.isExporting)\n    {\n        return;\n    }\n    const wavPath = `locale.exportAudio.formats.formats.wav.options.`;\n    const metadataPath = \"locale.exportAudio.formats.metadata.\";\n    const verifyDecode = (type, def, decoder) =>\n    {\n        return this.seq.midiData.RMIDInfo?.[type] === undefined ? def : decoder.decode(this.seq.midiData.RMIDInfo?.[type])\n            .replace(/\\0$/, \"\");\n    };\n    const encoding = verifyDecode(\"IENC\", \"ascii\", new TextDecoder());\n    const decoder = new TextDecoder(encoding);\n    \n    const startAlbum = verifyDecode(\"IPRD\", \"\", decoder);\n    const startArtist = verifyDecode(\"IART\", \"\", decoder);\n    const startGenre = verifyDecode(\"IGNR\", \"\", decoder);\n    /**\n     * @type {NotificationContent[]}\n     */\n    const WAV_OPTIONS = [\n        {\n            type: \"text\",\n            textContent: this.localeManager.getLocaleString(wavPath + \"description\"),\n            attributes: {\n                \"style\": \"max-width: 30ch; font-style: italic\"\n            }\n        },\n        {\n            type: \"toggle\",\n            translatePathTitle: wavPath + \"normalizeVolume\",\n            attributes: {\n                \"normalize-volume-toggle\": \"1\",\n                \"checked\": \"true\"\n            }\n        },\n        {\n            type: \"input\",\n            translatePathTitle: wavPath + \"additionalTime\",\n            attributes: {\n                \"value\": \"2\",\n                \"type\": \"number\",\n                \"additional-time\": \"1\"\n            }\n        },\n        {\n            type: \"input\",\n            translatePathTitle: wavPath + \"sampleRate\",\n            attributes: {\n                \"value\": \"44100\",\n                \"type\": \"number\",\n                \"sample-rate\": \"1\"\n            }\n        },\n        {\n            type: \"input\",\n            translatePathTitle: wavPath + \"loopCount\",\n            attributes: {\n                \"value\": \"0\",\n                \"type\": \"number\",\n                \"loop-count\": \"1\"\n            }\n        },\n        {\n            type: \"toggle\",\n            translatePathTitle: wavPath + \"separateChannels\",\n            attributes: {\n                \"separate-channels-toggle\": \"1\"\n            }\n        },\n        {\n            type: \"input\",\n            translatePathTitle: metadataPath + \"songTitle\",\n            attributes: {\n                \"name\": \"song_title\",\n                \"type\": \"text\",\n                \"value\": this.seqUI.currentSongTitle\n            }\n        },\n        {\n            type: \"input\",\n            translatePathTitle: metadataPath + \"album\",\n            attributes: {\n                \"value\": startAlbum,\n                \"name\": \"album\",\n                \"type\": \"text\"\n            }\n        },\n        {\n            type: \"input\",\n            translatePathTitle: metadataPath + \"artist\",\n            attributes: {\n                \"value\": startArtist,\n                \"name\": \"artist\",\n                \"type\": \"text\"\n            }\n        },\n        {\n            type: \"input\",\n            translatePathTitle: metadataPath + \"genre\",\n            attributes: {\n                \"value\": startGenre,\n                \"name\": \"genre\",\n                \"type\": \"text\"\n            }\n        },\n        {\n            type: \"button\",\n            textContent: this.localeManager.getLocaleString(wavPath + \"confirm\"),\n            onClick: n =>\n            {\n                closeNotification(n.id);\n                const normalizeVolume = n.div.querySelector(\"input[normalize-volume-toggle]\").checked;\n                const additionalTime = n.div.querySelector(\"input[additional-time]\").value;\n                const sampleRate = n.div.querySelector(\"input[sample-rate]\").value;\n                const loopCount = n.div.querySelector(\"input[loop-count]\").value;\n                const separateChannels = n.div.querySelector(\"input[separate-channels-toggle]\").checked;\n                const artist = n.div.querySelector(\"input[name='artist']\").value;\n                const album = n.div.querySelector(\"input[name='album']\").value;\n                const title = n.div.querySelector(\"input[name='song_title']\").value;\n                const genre = n.div.querySelector(\"input[name='genre']\").value;\n                /**\n                 * @type {WaveMetadata}\n                 */\n                const metadata = {\n                    artist: artist.length > 0 ? artist : undefined,\n                    album: album.length > 0 ? album : undefined,\n                    title: title.length > 0 ? title : undefined,\n                    genre: genre.length > 0 ? genre : undefined\n                };\n                \n                this._doExportAudioData(\n                    normalizeVolume,\n                    parseInt(sampleRate),\n                    parseInt(additionalTime),\n                    separateChannels,\n                    metadata,\n                    parseInt(loopCount)\n                );\n            }\n        }\n    ];\n    \n    /**\n     * @type {NotificationContent[]}\n     */\n    showNotification(\n        this.localeManager.getLocaleString(wavPath + \"title\"),\n        WAV_OPTIONS,\n        9999999,\n        true,\n        this.localeManager\n    );\n}", "import { consoleColors } from \"../../utils/console_colors.js\";\nimport { closeNotification, showNotification } from \"../../notification/notification.js\";\n\n/**\n * @this {Manager}\n * @returns {Promise<void>}\n * @private\n */\nexport async function _exportSoundfont()\n{\n    const path = \"locale.exportAudio.formats.formats.soundfont.options.\";\n    showNotification(\n        this.localeManager.getLocaleString(path + \"title\"),\n        [\n            {\n                type: \"toggle\",\n                translatePathTitle: path + \"trim\",\n                attributes: {\n                    \"trim-toggle\": \"1\",\n                    \"checked\": \"checked\"\n                }\n            },\n            {\n                type: \"toggle\",\n                translatePathTitle: path + \"compress\",\n                attributes: {\n                    \"compress-toggle\": \"1\"\n                }\n            },\n            {\n                type: \"range\",\n                translatePathTitle: path + \"quality\",\n                attributes: {\n                    \"min\": \"0\",\n                    \"max\": \"10\",\n                    \"value\": \"5\"\n                }\n            },\n            {\n                type: \"button\",\n                textContent: this.localeManager.getLocaleString(path + \"confirm\"),\n                onClick: async n =>\n                {\n                    const trimmed = n.div.querySelector(\"input[trim-toggle='1']\").checked;\n                    const compressed = n.div.querySelector(\"input[compress-toggle='1']\").checked;\n                    const quality = parseInt(n.div.querySelector(\"input[type='range']\").value) / 10;\n                    closeNotification(n.id);\n                    console.group(\n                        \"%cExporting soundfont...\",\n                        consoleColors.info\n                    );\n                    const exportingMessage = manager.localeManager.getLocaleString(`locale.exportAudio.formats.formats.soundfont.exportMessage.message`);\n                    const notification = showNotification(\n                        exportingMessage,\n                        [\n                            { type: \"text\", textContent: exportingMessage },\n                            { type: \"progress\" }\n                        ],\n                        9999999,\n                        false\n                    );\n                    const progressDiv = notification.div.getElementsByClassName(\"notification_progress\")[0];\n                    const detailMessage = notification.div.getElementsByTagName(\"p\")[0];\n                    const callback = (p) =>\n                    {\n                        progressDiv.style.width = `${p * 100}%`;\n                        detailMessage.textContent = `${exportingMessage} ${Math.floor(p * 100)}%`;\n                    };\n                    const exported = await this.synth.exportSoundFont(trimmed, compressed, quality, callback);\n                    this.saveUrl(exported.url, exported.fileName);\n                    console.groupEnd();\n                    closeNotification(notification.id);\n                }\n            }\n        ],\n        99999999,\n        true,\n        this.localeManager\n    );\n}", "import { closeNotification, showNotification } from \"../../notification/notification.js\";\n\n/**\n * @this {Manager}\n * @returns {Promise<void>}\n */\nexport async function exportSong()\n{\n    const path = \"locale.exportAudio.formats.\";\n    showNotification(\n        this.localeManager.getLocaleString(path + \"title\"),\n        [\n            {\n                type: \"button\",\n                translatePathTitle: path + \"formats.wav.button\",\n                onClick: n =>\n                {\n                    closeNotification(n.id);\n                    this._exportAudioData();\n                }\n            },\n            {\n                type: \"button\",\n                translatePathTitle: path + \"formats.midi.button\",\n                onClick: n =>\n                {\n                    closeNotification(n.id);\n                    this.exportMidi();\n                }\n            },\n            {\n                type: \"button\",\n                translatePathTitle: path + \"formats.soundfont.button\",\n                onClick: n =>\n                {\n                    closeNotification(n.id);\n                    try\n                    {\n                        this._exportSoundfont();\n                    }\n                    catch (e)\n                    {\n                        showNotification(\n                            \"Warning\",\n                            [{\n                                type: \"text\",\n                                textContent: this.localeManager.getLocaleString(\"locale.warnings.outOfMemory\")\n                            }]\n                        );\n                    }\n                }\n            },\n            {\n                type: \"button\",\n                translatePathTitle: path + \"formats.dls.button\",\n                onClick: n =>\n                {\n                    closeNotification(n.id);\n                    try\n                    {\n                        this._exportDLS();\n                    }\n                    catch (e)\n                    {\n                        showNotification(\n                            \"Warning\",\n                            [{\n                                type: \"text\",\n                                textContent: this.localeManager.getLocaleString(\"locale.warnings.outOfMemory\")\n                            }]\n                        );\n                    }\n                }\n            },\n            {\n                type: \"button\",\n                translatePathTitle: path + \"formats.rmidi.button\",\n                onClick: n =>\n                {\n                    closeNotification(n.id);\n                    try\n                    {\n                        this._exportRMIDI();\n                    }\n                    catch (e)\n                    {\n                        showNotification(\n                            \"Warning\",\n                            [{\n                                type: \"text\",\n                                textContent: this.localeManager.getLocaleString(\"locale.warnings.outOfMemory\")\n                            }]\n                        );\n                    }\n                }\n            }\n        ],\n        999999,\n        true,\n        this.localeManager,\n        {\n            display: \"flex\",\n            flexWrap: \"wrap\",\n            justifyContent: \"center\"\n        }\n    );\n}", "import { consoleColors } from \"../../utils/console_colors.js\";\nimport { closeNotification, showNotification } from \"../../notification/notification.js\";\nimport { ANIMATION_REFLOW_TIME } from \"../../utils/animation_utils.js\";\n\n/**\n * @this {Manager}\n * @returns {Promise<void>}\n * @private\n */\nexport async function _exportRMIDI()\n{\n    /**\n     * @param type {string}\n     * @param def {string}\n     * @param decoder {TextDecoder}\n     * @return {string}\n     */\n    const verifyDecode = (type, def, decoder) =>\n    {\n        return this.seq.midiData.RMIDInfo?.[type] === undefined ? def : decoder.decode(this.seq.midiData.RMIDInfo?.[type].buffer)\n            .replace(/\\0$/, \"\");\n    };\n    const encoding = verifyDecode(\"IENC\", \"ascii\", new TextDecoder());\n    const decoder = new TextDecoder(encoding);\n    \n    const startAlbum = verifyDecode(\"IPRD\", \"\", decoder);\n    const startArtist = verifyDecode(\"IART\", \"\", decoder);\n    const startGenre = verifyDecode(\"IGNR\", \"\", decoder);\n    const startComment = verifyDecode(\n        \"ICMT\",\n        \"Created using SpessaSynth: https://spessasus.github.io/SpessaSynth\",\n        decoder\n    );\n    \n    const path = \"locale.exportAudio.formats.formats.rmidi.options.\";\n    const metadataPath = \"locale.exportAudio.formats.metadata.\";\n    const n = showNotification(\n        this.localeManager.getLocaleString(path + \"title\"),\n        [\n            {\n                type: \"text\",\n                textContent: this.localeManager.getLocaleString(path + \"description\"),\n                attributes: {\n                    \"style\": \"max-width: 30ch; font-style: italic\"\n                }\n            },\n            {\n                type: \"toggle\",\n                translatePathTitle: path + \"compress\",\n                attributes: {\n                    \"compress-toggle\": \"1\"\n                }\n            },\n            {\n                type: \"range\",\n                translatePathTitle: path + \"quality\",\n                attributes: {\n                    \"min\": \"0\",\n                    \"max\": \"10\",\n                    \"value\": \"5\"\n                }\n            },\n            {\n                type: \"input\",\n                translatePathTitle: metadataPath + \"songTitle\",\n                attributes: {\n                    \"name\": \"song_title\",\n                    \"type\": \"text\",\n                    \"value\": this.seqUI.currentSongTitle\n                }\n            },\n            {\n                type: \"input\",\n                translatePathTitle: metadataPath + \"album\",\n                attributes: {\n                    \"value\": startAlbum,\n                    \"name\": \"album\",\n                    \"type\": \"text\"\n                }\n            },\n            {\n                type: \"input\",\n                translatePathTitle: metadataPath + \"artist\",\n                attributes: {\n                    \"value\": startArtist,\n                    \"name\": \"artist\",\n                    \"type\": \"text\"\n                }\n            },\n            {\n                type: \"input\",\n                translatePathTitle: metadataPath + \"genre\",\n                attributes: {\n                    \"value\": startGenre,\n                    \"name\": \"genre\",\n                    \"type\": \"text\"\n                }\n            },\n            {\n                type: \"input\",\n                translatePathTitle: metadataPath + \"comment\",\n                attributes: {\n                    \"value\": startComment,\n                    \"name\": \"comment\",\n                    \"type\": \"text\"\n                }\n            },\n            {\n                type: \"file\",\n                translatePathTitle: metadataPath + \"albumCover\",\n                attributes: {\n                    \"value\": this.seq.midiData.RMIDInfo?.IPIC !== undefined ? this.seq.midiData.RMIDInfo.IPIC : \"\",\n                    \"name\": \"cover\",\n                    \"accept\": \"image/*\"\n                }\n            },\n            {\n                type: \"input\",\n                translatePathTitle: path + \"bankOffset\",\n                attributes: {\n                    \"value\": this.extraBankOffset ?? this.seq.midiData.bankOffset,\n                    \"name\": \"bank_offset\",\n                    \"type\": \"number\"\n                }\n            },\n            {\n                type: \"toggle\",\n                translatePathTitle: path + \"adjust\",\n                attributes: {\n                    \"name\": \"adjust\"\n                }\n            },\n            {\n                type: \"button\",\n                textContent: this.localeManager.getLocaleString(path + \"confirm\"),\n                onClick: async n =>\n                {\n                    const compressed = n.div.querySelector(\"input[compress-toggle='1']\").checked;\n                    const quality = parseInt(n.div.querySelector(\"input[type='range']\").value) / 10;\n                    const album = n.div.querySelector(\"input[name='album']\").value;\n                    const artist = n.div.querySelector(\"input[name='artist']\").value;\n                    const songTitle = n.div.querySelector(\"input[name='song_title']\").value;\n                    const comment = n.div.querySelector(\"input[name='comment']\").value;\n                    const genre = n.div.querySelector(\"input[name='genre']\").value;\n                    const bankOffset = parseInt(n.div.querySelector(\"input[name='bank_offset']\").value);\n                    const adjust = n.div.querySelector(\"input[name='adjust']\").checked;\n                    \n                    /**\n                     * @type {File}\n                     */\n                    const picture = n.div.querySelector(\"input[type='file']\")?.files[0];\n                    closeNotification(n.id);\n                    \n                    console.groupCollapsed(\n                        \"%cExporting RMIDI...\",\n                        consoleColors.info\n                    );\n                    const localePath = \"locale.exportAudio.formats.formats.rmidi.progress.\";\n                    const notification = showNotification(\n                        this.localeManager.getLocaleString(localePath + \"title\"),\n                        [{\n                            type: \"text\",\n                            textContent: this.localeManager.getLocaleString(localePath + \"loading\"),\n                            attributes: {\n                                \"class\": \"export_rmidi_message\"\n                            }\n                        }, {\n                            type: \"progress\"\n                        }],\n                        9999999,\n                        false\n                    );\n                    // allow the notification to show\n                    await new Promise(r => setTimeout(r, 500));\n                    const message = notification.div.getElementsByClassName(\"export_rmidi_message\")[0];\n                    const progressDiv = notification.div.getElementsByClassName(\"notification_progress\")[0];\n                    message.textContent = this.localeManager.getLocaleString(localePath + \"modifyingMIDI\");\n                    await new Promise(r => setTimeout(r, ANIMATION_REFLOW_TIME));\n                    \n                    let pictureBuffer = undefined;\n                    if (picture?.[\"type\"]?.split(\"/\")[0] === \"image\")\n                    {\n                        pictureBuffer = await picture.arrayBuffer();\n                    }\n                    \n                    const modifyingSoundFont = this.localeManager.getLocaleString(localePath + \"modifyingSoundfont\");\n                    \n                    // export\n                    const mid = await this.synth.exportRMI(\n                        compressed,\n                        quality,\n                        {\n                            songTitle,\n                            artist,\n                            album,\n                            bankOffset,\n                            picture: pictureBuffer,\n                            encoding: this.seqUI.encoding,\n                            comment,\n                            genre\n                        },\n                        adjust,\n                        (progress) =>\n                        {\n                            message.textContent = modifyingSoundFont;\n                            progressDiv.style.width = `${progress * 100}%`;\n                        }\n                    );\n                    \n                    this.saveUrl(mid.url, mid.fileName);\n                    message.textContent = this.localeManager.getLocaleString(localePath + \"done\");\n                    closeNotification(notification.id);\n                    console.groupEnd();\n                }\n            }\n        ],\n        9999999,\n        true,\n        this.localeManager\n    );\n    \n    const recommended = await this.synth.getRecommendedRMIDIExportSettings();\n    \n    // compress if the bank is larger than 20MB\n    n.div.querySelector(\"input[compress-toggle='1']\").checked = recommended.compress;\n    // adjust for the normal bank only\n    n.div.querySelector(\"input[name='adjust']\").checked = recommended.adjust;\n    \n    const input = n.div.querySelector(\"input[type='file']\");\n    input.oninput = () =>\n    {\n        if (input.files[0])\n        {\n            input.parentElement.firstChild.textContent = input.files[0].name;\n        }\n    };\n}", "export class DropFileHandler\n{\n    /**\n     * Creates a new handler for handling file dropping into the app\n     * @param midiCallback {function(MIDIFile[])}\n     * @param soundFontCallback {function(ArrayBuffer)}\n     */\n    constructor(midiCallback, soundFontCallback)\n    {\n        const dragPrompt = document.getElementsByClassName(\"drop_prompt\")[0];\n        document.body.addEventListener(\"dragover\", e =>\n        {\n            e.preventDefault();\n            dragPrompt.classList.remove(\"hidden\");\n        });\n        document.body.addEventListener(\"dragend\", () =>\n        {\n            dragPrompt.classList.add(\"hidden\");\n        });\n        \n        document.body.addEventListener(\"drop\", async e =>\n        {\n            e.preventDefault();\n            dragPrompt.classList.add(\"hidden\");\n            if (!e.dataTransfer.files[0])\n            {\n                return;\n            }\n            \n            /**\n             * @type {MidFile[]}\n             */\n            const MIDIFiles = [];\n            \n            for (const file of e.dataTransfer.files)\n            {\n                const name = file.name;\n                const buf = await file.arrayBuffer();\n                // identify the file\n                // check for RIFF\n                const riff = buf.slice(0, 4);\n                const decoder = new TextDecoder();\n                if (decoder.decode(riff) === \"RIFF\")\n                {\n                    // riff, check if RMID, otherwise soundfont\n                    const rmid = buf.slice(8, 12);\n                    if (decoder.decode(rmid) === \"RMID\")\n                    {\n                        // RMID\n                        MIDIFiles.push({ binary: buf, altName: name });\n                        continue;\n                    }\n                    // soundfont\n                    soundFontCallback(buf);\n                    continue;\n                }\n                // midi\n                MIDIFiles.push({ binary: buf, altName: name });\n            }\n            midiCallback(MIDIFiles);\n        });\n    }\n}", "import { consoleColors } from \"../../utils/console_colors.js\";\nimport { closeNotification, showNotification } from \"../../notification/notification.js\";\n\n/**\n * @this {Manager}\n * @returns {Promise<void>}\n * @private\n */\nexport async function _exportDLS()\n{\n    const path = \"locale.exportAudio.formats.formats.dls.warning.\";\n    showNotification(\n        this.localeManager.getLocaleString(path + \"title\"),\n        [\n            {\n                type: \"text\",\n                textContent: this.localeManager.getLocaleString(path + \"message\"),\n                attributes: {\n                    \"style\": \"font-weight: bold\"\n                }\n            },\n            {\n                type: \"toggle\",\n                translatePathTitle: \"locale.exportAudio.formats.formats.soundfont.options.trim\",\n                attributes: {\n                    \"trim-toggle\": \"1\"\n                }\n            },\n            {\n                type: \"button\",\n                textContent: this.localeManager.getLocaleString(path + \"details\"),\n                onClick: () =>\n                {\n                    window.open(\"https://github.com/spessasus/SpessaSynth/wiki/DLS-Conversion-Problem\");\n                }\n            },\n            {\n                type: \"button\",\n                textContent: this.localeManager.getLocaleString(path + \"confirm\"),\n                onClick: async n =>\n                {\n                    const trimmed = n.div.querySelector(\"input[trim-toggle='1']\").checked;\n                    closeNotification(n.id);\n                    console.group(\n                        \"%cExporting DLS...\",\n                        consoleColors.info\n                    );\n                    const exportingMessage = manager.localeManager.getLocaleString(`locale.exportAudio.formats.formats.dls.exportMessage.message`);\n                    const notification = showNotification(\n                        exportingMessage,\n                        [\n                            { type: \"text\", textContent: exportingMessage },\n                            { type: \"progress\" }\n                        ],\n                        9999999,\n                        false\n                    );\n                    const progressDiv = notification.div.getElementsByClassName(\"notification_progress\")[0];\n                    const callback = (p) =>\n                    {\n                        progressDiv.style.width = `${p * 100}%`;\n                    };\n                    const exported = await this.synth.exportDLS(trimmed, callback);\n                    this.saveUrl(exported.url, exported.fileName);\n                    closeNotification(notification.id);\n                    console.groupEnd();\n                }\n            }\n        ],\n        99999999,\n        true,\n        this.localeManager\n    );\n}", "export const EXTRA_BANK_ID = \"spessasynth-extra-bank\";", "import { closeNotification, showNotification } from \"../notification/notification.js\";\nimport { EXTRA_BANK_ID } from \"./extra_bank_id.js\";\n\n\n/**\n * @this {Manager}\n */\nexport function prepareExtraBankUpload()\n{\n    this.extraBankName = \"\";\n    this.extraBankOffset = 0;\n    let extraBankName = \"\";\n    const extra = document.getElementById(\"extra_bank_button\");\n    this.localeManager.bindObjectProperty(extra, \"title\", \"locale.extraBank.button\");\n    extra.onclick = () =>\n    {\n        const notification = showNotification(\n            this.localeManager.getLocaleString(\"locale.extraBank.title\"),\n            [\n                {\n                    type: \"input\",\n                    attributes: {\n                        \"type\": \"number\",\n                        \"min\": \"0\",\n                        \"max\": \"127\",\n                        \"value\": \"1\"\n                    },\n                    translatePathTitle: \"locale.extraBank.offset\"\n                },\n                {\n                    type: \"file\",\n                    translatePathTitle: \"locale.extraBank.file\",\n                    attributes: {\n                        \"value\": \"\",\n                        \"name\": \"bank\",\n                        \"accept\": \".dls,.sf2,.sf3,.sfogg\"\n                    }\n                },\n                {\n                    type: \"button\",\n                    translatePathTitle: \"locale.extraBank.confirm\",\n                    onClick: async n =>\n                    {\n                        const bank = parseInt(n.div.querySelector(\"input[type='number']\").value) || 0;\n                        /**\n                         * @type {File}\n                         */\n                        const file = notification.div.querySelector(\"input[type='file']\").files[0];\n                        if (!file)\n                        {\n                            return;\n                        }\n                        const b = await file.arrayBuffer();\n                        // add bank and rearrange\n                        await this.synth.soundfontManager.addNewSoundFont(b, EXTRA_BANK_ID, bank);\n                        await this.synth.soundfontManager.rearrangeSoundFonts([EXTRA_BANK_ID, \"main\"]);\n                        this.extraBankName = extraBankName;\n                        this.extraBankOffset = bank;\n                        if (this.seq?.paused === false)\n                        {\n                            this.seq.currentTime -= 0.1;\n                        }\n                        closeNotification(n.id);\n                    }\n                },\n                {\n                    type: \"button\",\n                    translatePathTitle: \"locale.extraBank.clear\",\n                    onClick: async n =>\n                    {\n                        await this.synth.soundfontManager.deleteSoundFont(EXTRA_BANK_ID);\n                        this.extraBankName = \"\";\n                        this.extraBankOffset = 0;\n                        if (this.seq?.paused === false)\n                        {\n                            this.seq.currentTime -= 0.1;\n                        }\n                        closeNotification(n.id);\n                    }\n                }\n            ],\n            999999,\n            true,\n            this.localeManager\n        );\n        const input = notification.div.querySelector(\"input[type='file']\");\n        if (this.extraBankName)\n        {\n            input.parentElement.firstChild.textContent = this.extraBankName;\n        }\n        input.oninput = () =>\n        {\n            if (input.files[0])\n            {\n                extraBankName = input.files[0].name;\n                input.parentElement.firstChild.textContent = extraBankName;\n            }\n        };\n    };\n}", "import { SynthesizerSnapshot } from \"spessasynth_core\";\n\n// shamelessly copied from spessasynth_lib (I'm the author of it, so I can >:)\n\n/**\n * @enum {number}\n * // NOTE: Every message needs a channel number (if not relevant or all, set to -1)\n * @property {number} midiMessage                - 0  -> [messageData<Uint8Array>, channelOffset<number>, force<boolean>, options<SynthMethodOptions>]\n * @property {number} sampleRate                 - 1  -> [rate<number>, currentTime<number>]\n * @property {number} initialSoundBank           - 2  -> bank<ArrayBuffer>\n * @property {number} renderAudio                - 3  -> {sampleRate: number, separateChannels: boolean, loopCount: number, additionalTime: number}\n * @property {number} exportSoundFont            - 4  -> {compress:boolean, trim: boolean: quality: number}\n * @property {number} exportMIDI                 - 5  -> (no data)\n * @property {number} exportRMI                  - 6  -> {compress: boolean, quality: number, adjust: boolean, metadata: Partial<RMIDIMetadata>} or no data for recommended settings\n * @property {number} ccReset                    - 7  -> (no data) note: if channel is -1 then reset all channels\n * @property {number} setChannelVibrato          - 8  -> {frequencyHz: number, depthCents: number, delaySeconds: number} note: if channel is -1 then stop all channels note 2: if rate is -1, it means locking\n * @property {number} soundFontManager           - 9  -> [messageType<WorkerSoundfontManagerMessageType> messageData<any>] note: refer to sfman_message.js\n * @property {number} stopAll                    - 10 -> force<number> (0 false, 1 true) note: if channel is -1 then stop all channels\n * @property {number} killNotes                  - 11 -> amount<number>\n * @property {number} muteChannel                - 12 -> isMuted<boolean>\n * @property {number} addNewChannel              - 13 -> (no data)\n * @property {number} customCcChange             - 14 -> [ccNumber<number>, ccValue<number>]\n * @property {number} debugMessage               - 15 -> (no data)\n * @property {number} setMasterParameter         - 17 -> [parameter<masterParameterType>, value<number>]\n * @property {number} setDrums                   - 18 -> isDrums<boolean>\n * @property {number} transpose                  - 19 -> [semitones<number>, force<boolean>] note: if channel is -1 then transpose all channels\n * @property {number} highPerformanceMode        - 20 -> isOn<boolean>\n * @property {number} lockController             - 21 -> [controllerNumber<number>, isLocked<boolean>]\n * @property {number} sequencerSpecific          - 22 -> [messageType<seqMessageType> messageData<any>] note: refer to sequencer_message.js\n * @property {number} requestSynthesizerSnapshot - 23 -> (no data)\n * @property {number} setLogLevel                - 24 -> [enableInfo<boolean>, enableWarning<boolean>, enableGroup<boolean>, enableTable<boolean>]\n * @property {number} keyModifier                - 25 -> [messageType<workerKeyModifierMessageType> messageData<any>]\n * @property {number} setEffectsGain             - 26 -> [reverbGain<number>, chorusGain<number>]\n */\nexport const workerMessageType = {\n    midiMessage: 0,\n    sampleRate: 1,\n    initialSoundBank: 2,\n    renderAudio: 3,\n    exportSoundBank: 4,\n    exportMIDI: 5,\n    exportRMI: 6,\n    ccReset: 7,\n    setChannelVibrato: 8,\n    soundFontManager: 9,\n    stopAll: 10,\n    killNotes: 11,\n    muteChannel: 12,\n    addNewChannel: 13,\n    customCcChange: 14,\n    debugMessage: 15,\n    setMasterParameter: 17,\n    setDrums: 18,\n    transpose: 19,\n    highPerformanceMode: 20,\n    lockController: 21,\n    sequencerSpecific: 22,\n    requestSynthesizerSnapshot: 23,\n    setLogLevel: 24,\n    keyModifierManager: 25,\n    setEffectsGain: 26\n};\n\n\n/**\n * @typedef {{\n *     channelNumber: number|undefined\n *     messageType: (workerMessageType|number),\n *     messageData: (\n *     boolean|\n *     (number|Uint8Array|object)[]\n *     |undefined\n *     |boolean[]\n *     |boolean\n *     |Voice[]\n *     |number\n *     |{rate: number, depth: number, delay: number}\n *     |ArrayBuffer\n *     |{messageType: seqMessageType, messageData: any}\n *     |{messageType: workerKeyModifierMessageType, messageData: any}\n *     |Uint8Array\n *     |{sampleRate: number, separateChannels: boolean, loopCount: number, additionalTime: number}\n *     |{trim: boolean, compress: boolean, quality: number, isSf2: boolean}\n *     |{compress: boolean, quality: number, adjust: boolean, metadata: Partial<RMIDIMetadata>}\n *     )\n * }} WorkerMessage\n */\n\n\n/**\n * @typedef {Object} WorkerReturnMessage\n * @property {returnMessageType} messageType - the message's type\n * @property {{\n *     eventName: string,\n *     eventData: any\n * }|ChannelProperty\n * |{presetName: string, bank: number, program: number}[]\n * |string\n * |{messageType: SpessaSynthSequencerReturnMessageType, messageData: any}\n * |SynthesizerSnapshot\n * |number\n * |AudioChunks\n * |[WorkerSoundfontManagerMessageType, any]} messageData - the message's data\n *\n * 0 - channel property change      -> [channel<number>, property<ChannelProperty>, currentTime<number>] see message_sending.js line 29\n * 1 - event call                   -> {eventName<string>, eventData:<the event's data>}\n * 2 - master parameter change      -> [parameter<masterParameterType>, value<string|number>]\n * 3 - sequencer specific           -> [messageType<SpessaSynthSequencerReturnMessageType> messageData<any>] note: refer to sequencer_message.js\n * 4 - synthesizer snapshot         -> snapshot<SynthesizerSnapshot> note: refer to synthesizer_snapshot.js\n * 5 - isFullyInitialized           -> (no data)\n * 6 - soundfontError               -> errorMessage<string>\n * 7 - renderingProgress            -> progress<number>\n * 8 - exportedData                 -> Float32Array[] or {url: string, fileName: string} for files\n */\n\n/**\n * @enum {number}\n */\nexport const returnMessageType = {\n    channelPropertyChange: 0,\n    eventCall: 1,\n    masterParameterChange: 2,\n    sequencerSpecific: 3,\n    synthesizerSnapshot: 4,\n    isFullyInitialized: 5,\n    soundfontError: 6,\n    renderingProgress: 7,\n    exportedData: 8\n};\n\n\nexport const SongChangeType = {\n    backwards: 0,   // no additional data\n    forwards: 1,    // no additional data\n    shuffleOn: 2,   // no additional data\n    shuffleOff: 3,  // no additional data\n    index: 4        // songIndex<number>\n};\n\n/**\n * @enum {number}\n * @property {number} loadNewSongList          - 0 -> [...song<MIDI>]\n * @property {number} pause                    - 1 -> isFinished<boolean>\n * @property {number} stop                     - 2 -> (no data)\n * @property {number} play                     - 3 -> resetTime<boolean>\n * @property {number} setTime                  - 4 -> time<number>\n * @property {number} changeMIDIMessageSending - 5 -> sendMIDIMessages<boolean>\n * @property {number} setPlaybackRate          - 6 -> playbackRate<number>\n * @property {number} setLoop                  - 7 -> [loop<boolean>, count<number>]\n * @property {number} changeSong               - 8 -> [changeType<SongChangeType>, data<number>]\n * @property {number} getMIDI                  - 9 -> (no data)\n * @property {number} setSkipToFirstNote       -10 -> skipToFirstNoteOn<boolean>\n * @property {number} setPreservePlaybackState -11 -> preservePlaybackState<boolean>\n */\nexport const seqMessageType = {\n    loadNewSongList: 0,\n    pause: 1,\n    stop: 2,\n    play: 3,\n    setTime: 4,\n    changeMIDIMessageSending: 5,\n    setPlaybackRate: 6,\n    setLoop: 7,\n    changeSong: 8,\n    getMIDI: 9,\n    setSkipToFirstNote: 10,\n    setPreservePlaybackState: 11\n};\n\n/**\n *\n * @enum {number}\n */\nexport const SpessaSynthSequencerReturnMessageType = {\n    midiEvent: 0,               // [...midiEventBytes<number>]\n    songChange: 1,              // [songIndex<number>, isAutoPlayed<boolean>]\n    timeChange: 2,              // newTime<number>\n    pause: 3,                   // no data\n    getMIDI: 4,                 // midiData<MIDI>\n    midiError: 5,               // errorMSG<string>\n    metaEvent: 6,               // [event<MIDIMessage>, trackNum<number>]\n    loopCountChange: 7,         // newLoopCount<number>\n    songListChange: 8          // songListData<MIDIData[]>\n};\n\n/**\n * @enum {number}\n */\nexport const WorkerSoundfontManagerMessageType = {\n    reloadSoundFont: 0,      // buffer<ArrayBuffer>\n    addNewSoundFont: 2,      // [buffer<ArrayBuffer>, id<string>, bankOffset<number>]\n    deleteSoundFont: 3,      // id<string>\n    rearrangeSoundFonts: 4   // newOrder<string[]> // where string is the id\n};\n\n\n/**\n * @enum {number}\n */\nexport const workerKeyModifierMessageType = {\n    addMapping: 0,    // [channel<number>, midiNote<number>, mapping<KeyModifier>]\n    deleteMapping: 1, // [channel<number>, midiNote<number>]\n    clearMappings: 2 // <no data>\n};\n\n", "import { synthDisplayTypes } from \"spessasynth_core\";\n\n/**\n * exact copy of lib's synth handler, override for our custom synth\n */\n\n/**\n * @typedef {Object} NoteOnCallback\n * @property {number} midiNote - The MIDI note number.\n * @property {number} channel - The MIDI channel number.\n * @property {number} velocity - The velocity of the note.\n */\n\n/**\n * @typedef {Object} NoteOffCallback\n * @property {number} midiNote - The MIDI note number.\n * @property {number} channel - The MIDI channel number.\n */\n\n/**\n * @typedef {Object} DrumChangeCallback\n * @property {number} channel - The MIDI channel number.\n * @property {boolean} isDrumChannel - Indicates if the channel is a drum channel.\n */\n\n/**\n * @typedef {Object} ProgramChangeCallback\n * @property {number} channel - The MIDI channel number.\n * @property {number} program - The program number.\n * @property {number} bank - The bank number.\n */\n\n/**\n * @typedef {Object} ControllerChangeCallback\n * @property {number} channel - The MIDI channel number.\n * @property {number} controllerNumber - The controller number.\n * @property {number} controllerValue - The value of the controller.\n */\n\n/**\n * @typedef {Object} MuteChannelCallback\n * @property {number} channel - The MIDI channel number.\n * @property {boolean} isMuted - Indicates if the channel is muted.\n */\n\n/**\n * @typedef {Object} PresetListChangeCallbackSingle\n * @property {string} presetName - The name of the preset.\n * @property {number} bank - The bank number.\n * @property {number} program - The program number.\n */\n\n/**\n * @typedef {PresetListChangeCallbackSingle[]} PresetListChangeCallback - A list of preset objects.\n */\n\n/**\n * @typedef {Object} SynthDisplayCallback\n * @property {Uint8Array} displayData - The data to display.\n * @property {synthDisplayTypes} displayType - The type of display.\n */\n\n/**\n * @typedef {Object} PitchWheelCallback\n * @property {number} channel - The MIDI channel number.\n * @property {number} MSB - The most significant byte of the pitch-wheel value.\n * @property {number} LSB - The least significant byte of the pitch-wheel value.\n */\n\n/**\n * @typedef {Object} ChannelPressureCallback\n * @property {number} channel - The MIDI channel number.\n * @property {number} pressure - The pressure value.\n */\n\n/**\n * @typedef {Error} SoundfontErrorCallback - The error message for soundfont errors.\n */\n\n/**\n * @typedef {\n *     NoteOnCallback |\n *     NoteOffCallback |\n *     DrumChangeCallback |\n *     ProgramChangeCallback |\n *     ControllerChangeCallback |\n *     MuteChannelCallback |\n *     PresetListChangeCallback |\n *     PitchWheelCallback |\n *     SoundfontErrorCallback |\n *     ChannelPressureCallback |\n *     SynthDisplayCallback |\n *     undefined\n * } EventCallbackData\n */\n\n/**\n * @typedef {\n * \"noteon\"|\n * \"noteoff\"|\n * \"pitchwheel\"|\n * \"controllerchange\"|\n * \"programchange\"|\n * \"channelpressure\"|\n * \"polypressure\" |\n * \"drumchange\"|\n * \"stopall\"|\n * \"newchannel\"|\n * \"mutechannel\"|\n * \"presetlistchange\"|\n * \"allcontrollerreset\"|\n * \"soundfonterror\"|\n * \"synthdisplay\"} EventTypes\n */\nexport class EventHandler\n{\n    /**\n     * A new synthesizer event handler\n     */\n    constructor()\n    {\n        /**\n         * The main list of events\n         * @type {Object<EventTypes, Object<string, function(EventCallbackData)>>}\n         */\n        this.events = {\n            \"noteoff\": {},              // called on a note off message\n            \"noteon\": {},               // called on a note on message\n            \"pitchwheel\": {},           // called on a pitch-wheel change\n            \"controllerchange\": {},     // called on a controller change\n            \"programchange\": {},        // called on a program change\n            \"channelpressure\": {},      // called on a channel pressure message\n            \"polypressure\": {},         // called on a poly pressure message\n            \"drumchange\": {},           // called when a channel type changes\n            \"stopall\": {},              // called when the synth receives stop all command\n            \"newchannel\": {},           // called when a new channel is created\n            \"mutechannel\": {},          // called when a channel is muted/unmuted\n            \"presetlistchange\": {},     // called when the preset list changes (soundfont gets reloaded)\n            \"allcontrollerreset\": {},   // called when all controllers are reset\n            \"soundfonterror\": {},       // called when a soundfont parsing error occurs\n            \"synthdisplay\": {}          // called when there's a SysEx message to display some text\n        };\n        \n        /**\n         * Set to 0 to disabled, otherwise in seconds\n         * @type {number}\n         */\n        this.timeDelay = 0;\n    }\n    \n    /**\n     * Adds a new event listener\n     * @param name {EventTypes}\n     * @param id {string} the unique identifier for the event (to delete it\n     * @param callback {function(EventCallbackData)}\n     */\n    addEvent(name, id, callback)\n    {\n        this.events[name][id] = callback;\n    }\n    \n    /**\n     * Calls the given event\n     * @param name {EventTypes}\n     * @param eventData {EventCallbackData}\n     */\n    callEvent(name, eventData)\n    {\n        if (this.events[name])\n        {\n            if (this.timeDelay > 0)\n            {\n                setTimeout(() =>\n                {\n                    Object.values(this.events[name]).forEach(ev =>\n                    {\n                        try\n                        {\n                            ev(eventData);\n                        }\n                        catch (e)\n                        {\n                            console.error(`Error while executing an event callback for ${name}:`, e);\n                        }\n                    });\n                }, this.timeDelay * 1000);\n            }\n            else\n            {\n                Object.values(this.events[name]).forEach(ev =>\n                    {\n                        try\n                        {\n                            ev(eventData);\n                        }\n                        catch (e)\n                        {\n                            console.error(`Error while executing an event callback for ${name}:`, e);\n                        }\n                    }\n                );\n            }\n        }\n    }\n}", "import { workerMessageType, WorkerSoundfontManagerMessageType } from \"../worker_thread/worker_message.js\";\nimport { SpessaSynthCoreUtils } from \"spessasynth_core\";\n\nexport class SoundfontManager\n{\n    /**\n     * Creates a new instance of the soundfont manager\n     * @param synth {CustomSynth}\n     */\n    constructor(synth)\n    {\n        /**\n         * The current list of soundfonts, in order from the most important to the least.\n         * @type {{\n         *     id: string,\n         *     bankOffset: number\n         * }[]}\n         */\n        this.soundfontList = [{\n            id: \"main\",\n            bankOffset: 0\n        }];\n        \n        /**\n         * @type {Worker}\n         * @private\n         */\n        this._port = synth.worker;\n        this.synth = synth;\n    }\n    \n    /**\n     * @private\n     * @param type {WorkerSoundfontManagerMessageType}\n     * @param data {any}\n     * @param transferable {ArrayBuffer[]}\n     */\n    _sendToWorker(type, data, transferable)\n    {\n        this._port.postMessage({\n            messageType: workerMessageType.soundFontManager,\n            messageData: [\n                type,\n                data\n            ]\n        }, transferable);\n    }\n    \n    /**\n     * Deletes a soundfont with the given ID\n     * @param id {string} - the soundfont to delete\n     */\n    deleteSoundFont(id)\n    {\n        if (this.soundfontList.length === 0)\n        {\n            SpessaSynthCoreUtils.SpessaSynthWarn(\"1 soundfont left. Aborting!\");\n            return;\n        }\n        if (this.soundfontList.findIndex(s => s.id === id) === -1)\n        {\n            SpessaSynthCoreUtils.SpessaSynthWarn(`No soundfont with id of \"${id}\" found. Aborting!`);\n            return;\n        }\n        this._sendToWorker(WorkerSoundfontManagerMessageType.deleteSoundFont, id, []);\n    }\n    \n    /**\n     * Adds a new soundfont buffer with a given ID\n     * @param soundfontBuffer {ArrayBuffer} - the soundfont's buffer\n     * @param id {string} - the soundfont's unique identifier\n     * @param bankOffset {number} - the soundfont's bank offset. Default is 0\n     */\n    async addNewSoundFont(soundfontBuffer, id, bankOffset = 0)\n    {\n        this._sendToWorker(\n            WorkerSoundfontManagerMessageType.addNewSoundFont,\n            [soundfontBuffer, id, bankOffset],\n            [soundfontBuffer]\n        );\n        await new Promise(r => this.synth._resolveWhenReady = r);\n        if (this.soundfontList.find(s => s.id === id) !== undefined)\n        {\n            this.soundfontList.find(s => s.id === id).bankOffset = bankOffset;\n        }\n        else\n        {\n            this.soundfontList.push({\n                id: id,\n                bankOffset: bankOffset\n            });\n        }\n    }\n    \n    /**\n     * Rearranges the soundfonts in a given order\n     * @param newList {string[]} the order of soundfonts, a list of identifiers, first overwrites second\n     */\n    rearrangeSoundFonts(newList)\n    {\n        this._sendToWorker(WorkerSoundfontManagerMessageType.rearrangeSoundFonts, newList, []);\n        this.soundfontList.sort((a, b) =>\n            newList.indexOf(a.id) - newList.indexOf(b.id)\n        );\n    }\n}", "import { KeyModifier } from \"spessasynth_core\";\nimport { workerKeyModifierMessageType, workerMessageType } from \"../worker_thread/worker_message.js\";\n\n\nexport class WorkerKeyModifierManagerWrapper\n{\n    /**\n     * @param synth {CustomSynth}\n     */\n    constructor(synth)\n    {\n        this.synth = synth;\n        /**\n         * The velocity override mappings for MIDI keys\n         * @type {KeyModifier[][]}\n         * @private\n         */\n        this._keyModifiers = [];\n    }\n    \n    /**\n     * @private\n     * @param type {workerKeyModifierMessageType}\n     * @param data {any}\n     */\n    _sendToWorker(type, data)\n    {\n        this.synth.post({\n            messageType: workerMessageType.keyModifierManager,\n            messageData: [\n                type,\n                data\n            ]\n        });\n    }\n    \n    /**\n     * Modifies a single key\n     * @param channel {number} the channel affected. Usually 0-15\n     * @param midiNote {number} the MIDI note to change. 0-127\n     * @param options {{\n     *     velocity: number|undefined,\n     *     patch: {\n     *         bank: number,\n     *         program: number\n     *     }|undefined,\n     *     gain: number|undefined\n     * }} the key's modifiers\n     */\n    addModifier(channel, midiNote, options)\n    {\n        const velocity = options?.velocity ?? -1;\n        const program = options?.patch?.program ?? -1;\n        const bank = options?.patch?.bank ?? -1;\n        const gain = options?.gain ?? 1;\n        const mod = new KeyModifier(velocity, bank, program, gain);\n        if (this._keyModifiers[channel] === undefined)\n        {\n            this._keyModifiers[channel] = [];\n        }\n        this._keyModifiers[channel][midiNote] = mod;\n        this._sendToWorker(\n            workerKeyModifierMessageType.addMapping,\n            [channel, midiNote, mod]\n        );\n    }\n    \n    /**\n     * Gets a key modifier\n     * @param channel {number} the channel affected. Usually 0-15\n     * @param midiNote {number} the MIDI note to change. 0-127\n     * @returns {KeyModifier|undefined}\n     */\n    getModifier(channel, midiNote)\n    {\n        return this._keyModifiers?.[channel]?.[midiNote];\n    }\n    \n    /**\n     * Deletes a key modifier\n     * @param channel {number} the channel affected. Usually 0-15\n     * @param midiNote {number} the MIDI note to change. 0-127\n     */\n    deleteModifier(channel, midiNote)\n    {\n        this._sendToWorker(\n            workerKeyModifierMessageType.deleteMapping,\n            [channel, midiNote]\n        );\n        if (this._keyModifiers[channel]?.[midiNote] === undefined)\n        {\n            return;\n        }\n        this._keyModifiers[channel][midiNote] = undefined;\n    }\n    \n    /**\n     * Clears ALL Modifiers\n     */\n    clearModifiers()\n    {\n        this._sendToWorker(workerKeyModifierMessageType.clearMappings, undefined);\n        this._keyModifiers = [];\n    }\n}", null, "import { BasicMIDI, MIDISequenceData } from \"spessasynth_core\";\n\nexport class MIDIData extends MIDISequenceData\n{\n    \n    /**\n     * A boolean indicating if the MIDI file contains an embedded soundfont.\n     * If the embedded soundfont is undefined, this will be false.\n     * @type {boolean}\n     */\n    isEmbedded = false;\n    \n    /**\n     * Constructor that copies data from a BasicMIDI instance.\n     * @param {BasicMIDI} midi - The BasicMIDI instance to copy data from.\n     */\n    constructor(midi)\n    {\n        super();\n        this._copyFromSequence(midi);\n        \n        // keep so it doesn't break IPIC\n        if (midi[\"isEmbedded\"])\n        {\n            this.isEmbedded = midi[\"isEmbedded\"];\n            return this;\n        }\n        \n        // Set isEmbedded based on the presence of an embeddedSoundFont\n        this.isEmbedded = midi.embeddedSoundFont !== undefined;\n    }\n}", "import {\n    ALL_CHANNELS_OR_DIFFERENT_ACTION,\n    BasicMIDI,\n    messageTypes,\n    MIDI,\n    MIDIMessage,\n    SpessaSynthCoreUtils as util\n} from \"spessasynth_core\";\nimport {\n    seqMessageType,\n    SongChangeType,\n    SpessaSynthSequencerReturnMessageType,\n    workerMessageType\n} from \"../worker_thread/worker_message.js\";\nimport { MIDIData } from \"../worker_thread/midi_data.js\";\n\n/*\ncustom_seq.js\npurpose: a custom recreation of spessasynth_lib's `Sequencer` class that is tweaked for compatibility with the CustomSynth.\nMost of the file is copied straight from spessasynth_lib. I made that library though, so it's fine :-)\n */\n\n/**\n * @typedef MidFile {Object}\n * @property {ArrayBuffer} binary - the binary data of the file.\n * @property {string|undefined} altName - the alternative name for the file\n */\n\n/**\n * @typedef {BasicMIDI|MidFile} MIDIFile\n */\n\n\n/**\n * @type {MIDIData}\n */\nconst DUMMY_MIDI_DATA = Object.assign({\n    duration: 99999,\n    firstNoteOn: 0,\n    loop: {\n        start: 0,\n        end: 123456\n    },\n    \n    lastVoiceEventTick: 123456,\n    lyrics: [],\n    lyricsTicks: [],\n    copyright: \"\",\n    midiPorts: [],\n    midiPortChannelOffsets: [],\n    tracksAmount: 0,\n    tempoChanges: [{ ticks: 0, tempo: 120 }],\n    trackNames: [],\n    fileName: \"NOT_LOADED.mid\",\n    midiName: \"Loading...\",\n    rawMidiName: new Uint8Array([76, 111, 97, 100, 105, 110, 103, 46, 46, 46]), // \"Loading...\"\n    usedChannelsOnTrack: [],\n    timeDivision: 0,\n    keyRange: { min: 0, max: 127 },\n    isEmbedded: false,\n    isKaraokeFile: false,\n    isMultiPort: false,\n    RMIDInfo: {},\n    bankOffset: 0,\n    midiNameUsesFileName: false,\n    format: 0\n}, MIDIData.prototype);\n\n/**\n * @typedef {Object} SequencerOptions\n * @property {boolean|undefined} skipToFirstNoteOn - if true, the sequencer will skip to the first note\n * @property {boolean|undefined} autoPlay - if true, the sequencer will automatically start playing the MIDI\n * @property {boolean|undefined} preservePlaybackState - if true,\n * the sequencer will stay paused when seeking or changing the playback rate\n * @property {number|undefined} initialPlaybackRate - the initial playback rate, defaults to 1.0 (normal speed)\n */\n/**\n * @type {SequencerOptions}\n */\nconst DEFAULT_SEQUENCER_OPTIONS = {\n    skipToFirstNoteOn: true,\n    autoPlay: true,\n    preservePlaybackState: false,\n    initialPlaybackRate: 1\n};\n\n\n// noinspection JSUnusedGlobalSymbols\nexport class CustomSeq\n{\n    /**\n     * Executes when MIDI parsing has an error.\n     * @type {function(Error)}\n     */\n    onError;\n    \n    /**\n     * Fires on text event\n     * @type {Function}\n     * @param data {Uint8Array} the data text\n     * @param type {number} the status byte of the message (the meta-status byte)\n     * @param lyricsIndex {number} if the text is a lyric, the index of the lyric in midiData.lyrics, otherwise -1\n     */\n    onTextEvent;\n    \n    /**\n     * The current MIDI data, with the exclusion of the embedded sound bank and event data.\n     *  @type {MIDIData}\n     */\n    midiData;\n    \n    /**\n     * The current MIDI data for all songs, like the midiData property.\n     * @type {MIDIData[]}\n     */\n    songListData = [];\n    \n    /**\n     * @type {Object<string, function(MIDIData)>}\n     * @private\n     */\n    onSongChange = {};\n    \n    /**\n     * Fires when CurrentTime changes\n     * @type {Object<string, function(number)>} the time that was changed to\n     * @private\n     */\n    onTimeChange = {};\n    \n    /**\n     * @type {Object<string, function>}\n     * @private\n     */\n    onSongEnded = {};\n    \n    /**\n     * Fires on tempo change\n     * @type {Object<string, function(number)>}\n     */\n    onTempoChange = {};\n    \n    /**\n     * Fires on meta-event\n     * @type {Object<string, function([MIDIMessage, number])>}\n     */\n    onMetaEvent = {};\n    \n    /**\n     * Current song's tempo in BPM\n     * @type {number}\n     */\n    currentTempo = 120;\n    /**\n     * Current song index\n     * @type {number}\n     */\n    songIndex = 0;\n    /**\n     * @type {function(BasicMIDI)}\n     * @private\n     */\n    _getMIDIResolve = undefined;\n    /**\n     * Indicates if the current midiData property has fake data in it (not yet loaded)\n     * @type {boolean}\n     */\n    hasDummyData = true;\n    /**\n     * Indicates whether the sequencer has finished playing a sequence\n     * @type {boolean}\n     */\n    isFinished = false;\n    /**\n     * The current sequence's length, in seconds\n     * @type {number}\n     */\n    duration = 0;\n    \n    /**\n     * Indicates if the sequencer is paused.\n     * Paused if a number, undefined if playing\n     * @type {undefined|number}\n     * @private\n     */\n    pausedTime = undefined;\n    \n    /**\n     * Creates a new Midi sequencer for playing back MIDI files\n     * @param midiBinaries {MIDIFile[]} List of the buffers of the MIDI files\n     * @param synth {CustomSynth} synth to send events to\n     * @param options {SequencerOptions} the sequencer's options\n     */\n    constructor(midiBinaries, synth, options = DEFAULT_SEQUENCER_OPTIONS)\n    {\n        this.ignoreEvents = false;\n        this.synth = synth;\n        this.highResTimeOffset = 0;\n        \n        /**\n         * Absolute playback startTime, bases on the synth's time\n         * @type {number}\n         */\n        this.absoluteStartTime = this.synth.currentTime;\n        \n        this.synth.sequencerCallbackFunction = this._handleMessage.bind(this);\n        \n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._skipToFirstNoteOn = options?.skipToFirstNoteOn ?? true;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._preservePlaybackState = options?.preservePlaybackState ?? false;\n        \n        if (options?.initialPlaybackRate !== 1)\n        {\n            this.playbackRate = options?.initialPlaybackRate ?? 1;\n        }\n        \n        if (this._skipToFirstNoteOn === false)\n        {\n            // setter sends message\n            this._sendMessage(seqMessageType.setSkipToFirstNote, false);\n        }\n        \n        if (this._preservePlaybackState === true)\n        {\n            this._sendMessage(seqMessageType.setPreservePlaybackState, true);\n        }\n        \n        this.loadNewSongList(midiBinaries, options?.autoPlay ?? true);\n        \n        window.addEventListener(\"beforeunload\", this.resetMIDIOut.bind(this));\n    }\n    \n    /**\n     * Internal loop marker\n     * @type {boolean}\n     * @private\n     */\n    _loop = true;\n    \n    /**\n     * Indicates if the sequencer is currently looping\n     * @returns {boolean}\n     */\n    get loop()\n    {\n        return this._loop;\n    }\n    \n    set loop(value)\n    {\n        this._sendMessage(seqMessageType.setLoop, [value, this._loopsRemaining]);\n        this._loop = value;\n    }\n    \n    /**\n     * Internal loop count marker (-1 is infinite)\n     * @type {number}\n     * @private\n     */\n    _loopsRemaining = -1;\n    \n    /**\n     * The current remaining number of loops. -1 means infinite looping\n     * @returns {number}\n     */\n    get loopsRemaining()\n    {\n        return this._loopsRemaining;\n    }\n    \n    /**\n     * The current remaining number of loops. -1 means infinite looping\n     * @param val {number}\n     */\n    set loopsRemaining(val)\n    {\n        this._loopsRemaining = val;\n        this._sendMessage(seqMessageType.setLoop, [this._loop, val]);\n    }\n    \n    /**\n     * Controls the playback's rate\n     * @type {number}\n     * @private\n     */\n    _playbackRate = 1;\n    \n    /**\n     * @returns {number}\n     */\n    get playbackRate()\n    {\n        return this._playbackRate;\n    }\n    \n    /**\n     * @param value {number}\n     */\n    set playbackRate(value)\n    {\n        this._sendMessage(seqMessageType.setPlaybackRate, value);\n        this.highResTimeOffset *= (value / this._playbackRate);\n        this._playbackRate = value;\n    }\n    \n    /**\n     * @type {boolean}\n     * @private\n     */\n    _shuffleSongs = false;\n    \n    /**\n     * Indicates if the song order is random\n     * @returns {boolean}\n     */\n    get shuffleSongs()\n    {\n        return this._shuffleSongs;\n    }\n    \n    /**\n     * Indicates if the song order is random\n     * @param value {boolean}\n     */\n    set shuffleSongs(value)\n    {\n        this._shuffleSongs = value;\n        if (value)\n        {\n            this._sendMessage(seqMessageType.changeSong, [SongChangeType.shuffleOn]);\n        }\n        else\n        {\n            this._sendMessage(seqMessageType.changeSong, [SongChangeType.shuffleOff]);\n        }\n    }\n    \n    /**\n     * Indicates if the sequencer should skip to first note on\n     * @return {boolean}\n     */\n    get skipToFirstNoteOn()\n    {\n        return this._skipToFirstNoteOn;\n    }\n    \n    /**\n     * Indicates if the sequencer should skip to first note on\n     * @param val {boolean}\n     */\n    set skipToFirstNoteOn(val)\n    {\n        this._skipToFirstNoteOn = val;\n        this._sendMessage(seqMessageType.setSkipToFirstNote, this._skipToFirstNoteOn);\n    }\n    \n    /**\n     * if true,\n     * the sequencer will stay paused when seeking or changing the playback rate\n     * @returns {boolean}\n     */\n    get preservePlaybackState()\n    {\n        return this._preservePlaybackState;\n    }\n    \n    /**\n     * if true,\n     * the sequencer will stay paused when seeking or changing the playback rate\n     * @param val {boolean}\n     */\n    set preservePlaybackState(val)\n    {\n        this._preservePlaybackState = val;\n        this._sendMessage(seqMessageType.setPreservePlaybackState, val);\n    }\n    \n    /**\n     * @returns {number} Current playback time, in seconds\n     */\n    get currentTime()\n    {\n        // return the paused time if it's set to something other than undefined\n        if (this.pausedTime !== undefined)\n        {\n            return this.pausedTime;\n        }\n        \n        return (this.synth.currentTime - this.absoluteStartTime) * this._playbackRate;\n    }\n    \n    set currentTime(time)\n    {\n        if (!this._preservePlaybackState)\n        {\n            this.unpause();\n        }\n        this._sendMessage(seqMessageType.setTime, time);\n    }\n    \n    /**\n     * Use for visualization as it's not affected by the audioContext stutter\n     * @returns {number}\n     */\n    get currentHighResolutionTime()\n    {\n        if (this.pausedTime !== undefined)\n        {\n            return this.pausedTime;\n        }\n        const highResTimeOffset = this.highResTimeOffset;\n        const absoluteStartTime = this.absoluteStartTime;\n        \n        // sync performance.now to current time\n        const performanceElapsedTime = ((performance.now() / 1000) - absoluteStartTime) * this._playbackRate;\n        \n        let currentPerformanceTime = highResTimeOffset + performanceElapsedTime;\n        const currentAudioTime = this.currentTime;\n        \n        const smoothingFactor = 0.01 * this._playbackRate;\n        \n        // diff times smoothing factor\n        const timeDifference = currentAudioTime - currentPerformanceTime;\n        this.highResTimeOffset += timeDifference * smoothingFactor;\n        \n        // return a smoothed performance time\n        currentPerformanceTime = this.highResTimeOffset + performanceElapsedTime;\n        return currentPerformanceTime;\n    }\n    \n    /**\n     * true if paused, false if playing or stopped\n     * @returns {boolean}\n     */\n    get paused()\n    {\n        return this.pausedTime !== undefined;\n    }\n    \n    /**\n     * Adds a new event that gets called when the song changes\n     * @param callback {function(MIDIData)}\n     * @param id {string} must be unique\n     */\n    addOnSongChangeEvent(callback, id)\n    {\n        this.onSongChange[id] = callback;\n    }\n    \n    /**\n     * Adds a new event that gets called when the song ends\n     * @param callback {function}\n     * @param id {string} must be unique\n     */\n    addOnSongEndedEvent(callback, id)\n    {\n        this.onSongEnded[id] = callback;\n    }\n    \n    /**\n     * Adds a new event that gets called when the time changes\n     * @param callback {function(number)} the new time, in seconds\n     * @param id {string} must be unique\n     */\n    addOnTimeChangeEvent(callback, id)\n    {\n        this.onTimeChange[id] = callback;\n    }\n    \n    /**\n     * Adds a new event that gets called when the tempo changes\n     * @param callback {function(number)} the new tempo, in BPM\n     * @param id {string} must be unique\n     */\n    addOnTempoChangeEvent(callback, id)\n    {\n        this.onTempoChange[id] = callback;\n    }\n    \n    /**\n     * Adds a new event that gets called when a meta-event occurs\n     * @param callback {function([MIDIMessage, number])} the meta-event type and the track number\n     * @param id {string} must be unique\n     */\n    addOnMetaEvent(callback, id)\n    {\n        this.onMetaEvent[id] = callback;\n    }\n    \n    resetMIDIOut()\n    {\n        if (!this.MIDIout)\n        {\n            return;\n        }\n        for (let i = 0; i < 16; i++)\n        {\n            this.MIDIout.send([messageTypes.controllerChange | i, 120, 0]); // all notes off\n            this.MIDIout.send([messageTypes.controllerChange | i, 123, 0]); // all sound off\n        }\n        this.MIDIout.send([messageTypes.reset]); // reset\n    }\n    \n    /**\n     * @param messageType {seqMessageType}\n     * @param messageData {any}\n     * @param transferable {Transferable[]}\n     * @private\n     */\n    _sendMessage(messageType, messageData = undefined, transferable = [])\n    {\n        this.synth.post({\n            channelNumber: ALL_CHANNELS_OR_DIFFERENT_ACTION,\n            messageType: workerMessageType.sequencerSpecific,\n            messageData: {\n                messageType: messageType,\n                messageData: messageData\n            }\n        }, transferable);\n    }\n    \n    /**\n     * Switch to the next song in the playlist\n     */\n    nextSong()\n    {\n        this.pausedTime = this.currentTime;\n        this._sendMessage(seqMessageType.changeSong, [SongChangeType.forwards]);\n    }\n    \n    /**\n     * Switch to the previous song in the playlist\n     */\n    previousSong()\n    {\n        this.pausedTime = this.currentTime;\n        this._sendMessage(seqMessageType.changeSong, [SongChangeType.backwards]);\n    }\n    \n    /**\n     * Sets the song index in the playlist\n     * @param index\n     */\n    setSongIndex(index)\n    {\n        this.pausedTime = this.currentTime;\n        const clamped = Math.max(Math.min(this.songsAmount - 1, index), 0);\n        this._sendMessage(seqMessageType.changeSong, [SongChangeType.index, clamped]);\n    }\n    \n    /**\n     * @param type {Object<string, function>}\n     * @param params {any}\n     * @private\n     */\n    _callEvents(type, params)\n    {\n        for (const key in type)\n        {\n            const callback = type[key];\n            try\n            {\n                callback(params);\n            }\n            catch (e)\n            {\n                util.SpessaSynthWarn(`Failed to execute callback for ${callback[0]}:`, e);\n            }\n        }\n    }\n    \n    /**\n     * @param {SpessaSynthSequencerReturnMessageType} messageType\n     * @param {any} messageData\n     * @private\n     */\n    _handleMessage(messageType, messageData)\n    {\n        if (this.ignoreEvents)\n        {\n            return;\n        }\n        switch (messageType)\n        {\n            case SpessaSynthSequencerReturnMessageType.midiEvent:\n                /**\n                 * @type {number[]}\n                 */\n                let midiEventData = messageData;\n                if (this.MIDIout)\n                {\n                    if (midiEventData[0] >= 0x80)\n                    {\n                        this.MIDIout.send(midiEventData);\n                        return;\n                    }\n                }\n                break;\n            \n            case SpessaSynthSequencerReturnMessageType.songChange:\n                this.songIndex = messageData[0];\n                const songChangeData = this.songListData[this.songIndex];\n                this.midiData = songChangeData;\n                this.hasDummyData = false;\n                this.duration = this.midiData.duration;\n                this._recalculateStartTime(messageData[2]);\n                this._callEvents(this.onSongChange, songChangeData);\n                // if is auto played, unpause\n                if (messageData[1] === true)\n                {\n                    this.unpause();\n                }\n                // Band-Aid fix, but it is what it is\n                setTimeout(() =>\n                {\n                    this.currentTime = 0;\n                }, 10);\n                break;\n            \n            case SpessaSynthSequencerReturnMessageType.timeChange:\n                // message data is song time (0 means the start of the song)\n                const time = messageData;\n                this._callEvents(this.onTimeChange, time);\n                this._recalculateStartTime(time);\n                if (this.paused && this._preservePlaybackState)\n                {\n                    this.pausedTime = time;\n                }\n                else\n                {\n                    this.unpause();\n                }\n                break;\n            \n            case SpessaSynthSequencerReturnMessageType.pause:\n                this.pausedTime = this.currentTime;\n                this.isFinished = messageData;\n                if (this.isFinished)\n                {\n                    this._callEvents(this.onSongEnded, undefined);\n                }\n                this.syncSequencer();\n                break;\n            \n            case SpessaSynthSequencerReturnMessageType.midiError:\n                if (this.onError)\n                {\n                    this.onError(messageData);\n                }\n                else\n                {\n                    throw new Error(\"Sequencer error: \" + messageData);\n                }\n                return;\n            \n            case SpessaSynthSequencerReturnMessageType.getMIDI:\n                if (this._getMIDIResolve)\n                {\n                    this._getMIDIResolve(BasicMIDI.copyFrom(messageData));\n                }\n                this.syncSequencer();\n                break;\n            \n            case SpessaSynthSequencerReturnMessageType.metaEvent:\n                /**\n                 * @type {MIDIMessage}\n                 */\n                const event = messageData[0];\n                switch (event.messageStatusByte)\n                {\n                    case messageTypes.setTempo:\n                        event.messageData.currentIndex = 0;\n                        const bpm = 60000000 / util.readBytesAsUintBigEndian(event.messageData, 3);\n                        event.messageData.currentIndex = 0;\n                        this.currentTempo = Math.round(bpm * 100) / 100;\n                        if (this.onTempoChange)\n                        {\n                            this._callEvents(this.onTempoChange, this.currentTempo);\n                        }\n                        break;\n                    \n                    case messageTypes.text:\n                    case messageTypes.lyric:\n                    case messageTypes.copyright:\n                    case messageTypes.trackName:\n                    case messageTypes.marker:\n                    case messageTypes.cuePoint:\n                    case messageTypes.instrumentName:\n                    case messageTypes.programName:\n                        let lyricsIndex = -1;\n                        if (event.messageStatusByte === messageTypes.lyric)\n                        {\n                            lyricsIndex = Math.min(\n                                this.midiData.lyricsTicks.indexOf(event.ticks),\n                                this.midiData.lyrics.length - 1\n                            );\n                        }\n                        let sentStatus = event.messageStatusByte;\n                        // if MIDI is a karaoke file, it uses the \"text\" event type or \"lyrics\" for lyrics (duh)\n                        // why?\n                        // because the MIDI standard is a messy pile of garbage,\n                        // and it's not my fault that it's like this :(\n                        // I'm just trying to make the best out of a bad situation.\n                        // I'm sorry\n                        // okay I should get back to work\n                        // anyway,\n                        // check for a karaoke file and change the status byte to \"lyric\"\n                        // if it's a karaoke file\n                        if (this.midiData.isKaraokeFile && (\n                            event.messageStatusByte === messageTypes.text ||\n                            event.messageStatusByte === messageTypes.lyric\n                        ))\n                        {\n                            lyricsIndex = Math.min(\n                                this.midiData.lyricsTicks.indexOf(event.ticks),\n                                this.midiData.lyricsTicks.length\n                            );\n                            sentStatus = messageTypes.lyric;\n                        }\n                        if (this.onTextEvent)\n                        {\n                            this.onTextEvent(event.messageData, sentStatus, lyricsIndex, event.ticks);\n                        }\n                        break;\n                }\n                this._callEvents(this.onMetaEvent, messageData);\n                break;\n            \n            case SpessaSynthSequencerReturnMessageType.loopCountChange:\n                this._loopsRemaining = messageData;\n                if (this._loopsRemaining === 0)\n                {\n                    this._loop = false;\n                }\n                this.syncSequencer();\n                break;\n            \n            case SpessaSynthSequencerReturnMessageType.songListChange:\n                this.songListData = messageData.map(s => new MIDIData(s));\n                this.syncSequencer();\n                break;\n            \n            default:\n                break;\n        }\n    }\n    \n    syncSequencer()\n    {\n        this._recalculateStartTime(this.currentTime);\n    }\n    \n    /**\n     * @param time\n     * @private\n     */\n    _recalculateStartTime(time)\n    {\n        this.absoluteStartTime = this.synth.currentTime - time / this._playbackRate;\n        this.highResTimeOffset = (this.synth.currentTime - (performance.now() / 1000)) * this._playbackRate;\n    }\n    \n    /**\n     * @returns {Promise<MIDI>}\n     */\n    async getMIDI()\n    {\n        return new Promise(resolve =>\n        {\n            this._getMIDIResolve = resolve;\n            this._sendMessage(seqMessageType.getMIDI, undefined);\n        });\n    }\n    \n    /**\n     * Loads a new song list\n     * @param midiBuffers {MIDIFile[]} - the MIDI files to play\n     * @param autoPlay {boolean} - if true, the first sequence will automatically start playing\n     */\n    loadNewSongList(midiBuffers, autoPlay = true)\n    {\n        this.pausedTime = this.currentTime;\n        // add some fake data\n        this.midiData = DUMMY_MIDI_DATA;\n        this.hasDummyData = true;\n        this.duration = 99999;\n        /**\n         * @type {ArrayBuffer[]}\n         */\n        const transferable = [];\n        /**\n         * sanitize MIDIs\n         * @type {({binary: ArrayBuffer, altName: string}|BasicMIDI)[]}\n         */\n        const sanitizedMidis = midiBuffers.map(m =>\n        {\n            if (m.binary !== undefined)\n            {\n                transferable.push(m.binary);\n                return m;\n            }\n            return BasicMIDI.copyFrom(m);\n        });\n        this._sendMessage(seqMessageType.loadNewSongList, [sanitizedMidis, autoPlay], transferable);\n        this.songIndex = 0;\n        this.songsAmount = midiBuffers.length;\n        if (this.songsAmount > 1)\n        {\n            this.loop = false;\n        }\n        if (autoPlay === false)\n        {\n            this.pausedTime = this.currentTime;\n        }\n    }\n    \n    /**\n     * @param output {MIDIOutput}\n     */\n    connectMidiOutput(output)\n    {\n        this.resetMIDIOut();\n        this.MIDIout = output;\n        this._sendMessage(seqMessageType.changeMIDIMessageSending, output !== undefined);\n        this.currentTime -= 0.1;\n    }\n    \n    /**\n     * Pauses the playback\n     */\n    pause()\n    {\n        if (this.paused)\n        {\n            util.SpessaSynthWarn(\"Already paused\");\n            return;\n        }\n        this.pausedTime = this.currentTime;\n        this._sendMessage(seqMessageType.pause);\n    }\n    \n    unpause()\n    {\n        this.pausedTime = undefined;\n        this.isFinished = false;\n    }\n    \n    /**\n     * Starts the playback\n     * @param resetTime {boolean} If true, time is set to 0 s\n     */\n    play(resetTime = false)\n    {\n        if (this.isFinished)\n        {\n            resetTime = true;\n        }\n        this._recalculateStartTime(this.pausedTime || 0);\n        this.unpause();\n        this._sendMessage(seqMessageType.play, resetTime);\n        this.syncSequencer();\n    }\n    \n    /**\n     * Stops the playback\n     */\n    stop()\n    {\n        this._sendMessage(seqMessageType.stop);\n    }\n}", "import { MidiKeyboard } from \"../midi_keyboard/midi_keyboard.js\";\nimport { MIDIDeviceHandler, WebMIDILinkHandler } from \"spessasynth_lib\";\n\nimport { Renderer } from \"../renderer/renderer.js\";\n\nimport { SequencerUI } from \"../sequencer_ui/sequencer_ui.js\";\nimport { SynthetizerUI } from \"../synthesizer_ui/synthetizer_ui.js\";\nimport { SpessaSynthSettings } from \"../settings_ui/settings.js\";\nimport { MusicModeUI } from \"../music_mode_ui/music_mode_ui.js\";\nimport { LocaleManager } from \"../locale/locale_manager.js\";\nimport { isMobile } from \"../utils/is_mobile.js\";\nimport { keybinds } from \"../utils/keybinds.js\";\nimport { _doExportAudioData, _exportAudioData } from \"./export_audio/export_audio.js\";\nimport { _exportSoundfont } from \"./export_audio/export_soundfont.js\";\nimport { exportSong } from \"./export_audio/export_song.js\";\nimport { _exportRMIDI } from \"./export_audio/export_rmidi.js\";\nimport { closeNotification, showNotification } from \"../notification/notification.js\";\nimport { DropFileHandler } from \"../utils/drop_file_handler.js\";\nimport { _exportDLS } from \"./export_audio/export_dls.js\";\nimport { BasicMIDI, IndexedByteArray, SpessaSynthCoreUtils as util } from \"spessasynth_core\";\nimport { prepareExtraBankUpload } from \"./extra_bank_handling.js\";\nimport { CustomSynth } from \"./custom_synth/main_thread/custom_synth.js\";\nimport { CustomSeq } from \"./custom_synth/main_thread/custom_seq.js\";\n\n\n/**\n * @typedef MidFile {Object}\n * @property {ArrayBuffer} binary - the binary data of the file.\n * @property {string|undefined} altName - the alternative name for the file\n */\n\n/**\n * @typedef {BasicMIDI|MidFile} MIDIFile\n */\n\n// this enables transitions on the body because if we enable them during loading time, it flash-bangs us with white\ndocument.body.classList.add(\"load\");\n\n/**\n * manager.js\n * purpose: connects every element of spessasynth\n */\n\nconst ENABLE_DEBUG = false;\n\nclass Manager\n{\n    channelColors = [\n        \"rgba(255, 99, 71, 1)\",   // tomato\n        \"rgba(255, 165, 0, 1)\",   // orange\n        \"rgba(255, 215, 0, 1)\",   // gold\n        \"rgba(50, 205, 50, 1)\",   // limegreen\n        \"rgba(60, 179, 113, 1)\",  // mediumseagreen\n        \"rgba(0, 128, 0, 1)\",     // green\n        \"rgba(0, 191, 255, 1)\",   // deepskyblue\n        \"rgba(65, 105, 225, 1)\",  // royalblue\n        \"rgba(138, 43, 226, 1)\",  // blueviolet\n        \"rgba(50, 120, 125, 1)\",  //'rgba(218, 112, 214, 1)', // percussion color\n        \"rgba(255, 0, 255, 1)\",   // magenta\n        \"rgba(255, 20, 147, 1)\",  // deeppink\n        \"rgba(218, 112, 214, 1)\", // orchid\n        \"rgba(240, 128, 128, 1)\", // lightcoral\n        \"rgba(255, 192, 203, 1)\", // pink\n        \"rgba(255, 255, 0, 1)\"    // yellow\n    ];\n    /**\n     * @type {function(string)}\n     */\n    sfError;\n    \n    /**\n     * @type {CustomSynth}\n     */\n    synth;\n    \n    /**\n     * Creates a new midi user interface.\n     * @param context {AudioContext}\n     * @param soundFontBuffer {ArrayBuffer}\n     * @param locale {LocaleManager}\n     * @param enableDebug {boolean}\n     */\n    constructor(context, soundFontBuffer, locale, enableDebug = ENABLE_DEBUG)\n    {\n        this.localeManager = locale;\n        this.context = context;\n        this.enableDebug = enableDebug;\n        this.isExporting = false;\n        \n        \n        this.audioDelay = new DelayNode(context, {\n            delayTime: 0\n        });\n        this.audioDelay.connect(context.destination);\n        this.synth = new CustomSynth(this.audioDelay);\n        \n        let solve;\n        this.ready = new Promise(resolve => solve = resolve);\n        this.initializeContext(context, soundFontBuffer).then(() =>\n        {\n            solve();\n        });\n    }\n    \n    saveUrl(url, name)\n    {\n        /**\n         * @type {HTMLAnchorElement}\n         */\n        const a = document.createElement(\"a\");\n        a.href = url;\n        a.download = name;\n        a.click();\n        console.info(a);\n    }\n    \n    saveBlob(blob, name)\n    {\n        const url = URL.createObjectURL(blob);\n        this.saveUrl(url, name);\n    }\n    \n    /**\n     * @param context {BaseAudioContext}\n     * @param soundFont {ArrayBuffer}\n     * @returns {Promise<void>}\n     */\n    async initializeContext(context, soundFont)\n    {\n        \n        if (!context.audioWorklet)\n        {\n            alert(\"Audio worklet is not supported on your browser. Sorry!\");\n            throw new Error(\"Audio worklet is not supported\");\n        }\n        \n        // bind every element with translate-path to translation\n        for (const element of document.querySelectorAll(\"*[translate-path]\"))\n        {\n            this.localeManager.bindObjectProperty(element, \"textContent\", element.getAttribute(\"translate-path\"));\n        }\n        \n        // set the extra bank upload\n        prepareExtraBankUpload.call(this);\n        \n        // same with title\n        for (const element of document.querySelectorAll(\"*[translate-path-title]\"))\n        {\n            this.localeManager.bindObjectProperty(\n                element,\n                \"textContent\",\n                element.getAttribute(\"translate-path-title\") + \".title\"\n            );\n            this.localeManager.bindObjectProperty(\n                element,\n                \"title\",\n                element.getAttribute(\"translate-path-title\") + \".description\"\n            );\n        }\n        \n        \n        if (this.enableDebug)\n        {\n            console.warn(\"DEBUG ENABLED! DEBUGGING ENABLED!!\");\n        }\n        \n        \n        this.synth.eventHandler.addEvent(\"soundfonterror\", \"manager-sf-error\", e =>\n        {\n            if (this.sfError)\n            {\n                this.sfError(e.message);\n            }\n        });\n        \n        // set up the worker synth engine\n        await this.synth.init(soundFont);\n        \n        \n        // set up midi access\n        this.midHandler = new MIDIDeviceHandler();\n        \n        // set up web midi link\n        // noinspection JSCheckFunctionSignatures\n        new WebMIDILinkHandler(this.synth);\n        \n        // set up keyboard\n        this.keyboard = new MidiKeyboard(this.channelColors, this.synth);\n        \n        /**\n         * set up renderer\n         * @type {HTMLCanvasElement}\n         */\n        const canvas = document.getElementById(\"note_canvas\");\n        \n        canvas.width = window.innerWidth * window.devicePixelRatio;\n        canvas.height = window.innerHeight * window.devicePixelRatio;\n        \n        this.renderer = new Renderer(\n            this.channelColors,\n            this.synth,\n            canvas,\n            this.localeManager,\n            window.SPESSASYNTH_VERSION\n        );\n        this.renderer.render(true);\n        \n        let titleSwappedWithSettings = false;\n        const checkResize = () =>\n        {\n            this.renderer.updateSize();\n            if (isMobile)\n            {\n                if (window.innerWidth / window.innerHeight > 1)\n                {\n                    if (!titleSwappedWithSettings)\n                    {\n                        const title = document.getElementById(\"title_wrapper\");\n                        const settings = document.getElementById(\"settings_div\");\n                        titleSwappedWithSettings = true;\n                        title.parentElement.insertBefore(settings, title);\n                    }\n                }\n                else if (titleSwappedWithSettings)\n                {\n                    const title = document.getElementById(\"title_wrapper\");\n                    const settings = document.getElementById(\"settings_div\");\n                    titleSwappedWithSettings = false;\n                    title.parentElement.insertBefore(title, settings);\n                }\n                \n            }\n            this.renderer.render(false, true);\n        };\n        checkResize();\n        window.addEventListener(\"resize\", checkResize.bind(this));\n        window.addEventListener(\"orientationchange\", checkResize.bind(this));\n        \n        // if on mobile, switch to a 2 octave keyboard\n        if (isMobile)\n        {\n            this.renderer.keyRange = { min: 48, max: 72 };\n            this.keyboard.setKeyRange({ min: 48, max: 72 }, false);\n        }\n        \n        // set up synth UI\n        this.synthUI = new SynthetizerUI(\n            this.channelColors,\n            document.getElementById(\"synthetizer_controls\"),\n            this.localeManager\n        );\n        this.synthUI.connectSynth(this.synth);\n        this.synthUI.connectKeyboard(this.keyboard);\n        \n        // create a UI for music player mode\n        this.musicModeUI = new MusicModeUI(document.getElementById(\"player_info\"), this.localeManager);\n        \n        // create a UI for sequencer\n        this.seqUI = new SequencerUI(\n            document.getElementById(\"sequencer_controls\"),\n            this.localeManager,\n            this.musicModeUI,\n            this.renderer\n        );\n        \n        // set up settings UI\n        this.settingsUI = new SpessaSynthSettings(\n            document.getElementById(\"settings_div\"),\n            this.synthUI,\n            this.seqUI,\n            this.renderer,\n            this.keyboard,\n            this.midHandler,\n            this.musicModeUI,\n            this.localeManager,\n            this.audioDelay\n        );\n        \n        this.synthUI.onProgramChange = channel =>\n        {\n            // QoL: change the keyboard channel to the changed one when user changed it: adjust selector here\n            this.keyboard.selectChannel(channel);\n            this.settingsUI.htmlControls.keyboard.channelSelector.value = channel;\n        };\n        \n        // set up drop file handler\n        new DropFileHandler(async data =>\n        {\n            if (data.length === 0)\n            {\n                return;\n            }\n            await this.context.resume();\n            this.play(data);\n            let firstName = data[0].altName;\n            if (firstName > 20)\n            {\n                firstName = firstName.substring(0, 21) + \"...\";\n            }\n            // set file name\n            document.getElementById(\"file_upload\").textContent = firstName;\n            // show export button\n            const exportButton = document.getElementById(\"export_button\");\n            exportButton.style.display = \"flex\";\n            exportButton.onclick = this.exportSong.bind(this);\n            // if demo website, hide demo songs button\n            if (!window.isLocalEdition)\n            {\n                document.getElementById(\"demo_song\").style.display = \"none\";\n            }\n        }, buf =>\n        {\n            this.reloadSf(buf);\n        });\n        \n        // add key presses\n        document.addEventListener(\"keydown\", e =>\n        {\n            // check for control\n            if (e.ctrlKey)\n            {\n                // do not interrupt control shortcuts\n                return;\n            }\n            switch (e.key.toLowerCase())\n            {\n                case keybinds.videoMode:\n                    if (this.seq)\n                    {\n                        this.seq.pause();\n                        this.seqUI.releaseWakeLock();\n                    }\n                    const videoSource = window.prompt(\n                        \"Video mode!\\n Paste the link to the video source (leave blank to disable)\\n\" +\n                        \"Note: the video will be available in console as 'video'\",\n                        \"\"\n                    );\n                    if (videoSource === null)\n                    {\n                        return;\n                    }\n                    /**\n                     * @type {HTMLVideoElement}\n                     */\n                    const video = document.createElement(\"video\");\n                    video.src = videoSource;\n                    video.classList.add(\"secret_video\");\n                    canvas.parentElement.appendChild(video);\n                    video.play();\n                    window.video = video;\n                    if (this.seq)\n                    {\n                        video.currentTime = parseFloat(window.prompt(\"Video offset to sync to midi, in seconds.\", \"0\"));\n                        video.play();\n                        this.seq.currentTime = 0;\n                    }\n                    document.addEventListener(\"keydown\", e =>\n                    {\n                        if (e.key === \" \")\n                        {\n                            if (video.paused)\n                            {\n                                video.play();\n                            }\n                            else\n                            {\n                                video.pause();\n                            }\n                        }\n                    });\n                    \n                    break;\n                \n                case keybinds.sustainPedal:\n                    this.renderer.showHoldPedal = true;\n                    this.renderer.render(false);\n                    this.keyboard.setHoldPedal(true);\n            }\n        });\n        \n        document.addEventListener(\"keyup\", e =>\n        {\n            // check for control\n            if (e.ctrlKey)\n            {\n                // do not interrupt control shortcuts\n                return;\n            }\n            switch (e.key.toLowerCase())\n            {\n                case keybinds.sustainPedal:\n                    this.renderer.showHoldPedal = false;\n                    this.renderer.render(false);\n                    this.keyboard.setHoldPedal(false);\n                    break;\n                \n                default:\n                    break;\n            }\n        });\n        \n        this.renderer.render(false, true);\n        // ANY TEST CODE FOR THE SYNTHESIZER GOES HERE\n    }\n    \n    getDLS()\n    {\n        showNotification(\n            this.localeManager.getLocaleString(\"locale.convertDls.title\"),\n            [\n                {\n                    type: \"text\",\n                    textContent: this.localeManager.getLocaleString(\"locale.convertDls.message\")\n                },\n                {\n                    type: \"button\",\n                    textContent: this.localeManager.getLocaleString(\"locale.yes\"),\n                    onClick: n =>\n                    {\n                        closeNotification(n.id);\n                        this.downloadDesfont().then();\n                    }\n                },\n                {\n                    type: \"button\",\n                    textContent: this.localeManager.getLocaleString(\"locale.no\"),\n                    onClick: n =>\n                    {\n                        closeNotification(n.id);\n                    }\n                }\n            ],\n            99999999\n        );\n        \n    }\n    \n    /**\n     * @param sf {ArrayBuffer}\n     */\n    async reloadSf(sf)\n    {\n        const text = sf.slice(8, 12);\n        const header = util.readBytesAsString(new IndexedByteArray(text), 4);\n        const isDLS = header.toLowerCase() === \"dls \" && window.isLocalEdition !== true;\n        await this.synth.soundfontManager.addNewSoundFont(sf, \"main\");\n        if (isDLS)\n        {\n            setTimeout(() =>\n            {\n                this.getDLS();\n            }, 3000);\n        }\n        \n        // resets controllers and resume\n        if (this.seq)\n        {\n            this.seq.currentTime -= 0.1;\n        }\n    }\n    \n    /**\n     * starts playing and rendering the midi file\n     * @param parsedMidi {MIDIFile[]}\n     */\n    play(parsedMidi)\n    {\n        if (!this.synth)\n        {\n            return;\n        }\n        \n        if (this.seq)\n        {\n            this.seq.loadNewSongList(parsedMidi);\n            this.seq.play(true);\n            this.seqUI.setWakeLock();\n            return;\n        }\n        \n        // create a new sequencer\n        this.seq = new CustomSeq(parsedMidi, this.synth);\n        \n        this.seq.onError = e =>\n        {\n            console.error(e);\n            document.getElementById(\"title\").textContent = e.message;\n        };\n        \n        // connect to the UI\n        this.seqUI.connectSequencer(this.seq);\n        \n        // connect to the music mode ui\n        this.musicModeUI.connectSequencer(this.seq);\n        \n        // connect to the renderer\n        this.renderer.connectSequencer(this.seq);\n        \n        // connect to settings\n        this.settingsUI.addSequencer(this.seq);\n        \n        // connect to synthui\n        \n        this.synthUI.connectSequencer(this.seq);\n        \n        // play the midi\n        this.seq.play(true);\n        this.seqUI.setWakeLock();\n    }\n    \n    async downloadDesfont()\n    {\n        const exported = await this.synth.exportSoundFont(\n            false,\n            false,\n            0,\n            (p) =>\n            {\n                console.info(`%cExporting SF2: ${p}`);\n            }\n        );\n        this.saveUrl(exported.url, exported.fileName);\n    }\n    \n    async exportMidi()\n    {\n        const mid = await this.synth.exportMIDI();\n        this.saveUrl(mid.url, `${this.seqUI.currentSongTitle || \"unnamed_song\"}.mid`);\n    }\n}\n\nManager.prototype.exportSong = exportSong;\nManager.prototype._exportAudioData = _exportAudioData;\nManager.prototype._doExportAudioData = _doExportAudioData;\nManager.prototype._exportSoundfont = _exportSoundfont;\nManager.prototype._exportDLS = _exportDLS;\nManager.prototype._exportRMIDI = _exportRMIDI;\nexport { Manager };", "\"use strict\";\n\nimport { Manager } from \"../manager/manager.js\";\nimport { showNotification } from \"../notification/notification.js\";\nimport { LocaleManager } from \"../locale/locale_manager.js\";\nimport { SpessaSynthLogging } from \"spessasynth_core\";\n\n/**\n * local_main.js\n * purpose: main script for the local edition, loads the soundfont and passes it to the manager.js, reloads soundfonts when needed and saves the settings\n */\nconst SAMPLE_RATE = 44100;\n\nSpessaSynthLogging(true, true, true, true);\n\n/**\n * @type {HTMLHeadingElement}\n */\nlet titleMessage = document.getElementById(\"title\");\n/**\n * @type {HTMLDivElement}\n */\nlet progressBar = document.getElementById(\"progress_bar\");\n/**\n * @type {HTMLInputElement}\n */\nlet fileInput = document.getElementById(\"midi_file_input\");\n// remove the old files\nfileInput.value = \"\";\nfileInput.focus();\n\nlet exportButton = document.getElementById(\"export_button\");\nexportButton.style.display = \"none\";\n\nlet synthReady = false;\n\nconst r = await (await fetch(\"/getversion\")).text();\nwindow.SPESSASYNTH_VERSION = r;\n\n/**\n * @param fileName {string}\n * @param callback {function(number)}\n * @returns {Promise<ArrayBuffer>}\n */\nasync function fetchFont(fileName, callback)\n{\n    let response = await fetch(`${fileName}`);\n    if (!response.ok)\n    {\n        titleMessage.innerText = \"Error downloading soundfont!\";\n        throw response;\n    }\n    let size = response.headers.get(\"content-length\");\n    let reader = await (await response.body).getReader();\n    let done = false;\n    let dataArray;\n    try\n    {\n        dataArray = new Uint8Array(parseInt(size));\n    }\n    catch (e)\n    {\n        let message = `Your browser ran out of memory. Consider using Firefox or SF3 soundfont instead<br><br> (see console for error)`;\n        if (window.manager)\n        {\n            message = manager.localeManager.getLocaleString(\"locale.warnings.outOfMemory\");\n        }\n        showNotification(\n            \"Warning\",\n            [{\n                type: \"text\",\n                textContent: message\n            }]\n        );\n        throw e;\n    }\n    let offset = 0;\n    do\n    {\n        let readData = await reader.read();\n        if (readData.value)\n        {\n            dataArray.set(readData.value, offset);\n            offset += readData.value.length;\n        }\n        done = readData.done;\n        let percent = Math.round((offset / size) * 100);\n        callback(percent);\n    } while (!done);\n    return dataArray.buffer;\n}\n\n/**\n * @param midiFiles {FileList}\n */\nasync function startMidi(midiFiles)\n{\n    if (!synthReady)\n    {\n        setTimeout(() => startMidi(midiFiles), 100);\n        return;\n    }\n    await manager.ready;\n    let fName;\n    if (midiFiles[0].name.length > 20)\n    {\n        fName = midiFiles[0].name.substring(0, 21) + \"...\";\n    }\n    else\n    {\n        fName = midiFiles[0].name;\n    }\n    if (midiFiles.length > 1)\n    {\n        fName += ` and ${midiFiles.length - 1} others`;\n    }\n    document.getElementById(\"file_upload\").innerText = fName;\n    document.getElementById(\"file_upload\").title = midiFiles[0].name;\n    /**\n     * @type {{binary: ArrayBuffer, altName: string}[]}\n     */\n    const parsed = [];\n    for (const file of midiFiles)\n    {\n        parsed.push({\n            binary: await file.arrayBuffer(),\n            altName: file.name\n        });\n    }\n    \n    titleMessage.style.fontStyle = \"italic\";\n    \n    if (manager.seq)\n    {\n        manager.seq.loadNewSongList(parsed);\n    }\n    else\n    {\n        manager.play(parsed);\n    }\n    exportButton.style.display = \"flex\";\n    exportButton.onclick = window.manager.exportSong.bind(window.manager);\n}\n\n/**\n * Fetches and replaces the current manager's font\n * @param fontName {string}\n */\nasync function replaceFont(fontName)\n{\n    async function replaceSf()\n    {\n        \n        // prompt the user to click if needed\n        if (!window.audioContextMain)\n        {\n            titleMessage.innerText = \"Press anywhere to start the app\";\n            return;\n        }\n        \n        if (!window.manager)\n        {\n            // prepare the manager\n            window.manager = new Manager(audioContextMain, soundFontParser, localeManager, true);\n            window.TITLE = window.manager.localeManager.getLocaleString(\"locale.titleMessage\");\n            titleMessage.innerText = \"Initializing...\";\n            await manager.ready;\n            manager.synth.setLogLevel(true, true, true, true);\n        }\n        else\n        {\n            if (window.manager.seq)\n            {\n                window.manager.seq.pause();\n            }\n            await window.manager.reloadSf(window.soundFontParser);\n        }\n        titleMessage.innerText = window.manager.localeManager.getLocaleString(\"locale.titleMessage\");\n        synthReady = true;\n    }\n    \n    titleMessage.innerText = \"Loading soundfont...\";\n    const data = await fetchFont(\n        fontName,\n        percent => progressBar.style.width = `${(percent / 100) * titleMessage.offsetWidth}px`\n    );\n    \n    titleMessage.innerText = \"Parsing soundfont...\";\n    setTimeout(() =>\n    {\n        window.soundFontParser = data;\n        progressBar.style.width = \"0\";\n        replaceSf();\n    });\n    titleMessage.innerText = window.TITLE;\n}\n\ndocument.body.onclick = async () =>\n{\n    // user has clicked, we can create the js\n    if (!window.audioContextMain)\n    {\n        if (navigator.mediaSession)\n        {\n            navigator.mediaSession.playbackState = \"playing\";\n        }\n        const context = window.AudioContext || window.webkitAudioContext;\n        window.audioContextMain = new context({ sampleRate: SAMPLE_RATE });\n        if (window.soundFontParser)\n        {\n            // prepare midi interface\n            window.manager = new Manager(audioContextMain, soundFontParser, localeManager, true);\n            window.TITLE = window.manager.localeManager.getLocaleString(\"locale.titleMessage\");\n            titleMessage.innerText = \"Initializing...\";\n            await manager.ready;\n            manager.synth.setLogLevel(true, true, true, true);\n            synthReady = true;\n            titleMessage.innerText = window.manager.localeManager.getLocaleString(\"locale.titleMessage\");\n        }\n    }\n    document.body.onclick = null;\n};\n\n/**\n * @type {{name: string, size: number}[]}\n */\nlet soundFonts = [];\n\nconst localeManager = new LocaleManager(navigator.language.split(\"-\")[0].toLowerCase());\n\n// load the list of soundfonts\nfetch(\"soundfonts\").then(async r =>\n{\n    if (!r.ok)\n    {\n        titleMessage.innerText = \"Error fetching soundfonts!\";\n        throw r.statusText;\n    }\n    /**\n     * @type {HTMLSelectElement}\n     */\n    const sfSelector = document.getElementById(\"sf_selector\");\n    \n    soundFonts = JSON.parse(await r.text());\n    for (let sf of soundFonts)\n    {\n        const option = document.createElement(\"option\");\n        option.value = sf.name;\n        let displayName = sf.name;\n        if (displayName.length > 29)\n        {\n            displayName = displayName.substring(0, 30) + \"...\";\n        }\n        option.innerText = displayName;\n        sfSelector.appendChild(option);\n    }\n    \n    sfSelector.onchange = () =>\n    {\n        sfSelector.blur();\n        fetch(`/setlastsf2?sfname=${encodeURIComponent(sfSelector.value)}`);\n        if (window.manager.seq)\n        {\n            window.manager.seq.pause();\n        }\n        replaceFont(sfSelector.value);\n        \n        if (window.manager.seq)\n        {\n            titleMessage.innerText = window.manager.seq.midiData.midiName || window.TITLE;\n        }\n        \n    };\n    \n    // fetch the first sf2\n    await replaceFont(soundFonts[0].name);\n    \n    // start midi if already uploaded\n    if (fileInput.files[0])\n    {\n        await startMidi(fileInput.files);\n    }\n    \n    // and add the event listener\n    fileInput.onchange = async () =>\n    {\n        if (!fileInput.files[0])\n        {\n            return;\n        }\n        await startMidi(fileInput.files);\n    };\n});\n\n/**\n * saves the settings (settings.js) selected data to config.json\n * (only on the local edition that's why it's here and not in the demo_main.js)\n * @param settingsData {Object}\n */\nfunction saveSettings(settingsData)\n{\n    fetch(\"/savesettings\", {\n        method: \"POST\",\n        body: JSON.stringify(settingsData),\n        headers: {\n            \"Content-type\": \"application/json; charset=UTF-8\"\n        }\n    }).then();\n}\n\n// expose the function\nwindow.saveSettings = saveSettings;\n\n/**\n * reads the settings\n * @type {Promise<SavedSettings>}\n */\nwindow.savedSettings = new Promise(resolve =>\n{\n    fetch(\"/getsettings\").then(response => response.json().then(\n        parsedSettings =>\n        {\n            resolve(parsedSettings);\n        }));\n});\n\nwindow.isLocalEdition = true;"],
  "mappings": "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BACA,0BACA,0BACA,yBACA,0BACA,0BACA,oBACA,oBACA,mBACA,gBACA,yBACA,uBACA,gBACA,cACA,cACA,eACA,eACA,SACA,QACA,QACA,aACA,kBACA,oBACA,kBACA,UACA,oBACA,oBACA,kBACA,kBACA,aACA,kBACA,cACA,gBACA,UACA,WACA,OACA,gBACA,cACA,gBACA,gBACA,gBACA,cACA,WACA,YACA,eACA,OACA,eACA,UACA,WACA,UACA,QACA,WACA,YACA,eACA,aACA,UACA,UACA,kBACA,oBACA,oBACA,iBACA,mBACA,iBACA,kBACA,uBACA,kBACA,eACA,oBACA,gBACA,gBACA,mBACA,eACA,gBACA,cACA,oBACA,iBACA,oBACA,oBACA,iBACA,gBACA,gBACA,QACA,QACA,WACA,OACA,UACA,UACA,SACA,SACA,cACA,QACA,cACA,YACA,aACA,cACA,aACA,iBACA,oBACA,eACA,WACA,aACA,iBACA,oBACA,WACA,SACJ,ECtHO,IAAMC,GAAN,KACP,CAUI,YAAYC,EACAC,EACAC,EACAC,EACAC,EAAe,OACfC,EAAe,OAC3B,CAII,KAAK,SAAWL,EAAS,IAAIM,IAElB,CACH,KAAMA,EAAE,KACR,QAASA,EAAE,QACX,KAAMA,EAAE,KACR,YAAa,GAAGA,EAAE,KAAK,SAAS,EAAE,SAAS,EAAG,GAAG,CAAC,IAAIA,EAAE,QAAQ,SAAS,EACpE,SACG,EACA,GACJ,CAAC,IAAIA,EAAE,IAAI,EACnB,EACH,EACG,KAAK,SAAS,OAAS,EAEvB,KAAK,MAAQ,GAAG,KAAK,SAAS,CAAC,EAAE,IAAI,IAAI,KAAK,SAAS,CAAC,EAAE,OAAO,GAIjE,KAAK,MAAQ,GAMjB,KAAK,WAAa,SAAS,cAAc,QAAQ,EACjD,KAAK,WAAW,UAAU,IAAI,gBAAgB,EAC9C,KAAK,WAAW,UAAU,IAAI,oBAAoB,EAClDL,EAAO,mBAAmB,KAAK,WAAY,QAASC,EAAkB,eAAgBC,CAAe,EACrG,KAAK,OAASF,EACd,KAAK,WAAaC,EAClB,KAAK,WAAaC,EAElB,KAAK,OAAO,EAEZ,KA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",
  "names": ["require_jszip_min", "__commonJSMin", "exports", "module", "e", "s", "a", "o", "h", "u", "r", "t", "__require", "l", "n", "i", "d", "c", "p", "f", "A", "O", "I", "m", "_", "g", "b", "v", "y", "w", "k", "x", "S", "z", "C", "B", "E", "R", "T", "D", "F", "N", "U", "P", "L", "j", "Z", "W", "M", "H", "G", "K", "Y", "X", "V", "q", "J", "ENABLE_INFO", "ENABLE_WARN", "ENABLE_GROUP", "ENABLE_TABLE", "SpessaSynthLogging", "enableInfo", "enableWarn", "enableGroup", "enableTable", "SpessaSynthInfo", "message", "SpessaSynthWarn", "SpessaSynthGroup", "SpessaSynthGroupCollapsed", "SpessaSynthGroupEnd", "formatTime", "totalSeconds", "minutes", "seconds", "formatTitle", "fileName", "arrayToHexString", "arr", "hexString", "i", "hex", "sanitizeKarLyrics", "eventData", "sanitized", "byte", "consoleColors", "getPriority", "channel", "voice", "priority", "voiceKilling", "amount", "allVoices", "a", "b", "voicesToRemove", "index", "DEFAULT_SYNTH_MODE", "EMBEDDED_SOUND_BANK_ID", "GENERATOR_OVERRIDE_NO_CHANGE_VALUE", "stbvorbis", "isReady", "readySolver", "A", "atob", "I", "g", "B", "E", "Q", "C", "i", "h", "o", "G", "D", "a", "S", "F", "R", "s", "w", "y", "c", "n", "U", "$", "e", "t", "k", "N", "r", "__require", "Y", "J", "_", "II", "f", "H", "L", "M", "AN", "Ae", "d", "q", "K", "l", "u", "b", "X", "m", "Z", "V", "x", "p", "W", "IE", "T", "v", "IA", "A9", "A5", "Ai", "O", "j", "Ag", "P", "Ax", "Ap", "A6", "AV", "z", "AA", "A8", "AI", "A0", "AQ", "AB", "AE", "AC", "Ah", "Ao", "AG", "AD", "Aa", "AS", "AF", "AR", "As", "Aw", "Ay", "Ac", "An", "AU", "A$", "Az", "Ak", "Ar", "AY", "AJ", "Af", "AH", "AL", "AM", "Ad", "Aq", "AK", "Al", "Au", "Ab", "AX", "Am", "AZ", "A7", "A1", "AW", "A_", "AT", "A2", "Av", "AO", "Aj", "AP", "A4", "A3", "Ig", "IB", "timecentLookupTable", "i", "timecents", "timecentsToSeconds", "MIN_ABS_CENT", "MAX_ABS_CENT", "absoluteCentLookupTable", "absoluteCents", "absCentsToHz", "cents", "MIN_DECIBELS", "MAX_DECIBELS", "decibelLookUpTable", "decibels", "decibelAttenuationToGain", "generatorTypes", "GENERATORS_AMOUNT", "MAX_GENERATOR", "generatorLimits", "VOLUME_ENVELOPE_SMOOTHING_FACTOR", "DB_SILENCE", "PERCEIVED_DB_SILENCE", "PERCEIVED_GAIN_SILENCE", "VolumeEnvelope", "_VolumeEnvelope", "sampleRate", "initialDecay", "voice", "decibelAttenuationToGain", "env", "timecentsToSamples", "tc", "timecentsToSeconds", "generatorTypes", "sustainDb", "fullChange", "keyNumAddition", "fraction", "holdExcursion", "elapsed", "releaseFraction", "audioBuffer", "centibelOffset", "smoothingFactor", "decibelOffset", "attenuationSmoothing", "elapsedRelease", "i", "dbDifference", "db", "filledBuffer", "linearAttenuation", "IndexedByteArray", "args", "start", "end", "a", "MIDIMessage", "ticks", "byte", "data", "messageTypes", "getEvent", "statusByte", "status", "channel", "eventChannel", "eventStatus", "midiControllers", "XG_SFX_VOICE", "GM2_DEFAULT_BANK", "getDefaultBank", "sys", "isXGDrums", "bankNr", "isValidXGMSB", "bank", "parseBankSelect", "bankBefore", "system", "isLSB", "isDrums", "channelNumber", "out", "drumsStatus", "isSystemXG", "canSetBankSelect", "SpessaSynthInfo", "consoleColors", "chooseBank", "msb", "lsb", "isXG", "masterParameterType", "setMasterParameter", "type", "value", "pan", "SYNTHESIZER_GAIN", "readBytesAsString", "dataArray", "bytes", "trimEnd", "finished", "string", "i", "byte", "getStringBytes", "addZero", "ensureEven", "len", "arr", "IndexedByteArray", "writeStringAsBytes", "outArray", "padLength", "interpolationTypes", "synthDisplayTypes", "MOD_BYTE_SIZE", "modulatorSources", "modulatorCurveTypes", "getModSourceEnum", "curveType", "polarity", "direction", "isCC", "index", "defaultResonantModSource", "midiControllers", "Modulator", "_Modulator", "sourceIndex", "sourceCurveType", "sourceUsesCC", "sourcePolarity", "sourceDirection", "secSrcIndex", "secSrcCurveType", "secSrcUsesCC", "secSrcPolarity", "secSrcDirection", "destination", "amount", "transformType", "isEffectModulator", "isDefaultResonantModulator", "MAX_GENERATOR", "generatorTypes", "modulator", "mod1", "mod2", "checkAmount", "mod", "getKeyByValue", "object", "value", "key", "sourceString", "secSrcString", "DecodedModulator", "sourceEnum", "secondarySourceEnum", "DEFAULT_ATTENUATION_MOD_AMOUNT", "DEFAULT_ATTENUATION_MOD_CURVE_TYPE", "soundFontModulators", "customModulators", "defaultModulators", "NON_CC_INDEX_OFFSET", "CONTROLLER_TABLE_SIZE", "resetArray", "setResetValue", "i", "v", "midiControllers", "PORTAMENTO_CONTROL_UNSET", "modulatorSources", "customControllers", "CUSTOM_CONTROLLER_TABLE_SIZE", "customResetArray", "dataEntryStates", "channelConfiguration", "getTuning", "byte1", "byte2", "byte3", "midiNote", "fraction", "systemExclusive", "syx", "channelOffset", "type", "niceLogging", "channel", "value", "what", "units", "SpessaSynthInfo", "arrayToHexString", "consoleColors", "notRecognized", "SpessaSynthWarn", "cents", "vol", "pan", "masterParameterType", "tuningValue", "currentMessageIndex", "program", "tuningName", "readBytesAsString", "i", "tuningProgram", "numberOfChanges", "newOctaveTuning", "tuning", "messageValue", "channelObject", "isDrums", "keyShift", "customControllers", "panpot", "midiControllers", "tuningBytes", "newTuning", "centeredValue", "normalizedValue", "normalizedNotCentered", "setupReceivers", "source", "sourceName", "bipolar", "NON_CC_INDEX_OFFSET", "modulatorSources", "generatorTypes", "transpose", "patchName", "text", "synthDisplayTypes", "dotMatrixData", "isSystemXG", "semitones", "textData", "resetAllControllers", "log", "SpessaSynthInfo", "consoleColors", "DEFAULT_SYNTH_MODE", "channelNumber", "ch", "getDefaultBank", "presetBank", "ccNum", "NON_CC_INDEX_OFFSET", "modulatorSources", "val", "msb", "lsb", "i", "resetControllers", "resetArray", "resetValue", "midiControllers", "PORTAMENTO_CONTROL_UNSET", "transpose", "customControllers", "customResetArray", "nonResetableCCs", "resetControllersRP15Compliant", "resetParameters", "dataEntryStates", "SoundFontManager", "presetListChangeCallback", "presetList", "i", "font", "presets", "p", "presetString", "string", "name", "pb", "soundFont", "sf", "EMBEDDED_SOUND_BANK_ID", "id", "SpessaSynthWarn", "index", "s", "SpessaSynthInfo", "bankOffset", "soundfont", "newList", "a", "b", "bankNumber", "programNumber", "allowXGDrums", "isDrum", "isXGDrums", "preset", "KeyModifier", "velocity", "bank", "program", "gain", "KeyModifierManager", "channel", "midiNote", "mapping", "mappings", "modifier", "FILTER_SMOOTHING_FACTOR", "LowpassFilter", "_LowpassFilter", "sampleRate", "voice", "outputBuffer", "fcExcursion", "smoothingFactor", "initialFc", "generatorTypes", "filter", "targetCutoff", "modulatedResonance", "i", "input", "filtered", "cutoffCents", "qCb", "cached", "cutoffHz", "absCentsToHz", "qDb", "resonanceGain", "decibelAttenuationToGain", "qGain", "w", "cosw", "alpha", "b1", "b0", "b2", "a0", "a1", "a2", "toCache", "dummy", "MOD_PRECOMPUTED_LENGTH", "concave", "convex", "i", "x", "getModulatorCurveValue", "direction", "curveType", "value", "polarity", "modulatorCurveTypes", "MODENV_PEAK", "CONVEX_ATTACK", "i", "getModulatorCurveValue", "modulatorCurveTypes", "ModulationEnvelope", "_ModulationEnvelope", "voice", "env", "generatorTypes", "timecentsToSeconds", "decayKeyExcursionCents", "decayTime", "holdKeyExcursionCents", "releaseTime", "currentTime", "ignoreRelease", "GEN_BYTE_SIZE", "Generator", "generatorTypes", "type", "value", "validate", "lim", "generatorLimits", "addAndClampGenerator", "generatorType", "presetGens", "instrumentGens", "limits", "presetGen", "g", "presetValue", "instruGen", "instruValue", "EXCLUSIVE_CUTOFF_TIME", "EXCLUSIVE_MOD_CUTOFF_TIME", "AudioSample", "data", "playbackStep", "cursorStart", "rootKey", "loopStart", "loopEnd", "endIndex", "loopingMode", "Voice", "_Voice", "ModulationEnvelope", "sampleRate", "audioSample", "midiNote", "velocity", "currentTime", "targetKey", "realKey", "generators", "modulators", "generatorTypes", "LowpassFilter", "VolumeEnvelope", "voice", "sampleToCopy", "sample", "m", "Modulator", "MIN_EXCLUSIVE_LENGTH", "minNoteLength", "MIN_NOTE_LENGTH", "getVoicesForPreset", "preset", "bank", "program", "voices", "sampleAndGenerators", "SpessaSynthWarn", "GENERATORS_AMOUNT", "i", "addAndClampGenerator", "v", "getVoices", "channel", "channelObject", "overridePatch", "override", "cached", "PAN_SMOOTHING_FACTOR", "REVERB_DIVIDER", "CHORUS_DIVIDER", "HALF_PI", "MIN_PAN", "MAX_PAN", "PAN_RESOLUTION", "panTableLeft", "panTableRight", "pan", "realPan", "tableIndex", "panAndMixVoice", "voice", "inputBuffer", "outputLeft", "outputRight", "reverbLeft", "reverbRight", "chorusLeft", "chorusRight", "startIndex", "generatorTypes", "gain", "index", "gainLeft", "gainRight", "reverbSend", "reverbGain", "i", "idx", "chorusSend", "chorusGain", "chorusLeftGain", "chorusRightGain", "stopAllChannels", "force", "SpessaSynthInfo", "consoleColors", "i", "readLittleEndian", "dataArray", "bytesAmount", "out", "writeLittleEndian", "number", "byteTarget", "writeWord", "word", "writeDword", "dword", "signedInt16", "byte1", "byte2", "val", "signedInt8", "byte", "RiffChunk", "header", "size", "data", "readRIFFChunk", "dataArray", "readData", "forceShift", "readBytesAsString", "readLittleEndian", "chunkData", "writeRIFFChunkRaw", "addZeroByte", "isList", "dataStartOffset", "headerWritten", "dataLength", "writtenSize", "finalSize", "outArray", "IndexedByteArray", "writeStringAsBytes", "writeDword", "writeRIFFChunkParts", "chunks", "dataOffset", "len", "c", "findRIFFListType", "collection", "type", "getIGEN", "igenSize", "GEN_BYTE_SIZE", "inst", "sum", "z", "g", "generatorTypes", "Generator", "igenData", "IndexedByteArray", "writeZone", "gen", "writeWord", "instrument", "instrumentZone", "writeDword", "xigenData", "igen", "writeRIFFChunkRaw", "xigen", "SDTA_TO_DATA_OFFSET", "getSDTA", "smplStartOffsets", "smplEndOffsets", "compress", "decompress", "vorbisFunc", "progressFunc", "writtenCount", "smplChunkSize", "sampleDatas", "s", "r", "SpessaSynthInfo", "consoleColors", "sdta", "IndexedByteArray", "writeStringAsBytes", "writeLittleEndian", "offset", "sample", "i", "data", "startOffset", "endOffset", "RESAMPLE_RATE", "sampleTypes", "BasicSample", "sampleName", "sampleRate", "samplePitch", "samplePitchCorrection", "sampleType", "loopStart", "loopEnd", "allowVorbis", "newSampleRate", "audioData", "ratio", "resampled", "i", "encodeVorbis", "compressed", "e", "SpessaSynthWarn", "type", "sample", "instrument", "index", "decoded", "stbvorbis", "data", "data16", "len", "IndexedByteArray", "SF3_BIT_FLIT", "SoundFontSample", "BasicSample", "sampleName", "sampleStartIndex", "sampleEndIndex", "sampleLoopStartIndex", "sampleLoopEndIndex", "sampleRate", "samplePitch", "samplePitchCorrection", "linkedSampleIndex", "sampleType", "sampleDataArray", "sampleIndex", "compressed", "smplStart", "samplesArray", "linked", "SpessaSynthInfo", "consoleColors", "audioData", "byteLength", "SpessaSynthWarn", "convertedSigned16", "i", "allowVorbis", "readSamples", "sampleHeadersChunk", "smplChunkData", "linkSamples", "samples", "index", "sample", "readSample", "s", "sampleHeaderData", "smplArrayData", "readBytesAsString", "readLittleEndian", "signedInt8", "sampleLink", "getSHDR", "smplStartOffsets", "smplEndOffsets", "shdrSize", "shdrData", "IndexedByteArray", "xshdrData", "maxSampleLink", "sample", "index", "writeStringAsBytes", "dwStart", "writeDword", "dwEnd", "loopStart", "loopEnd", "sampleLinkIndex", "writeWord", "type", "SF3_BIT_FLIT", "shdr", "writeRIFFChunkRaw", "xshdr", "getIMOD", "imodSize", "MOD_BYTE_SIZE", "inst", "sum", "z", "imodData", "IndexedByteArray", "writeZone", "mod", "writeWord", "instrumentZone", "writeLittleEndian", "ximodData", "imod", "writeRIFFChunkRaw", "ximod", "BAG_SIZE", "getIBAG", "ibagSize", "sum", "i", "ibagData", "IndexedByteArray", "xibagData", "generatorIndex", "modulatorIndex", "writeZone", "z", "writeWord", "inst", "ibag", "writeRIFFChunkRaw", "xibag", "INST_SIZE", "getINST", "instSize", "instData", "IndexedByteArray", "xinstData", "instrumentStart", "inst", "writeStringAsBytes", "writeWord", "writeRIFFChunkRaw", "xinst", "getPGEN", "pgenSize", "GEN_BYTE_SIZE", "preset", "size", "z", "g", "generatorTypes", "Generator", "pgenData", "IndexedByteArray", "writeZone", "gen", "writeWord", "zone", "writeDword", "xpgenData", "pgen", "writeRIFFChunkRaw", "xpgen", "getPMOD", "pmodSize", "MOD_BYTE_SIZE", "preset", "sum", "z", "pmodData", "IndexedByteArray", "writeZone", "mod", "writeWord", "zone", "writeLittleEndian", "xpmodData", "pmod", "writeRIFFChunkRaw", "xpmod", "BAG_SIZE", "getPBAG", "pbagSize", "sum", "i", "pbagData", "IndexedByteArray", "xpbagData", "generatorIndex", "modulatorIndex", "writeZone", "z", "writeWord", "preset", "pbag", "writeRIFFChunkRaw", "xbag", "PHDR_SIZE", "getPHDR", "phdrSize", "phdrData", "IndexedByteArray", "xphdrData", "presetStart", "preset", "writeStringAsBytes", "writeWord", "writeDword", "phdr", "writeRIFFChunkRaw", "xphdr", "fillWithDefaults", "obj", "defObj", "key", "DEFAULT_WRITE_OPTIONS", "write", "options", "fillWithDefaults", "SpessaSynthGroupCollapsed", "consoleColors", "SpessaSynthInfo", "infoArrays", "s", "type", "data", "major", "minor", "ckdata", "IndexedByteArray", "writeWord", "writeRIFFChunkRaw", "mods", "dmodsize", "MOD_BYTE_SIZE", "dmoddata", "mod", "writeLittleEndian", "getStringBytes", "smplStartOffsets", "smplEndOffsets", "sdtaChunk", "getSDTA", "shdrChunk", "getSHDR", "igenChunk", "getIGEN", "imodChunk", "getIMOD", "ibagChunk", "getIBAG", "instChunk", "getINST", "pgenChunk", "getPGEN", "pmodChunk", "getPMOD", "pbagChunk", "getPBAG", "chunks", "getPHDR", "pdtaChunk", "writeRIFFChunkParts", "c", "maxIndex", "p", "i", "xpdtaChunk", "infoChunk", "main", "SpessaSynthGroupEnd", "BasicZone", "generator", "type", "value", "generatorTypes", "g", "Generator", "generators", "modulators", "generatorType", "notFoundValue", "zone", "m", "Modulator", "BasicGlobalZone", "BasicZone", "BasicInstrumentZone", "BasicZone", "instrument", "sample", "BasicInstrument", "BasicGlobalZone", "zone", "BasicInstrumentZone", "preset", "z", "index", "SpessaSynthWarn", "stays", "p", "force", "notGlobalizedTypes", "generatorTypes", "combineZones", "preset", "globalize", "addUnique", "main", "adder", "g", "mg", "subtractRanges", "r1", "r2", "addUniqueMods", "m", "mm", "Modulator", "outputInstrument", "BasicInstrument", "globalPresetGenerators", "globalPresetModulators", "globalPresetZone", "globalPresetKeyRange", "globalPresetVelRange", "presetZone", "presetZoneKeyRange", "presetZoneVelRange", "presetGenerators", "Generator", "presetModulators", "instrument", "iZones", "globalInstGenerators", "globalInstModulators", "globalInstZone", "globalInstKeyRange", "globalInstVelRange", "instZone", "instZoneKeyRange", "instZoneVelRange", "instGenerators", "instModulators", "finalModList", "mod", "identicalInstMod", "finalGenList", "gen", "identicalInstGen", "newAmount", "generatorLimits", "zone", "globalZone", "checkedType", "occurencesForValues", "defaultForChecked", "z", "value", "relativeCounterpart", "valueToGlobalize", "max", "curr", "targetValue", "modulators", "checkedModulator", "existsForAllZones", "modulator", "WSMP_SIZE", "writeWavesample", "sample", "rootKey", "tuning", "attenuationCentibels", "loopStart", "loopEnd", "loopingMode", "loopCount", "wsmpData", "IndexedByteArray", "writeDword", "writeWord", "attenuationCb", "lGain", "loopSize", "ulLoopType", "writeRIFFChunkRaw", "DLSSources", "DEFAULT_DLS_REVERB", "DecodedModulator", "generatorTypes", "DEFAULT_DLS_CHORUS", "DLS_1_NO_VIBRATO_MOD", "DLS_1_NO_VIBRATO_PRESSURE", "DLSDestinations", "Articulator", "source", "control", "destination", "scale", "transform", "out", "IndexedByteArray", "writeWord", "writeDword", "getDLSSourceFromSf2Source", "cc", "index", "midiControllers", "DLSSources", "modulatorSources", "getDLSDestinationFromSf2", "dest", "amount", "generatorTypes", "DLSDestinations", "checkSF2SpecialCombos", "amt", "getDLSArticulatorFromSf2Generator", "gen", "destination", "source", "combo", "SpessaSynthWarn", "Articulator", "getDLSArticulatorFromSf2Modulator", "mod", "sourceTransformType", "sourceBipolar", "sourceDirection", "control", "controlTransformType", "controlBipolar", "controlDirection", "dlsDestinationFromSf2", "specialCombo", "modulatorCurveTypes", "transform", "invalidGeneratorTypes", "generatorTypes", "writeArticulator", "zone", "i", "g", "Generator", "relativeGenerator", "absoluteCounterpart", "absoluteGenerator", "dlsRelative", "subtraction", "newAbsolute", "iR", "iA", "generators", "arrs", "art", "getDLSArticulatorFromSf2Generator", "SpessaSynthInfo", "consoleColors", "SpessaSynthWarn", "modulators", "m", "Modulator", "DEFAULT_DLS_CHORUS", "DEFAULT_DLS_REVERB", "DLS_1_NO_VIBRATO_MOD", "DLS_1_NO_VIBRATO_PRESSURE", "getDLSArticulatorFromSf2Modulator", "art2Data", "IndexedByteArray", "writeDword", "out", "a", "writeRIFFChunkParts", "writeDLSRegion", "zone", "globalZone", "rgnhData", "IndexedByteArray", "writeWord", "exclusive", "generatorTypes", "rgnh", "writeRIFFChunkRaw", "rootKey", "wsmp", "writeWavesample", "wlnkData", "writeDword", "wlnk", "lar2", "art2", "writeArticulator", "writeRIFFChunkParts", "writeIns", "preset", "SpessaSynthGroupCollapsed", "consoleColors", "inst", "combineZones", "global", "zones", "inshData", "IndexedByteArray", "writeDword", "ulBank", "insh", "writeRIFFChunkRaw", "art2", "writeArticulator", "lar2", "lrgn", "writeRIFFChunkParts", "arrs", "z", "writeDLSRegion", "inam", "getStringBytes", "info", "SpessaSynthGroupEnd", "writeLins", "writeRIFFChunkParts", "p", "writeIns", "writeDLSSample", "sample", "fmtData", "IndexedByteArray", "writeWord", "writeDword", "fmt", "writeRIFFChunkRaw", "loop", "wsmp", "writeWavesample", "data", "inam", "getStringBytes", "info", "SpessaSynthInfo", "consoleColors", "writeRIFFChunkParts", "writeWavePool", "progressFunction", "currentIndex", "offsets", "samples", "written", "s", "out", "writeDLSSample", "writeRIFFChunkParts", "DEFAULT_DLS_OPTIONS", "writeDLS", "options", "fillWithDefaults", "SpessaSynthGroupCollapsed", "consoleColors", "colhNum", "IndexedByteArray", "writeDword", "colh", "writeRIFFChunkRaw", "lins", "writeLins", "SpessaSynthInfo", "SpessaSynthGroupEnd", "wavepool", "writeWavePool", "wvpl", "ptblOffsets", "ptblData", "offset", "ptbl", "infos", "info", "data", "getStringBytes", "writeRIFFChunkParts", "BasicPresetZone", "BasicZone", "preset", "instrument", "BasicPreset", "BasicGlobalZone", "parentSoundBank", "allowXG", "allowSFX", "xg", "isXGDrums", "z", "index", "BasicPresetZone", "keyMin", "keyMax", "key", "velocity", "samandgen", "midiNote", "isInRange", "range", "number", "addUnique", "main", "adder", "g", "mg", "addUniqueMods", "m", "mm", "Modulator", "parsedGeneratorsAndSamples", "globalPresetGenerators", "globalPresetModulators", "globalKeyRange", "globalVelRange", "currentZone", "presetZone", "instrument", "presetGenerators", "presetModulators", "globalInstrumentGenerators", "globalInstrumentModulators", "instrumentZone", "instrumentGenerators", "instrumentModulators", "finalModulatorList", "i", "mod", "identicalInstrumentModulator", "BasicSoundBank", "_BasicSoundBank", "stbvorbis", "defaultModulators", "m", "Modulator", "data", "instrumentList", "preset", "zone", "sampleList", "instrument", "soundfonts", "mainSf", "presets", "newPreset", "existingPreset", "font", "sample", "BasicSample", "sampleTypes", "sampleData", "i", "gZone", "BasicGlobalZone", "Generator", "generatorTypes", "inst", "BasicInstrument", "zone2", "BasicPreset", "instruments", "samples", "duplicate", "newSample", "clonedLinked", "newInstrument", "copiedZone", "p", "a", "b", "allowedPrograms", "isXGDrums", "SpessaSynthInfo", "consoleColors", "mid", "soundfont", "trimInstrumentZones", "combos", "trimmedIZones", "iZoneIndex", "iZone", "iKeyRange", "iVelRange", "isIZoneUsed", "iCombo", "SpessaSynthGroup", "usedProgramsAndKeys", "SpessaSynthGroupCollapsed", "presetIndex", "string", "used", "s", "split", "trimmedZones", "zoneIndex", "keyRange", "velRange", "isZoneUsed", "combo", "SpessaSynthGroupEnd", "deletable", "bankNr", "programNr", "allowXGDrums", "isDrum", "isDrums", "SpessaSynthWarn", "presetName", "error", "write", "writeDLS", "readDLSInstrumentList", "instrumentListChunk", "SpessaSynthGroupCollapsed", "consoleColors", "i", "readRIFFChunk", "SpessaSynthGroupEnd", "DLSZone", "BasicInstrumentZone", "inst", "attenuationCb", "loopingMode", "loop", "sampleKey", "sample", "sampleID", "samplePitchCorrection", "Generator", "generatorTypes", "coarseTune", "fineTune", "diffStart", "diffEnd", "fine", "coarse", "DLSInstrument", "BasicInstrument", "z", "DLSZone", "DLSPreset", "BasicPreset", "DLSInstrument", "dls", "ulBank", "ulInstrument", "bankMSB", "bankLSB", "readRegion", "chunk", "instrument", "regionChunks", "readRIFFChunk", "regionHeader", "c", "SpessaSynthWarn", "keyMin", "readLittleEndian", "keyMax", "velMin", "velMax", "zone", "exclusive", "Generator", "generatorTypes", "lart", "findRIFFListType", "lar2", "waveSampleChunk", "originalKey", "pitchCorrection", "signedInt16", "dbCorrection", "loopsAmount", "loopingMode", "loop", "loopLength", "waveLinkChunk", "sampleID", "sample", "attenuation", "readDLSInstrument", "chunk", "readBytesAsString", "chunks", "readRIFFChunk", "instrumentHeader", "c", "SpessaSynthGroupEnd", "regions", "readLittleEndian", "ulBank", "ulInstrument", "preset", "DLSPreset", "presetName", "infoChunk", "findRIFFListType", "info", "SpessaSynthGroupCollapsed", "consoleColors", "regionListChunk", "globalZone", "globalLart", "globalLar2", "g", "generatorLimits", "m", "generatorTypes", "Modulator", "DEFAULT_DLS_REVERB", "DEFAULT_DLS_CHORUS", "i", "type", "readRegion", "getSF2SourceFromDLS", "source", "sourceEnum", "isCC", "DLSSources", "modulatorSources", "midiControllers", "getSF2GeneratorFromDLS", "destination", "amount", "DLSDestinations", "generatorTypes", "checkForSpecialDLSCombo", "getSF2ModulatorFromArticulator", "source", "control", "destination", "transform", "value", "specialDestination", "checkForSpecialDLSCombo", "destinationGenerator", "sf2Source", "swapSources", "isSourceNoController", "newValue", "sf2GenDestination", "getSF2GeneratorFromDLS", "SpessaSynthWarn", "getSF2SourceFromDLS", "modulatorSources", "sf2SecondSource", "sourceEnumFinal", "outputTransform", "sourceTransform", "modulatorCurveTypes", "sourceIsBipolar", "sourceIsNegative", "generatorTypes", "getModSourceEnum", "secSourceTransform", "secSourceIsBipolar", "secSourceIsNegative", "secSourceEnumFinal", "temp", "DecodedModulator", "readArticulation", "chunk", "disableVibrato", "artData", "generators", "modulators", "readLittleEndian", "connectionsAmount", "i", "source", "control", "destination", "transform", "value", "generator", "DLSDestinations", "Generator", "generatorTypes", "sustainCb", "percentageSustain", "semi", "cents", "isGenerator", "applyKeyToCorrection", "keyToGen", "realGen", "keyToGenValue", "correction", "g", "DLSSources", "mod", "getSF2ModulatorFromArticulator", "SpessaSynthInfo", "consoleColors", "SpessaSynthWarn", "Modulator", "DLS_1_NO_VIBRATO_MOD", "DLS_1_NO_VIBRATO_PRESSURE", "readLart", "lartChunk", "lar2Chunk", "zone", "art1", "readRIFFChunk", "modsAndGens", "readArticulation", "art2", "W_FORMAT_TAG", "readPCM", "data", "bytesPerSample", "maxSampleValue", "maxUnsigned", "normalizationFactor", "isUnsigned", "sampleLength", "sampleData", "s16", "i", "sample", "readLittleEndian", "readALAW", "input", "exponent", "mantissa", "s16sample", "DLSSample", "BasicSample", "name", "rate", "pitch", "pitchCorrection", "loopStart", "loopEnd", "sampleDbAttenuation", "dataChunk", "wFormatTag", "sampleTypes", "SpessaSynthWarn", "audioData", "allowVorbis", "readDLSSamples", "waveListChunk", "SpessaSynthGroupCollapsed", "consoleColors", "sampleID", "waveChunk", "readRIFFChunk", "readBytesAsString", "waveChunks", "fmtChunk", "c", "wFormatTag", "readLittleEndian", "channelsAmount", "sampleRate", "bytesPerSample", "dataChunk", "waveInfo", "findRIFFListType", "sampleName", "infoChunk", "sampleKey", "samplePitch", "sampleLoopStart", "sampleLoopEnd", "sampleDbAttenuation", "wsmpChunk", "signedInt16", "samplePitchSemitones", "loopSize", "SpessaSynthWarn", "DLSSample", "SpessaSynthInfo", "SpessaSynthGroupEnd", "DLSSoundFont", "BasicSoundBank", "buffer", "IndexedByteArray", "SpessaSynthGroup", "consoleColors", "SpessaSynthGroupEnd", "firstChunk", "readRIFFChunk", "readBytesAsString", "chunks", "infoChunk", "findRIFFListType", "infoPart", "info", "value", "SpessaSynthInfo", "colhChunk", "c", "readLittleEndian", "waveListChunk", "instrumentListChunk", "chunk", "expected", "expect", "text", "error", "readDLSInstrumentList", "readDLSInstrument", "readLart", "readDLSSamples", "ReadGenerator", "Generator", "dataArray", "i", "signedInt16", "readGenerators", "generatorChunk", "gens", "PresetZone", "BasicPresetZone", "preset", "instruments", "instrumentID", "g", "generatorTypes", "applyPresetZones", "indexes", "presetGens", "presetMods", "presets", "genStartIndexes", "modStartIndexes", "modIndex", "genIndex", "i", "gensStart", "gensEnd", "gens", "modsStart", "modsEnd", "mods", "zone", "Preset", "BasicPreset", "presetChunk", "sf2", "readBytesAsString", "readLittleEndian", "z", "PresetZone", "readPresets", "parent", "presets", "preset", "previous", "InstrumentZone", "BasicInstrumentZone", "inst", "samples", "sampleID", "g", "generatorTypes", "applyInstrumentZones", "indexes", "instrumentGenerators", "instrumentModulators", "instruments", "genStartIndexes", "modStartIndexes", "modIndex", "genIndex", "instrument", "i", "gensStart", "gensEnd", "gens", "modsStart", "modsEnd", "mods", "zone", "Instrument", "BasicInstrument", "instrumentChunk", "readBytesAsString", "readLittleEndian", "z", "InstrumentZone", "readInstruments", "instruments", "instrument", "previous", "readModulators", "modulatorChunk", "mods", "dataArray", "sourceEnum", "readLittleEndian", "destination", "amount", "signedInt16", "secondarySourceEnum", "transformType", "DecodedModulator", "readZoneIndexes", "zonesChunk", "modStartIndexes", "genStartIndexes", "readLittleEndian", "SoundFont2", "BasicSoundBank", "arrayBuffer", "warnDeprecated", "mainFileArray", "IndexedByteArray", "SpessaSynthGroup", "consoleColors", "SpessaSynthGroupEnd", "firstChunk", "readRIFFChunk", "type", "readBytesAsString", "isSF2Pack", "infoChunk", "infoString", "xdtaChunk", "chunk", "text", "readLittleEndian", "newModulators", "readModulators", "SpessaSynthInfo", "isExtended", "xChunks", "sdtaChunk", "sampleDataChunk", "sampleData", "stbvorbis", "e", "presetChunk", "phdrChunk", "pbagChunk", "pmodChunk", "pgenChunk", "instChunk", "ibagChunk", "imodChunk", "igenChunk", "shdrChunk", "samples", "readSamples", "xSamples", "s", "i", "instrumentGenerators", "readGenerators", "instrumentModulators", "instruments", "readInstruments", "xInst", "inst", "ibagIndexes", "readZoneIndexes", "extraIndexes", "applyInstrumentZones", "presetGenerators", "presetModulators", "presets", "readPresets", "xPreset", "pres", "preset", "p", "pbagIndexes", "applyPresetZones", "expected", "loadSoundFont", "buffer", "check", "a", "IndexedByteArray", "readBytesAsString", "DLSSoundFont", "SoundFont2", "clearEmbeddedBank", "s", "EMBEDDED_SOUND_BANK_ID", "setEmbeddedSoundFont", "font", "offset", "loadedFont", "loadSoundFont", "order", "SpessaSynthInfo", "consoleColors", "updatePresetList", "mainFont", "c", "transposeAllChannels", "semitones", "force", "i", "setMasterTuning", "cents", "i", "customControllers", "ChannelSnapshot", "_ChannelSnapshot", "spessaSynthProcessor", "channelNumber", "channelObject", "channelSnapshot", "SynthesizerSnapshot", "_SynthesizerSnapshot", "spessaSynthProcessor", "snapshot", "_", "i", "ChannelSnapshot", "masterParameterType", "channelSnapshot", "index", "SpessaSynthInfo", "consoleColors", "applySynthesizerSnapshot", "snapshot", "SynthesizerSnapshot", "SpessaSynthInfo", "consoleColors", "getLFOValue", "startTime", "frequency", "currentTime", "xVal", "WavetableOscillator", "_WavetableOscillator", "voice", "outputBuffer", "interpolation", "step", "interpolationTypes", "sample", "cur", "sampleData", "loopLength", "i", "floor", "ceil", "fraction", "upper", "lower", "y0", "y1", "y2", "y3", "t", "xm1", "x0", "x1", "x2", "c", "v", "a", "b", "w", "renderVoice", "voice", "timeNow", "outputLeft", "outputRight", "reverbOutputLeft", "reverbOutputRight", "chorusOutputLeft", "chorusOutputRight", "startIndex", "sampleCount", "VolumeEnvelope", "ModulationEnvelope", "generatorTypes", "targetKey", "cents", "semitones", "tuning", "elapsed", "diff", "lowpassExcursion", "volumeExcursionCentibels", "vibPitchDepth", "vibVolDepth", "vibFilterDepth", "vibStart", "timecentsToSeconds", "vibFreqHz", "absCentsToHz", "vibLfoValue", "getLFOValue", "customControllers", "modPitchDepth", "modVolDepth", "modFilterDepth", "modStart", "modFreqHz", "modLfoValue", "channelVibrato", "modEnvPitchDepth", "modEnvFilterDepth", "modEnv", "centsTotal", "bufferOut", "WavetableOscillator", "LowpassFilter", "killNote", "midiNote", "releaseTime", "customControllers", "v", "generatorTypes", "setTuning", "cents", "log", "customControllers", "SpessaSynthInfo", "consoleColors", "setModulationDepth", "cents", "SpessaSynthInfo", "consoleColors", "customControllers", "registeredParameterTypes", "nonRegisteredMSB", "nonRegisteredGSLSB", "dataEntryCoarse", "dataValue", "midiControllers", "addDefaultVibrato", "coolInfo", "what", "value", "type", "SpessaSynthInfo", "consoleColors", "dataEntryStates", "NRPNCoarse", "NRPNFine", "dataEntryFine", "SpessaSynthWarn", "gen", "customControllers", "offset", "rpnValue", "NON_CC_INDEX_OFFSET", "modulatorSources", "semitones", "AWE_NRPN_GENERATOR_MAPPINGS", "generatorTypes", "handleAWE32NRPN", "aweGen", "dataLSB", "dataMSB", "clip", "v", "min", "max", "msecToTimecents", "ms", "hzToCents", "hz", "dataValue", "generator", "SpessaSynthWarn", "consoleColors", "milliseconds", "hertz", "centibels", "cents", "fcCents", "dataEntryFine", "dataValue", "midiControllers", "dataEntryStates", "registeredParameterTypes", "NON_CC_INDEX_OFFSET", "modulatorSources", "actualTune", "SpessaSynthInfo", "consoleColors", "finalTuning", "customControllers", "cents", "NRPNCoarse", "NRPNFine", "nonRegisteredMSB", "SpessaSynthWarn", "handleAWE32NRPN", "controllerChange", "controllerNumber", "controllerValue", "force", "channelConfiguration", "midiControllers", "actualCCNum", "v", "dataEntryStates", "customControllers", "nonRegisteredMSB", "stopAllNotes", "force", "v", "muteChannel", "isMuted", "transposeChannel", "semitones", "force", "keyShift", "currentTranspose", "customControllers", "midiControllers", "portamentoLookup", "getLookup", "value", "lower", "upper", "key", "lowerTime", "upperTime", "portamentoTimeToSeconds", "time", "distance", "noteOn", "midiNote", "velocity", "SpessaSynthWarn", "realKey", "customControllers", "internalMidiNote", "program", "tune", "keyVel", "voiceGain", "portamentoFromKey", "portamentoDuration", "portamentoTime", "midiControllers", "control", "currentFromKey", "diff", "portamentoTimeToSeconds", "voices", "panOverride", "channelVoices", "voice", "m", "mod", "existingModIndex", "voiceMod", "Modulator", "overrideValue", "generatorType", "GENERATOR_OVERRIDE_NO_CHANGE_VALUE", "exclusive", "v", "cursorStartOffset", "generatorTypes", "endOffset", "loopStartOffset", "loopEndOffset", "sm", "clamp", "num", "temp", "noteOff", "midiNote", "SpessaSynthWarn", "realKey", "customControllers", "v", "polyPressure", "midiNote", "pressure", "v", "modulatorSources", "channelPressure", "pressure", "NON_CC_INDEX_OFFSET", "modulatorSources", "v", "pitchWheel", "MSB", "LSB", "NON_CC_INDEX_OFFSET", "modulatorSources", "bend", "v", "setOctaveTuning", "tuning", "i", "programChange", "programNumber", "bank", "isXG", "p", "preset", "SpessaSynthWarn", "BasicPreset", "DynamicModulatorSystem", "source", "destination", "isBipolar", "isNegative", "id", "m", "amount", "mod", "srcNum", "isCC", "NON_CC_INDEX_OFFSET", "modulator", "Modulator", "modulatorCurveTypes", "modulatorSources", "EFFECT_MODULATOR_TRANSFORM_MULTIPLIER", "computeModulator", "controllerTable", "modulator", "voice", "rawSourceValue", "index", "NON_CC_INDEX_OFFSET", "modulatorSources", "sourceValue", "transforms", "rawSecondSrcValue", "secondSrcValue", "transformAmount", "computedValue", "computeModulators", "sourceUsesCC", "sourceIndex", "modulators", "generators", "i", "modulatedGenerators", "mod", "gen", "limit", "generatorLimits", "VolumeEnvelope", "ModulationEnvelope", "volenvNeedsRecalculation", "generatorTypes", "computedDestinations", "destination", "m", "limits", "dest", "curve", "MOD_PRECOMPUTED_LENGTH", "getModulatorCurveValue", "MidiAudioChannel", "CONTROLLER_TABLE_SIZE", "CUSTOM_CONTROLLER_TABLE_SIZE", "DynamicModulatorSystem", "GENERATORS_AMOUNT", "dataEntryStates", "synth", "preset", "channelNumber", "isSystemXG", "type", "value", "customControllers", "outputLeft", "outputRight", "reverbOutputLeft", "reverbOutputRight", "chorusOutputLeft", "chorusOutputRight", "startIndex", "sampleCount", "v", "locked", "bank", "isLSB", "parseBankSelect", "chooseBank", "isDrum", "depth", "rate", "delay", "data", "NON_CC_INDEX_OFFSET", "modulatorSources", "GENERATOR_OVERRIDE_NO_CHANGE_VALUE", "gen", "realtime", "generatorLimits", "renderVoice", "panAndMixVoice", "killNote", "stopAllNotes", "muteChannel", "computeModulators", "noteOn", "noteOff", "polyPressure", "channelPressure", "pitchWheel", "programChange", "setTuning", "setOctaveTuning", "setModulationDepth", "transposeChannel", "controllerChange", "resetControllers", "resetControllersRP15Compliant", "resetParameters", "dataEntryFine", "dataEntryCoarse", "createMidiChannel", "sendEvent", "channel", "MidiAudioChannel", "DEFAULT_SYNTH_OPTIONS", "DEFAULT_SYNTH_METHOD_OPTIONS", "MIN_NOTE_LENGTH", "MIN_EXCLUSIVE_LENGTH", "SYNTHESIZER_GAIN", "SpessaSynthProcessor", "SoundFontManager", "interpolationTypes", "KeyModifierManager", "DEFAULT_SYNTH_MODE", "stbvorbis", "sampleRate", "options", "DEFAULT_SYNTH_OPTIONS", "fillWithDefaults", "VOLUME_ENVELOPE_SMOOTHING_FACTOR", "PAN_SMOOTHING_FACTOR", "FILTER_SMOOTHING_FACTOR", "SpessaSynthInfo", "consoleColors", "sys", "value", "masterParameterType", "bank", "program", "midiNote", "velocity", "voices", "outputs", "reverb", "chorus", "startIndex", "sampleCount", "reverbChannels", "chorusChannels", "separateChannels", "time", "revL", "revR", "chrL", "chrR", "quantumSize", "channel", "index", "voiceCount", "ch", "c", "controllerNumber", "controllerValue", "force", "pressure", "MSB", "LSB", "programNumber", "message", "channelOffset", "call", "statusByteData", "getEvent", "messageTypes", "IndexedByteArray", "e1", "e2", "volume", "eventName", "eventData", "isSystemXG", "voiceKilling", "getVoicesForPreset", "getVoices", "systemExclusive", "stopAllChannels", "createMidiChannel", "resetAllControllers", "setMasterParameter", "transposeAllChannels", "setMasterTuning", "clearEmbeddedBank", "setEmbeddedSoundFont", "updatePresetList", "applySynthesizerSnapshot", "readBytesAsUintBigEndian", "dataArray", "bytesAmount", "out", "writeBytesAsUintBigEndian", "number", "bytes", "_processEvent", "event", "trackIndex", "statusByteData", "getEvent", "offset", "messageTypes", "velocity", "toDelete", "n", "tempoBPM", "readBytesAsUintBigEndian", "SpessaSynthWarn", "k", "consoleColors", "_addNewMidiPort", "i", "processTick", "current", "trackIndex", "event", "eventNext", "canLoop", "_findFirstEventIndex", "index", "ticks", "track", "MIDISequenceData", "ticks", "totalSeconds", "tempo", "v", "timeSinceLastTempo", "sequence", "arr", "set", "key", "value", "IndexedByteArray", "readVariableLengthQuantity", "MIDIbyteArray", "out", "byte", "writeVariableLengthQuantity", "number", "bytes", "writeMIDI", "midi", "binaryTrackData", "track", "binaryTrack", "currentTick", "runningByte", "event", "deltaTicks", "messageData", "messageTypes", "writeVariableLengthQuantity", "writeText", "text", "arr", "i", "binaryData", "writeBytesAsUintBigEndian", "isXGOn", "e", "isGSDrumsOn", "isGSOn", "isGMOn", "isGM2On", "getGsOn", "ticks", "MIDIMessage", "messageTypes", "IndexedByteArray", "getControllerChange", "channel", "cc", "value", "getDrumChange", "chanAddress", "sysexData", "checksum", "modifyMIDI", "desiredProgramChanges", "desiredControllerChanges", "desiredChannelsToClear", "desiredChannelsToTranspose", "midi", "SpessaSynthGroupCollapsed", "consoleColors", "SpessaSynthInfo", "channelsToChangeProgram", "c", "system", "addedGs", "eventIndexes", "remainingTracks", "findFirstEventIndex", "index", "track", "i", "midiPorts", "midiPortChannelOffsets", "midiPortChannelOffset", "assignMIDIPort", "trackNum", "port", "trackIndex", "channelsAmount", "isFirstNoteOn", "coarseTranspose", "fineTranspose", "transpose", "coarse", "fine", "e", "deleteThisEvent", "addEventBefore", "offset", "portOffset", "status", "midiChannel", "change", "ccChange", "fineTune", "centsCoarse", "rpnCoarse", "midiControllers", "rpnFine", "dataEntryCoarse", "dataEntryFine", "desiredBank", "desiredProgram", "programChange", "addBank", "isLSB", "v", "bankChange", "isSystemXG", "isXGDrums", "XG_SFX_VOICE", "ccNum", "isXGOn", "isGSOn", "isGMOn", "isGM2On", "SpessaSynthGroupEnd", "applySnapshotToMIDI", "snapshot", "channelsToTranspose", "channelsToClear", "programChanges", "controllerChanges", "channelNumber", "transposeFloat", "customControllers", "l", "ccNumber", "targetValue", "RMIDINFOChunks", "FORCED_ENCODING", "DEFAULT_COPYRIGHT", "writeRMIDI", "soundfontBinary", "soundfont", "bankOffset", "encoding", "metadata", "correctBankOffset", "mid", "SpessaSynthGroup", "consoleColors", "SpessaSynthInfo", "findFirstEventIndex", "index", "ticks", "track", "i", "eventIndexes", "system", "unwantedSystems", "remainingTracks", "ports", "channelsAmount", "max", "cur", "channelsInfo", "trackNum", "e", "portOffset", "messageTypes", "status", "isGSDrumsOn", "isXGOn", "isGSOn", "isGMOn", "isGM2On", "sysexChannel", "chNum", "channel", "isXG", "isSystemXG", "initialProgram", "p", "realBank", "bankLSB", "bank", "chooseBank", "targetBank", "drumBank", "newBank", "isLSB", "midiControllers", "bankNumber", "intepretation", "parseBankSelect", "has", "ch", "midiChannel", "port", "t", "tNum", "indexToAdd", "programIndex", "programTicks", "targetProgram", "MIDIMessage", "IndexedByteArray", "m", "getGsOn", "newMid", "infoContent", "encoder", "writeRIFFChunkRaw", "today", "getStringBytes", "copyright", "DBNK", "writeLittleEndian", "SpessaSynthGroupEnd", "writeRIFFChunkParts", "getUsedProgramsAndKeys", "soundfont", "mid", "SpessaSynthGroupCollapsed", "consoleColors", "channelsAmount", "max", "cur", "channelPresets", "i", "bank", "system", "updateString", "ch", "chooseBank", "isSystemXG", "existsBank", "existsProgram", "SoundFontManager", "exists", "usedProgramsAndKeys", "SpessaSynthInfo", "eventIndexes", "remainingTracks", "findFirstEventIndex", "index", "ticks", "track", "ports", "trackNum", "event", "messageTypes", "status", "channel", "isLSB", "midiControllers", "parseBankSelect", "isGSDrumsOn", "isXGOn", "sysexChannel", "isDrum", "key", "SpessaSynthGroupEnd", "getNoteTimes", "minDrumLength", "getTempo", "event", "IndexedByteArray", "readBytesAsUintBigEndian", "noteTimes", "events", "e1", "e2", "i", "elapsedTime", "oneTickToSeconds", "eventIndex", "unfinished", "unfinishedNotes", "noteOff", "midiNote", "channel", "noteIndex", "n", "note", "time", "status", "noteTime", "channelNotes", "BasicMIDI", "_BasicMIDI", "MIDISequenceData", "mid", "m", "track", "event", "MIDIMessage", "SpessaSynthGroup", "consoleColors", "karaokeHasTitle", "copyrightComponents", "copyrightDetected", "nameDetected", "loopStart", "loopEnd", "i", "usedChannels", "trackHasVoiceMessages", "e", "j", "messageTypes", "SpessaSynthInfo", "note", "eventText", "readBytesAsString", "readBytesAsUintBigEndian", "checkedText", "getStringBytes", "sanitizeKarLyrics", "trackName", "name", "firstNoteOns", "t", "firstNoteOn", "portOffset", "trackNum", "port", "o", "defaultPort", "message", "c", "formatTitle", "IndexedByteArray", "SpessaSynthGroupEnd", "e1", "e2", "writeMIDI", "modifyMIDI", "applySnapshotToMIDI", "writeRMIDI", "getUsedProgramsAndKeys", "getNoteTimes", "assignMIDIPort", "trackNum", "port", "loadNewSequence", "parsedMidi", "autoPlay", "SpessaSynthInfo", "consoleColors", "SpessaSynthGroupCollapsed", "used", "programBank", "combos", "bank", "program", "preset", "combo", "midiNote", "velocity", "SpessaSynthGroupEnd", "trackIndex", "formatTime", "SpessaSynthWarn", "targetTime", "loadNewSongList", "midiBuffers", "nextSong", "previousSong", "defaultControllerArray", "resetArray", "_playTo", "time", "ticks", "channelsToSave", "pitchBends", "programs", "i", "isCCNonSkippable", "controllerNumber", "midiControllers", "savedControllers", "resetAllControlllers", "chan", "nonResetableCCs", "trackIndex", "event", "info", "getEvent", "channel", "messageTypes", "p", "ccV", "nextEvent", "channelNumber", "value", "index", "bank", "play", "resetTime", "n", "setTimeTicks", "isNotFinished", "_recalculateStartTime", "sendMIDIMessage", "message", "sendMIDICC", "channel", "type", "value", "messageTypes", "sendMIDIProgramChange", "program", "sendMIDIPitchWheel", "MSB", "LSB", "sendMIDIReset", "ch", "midiControllers", "SpessaSynthSequencer", "spessasynthProcessor", "value", "time", "wasPaused", "SpessaSynthWarn", "isFinished", "i", "midiControllers", "note", "messageTypes", "c", "autoPlay", "index", "indexes", "_", "sendMIDIMessage", "sendMIDIReset", "sendMIDICC", "sendMIDIProgramChange", "sendMIDIPitchWheel", "assignMIDIPort", "_processEvent", "_addNewMidiPort", "processTick", "_findFirstEventIndex", "loadNewSequence", "loadNewSongList", "nextSong", "previousSong", "play", "_playTo", "setTimeTicks", "_recalculateStartTime", "tr", "l", "T", "ur", "W", "X", "wr", "Y", "r", "a", "e", "f", "v", "g", "Z", "$", "cr", "j", "hr", "Fr", "_", "i", "c", "A", "k", "b", "m", "U", "x", "n", "o", "M", "L", "gr", "br", "q", "u", "C", "kr", "xr", "yr", "h", "Sr", "fr", "or", "lr", "S", "I", "z", "D", "G", "H", "N", "s", "d", "F", "P", "t", "rr", "Ar", "Mr", "ar", "w", "E", "O", "er", "y", "J", "K", "Ur", "zr", "Q", "p", "nr", "B", "R", "V", "vr", "ir", "Dr", "Tr", "mr", "Er", "pr", "audioToWav", "audioData", "sampleRate", "normalizeAudio", "metadata", "loop", "length", "numChannels", "bytesPerSample", "infoChunk", "IndexedByteArray", "infoOn", "encoder", "infoChunks", "writeRIFFChunkRaw", "writeRIFFChunkParts", "cueChunk", "cueOn", "loopStartSamples", "loopEndSamples", "cueStart", "writeLittleEndian", "writeStringAsBytes", "cueEnd", "headerSize", "dataSize", "fileSize", "header", "byteRate", "wavData", "offset", "multiplier", "numSamples", "maxAbsValue", "ch", "data", "i", "sample", "d", "SpessaSynthCoreUtils", "consoleColors", "SpessaSynthInfo", "SpessaSynthWarn", "SpessaSynthGroupCollapsed", "SpessaSynthGroupEnd", "readBytesAsUintBigEndian", "readLittleEndian", "readBytesAsString", "readVariableLengthQuantity", "tr", "checkMobile", "check", "a", "isMobile", "_handlePointers", "userNoteOff", "note", "userNoteOn", "touch", "velocity", "isMobile", "rect", "relativeMouseX", "keyWidth", "relativeMouseY", "keyHeight", "moveHandler", "e", "touches", "currentlyTouchedKeys", "targetKey", "midiNote", "key", "GLOW_PX", "MidiKeyboard", "channelColors", "synth", "e", "noteShift", "i", "midiControllers", "val", "value", "temp", "down", "midiNote", "keyElement", "isBlackNoteNumber", "noteNumber", "pitchClass", "blackNoteLeft", "blackNoteRight", "animate", "k", "range", "newHeight", "rules", "keyRule", "rule", "computedStyle", "currentHeight", "currentHeightPx", "heightRatio", "heightDifferencePx", "currentCenterKey", "newCenterKey", "keyWidth", "pixelShift", "currentBorderRadius", "channel", "velocity", "key", "isSharp", "brightness", "rgbaValues", "color", "spread", "relativeKey", "pressedColors", "channelColor", "index", "_handlePointers", "consoleColors", "SpessaSynthCoreUtils", "DEFAULT_CHORUS_CONFIG", "FancyChorus", "output", "config", "context", "merger", "chorusNodesLeft", "chorusNodesRight", "freq", "delay", "i", "chorusLeftElement", "chorusRightElement", "list", "input", "outputNum", "oscillator", "gainNode", "delayNode", "rbCompressed", "binaryString", "rbCompressed", "binary", "i", "reverbBufferBinary", "SpessaSynthCoreUtils", "getReverbProcessor", "context", "reverbBuffer", "solve", "promise", "r", "convolver", "reverbBufferBinary", "b", "DEFAULT_SYNTH_CONFIG", "DEFAULT_CHORUS_CONFIG", "MIDIData", "MIDISequenceData", "midi", "DUMMY_MIDI_DATA", "audioBufferToWav", "audioBuffer", "normalizeAudio", "channelOffset", "metadata", "loop", "channelCount", "channels", "i", "audioToWav", "NO_INPUT", "MIDIDeviceHandler", "response", "SpessaSynthCoreUtils", "consoleColors", "output", "seq", "input", "synth", "event", "i", "WebMIDILinkHandler", "synth", "msg", "data", "midiData", "byte", "SpessaSynthCoreUtils", "consoleColors", "calculateRGB", "rgbString", "operation", "rgbValues", "RGBAOpacity", "opacity", "v", "STROKE_COLOR", "drawNotes", "notesToDraw", "drawingContext", "sideways", "n", "effectStrength", "STROKE_COLOR", "hasRenderedNoVoices", "render", "auto", "force", "nothingToDo", "rendererModes", "forceStraight", "notesToDraw", "drawNotes", "timeSinceLastFrame", "fps", "FONT_SIZE", "computeNotePositions", "renderImmediately", "canvasWidth", "canvasHeight", "keysAmount", "keyStep", "noteWidth", "NOTE_MARGIN", "fallingTime", "afterTime", "currentSeqTime", "currentStartTime", "fallingTimeSeconds", "currentEndTime", "minNoteHeight", "MIN_NOTE_HEIGHT_PX", "pitchBendXShift", "channel", "bend", "pixelShift", "transposeNoteShifts", "c", "notesToDraw", "channelNumder", "noteIndex", "notes", "note", "firstNoteIndex", "MAX_NOTES", "noteSum", "noteHeight", "position", "noteY", "correctedNote", "noteX", "finalX", "finalY", "finalWidth", "finalHeight", "STROKE_THICKNESS", "color", "noteProgress", "PRESSED_EFFECT_TIME", "n1", "n2", "consoleColors", "SpessaSynthCoreUtils", "approxColor", "progress", "samples", "i", "s1", "s2", "frac", "g", "b", "intensityColors", "STABILIZE_WAVEFORMS_FFT_MULTIPLIER", "EXPONENTIAL_GAIN", "EXPONENTIAL_AGGRESSIVE", "renderSingleWaveform", "channelNumber", "forceStraightLine", "waveWidth", "waveHeight", "filled", "x", "y", "analyser", "straightLine", "relativeX", "relativeY", "waveform", "v", "multiplier", "triggerPoint", "length", "renderStart", "renderEnd", "halfLength", "i", "samplesPerPixel", "step", "xPos", "start", "end", "min", "max", "value", "yMin", "yMax", "xFinal", "renderBigFft", "fftSize", "minNote", "noteRange", "maxFrequencyInTable", "lastHeight", "lastXpos", "width", "midiNote", "targetFrequency", "fftIndex", "height", "valueRemapped", "intensityColors", "waveLength", "renderSingleFft", "renderWaveforms", "rendererModes", "createChannelAnalysers", "synth", "analyser", "i", "ANALYSER_SMOOTHING", "eventData", "updateFftSize", "drum", "fft", "mul", "STABILIZE_WAVEFORMS_FFT_MULTIPLIER", "connectChannelAnalysers", "outputNumber", "disconnectChannelAnalysers", "consoleColors", "connectSequencer", "sequencer", "mid", "blob", "url", "opacity", "ev", "event", "messageTypes", "resetIndexes", "rendererModes", "CHANNEL_ANALYSER_FFT", "DRUMS_ANALYSER_FFT", "ANALYSER_SMOOTHING", "WAVE_MULTIPLIER", "ANALYSER_STROKE", "DARKER_MULTIPLIER", "GRADIENT_DARKEN", "STROKE_THICKNESS", "NOTE_MARGIN", "FONT_SIZE", "PRESSED_EFFECT_TIME", "MIN_NOTE_HEIGHT_PX", "MAX_NOTES", "Renderer", "channelColors", "synth", "canvas", "locale", "version", "val", "value", "temp", "mode", "mid", "times", "t", "n", "consoleColors", "c", "gradient", "calculateRGB", "v", "channelNumber", "x", "y", "waveWidth", "waveHeight", "relativeX", "relativeY", "RGBAOpacity", "render", "computeNotePositions", "createChannelAnalysers", "updateFftSize", "connectChannelAnalysers", "disconnectChannelAnalysers", "connectSequencer", "resetIndexes", "renderWaveforms", "renderSingleWaveform", "renderSingleFft", "renderBigFft", "formatTime", "totalSeconds", "minutes", "seconds", "formatTitle", "fileName", "ext", "regex", "supportedEncodings", "getPlaySvg", "size", "getPauseSvg", "getLoopSvg", "getTextSvg", "getForwardSvg", "getBackwardSvg", "getVolumeSvg", "getEmptyMicSvg", "getMicSvg", "getMuteSvg", "getDrumsSvg", "getNoteSvg", "getGearSvg", "getDoubleNoteSvg", "getDownArrowSvg", "getLockSVG", "getUnlockSVG", "getShuffleSvg", "size", "getSpeedSvg", "getSeqUIButton", "title", "html", "button", "keybinds", "createNavigatorHandler", "e", "updateTitleAndMediaStatus", "cleanOtherTextEvents", "formatTitle", "text", "splitByCurlyBraces", "input", "result", "current", "insideBraces", "i", "char", "ASSColorToRgba", "colorString", "stringSanitized", "colorAlpha", "colorBlue", "colorGreen", "DialogueEvent", "text", "layer", "startSeconds", "endSeconds", "styleName", "marginLeft", "marginRight", "marginVertical", "styles", "textCleanSplit", "t", "s", "currentVideoTime", "currentDelay", "lastKaraokeDuration", "currentIndex", "timeSinceShown", "isNextSpanAnimated", "animationDuration", "chunk", "karaokeAnimation", "duration", "span", "elapsed", "percent", "resX", "resY", "parent", "embeddedFontName", "alignment", "marginLeftPercent", "marginRightPercent", "marginVerticalPercent", "fontFamily", "fontSize", "thisRect", "subtitle", "subtitleRect", "parentRect", "DEFAULT_RES_X", "DEFAULT_RES_Y", "ASStimeToFloat", "timeString", "hours", "minutes", "seconds", "sec", "hundredths", "SubContent", "SubSection", "type", "contents", "fallback", "c", "AssManager", "seq", "screen", "renderer", "e", "keybinds", "event", "time", "visible", "errorOut", "t", "result", "s", "assString", "lines", "isSection", "sectionName", "currentFontName", "sectionContents", "line", "f", "name", "data", "content", "scriptInfo", "styles", "styleFormats", "style", "newStyle", "i", "events", "eventFormats", "rest", "index", "eventData", "newEvent", "DialogueEvent", "font", "dataString", "decodedData", "bytes", "byte1", "byte2", "byte3", "fontBlob", "fontUrl", "styleElement", "createLyrics", "mainLyricsDiv", "titleWrapper", "lyricsTitle", "encodingSelector", "supportedEncodings", "encoding", "option", "text", "otherTextWrapper", "sum", "otherText", "AssManager", "input", "file", "subtitleUpload", "setLyricsText", "index", "i", "updateOtherTextEvents", "raw", "messageTypes", "k", "getSpan", "element", "handleSliders", "div", "inputs", "input", "createSlider", "showSpan", "mainWrapper", "min", "max", "current", "units", "id", "htmlInput", "span", "visualWrapper", "progressBar", "thumb", "val", "newVal", "ICON_SIZE", "ICON_COLOR", "ICON_DISABLED_COLOR", "ICON_COLOR_L", "ICON_DISABLED_COLOR_L", "DEFAULT_ENCODING", "ZWSP", "SequencerUI", "element", "locale", "musicMode", "renderer", "displayTimeoutId", "data", "textData", "text", "displayLetters", "spaces", "i", "r", "sendPlay", "getPauseSvg", "sendPause", "getPlaySvg", "encodingIndex", "supportedEncodings", "sequencer", "type", "lyricsIndex", "messageTypes", "RMIDINFOChunks", "verifyDecode", "def", "decoder", "prepend", "dec", "midiEncoding", "infoEncoding", "textToShow", "encoding", "span", "index", "event", "barPosition", "progressBarBg", "x", "width", "playPauseButton", "controlsDiv", "getSeqUIButton", "togglePlayback", "previousSongButton", "getBackwardSvg", "nextSongButton", "getForwardSvg", "loopButton", "getLoopSvg", "toggleLoop", "shuffleButton", "getShuffleSvg", "playbackRateButton", "getSpeedSvg", "input", "minSlider", "maxSlider", "playbackRateSlider", "createSlider", "playbackRateSliderWrapper", "actualInput", "displaySpan", "value", "playbackPercent", "e", "num", "percent", "inputValue", "sliderShown", "textButton", "getTextSvg", "toggleLyrics", "keybinds", "seqTime", "time", "formatTime", "total", "l", "isDoubleLyrics", "first", "second", "s", "string", "lacksSpaces", "lyric", "createNavigatorHandler", "updateTitleAndMediaStatus", "createLyrics", "setLyricsText", "updateOtherTextEvents", "hideControllers", "c", "meter", "showControllers", "toggleDarkMode", "b", "meter", "controller", "c", "Meter", "color", "localePath", "locale", "localeArgs", "min", "max", "initialAndDefault", "editable", "editCallback", "lockCallback", "unlockCallback", "activeChangeCallback", "e", "bounds", "relativeLeft", "width", "relative", "percentage", "isMobile", "updateColor", "value", "force", "midiPatchNames", "Selector", "elements", "locale", "descriptionPath", "descriptionArgs", "editCallback", "lockCallback", "e", "selectionWindow", "selectionTitle", "searchWrapper", "searchInput", "presetLock", "getLockSVG", "ICON_SIZE", "getUnlockSVG", "LOCALE_PATH", "tableWrapper", "selectedProgram", "text", "filtered", "filteredTable", "alreadySelected", "firstFiltered", "bank", "program", "newVal", "nextEl", "previousEl", "isMobile", "wrapper", "table", "selectedBank", "lastProgram", "preset", "row", "headerRow", "header", "midiPatchNames", "programText", "bankText", "presetName", "presetProgram", "presetBank", "firstEl", "currentProgram", "value", "oldSelected", "inputString", "split", "name", "isValidXGMSB", "bank", "isXGDrums", "isSystemXG", "system", "ICON_SIZE", "createChannelController", "channelNumber", "controller", "channelController", "voiceMeter", "Meter", "LOCALE_PATH", "pitchWheel", "val", "meterLocked", "NON_CC_INDEX_OFFSET", "modulatorSources", "msb", "lsb", "changeCCUserFunction", "cc", "meter", "createCCMeterHelper", "ccNum", "localePath", "defaultValue", "allowLocking", "pan", "midiControllers", "expression", "volume", "modulation", "chorus", "reverb", "filterCutoff", "attackTime", "releaseTime", "portamentoTime", "portamentoControl", "filterResonance", "transpose", "active", "presetSelector", "Selector", "presetName", "data", "locked", "soloButton", "getEmptyMicSvg", "i", "getMicSvg", "muteButton", "getVolumeSvg", "canBeUnmuted", "getMuteSvg", "drumsToggle", "getDrumsSvg", "getNoteSvg", "appendNewController", "lastPortElement", "portNum", "portElement", "timeout", "port", "createChannelControllers", "applyTextContent", "el", "content", "locale", "getContent", "btn", "applyAttributes", "p", "inputWrapper", "input", "e", "inputLabel", "selectWrapper", "select", "option", "opt", "selectLabel", "fileWrapper", "file", "fileButton", "fileLabel", "background", "progress", "getSwitch", "range", "label", "slider", "createSlider", "wrapper", "elements", "key", "value", "element", "switchWrapper", "toggleText", "toggleInput", "toggle", "NOTIFICATION_TIME", "notificationCounter", "notifications", "showNotification", "title", "contents", "time", "allowClosing", "locale", "contentStyling", "onclose", "notification", "notificationID", "contentWrapper", "key", "value", "content", "element", "getContent", "closeNotification", "timeoutID", "id", "notificationEl", "DEFAULT_CHORUS_CONFIG", "DEFAULT_SYNTH_CONFIG", "USER_CONFIG", "showEffectsConfigWindow", "locale", "path", "synth", "ACTUAL_PATH", "nofification", "showNotification", "_", "el", "e", "btn", "buffer", "consoleColors", "n", "LOCALE_PATH", "getKey", "locale", "keyboard", "r", "notification", "showNotification", "note", "closeNotification", "doModifyKey", "synth", "presetList", "key", "getInput", "name", "min", "max", "val", "obj", "presetOptions", "p", "p1", "p2", "mod", "vel", "gain", "n", "channel", "velocity", "presetName", "bank", "program", "preset", "prog", "doRemoveModification", "startKeyModifiersMenu", "showAdvancedConfiguration", "blackMidiAttribute", "showNotification", "LOCALE_PATH", "n", "closeNotification", "showEffectsConfigWindow", "startKeyModifiersMenu", "createMainSynthController", "controlsWrapper", "Meter", "LOCALE_PATH", "v", "active", "midiPanicButton", "resetCCButton", "channel", "number", "meter", "getEmptyMicSvg", "ICON_SIZE", "getVolumeSvg", "showOnlyUsedButton", "advancedConfigurationButton", "showAdvancedConfiguration", "groupSelector", "option", "optionElement", "interpolation", "linear", "nearest", "cubic", "controller", "showControllerButton", "e", "closeNotification", "setEventListeners", "e", "controller", "meter", "channel", "value", "con", "val", "getDrumsSvg", "getNoteSvg", "preset", "isXGDrums", "bankNr", "LOCALE_PATH", "SynthetizerUI", "colors", "element", "localeManager", "wrapper", "firstPort", "keyboard", "synth", "e", "keybinds", "controller", "meter", "seq", "closeNotification", "i", "voices", "presetList", "p", "a", "b", "list", "start", "visible", "enabled", "usedChannels", "used", "trackNum", "port", "offset", "v", "channelNumber", "isVisible", "force", "c", "groupType", "effectControllers", "midiControllers", "envelopeControllers", "filterControllers", "portamentoControllers", "hideCCs", "ccs", "cc", "showCCs", "hideControllers", "showControllers", "toggleDarkMode", "createChannelController", "appendNewController", "createChannelControllers", "createMainSynthController", "setEventListeners", "USE_MIDI_RANGE", "_createKeyboardHandler", "keyboard", "synthui", "renderer", "channelNumber", "keyboardControls", "nameDisplays", "channelTrackers", "presetList", "updateChannel", "channel", "chan", "bank", "preset", "p", "updateChannels", "createChannel", "option", "channelDisplay", "nameDisplay", "syn", "e", "c", "i", "seq", "mid", "settingsHtml", "rendererModes", "USE_MIDI_RANGE", "_loadSettings", "savedSettings", "getValue", "v", "def", "rendererControls", "renderer", "rendererValues", "renderingMode", "rendererModes", "fallingTime", "getSpan", "afterTime", "thickness", "fftSize", "multiplier", "controls", "renderNotes", "activeNotes", "visualPitch", "stabilize", "dynamic", "exponential", "logFrequency", "keyboardControls", "keyboard", "keyboardValues", "range", "USE_MIDI_RANGE", "size", "_saveSettings", "_serializeSettings", "renderingMode", "USE_MIDI_RANGE", "_createInterfaceSettingsHandler", "button", "select", "code", "locale", "option", "layoutSelect", "seqControls", "_changeLayout", "layout", "wrapper", "canvas", "keyboard", "TC_DARK", "TC_LIGHT", "FC_DARK", "FC_LIGHT", "TBC_DARK", "TBC_LIGHT", "TRANSITION_TIME", "_toggleDarkMode", "rules", "rule", "transitionColor", "intervals", "initialColor", "targetColor", "duration", "cssRule", "propertyName", "hexToRgb", "hex", "num", "interpolate", "start", "end", "progress", "startColor", "endColor", "startTime", "step", "elapsedTime", "r", "g", "b", "_setRendererMode", "mode", "waveformSettings", "freqSettings", "generalAnalyserSettings", "renderingMode", "rendererModes", "_createRendererHandler", "renderer", "rendererControls", "getSpan", "value", "_createMidiSettingsHandler", "handler", "sequi", "synthui", "success", "isMobile", "parent", "input", "output", "errorMessage", "_createMidiInputHandler", "synth", "select", "option", "firstInput", "_createMidiOutputHandler", "rendererSettingsLocale", "keyboardSettingsLocale", "midiSettingsLocale", "interfaceSettings", "settingsLocale", "rendererSettingsLocale", "keyboardSettingsLocale", "midiSettingsLocale", "interfaceSettings", "musicPlayerModeLocale", "channelControllerLocale", "effectsConfig", "keyModifiers", "synthesizerControllerLocale", "channelControllerLocale", "effectsConfig", "keyModifiers", "sequencerControllerLocale", "exportAudio", "localeEnglish", "exportAudio", "musicPlayerModeLocale", "settingsLocale", "synthesizerControllerLocale", "sequencerControllerLocale", "rendererSettingsLocale", "keyboardSettingsLocale", "midiSettingsLocale", "interfaceSettings", "settingsLocale", "rendererSettingsLocale", "keyboardSettingsLocale", "midiSettingsLocale", "interfaceSettings", "musicPlayerModeLocale", "channelControllerLocale", "effectsConfig", "keyModifiers", "synthesizerControllerLocale", "channelControllerLocale", "effectsConfig", "keyModifiers", "sequencerControllerLocale", "exportAudio", "localePolish", "exportAudio", "musicPlayerModeLocale", "settingsLocale", "synthesizerControllerLocale", "sequencerControllerLocale", "rendererSettingsLocale", "keyboardSettingsLocale", "midiSettingsLocale", "settingsLocale", "rendererSettingsLocale", "keyboardSettingsLocale", "midiSettingsLocale", "musicPlayerModeLocale", "channelControllerLocale", "synthesizerControllerLocale", "channelControllerLocale", "sequencerControllerLocale", "exportAudio", "localeJapanese", "exportAudio", "musicPlayerModeLocale", "settingsLocale", "synthesizerControllerLocale", "sequencerControllerLocale", "rendererSettingsLocale", "keyboardSettingsLocale", "midiSettingsLocale", "settingsLocale", "rendererSettingsLocale", "keyboardSettingsLocale", "midiSettingsLocale", "musicPlayerModeLocale", "channelControllerLocale", "effectsConfig", "keyModifiers", "synthesizerControllerLocale", "channelControllerLocale", "effectsConfig", "keyModifiers", "sequencerControllerLocale", "exportAudio", "localeFrench", "exportAudio", "musicPlayerModeLocale", "settingsLocale", "synthesizerControllerLocale", "sequencerControllerLocale", "rendererSettingsLocale", "keyboardSettingsLocale", "midiSettingsLocale", "settingsLocale", "rendererSettingsLocale", "keyboardSettingsLocale", "midiSettingsLocale", "musicPlayerModeLocale", "channelControllerLocale", "effectsConfig", "synthesizerControllerLocale", "channelControllerLocale", "effectsConfig", "sequencerControllerLocale", "exportAudio", "localePortuguese", "exportAudio", "musicPlayerModeLocale", "settingsLocale", "synthesizerControllerLocale", "sequencerControllerLocale", "DEFAULT_LOCALE", "localeList", "localeEnglish", "localePolish", "localeJapanese", "localeFrench", "localePortuguese", "TRANSITION_TIME", "niceDelayLookupTable", "SpessaSynthSettings", "settingsWrapper", "sythui", "sequi", "renderer", "midiKeyboard", "midiDeviceHandler", "playerInfo", "localeManager", "delayNode", "localeList", "settingsButton", "musicModeButton", "hideTopButton", "showTopButton", "getDownArrowSvg", "text", "gear", "getGearSvg", "settingsHtml", "handleSliders", "element", "path", "forId", "forElement", "e", "keybinds", "fullscreen", "maxHeight", "maxWidth", "curHeight", "curWidth", "screen", "topPart", "visible", "fft", "delayTime", "rendererModes", "_toggleDarkMode", "_createInterfaceSettingsHandler", "_changeLayout", "_createRendererHandler", "_setRendererMode", "_createMidiSettingsHandler", "_createMidiInputHandler", "_createMidiOutputHandler", "_createKeyboardHandler", "_loadSettings", "_serializeSettings", "_saveSettings", "musicModeInnerHTML", "getDoubleNoteSvg", "TRANSITION_TIME", "MusicModeUI", "element", "localeManager", "musicModeInnerHTML", "el", "title", "seq", "mid", "midcopy", "setInfoText", "id", "text", "enableMarquee", "lines", "line", "textWrap", "formatTime", "verifyDecode", "type", "def", "decoder", "prepend", "encoding", "svg", "img", "bg", "pic", "url", "visible", "keyboardCanvasWrapper", "playerDiv", "playerHeight", "playerTop", "rootTop", "LocaleManager", "initialLocale", "localeList", "DEFAULT_LOCALE", "localePath", "formattingArguments", "locale", "property", "textValue", "template", "values", "match", "number", "object", "propertyName", "path", "fallback", "parts", "current", "i", "newLocale", "force", "newLocaleObject", "l", "import_jszip", "RENDER_AUDIO_TIME_INTERVAL", "_doExportAudioData", "normalizeAudio", "sampleRate", "additionalTime", "separateChannels", "meta", "loopCount", "exportingMessage", "estimatedMessage", "addingEffects", "loadingMessage", "notification", "showNotification", "parsedMid", "playbackRate", "loopStartAbsolute", "loopEndAbsolute", "loopDuration", "duration", "sampleDuration", "detailMessage", "progressDiv", "RATI_SECONDS", "estimatedTime", "smoothingFactor", "lastProgress", "showProgress", "prog", "str", "time", "hasRendered", "speed", "estimated", "formatTime", "progress", "interval", "renderedNoEffectsData", "p", "snapshot", "renderedChannels", "separatePath", "content", "usedChannels", "c", "i", "muted", "j", "channel", "n", "target", "text", "r", "audioOut", "audioToWav", "fileName", "zipped", "JSZip", "consoleColors", "zipFile", "offline", "e", "getReverbProcessor", "reverb", "chorus", "FancyChorus", "reverbAudio", "rev", "revSource", "chorusAudio", "chr", "chrSource", "dryAudio", "dry", "drySource", "progressTracker", "buf", "startOffset", "loopStart", "loopEnd", "loop", "wav", "audioBufferToWav", "closeNotification", "_exportAudioData", "wavPath", "metadataPath", "verifyDecode", "type", "def", "decoder", "encoding", "startAlbum", "startArtist", "startGenre", "WAV_OPTIONS", "normalizeVolume", "artist", "album", "title", "genre", "metadata", "_exportSoundfont", "path", "showNotification", "n", "trimmed", "compressed", "quality", "closeNotification", "consoleColors", "exportingMessage", "notification", "progressDiv", "detailMessage", "callback", "p", "exported", "exportSong", "path", "showNotification", "n", "closeNotification", "_exportRMIDI", "verifyDecode", "type", "def", "decoder", "encoding", "startAlbum", "startArtist", "startGenre", "startComment", "path", "metadataPath", "n", "showNotification", "compressed", "quality", "album", "artist", "songTitle", "comment", "genre", "bankOffset", "adjust", "picture", "closeNotification", "consoleColors", "localePath", "notification", "r", "message", "progressDiv", "pictureBuffer", "modifyingSoundFont", "mid", "progress", "recommended", "input", "DropFileHandler", "midiCallback", "soundFontCallback", "dragPrompt", "e", "MIDIFiles", "file", "name", "buf", "riff", "decoder", "rmid", "_exportDLS", "path", "showNotification", "n", "trimmed", "closeNotification", "consoleColors", "exportingMessage", "notification", "progressDiv", "callback", "p", "exported", "EXTRA_BANK_ID", "prepareExtraBankUpload", "extraBankName", "extra", "notification", "showNotification", "n", "bank", "file", "b", "EXTRA_BANK_ID", "closeNotification", "input", "workerMessageType", "returnMessageType", "SongChangeType", "seqMessageType", "SpessaSynthSequencerReturnMessageType", "WorkerSoundfontManagerMessageType", "workerKeyModifierMessageType", "EventHandler", "name", "id", "callback", "eventData", "ev", "e", "SoundfontManager", "synth", "type", "data", "transferable", "workerMessageType", "id", "SpessaSynthCoreUtils", "s", "WorkerSoundfontManagerMessageType", "soundfontBuffer", "bankOffset", "r", "newList", "a", "b", "WorkerKeyModifierManagerWrapper", "synth", "type", "data", "workerMessageType", "channel", "midiNote", "options", "velocity", "program", "bank", "gain", "mod", "KeyModifier", "workerKeyModifierMessageType", "CustomSynth", "EventHandler", "target", "value", "workerMessageType", "DEFAULT_SYNTH_MODE", "masterParameterType", "soundBank", "i", "r", "getReverbProcessor", "FancyChorus", "messageChannel", "workerPort", "workletPort", "e", "WorkerKeyModifierManagerWrapper", "SoundfontManager", "postMessage", "resolve", "s", "enableInfo", "enableWarning", "enableGroup", "enableTable", "data", "transferable", "message", "channelOffset", "offset", "force", "channel", "midiNote", "velocity", "ch", "messageTypes", "controllerNumber", "controllerValue", "MSB", "LSB", "semitones", "volume", "pan", "programNumber", "channelConfiguration", "isLocked", "isMuted", "isDrum", "buffer", "config", "reverbGain", "chorusGain", "messageData", "returnMessageType", "channelNumber", "property", "time", "sum", "voices", "param", "SpessaSynthCoreUtils", "type", "midiControllers", "sampleRate", "additionalTime", "separateChannels", "loopCount", "callback", "promise", "trim", "compress", "quality", "metadata", "adjust", "MIDIData", "MIDISequenceData", "midi", "DUMMY_MIDI_DATA", "MIDIData", "DEFAULT_SEQUENCER_OPTIONS", "CustomSeq", "midiBinaries", "synth", "options", "seqMessageType", "value", "val", "SongChangeType", "time", "highResTimeOffset", "absoluteStartTime", "performanceElapsedTime", "currentPerformanceTime", "currentAudioTime", "smoothingFactor", "timeDifference", "callback", "id", "i", "messageTypes", "messageType", "messageData", "transferable", "workerMessageType", "index", "clamped", "type", "params", "key", "e", "SpessaSynthCoreUtils", "SpessaSynthSequencerReturnMessageType", "midiEventData", "songChangeData", "BasicMIDI", "event", "bpm", "lyricsIndex", "sentStatus", "s", "resolve", "midiBuffers", "autoPlay", "sanitizedMidis", "m", "output", "resetTime", "ENABLE_DEBUG", "Manager", "context", "soundFontBuffer", "locale", "enableDebug", "CustomSynth", "solve", "resolve", "url", "name", "a", "blob", "soundFont", "element", "prepareExtraBankUpload", "e", "MIDIDeviceHandler", "WebMIDILinkHandler", "MidiKeyboard", "canvas", "Renderer", "titleSwappedWithSettings", "checkResize", "isMobile", "title", "settings", "SynthetizerUI", "MusicModeUI", "SequencerUI", "SpessaSynthSettings", "channel", "DropFileHandler", "data", "firstName", "exportButton", "buf", "keybinds", "videoSource", "video", "showNotification", "n", "closeNotification", "sf", "text", "isDLS", "SpessaSynthCoreUtils", "IndexedByteArray", "parsedMidi", "CustomSeq", "exported", "p", "mid", "exportSong", "_exportAudioData", "_doExportAudioData", "_exportSoundfont", "_exportDLS", "_exportRMIDI", "SAMPLE_RATE", "SpessaSynthLogging", "titleMessage", "progressBar", "fileInput", "exportButton", "synthReady", "r", "fetchFont", "fileName", "callback", "response", "size", "reader", "done", "dataArray", "e", "message", "showNotification", "offset", "readData", "percent", "startMidi", "midiFiles", "fName", "parsed", "file", "replaceFont", "fontName", "replaceSf", "Manager", "localeManager", "data", "context", "soundFonts", "LocaleManager", "sfSelector", "sf", "option", "displayName", "saveSettings", "settingsData", "resolve", "parsedSettings"]
}
